
module Fib

  use int.Int
  use int.Fibonacci

  let cfg fib (n: int) : int
    requires { n >= 0 }
    ensures  { result = fib n }
  = var x: int;
    var y: int;
    var i: int;
    {
      x <- 0;
      y <- 1;
      i <- 0;
      goto L1
    }
    L1 {
      invariant I1 { 0 <= i <= n };
      invariant I2 { x = fib i /\ y = fib (i + 1) };
      switch (i = n)
      | True  -> x
      | False -> y <- x + y; x <- y - x; i <- i + 1; goto L1
      end
    }

end
