
module Basic

use int.Int

val test (x:int) : unit

let cfg cfgassert (x:int) : unit
  requires { x >= 0 }
  =
  {
  assert { 3 = 4 }
  }

let cfg cfggoto (x:int) : int
  requires { x >= 0 }
  ensures { result = x + 2 }
  =
  var (y : int);
  {
  y <- x+1;
  goto L
  }
  L {
  y <- y+1;
  y
  }

let cfg cfg_inv (x:int) : int
  requires { x >= 0 }
  ensures { result >= 2 }
  =
  var (y:int);
  {
  y <- x;
  invariant I { y >= 0} ;
  y <- y + 1;
  invariant J { y >= 1} ;
  y <- y + 1;
  y
  }




let main () =
  cfgassert 42;
  let _ = cfggoto 43 in
  cfg_inv 44

end