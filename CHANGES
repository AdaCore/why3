
* marks an incompatible change


Provers
  0 support for Coq 8.6.1 (released Jul 25, 2017)
  o support for CVC4 1.5 (released Jul 10, 2017)
  o support for E 2.0 (released Jul 4, 2017)
  o support for E 1.9.1 (release Aug 31, 2016)

Tools
  o why3 config now generates default proof strategies using the
    installed provers. These are available under name "Auto level 1"
    and "Auto level 2" in why3 ide.

Version 0.87.3, January 12, 2017
================================

bug fixes
  o fixed OCaml extraction with respect to ghost parameters
  o assorted bug fixes

provers
  o support for Alt-Ergo 1.30 (released Nov 21, 2016)
  o support for Coq 8.6 (released Dec 8, 2016)
  o support for Gappa 1.3 (released Jul 20, 2016)
  * discarded support for Isabelle 2015
  o support for Isabelle 2016-1 (released Dec 2016)
  o support for Z3 4.5.0 (released Nov 8, 2016)

Version 0.87.2, September 1, 2016
=================================

bug fixes
  o improved well-formedness of extracted OCaml code
  o assorted bug fixes

Version 0.87.1, May 27, 2016
============================

bug fixes
  o assorted bug fixes

Version 0.87.0, March 15, 2016
==============================

Language
  * Add new logical connectives "by" and "so" as keywords

Tools
  o add a command-line option --extra-expl-prefix to specify
    additional possible prefixes for VC explanations.  (Available for
    why3 commands "prove" and "ide".)
  * removed "jstree" style from the "session" command

Transformations
  * All split transformations respect the "stop_split" label now.
    split_*_wp is a synonym for split_*_right
  * split_*_right split the left-hand side subformulas
    when they carry the "case_split" label
  * split_intro is now the composition of split_goal_right and
    introduce_premises

Library
  * improved bitvector theories

API
  * Renamed functions in Split_goal
  * split_intro moved to Introduction

Encodings
  * When a task has no polymorphic object (except for the special
    cases of equality and maps) then the translation to SMT-LIB
    format is direct

Provers
  * discarded support for Alt-Ergo versions older than 0.95.2
  o support for Alt-Ergo 1.01 (released Feb 16, 2016) and
    non-free versions 1.10 and 1.20
  o support for Coq 8.4pl6 (released Apr 9, 2015)
  o support for Coq 8.5 (released Jan 21, 2016)
  o support for Gappa 1.2.0 (released May 19, 2015)
  * discarded support for Isabelle 2014
  o support for Isabelle 2015 (released May 25, 2015) and
    Isabelle 2016 (released Feb 17, 2016)
  o support for Z3 4.4.0 (released Apr 29, 2015) and
    4.4.1 (released Oct 5, 2015)
  o support for Zenon 0.8.0 (released Oct 21, 2014)
  o support for Zenon_modulo 0.4.1 (released Jul 2, 2015)

Distribution
  * non-free files have been removed: "boomy" icon set,
    javascript helpers for "why3 session html --style jstree"

Version 0.86.3, February 8, 2016
================================

bug fixes
  o assorted bug fixes

provers
  o fix compilation issues with Coq 8.5
    (the tactic for 8.5 now behaves like idtac on successfully proved goals)

Version 0.86.2, October 13, 2015
================================

bug fixes
  o assorted bug fixes

Version 0.86.1, May 22, 2015
============================

IDE
  o improved task highlighting for negated premises
    (contributed by Mikhail Mandrykin, AstraVer project)

provers
  o support for Gappa 1.2 (released May 19, 2015)

bug fixes
  o why3doc: garbled output

Version 0.86, May 11, 2015
==========================

core
  o steps limit for reliable replay of proofs, available for Alt-Ergo
    and CVC4
  o new transformations induction_pr and inversion_pr to reason with
    inductive predicates

library
  * renamed theory int.NumOfParam into int.NumOf; the predicate numof
    now takes some higher-order predicate as argument (no more need
    for cloning). Similar change in modules array.NumOf...
  * improved theory real.PowerReal
  o new theory: sequences
  o new theories for bitvectors, mapped to BV theories of SMT solvers
    Z3 and CVC4

provers
  o support for Coq 8.4pl5 (released Nov 7, 2014)
  o support for Z3 4.3.2 (released Oct 25, 2014)
  o support for MetiTarski 2.4 (released Oct 21, 2014)
  o support for Alt-Ergo 0.99.1 (released Dec 30, 2014)
  o support for Alt-Ergo 1.00.prv (released Jan 29, 2015)
  o support for veriT 201410 (released Nov 2014)
  o support for Psyche (experimental,
    http://www.lix.polytechnique.fr/~lengrand/Psyche/)
  o preliminary support for upcoming CVC4 1.5 (steps feature)

IDE
  o config file not automatically saved anymore at exit. Configuration
    is saved on disk for future sessions if, and only if, preferences
    window is exited by hitting the "Save&Close" button
  o right part of main window organized in tabs.
  o better explanations and task highlighting
    (contributed by Mikhail Mandrykin, AstraVer project)

bug fixes
  o bug in interpreter in presence of nested mutable fields
  o IDE: proofs in progress should never be "cleaned"
  o IDE: display warnings after reload

Version 0.85, September 17, 2014
================================

langage
  * fix a soundness bug in the detection of aliases when calling a
    WhyML function: some alias could have been forgotten when a type
    variable was substituted with a mutable type

sessions
  o use the full path of identifiers when the user introduces namespaces
    (BTS #17181)

transformations
  * fix a soundness bug in "compute_in_goal" regarding the handling of
    logical implication.
  o several improvements to "compute_in_goal":
    . left-hand side of rewrite rules can be any symbols, not only
      non-interpreted ones.
    . perform beta-reduction when possible
    . the maximal number of reduction steps can be increased using meta
      "compute_max_steps"
    . the transformation is documented in details in the manual
  o new transformation "compute_specified":
    less aggressive variant of "compute_in_goal".
    Unfolding of definitions is controlled using meta "rewrite_def".
  o fixed a bug in "eliminate_if" when applied on inductive definitions

provers
  o fixed wrong warning when detecting Isabelle2014

Version 0.84, September 1, 2014
===============================

tools
  * file generated by "why3session html f.mlw" is now
    "f/why3session.html" and not "f/f.html"
  * the default behavior of why3 has been moved to the "prove" subcommand
  * options --exec, --extract, and --realize, have been moved to
    subcommands: execute, extract, and realize
  * why3replayer has been moved to the "replay" subcommand
  * other tools have been moved to why3 subcommands too: config, doc, ide,
    session, wc; for local usage, the old commands are still available

proof sessions
  o session files are split in two parts: "why3session.xml" and
    "why3shapes". The latter file contains the checksums and the shapes
    for the goals. That second file is not strictly needed for
    replaying a proof session, it is only useful when input programs
    are modified, to track obsolete goals. If Why3 is compiled with
    compression support (provided by ocamlzip library) then files for
    shapes are compressed into why3shapes.gz.

library
  * renamed array.ArraySorted -> array.IntArraySorted
    array.ArraySorted is now generic, with type and order relation parameters
  * reduced amount of "use export" in the standard library: theories
    now only export the symbols they define. Users may need to insert more
    "use import" in their theories (typically int.Int, option.Option,
    list.List, etc.).

provers
  * fixed Coq printer (former Coq proofs may have to be updated, by removing
    non-emptiness constraints from polymorphic type applications)
  o support for Coq8.4pl4
  o support for Isabelle2014
  o support for CVC4 1.4
  o updated support for TPTP TFA syntax (used by provers Beagle and Princess)

transformations
  o new transformation "compute_in_goal" that simplifies the goal, by
    computation, as much as possible

Version 0.83, March 14, 2014
============================

syntax
  o extra semicolons are now allowed at end of blocks
  o new clause "diverges". Loops and recursive calls not annotated
    with variants will generate a warning, unless the "diverges"
    clause is given
  o clauses "reads" and "writes" now accept an empty set
  * modified syntax for "abstract": abstract <spec> <expr> end
  o types in quantifiers are now optional
  o formulas and Boolean terms can be used interchangeably

library
  * removed inconsistency in libraries map.MapPermut and array.ArrayPermut
    (names, definitions, and meaning of symbols "permut..." have been modified)

provers
  o new version of prover: Coq 8.4pl3
  o new version of prover: Gappa 1.1.0
  o new version of prover: E prover 1.8
  * Coq 8.3 is no longer supported
  o improved support for Isabelle2013-2
  * fixed Coq printer (former Coq proofs may have to be updated, with
    extra qualification of imported symbols)

tools
  o new option --exec to interpret WhyML programs; see doc chapter 8
  o new option --extract to compile WhyML programs to OCaml;
    see doc chapter 8 and modules/mach/{int,array}.mlw
  * [why3replayer] renamed option -obsolete-only to --obsolete-only,
    -smoke-detector to --smoke-detector, -force to --force
  * [why3replayer] replay now fails if new goals are added

API
  o new type-inferring API for logical terms and program expressions

miscellaneous
  o fixed compilation bug with lablgtk 2.18

Version 0.82, December 12, 2013
===============================

  o lemma functions
  o polymorphic recursion permitted
  o opaque types
  o new prover: Metitarski (2.2, contribution by Piotr Trojanek)
  o new prover: Metis (2.3)
  o new prover: Beagle (0.4.1)
  o new prover: Princess (2013-05-13)
  o new prover: Yices2 (2.0.4)
  o new prover: Isabelle (2013-2, contribution by Stefan Berghofer)
  o new version of prover: Alt-Ergo 0.95.2
  o new version of prover: CVC4 1.1 & 1.2 & 1.3
  o new version of prover: Coq 8.4pl2
  o new version of prover: Gappa 1.0.0
  o new version of prover: SPASS 3.8ds
  o new version of prover: veriT (201310)
  o API: more examples of use in  examples/use_api/
  o why3session csv can create graph with option --gnuplot [png|svg|pdf|qt]
  o shape algorithm modified (see VSTTE'13 paper) but is
    backward compatible thanks to shape_version numbers in
    why3session.xml files
  * options name and default of why3session csv changed
  * [emacs] why.el renamed to why3.el
  * [GTK sourceview] why.lang renamed to why3.lang
  * Loc.try[1-7] functions now take location as an optional parameter
  o [fix] remove extra leading zeros in decimal literals when a prover don't like them
  o [fix] PVS output: types are always non-empty
  o [fix] PVS: fixed configuration and installation process
  o [fix] Coq tactic: now loads dynamic plug-ins
  o [fix] bug #15493: correct Coq output for polymorphic algebraic data types
  * [fix] wish #15053: Remove proof time from "Goals proved by only one prover" section
    of why3session info --stats
  o [fix] bug #13736: why3ml was slow when there are many inclusions
  o [fix] bug #16488: decimals in TPTP syntax
  o [fix] bug #16454: do not send arithmetic triggers anymore to alt-Ergo
  o [fix] syntax highlighting bugs: should be fixed by removing the old language
    file alt-ergo.lang from alt-ergo distribution

Version 0.81, March 25, 2013
============================

  o [prover] experimental support for SPASS >= 3.8 (with types)
  o [prover] support for Z3 4.3.*
  o [prover] fixed Coq 8.4 support for theory real.Trigonometry
  o [prover] support for CVC4
  o [prover] support for mathematica
  o [prover] support for MathSAT5
  o [logic] accept type expressions in clone substitutions
  o [whyml] support for relation chains (e.g., "e1 = e2 < e3")
  * [whyml] every exception raised in a function must be listed
    in as "raises { ... }" clause. A postcondition may be omitted
    and equals to "true" by default.
  * [whyml] if a function definition contains a "writes { ... }"
    clause, then every write effect must be listed. If a function
    definition contains a "reads { ... }" clause, then every read
    _and_ write effect must be listed.
  * [drivers] syntax rules, metas, and preludes are inherited
    through cloning. Keyword "cloned" becomes unnecessary and
    is not accepted anymore.


Version 0.80, October 31, 2012
==============================

  * [whyml] modified syntax for mlw programs; a summary of changes is
    given in Appendix A of the manual
  o [whyml] support for type invariants and ghost code
  o [api] Ocaml interfaces for constructing program modules
  o [transformation] experimental support for induction on integers
    and on algebraic types
  o [interface] new system of warnings, that includes:
     - form "exists x, P -> Q", likely an error
     - unused bound logic variables in "forall", "exists" and "let"
  o [replayer] new option -q, for running quietly
  * [session] improved output of "why3session latex"; LaTeX macros have
    more arguments
  o [prover] support for Coq 8.4
  * [prover] dropped support for Coq 8.2
  o [prover] support for forthcoming PVS 6.0, including realizations
  o [prover] support for iProver and Zenon
  o [prover] new output scheme for Coq using type classes, to ensures
    types are inhabited
  * [driver] theory realizations now use meta "realized_theory" instead
    of "realized"
  * [config] modifiers in --extra-config are now called [prover_modifier]
    instead of just [prover]

Version 0.73, July 19, 2012
===========================

  o [IDE] "Clean" was cleaning too much
  * no more executable why3ml (why3 now handles WhyML files)
  o [Provers] support for Z3 4.0
  o [Sessions] a small change in the format. Why3 is still able to
    read session files in the old format.
  o completed support for the "Out Of Memory" prover result
  o [Why3ml] new construct "abstract e { q }"
  o [Coq output] quotes in identifiers remain quotes in Coq
  o [Coq output] default tactic is now "intros ..." with a pattern
    that matches the structure of the goal
  o [why3replayer] option -obsolete-only
  o workaround for a bug about modulo operator in Alt-Ergo 0.94
  o fixed a consistency issue with set.Fset theory
  o co-inductive predicates
  o new option -e for "why3session latex" allows to specify when to
    split tables in parts

Version 0.72, May 11, 2012
==========================

  o [Coq] new tactic "why3" to call external provers as oracles
  o [Coq output] new feature: theory realizations (see manual, chapter 9)
  o new tool why3session (see manual, section 6.7)
  o new tool why3doc (see manual, section 6.8)
  o support for multiple versions of the same prover (see manual, section 5.5)
  o [why3ide] new features, including prover upgrade, alternate editors
  o complete support for limiting provers' memory usage
  o improved support on Microsoft Windows
  o fix BTS 14221
  o fix BTS 14190
  o fix BTS 12457
  o fix BTS 13854
  o fix BTS 13849
  o [syntax] new syntax "constant x:ty" and "constant x:ty = e" to
    introduce constants, as an alternative to "function"
  o [TPTP] new parser for TPTP files with support for the newest
    TFA1 format (TPTP with polymorphic types and arithmetic)
  o [API] Dtype declaration kind is split into two: Dtype for
    declarations of a single abstract type or type alias, and
    Ddata for a list of (mutually recursive) algebraic types.
    Similarly, Dlogic declaration kind is split into Dparam for
    a single abstract function/predicate symbol and Dlogic for
    a list of (mutually recursive) defined symbols.

Version 0.71, October 13, 2011
==============================

  o [examples] a lot of new program examples in directory examples/programs
  o [Why3replayer] new option -latex to output a proof session in LaTeX format
  o [WhyML] significant improvement of the efficiency of the WP calculus
  o [WhyIDE] better coloring and source positioning including from front-ends
    such as Krakatoa and Jessie plugin of Frama-C
  o [WhyML] fixed labels and source locations in WPs
  o [Session] during reload, new method for pairing old and new subgoals
    based on goal shapes, stored in database.
  o [Session] prover versions are stored in database. A proof is
    marked obsolete if it was made by a prover with another version
    than the current.

Version 0.70, July 6, 2011
==========================

  New features

  o [WhyML] language and VC generator
  o [syntax] record types
    - introduced with syntax "type t = {| a:int; b:bool |}"
      actually syntactic sugar for "type t = `mk t' (a:int) (b:bool)"
      i.e. an algebraic with one constructor and projection functions
    - a record expression is written {| a = 1; b = True |}
    - access to field a with syntax x.a
    - update with syntax {| x with b = False |}
    - record patterns
  o new tool why3replayer: batch replay of a Why3 session created in IDE
  o [Alt-Ergo/Z3/CVC3/Yices output] support for built-in theory of arrays

  Fixes and other changes

  * [syntax] new syntax for conjunction (/\) and disjunction (\/)
    ("and" and "or" do not exist anymore)
  * [syntax] "logic" is not a keyword anymore, use "function" and "predicate"
  o [IDE] interactive detection of provers disabled because incompatible
    with session. Detection must be done with why3config --detect-provers
  o [IDE] bug 12244 resolved by using Task.task_equal
  o [IDE] tool "Replay" works
  o [IDE] tool "Reload" reloads the file from disk. No need to exit IDE anymore
  o [IDE] does not use Threads anymore, thanks to Call_provers.query_call
  o [IDE] displays explanations using labels of the form "expl:..."
  o [IDE] dropped dependence on Sqlite3
  o [Alt-Ergo output] bugfix: no triggers for "exists" quantifier
  o [Coq output] bugfix: polymorphic inductive predicates
  o [Coq output] fixed bug 12934: type def with several type params
  * [API] functions to create an environment are now exported from Env
  * [API] calls to prover can now be asynchronous
    Driver.prove_task now returns some intermediate value
    (of type prover_call), which can be queried in two ways:
    - blocking way with Call_provers.wait_on_call
    - non-blocking way with Call_provers.query_call
    So old code performing "prove_task t () ()" should be translated to
    "wait_on_call (prove_task t ()) ()".

Version 0.64, February 16, 2011
===============================

  o configure: if possible, use ocamlfind to find lablgtk2 and sqlite3
  o algebraic types: must be well-founded, non-positive constructors
    are forbidden, recursive functions and predicates must
    structurally terminate
  * syntax: /\ renamed into && and \/ into ||
  o accept lowercase names for axioms, lemmas, goals, and cases in
    inductive predicates
  o labels in terms and formulas are not printed by default.
  o transformation split-goal does not split under disjunction anymore
  o fixed --enable-local
  o why.conf is no more looked for in the current directory; use -C or
    WHY3CONFIG instead
  o why.conf: when changed, a backup up copy is made in why.conf.bak
  o why.conf now contains a magic number; configuration must be
    rebuilt with why3config if the magic number has changed
  o why3config: --autodetect-provers renamed to --detect-provers
                --autodetect-plugins renamed to --detect-plugins
     new option --detect to perform both detections
  o why3config: --conf_file is replaced by -C and --config
  o TPTP: encoding by explicit polymorphism is not anymore the
    default encoding for TPTP provers. It is now forbidden to use this
    encoding in presence of finite types.
  o IDE: source file names are stored in database with paths relative
    to the database, so that databases are now easier to move from a
    machine to another (e.g when they are stored in source control
    repositories)
  o better Gappa output: support for sqrt, for negative constants

Version 0.63, December 21, 2010
===============================

  o first public release. See release notes in manual
