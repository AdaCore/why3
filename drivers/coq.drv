
printer "coq"
filename "%f_%t_%s.v"
call_on_file "coqc %s"


prelude "(* generated by Why3's Coq driver *)" 

theory BuiltIn

  prelude "Require Import ZArith."
  prelude "Require Import Rbase."

  syntax type   int     "Z"
  syntax type   real    "R"
  syntax logic  (_=_)   "(%1 = %2)"
  syntax logic  (_<>_)  "(%1 <> %2)"
end


theory int.Int

  syntax logic zero "0%Z"
  syntax logic one "1%Z"

  syntax logic (_+_) "(%1 + %2)%Z"
  syntax logic (_-_) "(%1 - %2)%Z"
  syntax logic (_*_) "(%1 * %2)%Z"
  syntax logic (-_)  "(-%1)%Z"

  syntax logic (_<=_) "(%1 <= %2)%Z"
  syntax logic (_<_) "(%1 <  %2)%Z"
  syntax logic (_>=_) "(%1 >= %2)%Z"
  syntax logic (_>_) "(%1 >  %2)%Z"

  remove prop CommutativeGroup.Comm.Comm
  remove prop CommutativeGroup.Assoc.Assoc
  remove prop CommutativeGroup.Unit_def
  remove prop CommutativeGroup.Inv_def
  remove prop Assoc.Assoc
  remove prop Mul_distr
  remove prop Comm.Comm
  remove prop Unitary

end

