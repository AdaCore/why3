
(* Why driver for SMT syntax *)

prelude ";;; this is a prelude for Z3"

printer "smtv1"
filename "%f-%t-%g.smt"

valid "^unsat"
unknown "^\\(unknown\\|sat\\|Fail\\)" "Unknown"

(* Ã€ discuter *)
transformation "simplify_recursive_definition"      
transformation "inline_trivial"

transformation "eliminate_builtin"
transformation "eliminate_definition"
transformation "eliminate_inductive"
transformation "compile_match"
transformation "eliminate_algebraic"

transformation "encoding_decorate"
(* transformation "encoding_decorate_every_simple" *)


theory BuiltIn
  syntax type int "Int"
  syntax type real "Real"
  syntax logic (_=_) "(= %1 %2)"
  syntax logic (_<>_) "(not (= %1 %2))"
end


theory int.Int

  prelude ";;; this is a prelude for Z3, Arithmetic"

  syntax logic zero "0"

  syntax logic (_+_) "(+ %1 %2)"
  syntax logic (_-_) "(- %1 %2)"
  syntax logic (_*_) "(* %1 %2)"
  syntax logic (-_)  "(- %1)"

  syntax logic (_<=_) "(<= %1 %2)"
  syntax logic (_< _) "(< %1 %2)"
  syntax logic (_>=_) "(>= %1 %2)"
  syntax logic (_> _) "(> %1 %2)"

  remove prop CommutativeGroup.Comm.Comm
  remove prop CommutativeGroup.Assoc.Assoc
  remove prop CommutativeGroup.Unit_def
  remove prop CommutativeGroup.Inv_def
  remove prop Assoc.Assoc
  remove prop Mul_distr
  remove prop Comm.Comm
  remove prop Unitary

end

theory algebra.AC
  tag cloned logic op "AC"
  remove cloned prop Comm.Comm
  remove cloned prop Assoc.Assoc
end

theory transform.encoding_decorate.Kept
  tag cloned type t "encoding_decorate : kept"
end

(*
Local Variables: 
mode: why
compile-command: "unset LANG; make -C .. bench"
End: 
*)
