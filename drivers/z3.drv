
(* Why driver for SMT syntax *)

prelude ";;; this is a prelude for Z3"

printer "smtv1"
filename "%f-%t-%g.smt"

valid "^unsat"
unknown "^\\(unknown\\|sat\\|Fail\\)" "Unknown"

(* À discuter *)
transformation "simplify_recursive_definition"      
transformation "inline_trivial"

transformation "eliminate_builtin"
transformation "eliminate_definition"
transformation "eliminate_inductive"
transformation "eliminate_algebraic"
transformation "simplify_formula"
transformation "simplify_trivial_quantification"

transformation "encoding_decorate"
(* transformation "encoding_decorate_every_simple" *)

theory BuiltIn
  syntax type int   "Int"
  syntax type real  "Real"
  syntax logic (=)  "(= %1 %2)"
end


theory int.Int

  prelude ";;; this is a prelude for Z3, Arithmetic"

  syntax logic zero "0"

  syntax logic (+)  "(+ %1 %2)"
  syntax logic (-)  "(- %1 %2)"
  syntax logic (*)  "(* %1 %2)"
  syntax logic (-_) "(- %1)"

  syntax logic (<=) "(<= %1 %2)"
  syntax logic (<)  "(< %1 %2)"
  syntax logic (>=) "(>= %1 %2)"
  syntax logic (>)  "(> %1 %2)"

  remove prop CommutativeGroup.Comm.Comm
  remove prop CommutativeGroup.Assoc.Assoc
  remove prop CommutativeGroup.Unit_def
  remove prop CommutativeGroup.Inv_def
  remove prop Assoc.Assoc
  remove prop Mul_distr
  remove prop Comm.Comm
  remove prop Unitary
  remove prop Refl
  remove prop Trans
  remove prop Antisymm
  remove prop Total

end


theory real.Real

  prelude ";;; this is a prelude for Z3, Arithmetic"

  syntax logic zero "0"

  syntax logic (+)  "(+ %1 %2)"
  syntax logic (-)  "(- %1 %2)"
  syntax logic (*)  "(* %1 %2)"
  syntax logic (/)  "(/ %1 %2)"
  syntax logic (-_) "(- %1)"
  syntax logic inv  "(/ 1.0 %1)"

  syntax logic (<=) "(<= %1 %2)"
  syntax logic (<)  "(< %1 %2)"
  syntax logic (>=) "(>= %1 %2)"
  syntax logic (>)  "(> %1 %2)"

  remove prop CommutativeGroup.Comm.Comm
  remove prop CommutativeGroup.Assoc.Assoc
  remove prop CommutativeGroup.Unit_def
  remove prop CommutativeGroup.Inv_def
  remove prop Inverse
  remove prop Assoc.Assoc
  remove prop Mul_distr
  remove prop Comm.Comm
  remove prop Unitary
  remove prop Refl
  remove prop Trans
  remove prop Antisymm
  remove prop Total

end

(*
(* L'encodage des types sommes bloquent cette théorie builtin *)
theory bool.Bool
   syntax type bool   "bool"
   syntax logic True  "true"
   syntax logic False "false"
   syntax logic andb  "(and %1 %2)"
   syntax logic orb   "(or %1 %2)"
   syntax logic xorb  "(xor %1 %2)"
   syntax logic notb  "(not %1)" 
   meta cloned "encoding_decorate : kept" type bool
end
*)


theory int.EuclideanDivision
   syntax logic div "(div %1 %2)"
   syntax logic mod "(mod %1 %2)"
   remove prop Mod_bound
   remove prop Div_mod
   remove prop Mod_1
   remove prop Div_1
end

(*
Local Variables: 
mode: why
compile-command: "unset LANG; make -C .. bench"
End: 
*)
