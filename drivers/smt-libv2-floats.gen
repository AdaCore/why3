theory float.GenericFloat
   syntax function abs  "(fp.abs %1)"
   syntax function neg  "(fp.neg %1)"

   syntax function add  "(fp.add RNE %1 %2)"
   syntax function sub  "(fp.sub RNE %1 %2)"
   syntax function mul  "(fp.mul RNE %1 %2)"
   syntax function div  "(fp.div RNE %1 %2)"

   syntax function sqrt "(fp.sqrt RNE %1)"
   syntax function rem  "(fp.rem %1 %2)"

   syntax function ceil "(fp.roundToIntegral RTP %1)"
   syntax function floor "(fp.roundToIntegral RTN %1)"
   syntax function truncate "(fp.roundToIntegral RTZ %1)"
   syntax function nearbyInt "(fp.roundToIntegral RNA %1)"

   syntax function min "(fp.min %1 %2)"
   syntax function max "(fp.max %1 %2)"

   syntax function to_int   "(to_int (fp.to_real %1))"
   syntax function to_real  "(fp.to_real %1)"

   syntax predicate is_zero   "(fp.isZero %1)"
   syntax predicate is_positive "(fp.isPositive %1)"
   syntax predicate is_negative "(fp.isNegative %1)"

   syntax predicate is_finite "(not (or (fp.isInfinite %1) (fp.isNaN %1)))"

   syntax predicate eq  "(fp.eq %1 %2)"
   syntax predicate lt  "(fp.lt %1 %2)"
   syntax predicate le  "(fp.leq %1 %2)"
   syntax predicate gt  "(fp.gt %1 %2)"
   syntax predicate ge  "(fp.geq %1 %2)"

   remove allprops
end

theory float.Float32
  syntax type t "Float32"

  syntax function from_binary "((_ to_fp 8 24) ((_ int2bv 32) %1))"

  syntax function zeroF "(_ +zero 8 24)"
  syntax function oneF "((_ to_fp 8 24) #x3F800000)"
  syntax function max_value "((_ to_fp 8 24) #x7F7FFFFF)"
  syntax function two "((_ to_fp 8 24) #x40000000)"
  syntax function half "((_ to_fp 8 24) #x3F000000)"

  syntax function of_int   "((_ to_fp 8 24) RNE (to_real %1))"
  (* syntax function round "(fp.to_real ((_ to_fp 8 24) RNE %1))" *)

  remove allprops
end

theory float.Float64
  syntax type t "Float64"

  syntax function from_binary "((_ to_fp 11 53) ((_ int2bv 64) %1))"

  syntax function zeroF "(_ +zero 11 53)"
  syntax function oneF "((_ to_fp 8 24) #x3FF0000000000000)"
  syntax function max_value "((_ to_fp 8 24) #x7FEFFFFFFFFFFFFF)"
  syntax function two "((_ to_fp 8 24) #x4000000000000000)"
  syntax function half "((_ to_fp 8 24) #x3FE0000000000000)"

  syntax function of_int   "((_ to_fp 11 53) RNE (to_real %1))"
  (* syntax function round "(fp.to_real ((_ to_fp 11 53) RNE %1))" *)

  remove allprops
end

theory float.FloatConverter
   syntax function to_float32 "((_ to_fp 8 24) RNE %1)"
   syntax function to_float64 "((_ to_fp 11 53) RNE %1)"

   remove allprops
end

theory float.Float_BV_Converter
   syntax function to_ubv8  "((_ fp.to_ubv 8) RNA %1)"
   syntax function to_ubv16 "((_ fp.to_ubv 16) RNA %1)"
   syntax function to_ubv32 "((_ fp.to_ubv 32) RNA %1)"
   syntax function to_ubv64 "((_ fp.to_ubv 64) RNA %1)"

   remove allprops
end

theory float.Float64_BV_Converter
  syntax function of_ubv8  "((_ to_fp_unsigned 8 24) RNE %1)"
  syntax function of_ubv16 "((_ to_fp_unsigned 8 24) RNE %1)"
  syntax function of_ubv32 "((_ to_fp_unsigned 8 24) RNE %1)"
  syntax function of_ubv64 "((_ to_fp_unsigned 8 24) RNE %1)"

  remove allprops
end

theory float.Float64_BV_Converter
  syntax function of_ubv8  "((_ to_fp_unsigned 11 53) RNE %1)"
  syntax function of_ubv16 "((_ to_fp_unsigned 11 53) RNE %1)"
  syntax function of_ubv32 "((_ to_fp_unsigned 11 53) RNE %1)"
  syntax function of_ubv64 "((_ to_fp_unsigned 11 53) RNE %1)"

  remove allprops
end