(* Why driver for SMTLIB2 syntax *)

prelude ";;; this is a prelude for smt-lib v2"

printer "smtv2"
filename "%f-%t-%g.smt2"

invalid "^sat"
unknown "^\\(unknown\\|Fail\\)" ""
outofmemory "^(error \".*out of memory\")\\|Cannot allocate memory"
fail "^(error \"\\(W\\(A\\(R\\(N\\(I\\(N[^G]\\|[^N]\\)\\|[^I]\\)\\|[^N]\\)\\|[^R]\\)\\|[^A]\\)\\|[^W]\\)\\(.*\\)\")" "Error: \1"
timeout "interrupted by timeout"
time "why3cpulimit time : %s s"
valid "^unsat"

(* Ã€ discuter *)
transformation "inline_trivial"

transformation "eliminate_builtin"
transformation "eliminate_recursion"
transformation "eliminate_inductive"
transformation "eliminate_algebraic"
transformation "eliminate_epsilon"

transformation "simplify_formula"

(* remove pointless quantifiers from the goal *)
transformation "introduce_premises"

(* For some reason this is commented out in all drivers except gappa
and mathematica. Why? *)
(* transformation "simplify_trivial_quantification" *)

transformation "discriminate"
transformation "encoding_smt"

theory BuiltIn
  syntax type int   "Int"
  syntax type real  "Real"
  syntax predicate (=)  "(= %1 %2)"

  meta "encoding : kept" type int
end

theory algebra.Field
  remove prop add_div
  remove prop sub_div
  remove prop neg_div
  remove prop assoc_mul_div
  remove prop assoc_div_mul
  remove prop assoc_div_div
end

theory algebra.OrderedUnitaryCommutativeRing
  remove prop CompatOrderAdd
  remove prop CompatOrderMult
end

theory algebra.OrderedField
  remove prop CompatOrderAdd
  remove prop CompatOrderMult
end

theory int.Int
  syntax function zero "0"
  syntax function one  "1"

  syntax function (+)  "(+ %1 %2)"
  syntax function (-)  "(- %1 %2)"
  syntax function ( * )  "(* %1 %2)"
  syntax function (-_) "(- %1)"

  syntax predicate (<=) "(<= %1 %2)"
  syntax predicate (<)  "(< %1 %2)"
  syntax predicate (>=) "(>= %1 %2)"
  syntax predicate (>)  "(> %1 %2)"

  remove prop CommutativeGroup.Comm.Comm
  remove prop CommutativeGroup.Assoc
  remove prop CommutativeGroup.Unit_def_l
  remove prop CommutativeGroup.Unit_def_r
  remove prop CommutativeGroup.Inv_def_l
  remove prop CommutativeGroup.Inv_def_r
  remove prop Assoc.Assoc
  remove prop Mul_distr_l
  remove prop Mul_distr_r
  remove prop Comm.Comm
  remove prop Unitary
  remove prop Refl
  remove prop Trans
  remove prop Antisymm
  remove prop Total
  remove prop NonTrivialRing
  remove prop CompatOrderAdd
  remove prop ZeroLessOne
end

theory int.Abs
  syntax function abs "(abs %1)"
  remove prop Abs_le
  remove prop Abs_pos
end

theory int.MinMax
   syntax function min "(ite (< %1 %2) %1 %2)"
   syntax function max "(ite (< %1 %2) %2 %1)"

   remove prop Max_l
   remove prop Min_r
   remove prop Max_comm
   remove prop Min_comm
   remove prop Max_assoc
   remove prop Min_assoc
end

theory int.EuclideanDivision
   syntax function div "(div %1 %2)"
   syntax function mod "(mod %1 %2)"

   remove prop Div_mod
   remove prop Div_bound
   remove prop Mod_bound
   remove prop Mod_1
   remove prop Div_1
   remove prop Div_inf
   remove prop Div_inf_neg
   remove prop Mod_0
   remove prop Div_1_left
   remove prop Div_minus1_left
   remove prop Mod_1_left
   remove prop Mod_minus1_left
   remove prop Div_mult
   remove prop Mod_mult
end

theory int.Div2
   remove prop div2
end

theory int.ComputerDivision
   (* really, you should use bitvectors here, but... *)
end

theory real.Real
  meta "encoding : kept" type real

  syntax function zero "0.0"
  syntax function one  "1.0"

  syntax function (+)  "(+ %1 %2)"
  syntax function (-)  "(- %1 %2)"
  syntax function ( * )  "(* %1 %2)"
  syntax function (/)  "(/ %1 %2)"
  syntax function (-_) "(- %1)"
  syntax function inv  "(/ 1.0 %1)"

  syntax predicate (<=) "(<= %1 %2)"
  syntax predicate (<)  "(< %1 %2)"
  syntax predicate (>=) "(>= %1 %2)"
  syntax predicate (>)  "(> %1 %2)"

  remove prop CommutativeGroup.Assoc
  remove prop CommutativeGroup.Unit_def_l
  remove prop CommutativeGroup.Unit_def_r
  remove prop CommutativeGroup.Inv_def_l
  remove prop CommutativeGroup.Inv_def_r
  remove prop CommutativeGroup.Comm.Comm
  remove prop Assoc.Assoc
  remove prop Mul_distr_l
  remove prop Mul_distr_r
  remove prop Comm.Comm
  remove prop Unitary
  remove prop NonTrivialRing
  remove prop Inverse
  remove prop Refl
  remove prop Trans
  remove prop Antisymm
  remove prop Total
  remove prop ZeroLessOne
end

theory real.Truncate
  syntax function truncate "(ite (>= %1 0.0)
                                 (to_int %1)
                                 (- (to_int (- %1))))"
  syntax function floor "(to_int %1)"
  syntax function ceil "(- 1 (to_int (- 1.0 %1)))"

  remove prop Truncate_int
  remove prop Truncate_down_pos
  remove prop Truncate_up_neg
  remove prop Real_of_truncate
  remove prop Truncate_monotonic
  remove prop Truncate_monotonic_int1
  remove prop Truncate_monotonic_int2
  remove prop Floor_int
  remove prop Ceil_int
  remove prop Floor_down
  remove prop Ceil_up
  remove prop Floor_monotonic
  remove prop Ceil_monotonic
end

theory real.MinMax
   syntax function min "(ite (< %1 %2) %1 %2)"
   syntax function max "(ite (< %1 %2) %2 %1)"

   remove prop Max_l
   remove prop Min_r
   remove prop Max_comm
   remove prop Min_comm
   remove prop Max_assoc
   remove prop Min_assoc
end

theory real.FromInt
  syntax function from_int "(to_real %1)"

  remove prop Zero
  remove prop One
  remove prop Add
  remove prop Sub
  remove prop Mul
  remove prop Neg
  remove prop Monotonic
end

theory real.Abs
  syntax function abs "(ite (>= %1 0.0) %1 (- %1))"

  remove prop Abs_le
  remove prop Abs_pos
  (*** remove prop Abs_zero *)
  remove prop Abs_sum
  remove prop Abs_prod
  remove prop triangular_inequality
end

theory bool.Bool
   meta "encoding : kept" type bool
   meta "eliminate_algebraic" "no_inversion"
   (* meta "eliminate_algebraic" "no_selector" *)

   syntax type     bool  "Bool"
   syntax function True  "true"
   syntax function False "false"

   syntax function andb  "(and %1 %2)"
   syntax function orb   "(or %1 %2)"
   syntax function xorb  "(xor %1 %2)"
   syntax function notb  "(not %1)"
   syntax function implb "(=> %1 %2)"
end

theory bool.Ite
  syntax function ite "(ite %1 %2 %3)"
  meta "encoding : lskept" function ite
end

theory map.Map
  syntax type map "(Array %1 %2)"
  meta "encoding : lskept" function get
  meta "encoding : lskept" function set
  meta "encoding : lskept" function const

  syntax function get   "(select %1 %2)"
  syntax function set   "(store %1 %2 %3)"
(*  syntax function const "(const[%t0] %1)" *)
end

theory bitvec.BVConverter_32_64
  syntax function toBig "((_ zero_extend 32) %1)"
  syntax function toSmall "((_ extract 31 0) %1)"
end

theory bitvec.BVConverter_16_64
  syntax function toBig "((_ zero_extend 48) %1)"
  syntax function toSmall "((_ extract 15 0) %1)"
end

theory bitvec.BVConverter_8_64
  syntax function toBig "((_ zero_extend 56) %1)"
  syntax function toSmall "((_ extract 7 0) %1)"
end

theory bitvec.BVConverter_16_32
  syntax function toBig "((_ zero_extend 16) %1)"
  syntax function toSmall "((_ extract 15 0) %1)"
end

theory bitvec.BVConverter_8_32
  syntax function toBig "((_ zero_extend 24) %1)"
  syntax function toSmall "((_ extract 7 0) %1)"
end

theory bitvec.BVConverter_8_16
  syntax function toBig "((_ zero_extend 8) %1)"
  syntax function toSmall "((_ extract 7 0) %1)"
end

theory bitvec.Pow2int

  remove prop Power_0
  remove prop Power_s
  remove prop Power_1
  remove prop Power_sum
  remove prop pow2pos
  remove prop Div_mult_inst
  remove prop Div_double
  remove prop Div_pow
  remove prop Div_double_neg
  remove prop Div_pow2
  remove prop Div_div_pow
  remove prop Mod_pow2_gen
  remove prop pow2_0
  remove prop pow2_1
  remove prop pow2_2
  remove prop pow2_3
  remove prop pow2_4
  remove prop pow2_5
  remove prop pow2_6
  remove prop pow2_7
  remove prop pow2_8
  remove prop pow2_9
  remove prop pow2_10
  remove prop pow2_11
  remove prop pow2_12
  remove prop pow2_13
  remove prop pow2_14
  remove prop pow2_15
  remove prop pow2_16
  remove prop pow2_17
  remove prop pow2_18
  remove prop pow2_19
  remove prop pow2_20
  remove prop pow2_21
  remove prop pow2_22
  remove prop pow2_23
  remove prop pow2_24
  remove prop pow2_25
  remove prop pow2_26
  remove prop pow2_27
  remove prop pow2_28
  remove prop pow2_29
  remove prop pow2_30
  remove prop pow2_31
  remove prop pow2_32
  remove prop pow2_33
  remove prop pow2_34
  remove prop pow2_35
  remove prop pow2_36
  remove prop pow2_37
  remove prop pow2_38
  remove prop pow2_39
  remove prop pow2_40
  remove prop pow2_41
  remove prop pow2_42
  remove prop pow2_43
  remove prop pow2_44
  remove prop pow2_45
  remove prop pow2_46
  remove prop pow2_47
  remove prop pow2_48
  remove prop pow2_49
  remove prop pow2_50
  remove prop pow2_51
  remove prop pow2_52
  remove prop pow2_53
  remove prop pow2_54
  remove prop pow2_55
  remove prop pow2_56
  remove prop pow2_57
  remove prop pow2_58
  remove prop pow2_59
  remove prop pow2_60
  remove prop pow2_61
  remove prop pow2_62
  remove prop pow2_63
  remove prop pow2_64
end
