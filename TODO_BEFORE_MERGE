- The number of Coq/Isabelle realization is not the same: check that stuff is still realized.

- Check that the drivers that I merge actually remove/add the same part of the theories as before (because the theory changed etc)

- File why3session_run.ml disappear. I remember fran√ßois bobot complaining about losing some tools to copy paste session on commandline but I have no idea if customer use that: I assume not.

- I used share/provers_detection_data.conf from Why3 as SPARK is not using it

- line 632 of parser.mly I kept the Epsilon but I don't understand this.

- As we changed the parser it will be hell to maintain the handcrafted.messages which are used to give error message to stuff (but noone put any messages in this). I reinitialized them for SPARK branch.

- @COMPILETIMECOQ@ and @COMPILETIMEPVS@ disappeared from the configuration. I don't know exactly what Guillaume did with it or if it is ok with Spark need. I guess that we'll know when first users will try Coq

- I touched some stuff done by Julien Thierry in 2014 which I don't know what they are used for f1b32759 (configure_build and build_commands)

- In typing, I was not sure what to do for coercions in the case of SPARK Teps

- Can we avoid using this epsilon ? It looks like a diff we could avoid.

- Check that we change back the repository to review to in the 2 .gitreview

- Note that I removed "fast_wp" which is now called SP and can be added on a per_program basis.

- solve the problem of gnatprove.conf

- I activated vc_sp by default in gnat_config.ml through a debug flag. We may want to do something clever there ? We should correct this line of the code anyway (contian TODO)

- note that debug_ignore_unused_var has been set by default so that unused variables are not notified as warning

- For counterexamples, in gnat_counterexamples.ml, I should do something for the noarg_constructors which is currently ignored.
  It is a new info used in ce for master. Maybe I should do something with it.

- We may want to reconsider debug flag "ignore_useless_at"

- It seems that altergo is started but never ends in riposte__arithmetic. Did something changed in  the handling of timeout/steps ?

- I updated eliminate_epsilon without understanding what I did in the commit corresponding to this update (git blame this)
