module M

  use import int.Int
  use import int.EuclideanDivision

  logic even (x : int) = x = 2 * (div x 2)
  logic odd  (x : int) = x = 2 * (div x 2) + 1

let rec is_even x : bool variant {x} =
  { 0 <= x }
  if x = 0 then True else is_odd (x-1)
  { result=True <-> even x }

with is_odd x : bool variant {x} =
  { 0 <= x }
  if x = 0 then False else is_even (x-1)
  { result=True <-> odd x }

end

(*
Local Variables:
compile-command: "unset LANG; make -C ../../.. bench/programs/good/mutual"
End:
*)
