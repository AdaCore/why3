
module LocalFunctions

  use import int.Int
  use import module ref.Ref

  (* local function (f) accessing a local reference (x) *)
  let test1 () =
    let x = ref 0 in
    let f (y: int) = {} x := !x + y { !x = old !x + y } in
    f 2;
    assert { !x = 2 }

  val r: ref int

  (* recursive function accessing a global reference *)
  let rec test2 () =
    { }
    r := 0
    { !r = 0 }

end

(*
Local Variables:
compile-command: "unset LANG; make -C ../../.. bench/programs/good/scopes"
End:
*)
