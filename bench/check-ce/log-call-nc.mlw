(** Examples for testing a new form of presentation of counterexamples

    This case is for function call, in the non-conformity case

*)

use int.Int

val ref x : int

let f (y:int) : unit
  requires { y > 0 }
  writes { x }
  ensures { x > old x }
= x <- x + y

let f1 () =
  x <- 0;
  f 1;
  assert { x = 2 }

(** Expected form of answer:

Function `f` does not conform this its specification at assertion `A1`
on line `...`. A counterexamples given by the following logic context
--
a : int = ...
--
and the execution of `f1` in the initial global context
--
b : ref int = ....
--
the parameters
--
x : int = ...
y : ref int = ....
---
that reaches the assertion `A2` with the context
---
b : ref int = ...
x : int = ...
y : ref int = ...
---

*)
