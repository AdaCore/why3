File "bench/check-ce/func_call.mlw", line 7, characters 12-21:
Formula `Postcondition' from verification condition g'vc.
Prover result is: valid (0.05s, 1582 steps).

<check-ce>Check model 0 ("bench/check-ce/func_call.mlw", line 13, characters 11-16)
<check-ce>                        VALUE from ce-model: (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/func_call.mlw", line 12, characters 2-6 not in ce-model, taking default ()
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File func_call.mlw:
                Line 10:
                  z = (ref'mk 0)
                  _ = ()
                  Concrete execution of f
                Line 12:
                  Concrete execution of Tuple0
                  Concrete execution of g
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 10:
                  Execution of main function terminated normally
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/func_call.mlw", line 7, characters 12-21)
              File func_call.mlw:
                Line 10:
                  z = (ref'mk 0)
                  _ = ()
                  Concrete execution of f
                Line 12:
                  Concrete execution of Tuple0
                  Abstract execution of g
                  z = (ref'mk 0)
                  result = ()
                Line 7:
                  Property failure: Postcondition failed
                  Execution got stucked: Assume postconition
<check-ce>Check model 1 ("bench/check-ce/func_call.mlw", line 13, characters 11-16)
<check-ce>                          VALUE from ce-model: (ref'mk 2)
<check-ce>VALUE for result "bench/check-ce/func_call.mlw", line 12, characters 2-6 not in ce-model, taking default ()
<check-ce>Model 1:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File func_call.mlw:
                Line 10:
                  z = (ref'mk 0)
                  _ = ()
                  Concrete execution of f
                Line 12:
                  Concrete execution of Tuple0
                  Concrete execution of g
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 10:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File func_call.mlw:
                Line 10:
                  z = (ref'mk 0)
                  _ = ()
                  Concrete execution of f
                Line 12:
                  Concrete execution of Tuple0
                  Abstract execution of g
                  z = (ref'mk 2)
                  result = ()
                Line 13:
                  Property failure: Assertion failed
<check-ce>Check model 2 ("bench/check-ce/func_call.mlw", line 13, characters 11-16)
<check-ce>                            VALUE from ce-model: (ref'mk 2)
<check-ce>VALUE for result "bench/check-ce/func_call.mlw", line 12, characters 2-6 not in ce-model, taking default ()
<check-ce>Model 2:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File func_call.mlw:
                Line 10:
                  z = (ref'mk 0)
                  _ = ()
                  Concrete execution of f
                Line 12:
                  Concrete execution of Tuple0
                  Concrete execution of g
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 10:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File func_call.mlw:
                Line 10:
                  z = (ref'mk 0)
                  _ = ()
                  Concrete execution of f
                Line 12:
                  Concrete execution of Tuple0
                  Abstract execution of g
                  z = (ref'mk 2)
                  result = ()
                Line 13:
                  Property failure: Assertion failed
<check-ce>Models:
          - Checked model 0: bad model/bad model -> Sorry, we don't have a
                                                    good counterexample for
                                                    you :(
          - Checked model 1: bad model/good model -> The contracts of some
                                                     function or loop are
                                                     underspecified, for
                                                     example during the
                                                     following execution:
          - Checked model 2: bad model/good model -> The contracts of some
                                                     function or loop are
                                                     underspecified, for
                                                     example during the
                                                     following execution:
File "bench/check-ce/func_call.mlw", line 13, characters 11-16:
Formula `Assertion' from verification condition f'vc.
Prover result is: unknown (unknown + incomplete) (0.04s, 6620 steps).
The contracts of some function or loop are underspecified, for example during
the following execution:
File func_call.mlw:
  Line 10:
    z = (ref'mk 0)
    _ = ()
    Concrete execution of f
  Line 12:
    Concrete execution of Tuple0
    Abstract execution of g
    z = (ref'mk 2)
    result = ()
  Line 13:
    Property failure: Assertion failed

