<check-ce>Check model 0 ("bench/check-ce/anonymous4.mlw", line 8, characters 13-23)
<check-ce>Validating model:
          File anonymous4.mlw:
            Line 6:
              y = {"type": "Integer", "val": "0"}
            Line 8:
              the check fails with all inputs
<check-ce>Interpreting concretly
<check-ce>Interpreting abstractly
<rac-values>No value for result at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5, taking default.
<check-ce>Result of checking model 0:
            - Concrete: bad model (Concrete RAC, with the counterexample model cannot continue after "bench/check-ce/anonymous4.mlw", line 4, characters 35-40)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                Line 14:
                  Constant one initialization
              File anonymous4.mlw:
                Line 6:
                  y = 0
                  Execution of main function g's body with env:
                    y = 0
                    zero = 0
                    one = 1
                Line 9:
                  Concrete execution of f with args:
                    x = 0
                  Concrete execution of (@) with args:
                    u = ({x -> 0} fun y -> assume { y > 0 };
                           y + x)
                    u = 0
                Line 4:
                  Execution got stuck, Assumption with:
                    y = 0
            - Abstract: don't know (Abstract RAC terminated because Assume postcondition of f cannot be evaluated)
              
<check-ce>Check model 1 ("bench/check-ce/anonymous4.mlw", line 8, characters 13-23)
<check-ce>Validating model:
          File anonymous4.mlw:
            Line 6:
              y = {"type": "Integer", "val": "0"}
            Line 8:
              y = {"type": "Integer", "val": "0"}
<check-ce>Interpreting concretly
<check-ce>Interpreting abstractly
<rac-values>No value for result at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5, taking default.
<check-ce>Result of checking model 1:
            - Concrete: bad model (Concrete RAC, with the counterexample model cannot continue after "bench/check-ce/anonymous4.mlw", line 4, characters 35-40)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                Line 14:
                  Constant one initialization
              File anonymous4.mlw:
                Line 6:
                  y = 0
                  Execution of main function g's body with env:
                    y = 0
                    zero = 0
                    one = 1
                Line 9:
                  Concrete execution of f with args:
                    x = 0
                  Concrete execution of (@) with args:
                    u = ({x -> 0} fun y -> assume { y > 0 };
                           y + x)
                    u = 0
                Line 4:
                  Execution got stuck, Assumption with:
                    y = 0
            - Abstract: don't know (Abstract RAC terminated because Assume postcondition of f cannot be evaluated)
              
<check-ce>Check model 2 ("bench/check-ce/anonymous4.mlw", line 8, characters 13-23)
<check-ce>Validating model:
          File anonymous4.mlw:
            Line 6:
              y = {"type": "Integer", "val": "0"}
            Line 8:
              y = {"type": "Integer", "val": "0"}
<check-ce>Interpreting concretly
<check-ce>Interpreting abstractly
<rac-values>No value for result at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5, taking default.
<check-ce>Result of checking model 2:
            - Concrete: bad model (Concrete RAC, with the counterexample model cannot continue after "bench/check-ce/anonymous4.mlw", line 4, characters 35-40)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                Line 14:
                  Constant one initialization
              File anonymous4.mlw:
                Line 6:
                  y = 0
                  Execution of main function g's body with env:
                    y = 0
                    zero = 0
                    one = 1
                Line 9:
                  Concrete execution of f with args:
                    x = 0
                  Concrete execution of (@) with args:
                    u = ({x -> 0} fun y -> assume { y > 0 };
                           y + x)
                    u = 0
                Line 4:
                  Execution got stuck, Assumption with:
                    y = 0
            - Abstract: don't know (Abstract RAC terminated because Assume postcondition of f cannot be evaluated)
              
<check-ce>Models:
- Checked model 0 (Concrete: bad model, Abstract: don't know)
    Summary: The following counterexample model has not been verified
    (Abstract RAC terminated because Assume postcondition of f cannot be evaluated)
- Checked model 1 (Concrete: bad model, Abstract: don't know)
    Summary: The following counterexample model has not been verified
    (Abstract RAC terminated because Assume postcondition of f cannot be evaluated)
- Selected model 2 (Concrete: bad model, Abstract: don't know)
    Summary: The following counterexample model has not been verified
    (Abstract RAC terminated because Assume postcondition of f cannot be evaluated)
File "bench/check-ce/anonymous4.mlw", line 8, characters 13-23:
Goal Postcondition from verification condition g'vc.
Prover result is: timeout (1.00s, 4792694 steps).
The following counterexample model could not be verified
  (Abstract RAC terminated because Assume postcondition of f cannot be evaluated):
File anonymous4.mlw:
  Line 6:
    y = 0 (0)
  Line 8:
    y = 0 (0)

