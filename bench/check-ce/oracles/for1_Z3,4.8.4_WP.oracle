File "bench/check-ce/for1.mlw", line 7, characters 18-24:
Formula `Loop invariant init' from verification condition f'vc.
Prover result is: valid (0.03s, 32 steps).

File "bench/check-ce/for1.mlw", line 7, characters 18-24:
Formula `Loop invariant preservation' from verification condition f'vc.
Prover result is: valid (0.02s, 2379 steps).

<check-ce>Check model 0 ("bench/check-ce/for1.mlw", line 4, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/for1.mlw", line 5, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for x "bench/check-ce/for1.mlw", line 6, characters 4-74 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for i "bench/check-ce/for1.mlw", line 6, characters 8-9 not in ce-model, taking default 2
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File for1.mlw:
                Line 3:
                  _ = ()
                  Concrete execution of f
                Line 5:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix +
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 10:
                  Concrete execution of contents
                Line 3:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File for1.mlw:
                Line 3:
                  _ = ()
                  Concrete execution of f
                Line 5:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 6:
                  x = (ref'mk 0)
                  i = 2
                Line 10:
                  Concrete execution of contents
                Line 4:
                  Property failure: Postcondition of f failed
<check-ce>Check model 1 ("bench/check-ce/for1.mlw", line 4, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/for1.mlw", line 5, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>                            VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for i "bench/check-ce/for1.mlw", line 6, characters 8-9 not in ce-model, taking default 2
<check-ce>Model 1:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File for1.mlw:
                Line 3:
                  _ = ()
                  Concrete execution of f
                Line 5:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix +
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 10:
                  Concrete execution of contents
                Line 3:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File for1.mlw:
                Line 3:
                  _ = ()
                  Concrete execution of f
                Line 5:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 6:
                  x = (ref'mk 1)
                  i = 2
                Line 10:
                  Concrete execution of contents
                Line 4:
                  Property failure: Postcondition of f failed
<check-ce>Check model 2 ("bench/check-ce/for1.mlw", line 4, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/for1.mlw", line 5, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>                              VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for i "bench/check-ce/for1.mlw", line 6, characters 8-9 not in ce-model, taking default 2
<check-ce>Model 2:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File for1.mlw:
                Line 3:
                  _ = ()
                  Concrete execution of f
                Line 5:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix +
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 10:
                  Concrete execution of contents
                Line 3:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File for1.mlw:
                Line 3:
                  _ = ()
                  Concrete execution of f
                Line 5:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 6:
                  x = (ref'mk 1)
                  i = 2
                Line 10:
                  Concrete execution of contents
                Line 4:
                  Property failure: Postcondition of f failed
<check-ce>Models:
          - Checked model 0: bad model/good model -> The contracts of some
                                                     function or loop are
                                                     underspecified, for
                                                     example during the
                                                     following execution:
          - Checked model 1: bad model/good model -> The contracts of some
                                                     function or loop are
                                                     underspecified, for
                                                     example during the
                                                     following execution:
          - Checked model 2: bad model/good model -> The contracts of some
                                                     function or loop are
                                                     underspecified, for
                                                     example during the
                                                     following execution:
File "bench/check-ce/for1.mlw", line 4, characters 12-22:
Formula `Postcondition' from verification condition f'vc.
Prover result is: timeout (1.00s, 5072720 steps).
The contracts of some function or loop are underspecified, for example during
the following execution:
File for1.mlw:
  Line 3:
    _ = ()
    Concrete execution of f
  Line 5:
    Abstract execution of ref
    result = (ref'mk 0)
  Line 6:
    x = (ref'mk 0)
    i = 2
  Line 10:
    Concrete execution of contents
  Line 4:
    Property failure: Postcondition of f failed

File "bench/check-ce/for1.mlw", line 4, characters 12-22:
Verification condition f'vc.
Prover result is: valid (0.00s, 104 steps).

