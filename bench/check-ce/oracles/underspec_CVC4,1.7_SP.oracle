File "bench/check-ce/underspec.mlw", line 17, characters 27-33:
Goal `Loop invariant init' from verification condition f'vc.
Prover result is: valid (0.05s, 1403 steps).

<check-ce>Check model 0 ("bench/check-ce/underspec.mlw", line 17, characters 27-33)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 14, characters 17-18 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 15, characters 17-18 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE from ce-model for x1 at "bench/check-ce/underspec.mlw", line 16, characters 4-139: (ref'mk 0)
<check-ce>VALUE for x2 "bench/check-ce/underspec.mlw", line 16, characters 4-139 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE from ce-model for i at "bench/check-ce/underspec.mlw", line 16, characters 8-9: 0
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File underspec.mlw:
                Line 13:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 14:
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 15:
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 16:
                  Concrete execution of loop
                Line 18:
                  Concrete execution of (=) with args:
                    x = 0
                    y = 0
                Line 19:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 18:
                  Concrete execution of (=) with args:
                    x = 1
                    y = 0
                Line 21:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 13:
                  Execution of main function terminated normally
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/underspec.mlw", line 16, characters 4-139)
              File underspec.mlw:
                Line 13:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 14:
                  Abstract execution of ref with args:
                    contents = 0
                  result = (ref'mk 0)
                Line 15:
                  Abstract execution of ref with args:
                    contents = 0
                  result = (ref'mk 0)
                Line 16:
                  Abstract execution of loop
                  x1 = (ref'mk 0)
                  x2 = (ref'mk 0)
                  i = 0
                Line 18:
                  Concrete execution of (=) with args:
                    x = 0
                    y = 0
                Line 19:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 16:
                  Execution got stuck, Cannot continue after arbitrary iteration with:
<check-ce>Check model 1 ("bench/check-ce/underspec.mlw", line 17, characters 27-33)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 14, characters 17-18 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 15, characters 17-18 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE from ce-model for x1 at "bench/check-ce/underspec.mlw", line 16, characters 4-139: (ref'mk (-1))
<check-ce>VALUE for x2 "bench/check-ce/underspec.mlw", line 16, characters 4-139 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE from ce-model for i at "bench/check-ce/underspec.mlw", line 16, characters 8-9: 0
<check-ce>Model 1:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File underspec.mlw:
                Line 13:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 14:
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 15:
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 16:
                  Concrete execution of loop
                Line 18:
                  Concrete execution of (=) with args:
                    x = 0
                    y = 0
                Line 19:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 18:
                  Concrete execution of (=) with args:
                    x = 1
                    y = 0
                Line 21:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 13:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/underspec.mlw", line 17, characters 18-33)
              File underspec.mlw:
                Line 13:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 14:
                  Abstract execution of ref with args:
                    contents = 0
                  result = (ref'mk 0)
                Line 15:
                  Abstract execution of ref with args:
                    contents = 0
                  result = (ref'mk 0)
                Line 16:
                  Abstract execution of loop
                  x1 = (ref'mk (-1))
                  x2 = (ref'mk 0)
                  i = 0
                Line 18:
                  Concrete execution of (=) with args:
                    x = 0
                    y = 0
                Line 19:
                  Concrete execution of contents with args:
                    arg = (ref'mk (-1))
                  Concrete execution of (+) with args:
                    _ = (-1)
                    _ = 1
                Line 17:
                  Property failure, Loop invariant preservation with:
                    x1 = (ref'mk 0)
                    i = 1
<check-ce>Check model 2 ("bench/check-ce/underspec.mlw", line 17, characters 27-33)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 14, characters 17-18 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 15, characters 17-18 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE from ce-model for x1 at "bench/check-ce/underspec.mlw", line 16, characters 4-139: (ref'mk (-1))
<check-ce>VALUE for x2 "bench/check-ce/underspec.mlw", line 16, characters 4-139 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE from ce-model for i at "bench/check-ce/underspec.mlw", line 16, characters 8-9: 0
<check-ce>Model 2:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File underspec.mlw:
                Line 13:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 14:
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 15:
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 16:
                  Concrete execution of loop
                Line 18:
                  Concrete execution of (=) with args:
                    x = 0
                    y = 0
                Line 19:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 18:
                  Concrete execution of (=) with args:
                    x = 1
                    y = 0
                Line 21:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 13:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/underspec.mlw", line 17, characters 18-33)
              File underspec.mlw:
                Line 13:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 14:
                  Abstract execution of ref with args:
                    contents = 0
                  result = (ref'mk 0)
                Line 15:
                  Abstract execution of ref with args:
                    contents = 0
                  result = (ref'mk 0)
                Line 16:
                  Abstract execution of loop
                  x1 = (ref'mk (-1))
                  x2 = (ref'mk 0)
                  i = 0
                Line 18:
                  Concrete execution of (=) with args:
                    x = 0
                    y = 0
                Line 19:
                  Concrete execution of contents with args:
                    arg = (ref'mk (-1))
                  Concrete execution of (+) with args:
                    _ = (-1)
                    _ = 1
                Line 17:
                  Property failure, Loop invariant preservation with:
                    x1 = (ref'mk 0)
                    i = 1
<check-ce>Models:
- Checked model 0 (Concrete: bad model, Abstract: bad model)
    Summary: Sorry, we don't have a good counterexample for you :(
- Selected model 1 (Concrete: bad model, Abstract: good model)
    Summary: The contracts of some function or loop are underspecified, for
    example during the following execution:
- Checked model 2 (Concrete: bad model, Abstract: good model)
    Summary: The contracts of some function or loop are underspecified, for
    example during the following execution:
File "bench/check-ce/underspec.mlw", line 17, characters 27-33:
Goal `Loop invariant preservation' from verification condition f'vc.
Prover result is: unknown (unknown + incomplete) (0.05s, 6755 steps).
The contracts of some function or loop are underspecified, for example during
the following execution:
File underspec.mlw:
  Line 13:
    _ = ()
    Concrete execution of f with args:
      _ = ()
  Line 14:
    Abstract execution of ref with args:
      contents = 0
    result = (ref'mk 0)
  Line 15:
    Abstract execution of ref with args:
      contents = 0
    result = (ref'mk 0)
  Line 16:
    Abstract execution of loop
    x1 = (ref'mk (-1))
    x2 = (ref'mk 0)
    i = 0
  Line 18:
    Concrete execution of (=) with args:
      x = 0
      y = 0
  Line 19:
    Concrete execution of contents with args:
      arg = (ref'mk (-1))
    Concrete execution of (+) with args:
      _ = (-1)
      _ = 1
  Line 17:
    Property failure, Loop invariant preservation with:
      x1 = (ref'mk 0)
      i = 1

File "bench/check-ce/underspec.mlw", line 17, characters 27-33:
Goal `Loop invariant preservation' from verification condition f'vc.
Prover result is: valid (0.02s, 1643 steps).

File "bench/check-ce/underspec.mlw", line 41, characters 14-23:
Goal `Postcondition' from verification condition g'vc.
Prover result is: valid (0.02s, 1582 steps).

<check-ce>Check model 0 ("bench/check-ce/underspec.mlw", line 47, characters 13-18)
<check-ce>VALUE from ce-model for z at "bench/check-ce/underspec.mlw", line 46, characters 4-8: (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 46, characters 4-8 not in ce-model, taking default ()
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File underspec.mlw:
                Line 37:
                  ANY = 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 44:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 46:
                  Concrete execution of Tuple0 with args:
                  Concrete execution of g with args:
                    _ = ()
                Line 42:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 44:
                  Execution of main function terminated normally
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/underspec.mlw", line 41, characters 14-23)
              File underspec.mlw:
                Line 37:
                  ANY = 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 44:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 46:
                  Concrete execution of Tuple0 with args:
                  Abstract execution of g with args:
                    _ = ()
                  z = (ref'mk 0)
                  result = ()
                Line 41:
                  Execution got stuck, Assume postcondition of g with:
                    z = (ref'mk 0)
                    z = (ref'mk 0)
<check-ce>Check model 1 ("bench/check-ce/underspec.mlw", line 47, characters 13-18)
<check-ce>VALUE from ce-model for z at "bench/check-ce/underspec.mlw", line 46, characters 4-8: (ref'mk 2)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 46, characters 4-8 not in ce-model, taking default ()
<check-ce>Model 1:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File underspec.mlw:
                Line 37:
                  ANY = 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 44:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 46:
                  Concrete execution of Tuple0 with args:
                  Concrete execution of g with args:
                    _ = ()
                Line 42:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 44:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File underspec.mlw:
                Line 37:
                  ANY = 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 44:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 46:
                  Concrete execution of Tuple0 with args:
                  Abstract execution of g with args:
                    _ = ()
                  z = (ref'mk 2)
                  result = ()
                Line 47:
                  Property failure, Assertion with:
                    z = (ref'mk 2)
<check-ce>Check model 2 ("bench/check-ce/underspec.mlw", line 47, characters 13-18)
<check-ce>VALUE from ce-model for z at "bench/check-ce/underspec.mlw", line 46, characters 4-8: (ref'mk 2)
<check-ce>VALUE for result "bench/check-ce/underspec.mlw", line 46, characters 4-8 not in ce-model, taking default ()
<check-ce>Model 2:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File underspec.mlw:
                Line 37:
                  ANY = 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 44:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 46:
                  Concrete execution of Tuple0 with args:
                  Concrete execution of g with args:
                    _ = ()
                Line 42:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                Line 44:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File underspec.mlw:
                Line 37:
                  ANY = 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 44:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                Line 46:
                  Concrete execution of Tuple0 with args:
                  Abstract execution of g with args:
                    _ = ()
                  z = (ref'mk 2)
                  result = ()
                Line 47:
                  Property failure, Assertion with:
                    z = (ref'mk 2)
<check-ce>Models:
- Checked model 0 (Concrete: bad model, Abstract: bad model)
    Summary: Sorry, we don't have a good counterexample for you :(
- Selected model 1 (Concrete: bad model, Abstract: good model)
    Summary: The contracts of some function or loop are underspecified, for
    example during the following execution:
- Checked model 2 (Concrete: bad model, Abstract: good model)
    Summary: The contracts of some function or loop are underspecified, for
    example during the following execution:
File "bench/check-ce/underspec.mlw", line 47, characters 13-18:
Goal `Assertion' from verification condition f'vc.
Prover result is: unknown (unknown + incomplete) (0.05s, 6620 steps).
The contracts of some function or loop are underspecified, for example during
the following execution:
File underspec.mlw:
  Line 37:
    ANY = 0
    Concrete execution of ref with args:
      contents = 0
    Concrete execution of ref'mk with args:
      contents = 0
  Line 44:
    _ = ()
    Concrete execution of f with args:
      _ = ()
  Line 46:
    Concrete execution of Tuple0 with args:
    Abstract execution of g with args:
      _ = ()
    z = (ref'mk 2)
    result = ()
  Line 47:
    Property failure, Assertion with:
      z = (ref'mk 2)

