File "bench/check-ce/underspec.mlw", line 17, characters 27-33:
Formula `Loop invariant init' from verification condition f'vc.
Prover result is: valid (0.04s, 1403 steps).

File "bench/check-ce/underspec.mlw", line 17, characters 27-33:
Formula `Loop invariant preservation' from verification condition f'vc.
Prover result is: unknown (unknown + incomplete) (0.07s, 6755 steps).
The following counterexample values reveal a subcontract weakness:
File underspec.mlw:
  Line 13:
    _ = ()
    Concrete execution of f
  Line 14:
    Abstract execution of ref
    result = (ref'mk 0)
  Line 15:
    Abstract execution of ref
    result = (ref'mk 0)
  Line 16:
    x1 = (ref'mk (-1))
    x2 = (ref'mk 0)
    i = 0
  Line 18:
    Concrete execution of infix =
  Line 19:
    Concrete execution of contents
    Concrete execution of infix +
File "bench/check-ce/underspec.mlw", line 17, characters 27-33:
Formula `Loop invariant preservation' from verification condition f'vc.
Prover result is: valid (0.03s, 1643 steps).

File "bench/check-ce/underspec.mlw", line 41, characters 14-23:
Formula `Postcondition' from verification condition g'vc.
Prover result is: valid (0.02s, 1582 steps).

File "bench/check-ce/underspec.mlw", line 47, characters 13-18:
Formula `Assertion' from verification condition f'vc.
Prover result is: unknown (unknown + incomplete) (0.06s, 6620 steps).
The following counterexample values reveal a subcontract weakness:
File underspec.mlw:
  Line 44:
    z = (ref'mk 0)
    _ = ()
    Concrete execution of f
  Line 46:
    Concrete execution of Tuple0
    Abstract execution of g
    z = (ref'mk 2)
    result = ()
