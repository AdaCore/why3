File "bench/check-ce/multifile1.mlw", line 6, characters 14-24:
Goal Postcondition from verification condition decr'vc.
Prover result is: Valid (0.02s, 23 steps).

<check-ce>Check model 0 ("bench/check-ce/multifile1.mlw", line 10, characters 14-24)
<check-ce>Validating model:
          File multifile1.mlw:
            Line 6:
              x = {"type": "Integer", "val": "2"}
            Line 9:
              x = {"type": "Integer", "val": "2"}
            Line 10:
              the check fails with all inputs
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global zero at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global one at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter x at "bench/check-ce/multifile1.mlw", line 9, characters 12-13: 2
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global zero at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global one at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter x at "bench/check-ce/multifile1.mlw", line 9, characters 12-13: 2
<rac-values>Type default value for variable result at "bench/check-ce/multifile1.mlw", line 11, characters 4-10: 0
<check-ce>Result of checking model 0:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File multifile1.mlw:
                Line 9:
                  x = 2
                  x = 2
                  Execution of main function `incr` with env:
                    x = 2
                    zero = 0
                    one = 1
                Line 11:
                  Concrete execution of function `decr` with args:
                    x = 2
                Line 7:
                  Concrete execution of function `(-)` with args:
                    x = 2
                    y = 1
              File int.mlw:
                Line 23:
                  Concrete execution of function `(-_)` with args:
                    _ = 1
                  Concrete execution of function `(+)` with args:
                    _ = 2
                    _ = (-1)
              File multifile1.mlw:
                Line 11:
                  Concrete execution of function `(+)` with args:
                    _ = 1
                    _ = 2
                Line 9:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File multifile1.mlw:
                Line 9:
                  x = 2
                  x = 2
                  Execution of main function `incr` with env:
                    x = 2
                    zero = 0
                    one = 1
                Line 11:
                  Abstract execution of function `decr` with args:
                    x = 2
                  result = 0
                  Concrete execution of function `(+)` with args:
                    _ = 0
                    _ = 2
                Line 10:
                  Property failure, Postcondition of `incr` with:
                    x = 2
                    result = 2
<check-ce>Check model 1 ("bench/check-ce/multifile1.mlw", line 10, characters 14-24)
<check-ce>Validating model:
          File multifile1.mlw:
            Line 6:
              x = {"type": "Integer", "val": "2"}
            Line 9:
              x = {"type": "Integer", "val": "2"}
            Line 10:
              x_vc_constant = {"type": "Integer", "val": "2"}
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global zero at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global one at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter x at "bench/check-ce/multifile1.mlw", line 9, characters 12-13: 2
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global zero at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global one at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter x at "bench/check-ce/multifile1.mlw", line 9, characters 12-13: 2
<rac-values>Type default value for variable result at "bench/check-ce/multifile1.mlw", line 11, characters 4-10: 0
<check-ce>Result of checking model 1:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File multifile1.mlw:
                Line 9:
                  x = 2
                  x = 2
                  Execution of main function `incr` with env:
                    x = 2
                    zero = 0
                    one = 1
                Line 11:
                  Concrete execution of function `decr` with args:
                    x = 2
                Line 7:
                  Concrete execution of function `(-)` with args:
                    x = 2
                    y = 1
              File int.mlw:
                Line 23:
                  Concrete execution of function `(-_)` with args:
                    _ = 1
                  Concrete execution of function `(+)` with args:
                    _ = 2
                    _ = (-1)
              File multifile1.mlw:
                Line 11:
                  Concrete execution of function `(+)` with args:
                    _ = 1
                    _ = 2
                Line 9:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File multifile1.mlw:
                Line 9:
                  x = 2
                  x = 2
                  Execution of main function `incr` with env:
                    x = 2
                    zero = 0
                    one = 1
                Line 11:
                  Abstract execution of function `decr` with args:
                    x = 2
                  result = 0
                  Concrete execution of function `(+)` with args:
                    _ = 0
                    _ = 2
                Line 10:
                  Property failure, Postcondition of `incr` with:
                    x = 2
                    result = 2
<check-ce>Check model 2 ("bench/check-ce/multifile1.mlw", line 10, characters 14-24)
<check-ce>Validating model:
          File multifile1.mlw:
            Line 6:
              x = {"type": "Integer", "val": "2"}
            Line 9:
              x = {"type": "Integer", "val": "2"}
            Line 10:
              x_vc_constant = {"type": "Integer", "val": "2"}
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global zero at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global one at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter x at "bench/check-ce/multifile1.mlw", line 9, characters 12-13: 2
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global zero at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global one at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter x at "bench/check-ce/multifile1.mlw", line 9, characters 12-13: 2
<rac-values>Type default value for variable result at "bench/check-ce/multifile1.mlw", line 11, characters 4-10: 0
<check-ce>Result of checking model 2:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File multifile1.mlw:
                Line 9:
                  x = 2
                  x = 2
                  Execution of main function `incr` with env:
                    x = 2
                    zero = 0
                    one = 1
                Line 11:
                  Concrete execution of function `decr` with args:
                    x = 2
                Line 7:
                  Concrete execution of function `(-)` with args:
                    x = 2
                    y = 1
              File int.mlw:
                Line 23:
                  Concrete execution of function `(-_)` with args:
                    _ = 1
                  Concrete execution of function `(+)` with args:
                    _ = 2
                    _ = (-1)
              File multifile1.mlw:
                Line 11:
                  Concrete execution of function `(+)` with args:
                    _ = 1
                    _ = 2
                Line 9:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File multifile1.mlw:
                Line 9:
                  x = 2
                  x = 2
                  Execution of main function `incr` with env:
                    x = 2
                    zero = 0
                    one = 1
                Line 11:
                  Abstract execution of function `decr` with args:
                    x = 2
                  result = 0
                  Concrete execution of function `(+)` with args:
                    _ = 0
                    _ = 2
                Line 10:
                  Property failure, Postcondition of `incr` with:
                    x = 2
                    result = 2
<check-ce>Models:
- Selected model 0 (Concrete: bad model, Abstract: good model)
    Summary: The contracts of some function or loop are underspecified
- Checked model 1 (Concrete: bad model, Abstract: good model)
    Summary: The contracts of some function or loop are underspecified
- Checked model 2 (Concrete: bad model, Abstract: good model)
    Summary: The contracts of some function or loop are underspecified
File "bench/check-ce/multifile1.mlw", line 10, characters 14-24:
Goal Postcondition from verification condition incr'vc.
Prover result is: Unknown (sat) (0.01s, 835 steps).
The contracts of some function or loop are underspecified, for example during
  the following execution:
File int.mlw:
  Line 13:
    Constant zero initialization
    zero = 0
  Line 14:
    Constant one initialization
    one = 1
File multifile1.mlw:
  Line 9:
    x = 2
    x = 2
    Execution of main function `incr` with env:
      x = 2
      zero = 0
      one = 1
  Line 11:
    Abstract execution of function `decr` with args:
      x = 2
    result = 0
    Concrete execution of function `(+)` with args:
      _ = 0
      _ = 2
  Line 10:
    Property failure, Postcondition of `incr` with:
      x = 2
      result = 2

