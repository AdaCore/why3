<check-ce>Check model 0 ("bench/check-ce/func_call4.mlw", line 9, characters 34-39)
<check-ce>Validating model concretely:
File func_call4.mlw:
  Line 7:
    old z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 9:
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
<rac-values>Missing value for parameter _, continue with default value (
)
<check-ce>Validating model abstractly:
File func_call4.mlw:
  Line 7:
    old z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 9:
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
<rac-values>Missing value for parameter _, continue with default value (
)
<rac-values>VALUE imported for z at "bench/check-ce/func_call4.mlw", line 9, characters 19-23: (ref'mk 0)
<rac-values>VALUE for result "bench/check-ce/func_call4.mlw", line 9, characters 19-23 cannot be imported, taking default ()
<check-ce>Model 0:
            - Concrete: don't know (Concrete RAC got stuck: Cannot compute application of local any-function g)
              
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/func_call4.mlw", line 7, characters 12-21)
              File func_call4.mlw:
                Line 3:
                  execution of any, result: 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 9:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                  Concrete execution of Tuple0 with args:
                  Abstract execution of g with args:
                    _ = ()
                  z = (ref'mk 0)
                  result = ()
                Line 7:
                  Execution got stuck, Assume postcondition of g with:
                    z = (ref'mk 0)
                    z = (ref'mk 0)
<check-ce>Check model 1 ("bench/check-ce/func_call4.mlw", line 9, characters 34-39)
<check-ce>Validating model concretely:
File func_call4.mlw:
  Line 7:
    old z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
  Line 9:
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
<rac-values>Missing value for parameter _, continue with default value (
)
<check-ce>Validating model abstractly:
File func_call4.mlw:
  Line 7:
    old z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
  Line 9:
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
<rac-values>Missing value for parameter _, continue with default value (
)
<rac-values>VALUE imported for z at "bench/check-ce/func_call4.mlw", line 9, characters 19-23: (ref'mk 2)
<rac-values>VALUE for result "bench/check-ce/func_call4.mlw", line 9, characters 19-23 cannot be imported, taking default ()
<check-ce>Model 1:
            - Concrete: don't know (Concrete RAC got stuck: Cannot compute application of local any-function g)
              
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File func_call4.mlw:
                Line 3:
                  execution of any, result: 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 9:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                  Concrete execution of Tuple0 with args:
                  Abstract execution of g with args:
                    _ = ()
                  z = (ref'mk 2)
                  result = ()
                  Property failure, Assertion with:
                    z = (ref'mk 2)
<check-ce>Check model 2 ("bench/check-ce/func_call4.mlw", line 9, characters 34-39)
<check-ce>Validating model concretely:
File func_call4.mlw:
  Line 7:
    old z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
  Line 9:
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
<rac-values>Missing value for parameter _, continue with default value (
)
<check-ce>Validating model abstractly:
File func_call4.mlw:
  Line 7:
    old z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
  Line 9:
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    z =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
<rac-values>Missing value for parameter _, continue with default value (
)
<rac-values>VALUE imported for z at "bench/check-ce/func_call4.mlw", line 9, characters 19-23: (ref'mk 2)
<rac-values>VALUE for result "bench/check-ce/func_call4.mlw", line 9, characters 19-23 cannot be imported, taking default ()
<check-ce>Model 2:
            - Concrete: don't know (Concrete RAC got stuck: Cannot compute application of local any-function g)
              
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File func_call4.mlw:
                Line 3:
                  execution of any, result: 0
                  Concrete execution of ref with args:
                    contents = 0
                  Concrete execution of ref'mk with args:
                    contents = 0
                Line 9:
                  _ = ()
                  Concrete execution of f with args:
                    _ = ()
                  Concrete execution of Tuple0 with args:
                  Abstract execution of g with args:
                    _ = ()
                  z = (ref'mk 2)
                  result = ()
                  Property failure, Assertion with:
                    z = (ref'mk 2)
<check-ce>Models:
- Checked model 0 (Concrete: don't know, Abstract: bad model)
    Summary: The following counterexample model has not been verified
    (Concrete RAC got stuck: Cannot compute application of local any-function g)
- Selected model 1 (Concrete: don't know, Abstract: good model)
    Summary: The program does not comply to the verification goal, or the
    contracts of some loop or function are too weak
- Checked model 2 (Concrete: don't know, Abstract: good model)
    Summary: The program does not comply to the verification goal, or the
    contracts of some loop or function are too weak
File "bench/check-ce/func_call4.mlw", line 9, characters 34-39:
Goal Assertion from verification condition f'vc.
Prover result is: unknown (unknown + incomplete) (0.10s, 6512 steps).
The program does not comply to the verification goal, or the contracts of
  some loop or function are too weak, for example during the following
  execution:
File func_call4.mlw:
  Line 3:
    execution of any, result: 0
    Concrete execution of ref with args:
      contents = 0
    Concrete execution of ref'mk with args:
      contents = 0
  Line 9:
    _ = ()
    Concrete execution of f with args:
      _ = ()
    Concrete execution of Tuple0 with args:
    Abstract execution of g with args:
      _ = ()
    z = (ref'mk 2)
    result = ()
    Property failure, Assertion with:
      z = (ref'mk 2)

