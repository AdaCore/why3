<check_ce:categorization>Categorizations of models:
- Selected model 0: NC
  - Concrete RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 14, characters 26-39)
  - Abstract RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 14, characters 26-39)
- Checked model 1: NC
  - Concrete RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 14, characters 26-39)
  - Abstract RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 14, characters 26-39)
- Checked model 2: NC
  - Concrete RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 14, characters 26-39)
  - Abstract RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 14, characters 26-39)
File "bench/check-ce/lists.mlw", line 14, characters 26-39:
Goal g1.
Prover result is: Unknown (unknown) (3 steps).
The program does not comply to the verification goal, for example during the
  following execution:
File int.mlw:
  Line 13:
    Constant zero initialization
    zero = 0
  Line 14:
    Constant one initialization
    one = 1
File lists.mlw:
  Line 14:
    l = Nil
    l = Nil
    Execution of main function `g1'goal` with env:
      l = Nil
      zero = 0
      one = 1
Unknown location:
    Normal execution of function `Tuple0` with args:
File lists.mlw:
  Line 14:
    Property failure at postcondition of `g1'goal` with:
      l = Nil

<check_ce:categorization>Categorizations of models:
- Checked model 0: BAD_CE
  - Concrete RAC: NORMAL
  - Abstract RAC: NORMAL
- Checked model 1: BAD_CE
  - Concrete RAC: NORMAL
  - Abstract RAC: NORMAL
- Selected model 2: BAD_CE
  - Concrete RAC: NORMAL
  - Abstract RAC: NORMAL
File "bench/check-ce/lists.mlw", line 16, characters 26-39:
Goal g2.
Prover result is: Unknown (unknown) (3 steps).
Sorry, we don't have a good counterexample for you :(


Warning: Error while checking function definition type l: Type mismatch when interpreting (Function ()
                                  (Smultiple (Isymbol list) (Sint))
                                  (Var (Qannotident (Isymbol (Sprover @!k1)) (Smultiple (Isymbol list) (Sint))))) with lsymbol l


Warning: Error while checking function definition type l: Type mismatch when interpreting (Function ()
                                  (Smultiple (Isymbol list) (Sint))
                                  (Var (Qannotident (Isymbol (Sprover @!k28)) (Smultiple (Isymbol list) (Sint))))) with lsymbol l


Warning: Error while checking function definition type Cons_proj_1: Type mismatch when interpreting (Function ((arg_0 (Smultiple (Isymbol list) (Sint))))
                                  (Sint)
                                  (Cint {value=0; verbatim=0)) with lsymbol Cons_proj_12


Warning: Error while checking function definition type Cons: Type mismatch when interpreting (Function ((arg_0 (Sint))
                                  (arg_1 (Smultiple (Isymbol list) (Sint))))
                                  (Smultiple (Isymbol list) (Sint))
                                  (Ite
                                    (Apply (Qident (Isymbol and)) (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                                    (Cint {value=0; verbatim=0))
                                      (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                        (Var (Qannotident (Isymbol (Sprover @!k26)) (Smultiple (Isymbol list) (Sint))))))
                                    (Var (Qannotident (Isymbol (Sprover @!k14)) (Smultiple (Isymbol list) (Sint))))
                                    (Ite
                                      (Apply (Qident (Isymbol and)) (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                                    (Cint {value=0; verbatim=0))
                                        (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                          (Var (Qannotident (Isymbol (Sprover @!k14)) (Smultiple (Isymbol list) (Sint))))))
                                      (Var (Qannotident (Isymbol (Sprover @!k13)) (Smultiple (Isymbol list) (Sint))))
                                      (Ite
                                        (Apply (Qident (Isymbol and)) 
                                          (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                            (Cint {value=0; verbatim=0))
                                          (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                            (Var (Qannotident (Isymbol (Sprover @!k13)) (Smultiple (Isymbol list) (Sint))))))
                                        (Var (Qannotident (Isymbol (Sprover @!k15)) (Smultiple (Isymbol list) (Sint))))
                                        (Ite
                                          (Apply (Qident (Isymbol and)) 
                                            (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                              (Cint {value=0; verbatim=0))
                                            (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                              (Var (Qannotident (Isymbol (Sprover @!k15)) (Smultiple (Isymbol list) (Sint))))))
                                          (Var (Qannotident (Isymbol (Sprover @!k16)) (Smultiple (Isymbol list) (Sint))))
                                          (Ite
                                            (Apply (Qident (Isymbol and)) 
                                              (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                (Cint {value=0; verbatim=0))
                                              (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                                (Var (Qannotident (Isymbol (Sprover @!k16)) (Smultiple (Isymbol list) (Sint))))))
                                            (Var (Qannotident (Isymbol (Sprover @!k17)) (Smultiple (Isymbol list) (Sint))))
                                            (Ite
                                              (Apply (Qident (Isymbol and)) 
                                                (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                  (Cint {value=0; verbatim=0))
                                                (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                                  (Var (Qannotident (Isymbol (Sprover @!k17)) (Smultiple (Isymbol list) (Sint))))))
                                              (Var (Qannotident (Isymbol (Sprover @!k18)) (Smultiple (Isymbol list) (Sint))))
                                              (Ite
                                                (Apply (Qident (Isymbol and)) 
                                                  (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                    (Cint {value=0; verbatim=0))
                                                  (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                                    (Var (Qannotident (Isymbol (Sprover @!k18)) (Smultiple (Isymbol list) (Sint))))))
                                                (Var (Qannotident (Isymbol (Sprover @!k19)) (Smultiple (Isymbol list) (Sint))))
                                                (Ite
                                                  (Apply (Qident (Isymbol and)) 
                                                    (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                      (Cint {value=0; verbatim=0))
                                                    (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                                      (Var (Qannotident (Isymbol (Sprover @!k19)) (Smultiple (Isymbol list) (Sint))))))
                                                  (Var (Qannotident (Isymbol (Sprover @!k20)) (Smultiple (Isymbol list) (Sint))))
                                                  (Ite
                                                    (Apply (Qident (Isymbol and)) 
                                                      (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                        (Cint {value=0; verbatim=0))
                                                      (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                                        (Var (Qannotident (Isymbol (Sprover @!k20)) (Smultiple (Isymbol list) (Sint))))))
                                                    (Var (Qannotident (Isymbol (Sprover @!k21)) (Smultiple (Isymbol list) (Sint))))
                                                    (Ite
                                                      (Apply (Qident (Isymbol and)) 
                                                        (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_0)))
                                                          (Cint {value=0; verbatim=0))
                                                        (Apply (Qident (Isymbol =)) (Var (Qident (Isymbol arg_1)))
                                                          (Var (Qannotident (Isymbol (Sprover @!k22)) (Smultiple (Isymbol list) (Sint))))))
                                                      (Var (Qannotident (Isymbol (Sprover @!k23)) (Smultiple (Isymbol list) (Sint))))
                                                      (Var (Qannotident (Isymbol (Sprover @!k22)) (Smultiple (Isymbol list) (Sint))))))))))))))) with lsymbol Cons


<check_ce:categorization>Categorizations of models:
- Selected model 0: NC
  - Concrete RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 25, characters 30-43)
  - Abstract RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 25, characters 30-43)
- Checked model 1: NC
  - Concrete RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 25, characters 30-43)
  - Abstract RAC: FAILURE (postcondition at "bench/check-ce/lists.mlw", line 25, characters 30-43)
File "bench/check-ce/lists.mlw", line 25, characters 30-43:
Goal g1.
Prover result is: Unknown (unknown) (1 steps).
The program does not comply to the verification goal, for example during the
  following execution:
File int.mlw:
  Line 13:
    Constant zero initialization
    zero = 0
  Line 14:
    Constant one initialization
    one = 1
File lists.mlw:
  Line 25:
    l = Nil1
    l = Nil1
    Execution of main function `g1'goal` with env:
      l = Nil1
      zero = 0
      one = 1
Unknown location:
    Normal execution of function `Tuple0` with args:
File lists.mlw:
  Line 25:
    Property failure at postcondition of `g1'goal3` with:
      l = Nil1

Warning: Error while checking function definition type l: Type mismatch when interpreting (Function ()
                                  (Smultiple (Isymbol list) (Sint))
                                  (Var (Qannotident (Isymbol (Sprover @!k1)) (Smultiple (Isymbol list) (Sint))))) with lsymbol l1


Warning: Error while checking function definition type l: Type mismatch when interpreting (Function ()
                                  (Smultiple (Isymbol list) (Sint))
                                  (Var (Qannotident (Isymbol (Sprover @!k7)) (Smultiple (Isymbol list) (Sint))))) with lsymbol l1


Warning: Error while checking function definition type Cons_proj_1: Type mismatch when interpreting (Function ((arg_0 (Smultiple (Isymbol list) (Sint))))
                                  (Sint)
                                  (Cint {value=0; verbatim=0)) with lsymbol Cons_proj_12


Warning: Error while checking function definition type Cons: Type mismatch when interpreting (Function ((arg_0 (Sint))
                                  (arg_1 (Smultiple (Isymbol list) (Sint))))
                                  (Smultiple (Isymbol list) (Sint))
                                  (Var (Qannotident (Isymbol (Sprover @!k5)) (Smultiple (Isymbol list) (Sint))))) with lsymbol Cons


<check_ce:categorization>Categorizations of models:
- Checked model 0: BAD_CE
  - Concrete RAC: NORMAL
  - Abstract RAC: NORMAL
- Selected model 1: BAD_CE
  - Concrete RAC: NORMAL
  - Abstract RAC: NORMAL
File "bench/check-ce/lists.mlw", line 27, characters 30-43:
Goal g2.
Prover result is: Unknown (unknown) (1 steps).
Sorry, we don't have a good counterexample for you :(


