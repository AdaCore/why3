File "bench/check-ce/func_call5.mlw", line 8, characters 12-24:
Goal Postcondition from verification condition g1'vc.
Prover result is: valid (0.01s, 33 steps).

File "bench/check-ce/func_call5.mlw", line 13, characters 10-14:
Goal Precondition from verification condition f1'vc.
Prover result is: valid (0.00s, 83 steps).

<check-ce>Check model 0 ("bench/check-ce/func_call5.mlw", line 14, characters 11-17)
<check-ce>VALUE for result "bench/check-ce/func_call5.mlw", line 13, characters 10-14 not in ce-model, taking default (ref'mk 0)
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File func_call5.mlw:
                Line 11:
                  x = 1
                  Concrete execution of f1 with args:
                    x = 1
                Line 13:
                  Concrete execution of g1 with args:
                    y = 1
                Line 9:
                  Concrete execution of ref with args:
                    contents = 1
                  Concrete execution of ref'mk with args:
                    contents = 1
                Line 11:
                  Execution of main function terminated normally
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/func_call5.mlw", line 8, characters 12-24)
              File func_call5.mlw:
                Line 11:
                  x = 1
                  Concrete execution of f1 with args:
                    x = 1
                Line 13:
                  Abstract execution of g1 with args:
                    y = 1
                  result = (ref'mk 0)
                Line 8:
                  Execution got stuck, Assume postcondition of g1 with:
                    y = 1
                    result = (ref'mk 0)
<check-ce>Check model 1 ("bench/check-ce/func_call5.mlw", line 14, characters 11-17)
<check-ce>VALUE for result "bench/check-ce/func_call5.mlw", line 13, characters 10-14 not in ce-model, taking default (ref'mk 0)
<check-ce>Model 1:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File func_call5.mlw:
                Line 11:
                  x = 1
                  Concrete execution of f1 with args:
                    x = 1
                Line 13:
                  Concrete execution of g1 with args:
                    y = 1
                Line 9:
                  Concrete execution of ref with args:
                    contents = 1
                  Concrete execution of ref'mk with args:
                    contents = 1
                Line 11:
                  Execution of main function terminated normally
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/func_call5.mlw", line 8, characters 12-24)
              File func_call5.mlw:
                Line 11:
                  x = 1
                  Concrete execution of f1 with args:
                    x = 1
                Line 13:
                  Abstract execution of g1 with args:
                    y = 1
                  result = (ref'mk 0)
                Line 8:
                  Execution got stuck, Assume postcondition of g1 with:
                    y = 1
                    result = (ref'mk 0)
<check-ce>Check model 2 ("bench/check-ce/func_call5.mlw", line 14, characters 11-17)
<check-ce>VALUE for result "bench/check-ce/func_call5.mlw", line 13, characters 10-14 not in ce-model, taking default (ref'mk 0)
<check-ce>Model 2:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File func_call5.mlw:
                Line 11:
                  x = 1
                  Concrete execution of f1 with args:
                    x = 1
                Line 13:
                  Concrete execution of g1 with args:
                    y = 1
                Line 9:
                  Concrete execution of ref with args:
                    contents = 1
                  Concrete execution of ref'mk with args:
                    contents = 1
                Line 11:
                  Execution of main function terminated normally
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/func_call5.mlw", line 8, characters 12-24)
              File func_call5.mlw:
                Line 11:
                  x = 1
                  Concrete execution of f1 with args:
                    x = 1
                Line 13:
                  Abstract execution of g1 with args:
                    y = 1
                  result = (ref'mk 0)
                Line 8:
                  Execution got stuck, Assume postcondition of g1 with:
                    y = 1
                    result = (ref'mk 0)
<check-ce>Models:
- Checked model 0 (Concrete: bad model, Abstract: bad model)
    Summary: Sorry, we don't have a good counterexample for you :(
- Checked model 1 (Concrete: bad model, Abstract: bad model)
    Summary: Sorry, we don't have a good counterexample for you :(
- Selected model 2 (Concrete: bad model, Abstract: bad model)
    Summary: Sorry, we don't have a good counterexample for you :(
File "bench/check-ce/func_call5.mlw", line 14, characters 11-17:
Goal Assertion from verification condition f1'vc.
Prover result is: timeout (1.00s, 7595665 steps).
Sorry, we don't have a good counterexample for you :(


<check-ce>Model 0 is empty
<check-ce>Check model 1 ("bench/check-ce/func_call5.mlw", line 20, characters 11-17)
<check-ce>VALUE for result "bench/check-ce/func_call5.mlw", line 19, characters 10-14 not in ce-model, taking default (ref'mk 0)
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File func_call5.mlw:
                Line 18:
                  x = 0
                  Concrete execution of f2 with args:
                    x = 0
                Line 19:
                  Concrete execution of g2 with args:
                    y = 0
                Line 16:
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                  Concrete execution of ref with args:
                    contents = 1
                  Concrete execution of ref'mk with args:
                    contents = 1
                Line 20:
                  Property failure, Assertion with:
                    x = 0
                    z = (ref'mk 1)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/func_call5.mlw", line 16, characters 18-29)
              File func_call5.mlw:
                Line 18:
                  x = 0
                  Concrete execution of f2 with args:
                    x = 0
                Line 19:
                  Abstract execution of g2 with args:
                    y = 0
                  result = (ref'mk 0)
                Line 16:
                  Execution got stuck, Assume postcondition of g2 with:
                    y = 0
                    result = (ref'mk 0)
<check-ce>Check model 2 ("bench/check-ce/func_call5.mlw", line 20, characters 11-17)
<check-ce>VALUE for result "bench/check-ce/func_call5.mlw", line 19, characters 10-14 not in ce-model, taking default (ref'mk 0)
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File func_call5.mlw:
                Line 18:
                  x = 0
                  Concrete execution of f2 with args:
                    x = 0
                Line 19:
                  Concrete execution of g2 with args:
                    y = 0
                Line 16:
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 1
                  Concrete execution of ref with args:
                    contents = 1
                  Concrete execution of ref'mk with args:
                    contents = 1
                Line 20:
                  Property failure, Assertion with:
                    x = 0
                    z = (ref'mk 1)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/func_call5.mlw", line 16, characters 18-29)
              File func_call5.mlw:
                Line 18:
                  x = 0
                  Concrete execution of f2 with args:
                    x = 0
                Line 19:
                  Abstract execution of g2 with args:
                    y = 0
                  result = (ref'mk 0)
                Line 16:
                  Execution got stuck, Assume postcondition of g2 with:
                    y = 0
                    result = (ref'mk 0)
<check-ce>Models:
- Selected model 1 (Concrete: good model, Abstract: bad model)
    Summary: The program does not comply to the verification goal
- Checked model 2 (Concrete: good model, Abstract: bad model)
    Summary: The program does not comply to the verification goal
File "bench/check-ce/func_call5.mlw", line 20, characters 11-17:
Goal Assertion from verification condition f2'vc.
Prover result is: timeout (1.00s, 7870558 steps).
The program does not comply to the verification goal, for example during the
following execution:
File func_call5.mlw:
  Line 18:
    x = 0
    Concrete execution of f2 with args:
      x = 0
  Line 19:
    Concrete execution of g2 with args:
      y = 0
  Line 16:
    Concrete execution of (+) with args:
      _ = 0
      _ = 1
    Concrete execution of ref with args:
      contents = 1
    Concrete execution of ref'mk with args:
      contents = 1
  Line 20:
    Property failure, Assertion with:
      x = 0
      z = (ref'mk 1)

