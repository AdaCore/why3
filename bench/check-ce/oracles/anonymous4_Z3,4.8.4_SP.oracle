<check-ce>Check model 0 ("bench/check-ce/anonymous4.mlw", line 8, characters 13-23)
<check-ce>Checking model:
          File anonymous4.mlw:
            Line 6:
              y = {"type": "Integer", "val": "0"}
            Line 8:
              y = {"type": "Integer", "val": "0"}
            Line 9:
              result = {"type": "Integer", "val": "1"}
<check-ce>Giant-step RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous4.mlw", line 6, characters 7-8: 0
<rac-values>No value for return value of call to f at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5 at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5
<check-ce>Normal RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous4.mlw", line 6, characters 7-8: 0
<check-ce>Result of checking model 0: BAD_CE
            - Concrete RAC: STUCK (failure in assumption at "bench/check-ce/anonymous4.mlw", line 4, characters 35-40)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File anonymous4.mlw:
                Line 6:
                  y = 0
                  y = 0
                  Execution of main function `g` with env:
                    y = 0
                    zero = 0
                    one = 1
                Line 9:
                  Normal execution of function `f` with args:
                    x = 0
                  Normal execution of function `(@)` with args:
                    u = (fun y -> assume { y > 0 };
                           y + x) with x = 0
                    u = 0
                Line 4:
                  Execution got stuck at assumption with:
                    y = 0
            - Abstract RAC: INCOMPLETE (terminated because missing value for return value of call to f at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5)
              
<check-ce>Check model 1 ("bench/check-ce/anonymous4.mlw", line 8, characters 13-23)
<check-ce>Checking model:
          File anonymous4.mlw:
            Line 6:
              y = {"type": "Integer", "val": "0"}
            Line 8:
              y = {"type": "Integer", "val": "0"}
            Line 9:
              result = {"type": "Integer", "val": "0"}
              result =
                {"type": "Array",
                 "val":
                  [{"indice": {"type": "Integer", "val": "-61"},
                    "value": {"type": "Integer", "val": "-61"}},
                   {"indice": {"type": "Integer", "val": "-60"},
                    "value": {"type": "Integer", "val": "-60"}},
                   {"indice": {"type": "Integer", "val": "-59"},
                    "value": {"type": "Integer", "val": "-59"}},
                   {"indice": {"type": "Integer", "val": "-58"},
                    "value": {"type": "Integer", "val": "-58"}},
                   {"indice": {"type": "Integer", "val": "-57"},
                    "value": {"type": "Integer", "val": "-57"}},
                   {"indice": {"type": "Integer", "val": "-56"},
                    "value": {"type": "Integer", "val": "-56"}},
                   {"indice": {"type": "Integer", "val": "-55"},
                    "value": {"type": "Integer", "val": "-55"}},
                   {"indice": {"type": "Integer", "val": "-54"},
                    "value": {"type": "Integer", "val": "-54"}},
                   {"indice": {"type": "Integer", "val": "-53"},
                    "value": {"type": "Integer", "val": "-53"}},
                   {"indice": {"type": "Integer", "val": "-52"},
                    "value": {"type": "Integer", "val": "-52"}},
                   {"indice": {"type": "Integer", "val": "-51"},
                    "value": {"type": "Integer", "val": "-51"}},
                   {"indice": {"type": "Integer", "val": "-50"},
                    "value": {"type": "Integer", "val": "-50"}},
                   {"indice": {"type": "Integer", "val": "-49"},
                    "value": {"type": "Integer", "val": "-49"}},
                   {"indice": {"type": "Integer", "val": "-48"},
                    "value": {"type": "Integer", "val": "-48"}},
                   {"indice": {"type": "Integer", "val": "-47"},
                    "value": {"type": "Integer", "val": "-47"}},
                   {"indice": {"type": "Integer", "val": "-46"},
                    "value": {"type": "Integer", "val": "-46"}},
                   {"indice": {"type": "Integer", "val": "-45"},
                    "value": {"type": "Integer", "val": "-45"}},
                   {"indice": {"type": "Integer", "val": "-44"},
                    "value": {"type": "Integer", "val": "-44"}},
                   {"indice": {"type": "Integer", "val": "-43"},
                    "value": {"type": "Integer", "val": "-43"}},
                   {"indice": {"type": "Integer", "val": "-42"},
                    "value": {"type": "Integer", "val": "-42"}},
                   {"indice": {"type": "Integer", "val": "-41"},
                    "value": {"type": "Integer", "val": "-41"}},
                   {"indice": {"type": "Integer", "val": "-40"},
                    "value": {"type": "Integer", "val": "-40"}},
                   {"indice": {"type": "Integer", "val": "-39"},
                    "value": {"type": "Integer", "val": "-39"}},
                   {"indice": {"type": "Integer", "val": "-38"},
                    "value": {"type": "Integer", "val": "-38"}},
                   {"indice": {"type": "Integer", "val": "-37"},
                    "value": {"type": "Integer", "val": "-37"}},
                   {"indice": {"type": "Integer", "val": "-36"},
                    "value": {"type": "Integer", "val": "-36"}},
                   {"indice": {"type": "Integer", "val": "-35"},
                    "value": {"type": "Integer", "val": "-35"}},
                   {"indice": {"type": "Integer", "val": "-34"},
                    "value": {"type": "Integer", "val": "-34"}},
                   {"indice": {"type": "Integer", "val": "-33"},
                    "value": {"type": "Integer", "val": "-33"}},
                   {"indice": {"type": "Integer", "val": "-31"},
                    "value": {"type": "Integer", "val": "-31"}},
                   {"indice": {"type": "Integer", "val": "-30"},
                    "value": {"type": "Integer", "val": "-30"}},
                   {"indice": {"type": "Integer", "val": "-29"},
                    "value": {"type": "Integer", "val": "-29"}},
                   {"indice": {"type": "Integer", "val": "-28"},
                    "value": {"type": "Integer", "val": "-28"}},
                   {"indice": {"type": "Integer", "val": "-27"},
                    "value": {"type": "Integer", "val": "-27"}},
                   {"indice": {"type": "Integer", "val": "-26"},
                    "value": {"type": "Integer", "val": "-26"}},
                   {"indice": {"type": "Integer", "val": "-25"},
                    "value": {"type": "Integer", "val": "-25"}},
                   {"indice": {"type": "Integer", "val": "-24"},
                    "value": {"type": "Integer", "val": "-24"}},
                   {"indice": {"type": "Integer", "val": "-23"},
                    "value": {"type": "Integer", "val": "-23"}},
                   {"indice": {"type": "Integer", "val": "-22"},
                    "value": {"type": "Integer", "val": "-22"}},
                   {"indice": {"type": "Integer", "val": "-21"},
                    "value": {"type": "Integer", "val": "-21"}},
                   {"indice": {"type": "Integer", "val": "-20"},
                    "value": {"type": "Integer", "val": "-20"}},
                   {"indice": {"type": "Integer", "val": "-19"},
                    "value": {"type": "Integer", "val": "-19"}},
                   {"indice": {"type": "Integer", "val": "-18"},
                    "value": {"type": "Integer", "val": "-18"}},
                   {"indice": {"type": "Integer", "val": "-17"},
                    "value": {"type": "Integer", "val": "-17"}},
                   {"indice": {"type": "Integer", "val": "-16"},
                    "value": {"type": "Integer", "val": "-16"}},
                   {"indice": {"type": "Integer", "val": "-15"},
                    "value": {"type": "Integer", "val": "-15"}},
                   {"indice": {"type": "Integer", "val": "-14"},
                    "value": {"type": "Integer", "val": "-14"}},
                   {"indice": {"type": "Integer", "val": "-13"},
                    "value": {"type": "Integer", "val": "-13"}},
                   {"indice": {"type": "Integer", "val": "-12"},
                    "value": {"type": "Integer", "val": "-12"}},
                   {"indice": {"type": "Integer", "val": "-11"},
                    "value": {"type": "Integer", "val": "-11"}},
                   {"indice": {"type": "Integer", "val": "-10"},
                    "value": {"type": "Integer", "val": "-10"}},
                   {"indice": {"type": "Integer", "val": "-9"},
                    "value": {"type": "Integer", "val": "-9"}},
                   {"indice": {"type": "Integer", "val": "-8"},
                    "value": {"type": "Integer", "val": "-8"}},
                   {"indice": {"type": "Integer", "val": "-7"},
                    "value": {"type": "Integer", "val": "-7"}},
                   {"indice": {"type": "Integer", "val": "-6"},
                    "value": {"type": "Integer", "val": "-6"}},
                   {"indice": {"type": "Integer", "val": "-5"},
                    "value": {"type": "Integer", "val": "-5"}},
                   {"indice": {"type": "Integer", "val": "-4"},
                    "value": {"type": "Integer", "val": "-4"}},
                   {"indice": {"type": "Integer", "val": "-3"},
                    "value": {"type": "Integer", "val": "-3"}},
                   {"indice": {"type": "Integer", "val": "-2"},
                    "value": {"type": "Integer", "val": "-2"}},
                   {"indice": {"type": "Integer", "val": "-1"},
                    "value": {"type": "Integer", "val": "-1"}},
                   {"indice": {"type": "Integer", "val": "0"},
                    "value": {"type": "Integer", "val": "0"}},
                   {"indice": {"type": "Integer", "val": "1"},
                    "value": {"type": "Integer", "val": "1"}},
                   {"indice": {"type": "Integer", "val": "4"},
                    "value": {"type": "Integer", "val": "4"}},
                   {"indice": {"type": "Integer", "val": "5"},
                    "value": {"type": "Integer", "val": "5"}},
                   {"indice": {"type": "Integer", "val": "14"},
                    "value": {"type": "Integer", "val": "14"}},
                   {"indice": {"type": "Integer", "val": "15"},
                    "value": {"type": "Integer", "val": "15"}},
                   {"indice": {"type": "Integer", "val": "84"},
                    "value": {"type": "Integer", "val": "84"}},
                   {"indice": {"type": "Integer", "val": "6082"},
                    "value": {"type": "Integer", "val": "6082"}},
                   {"others": {"type": "Integer", "val": "-32"}}]}
<check-ce>Giant-step RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous4.mlw", line 6, characters 7-8: 0
<rac-values>Value from model for return value of call to f at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5 at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5: [|
                                                                    (-61) -> (-61);
                                                                    (-60) -> (-60);
                                                                    (-59) -> (-59);
                                                                    (-58) -> (-58);
                                                                    (-57) -> (-57);
                                                                    (-56) -> (-56);
                                                                    (-55) -> (-55);
                                                                    (-54) -> (-54);
                                                                    (-53) -> (-53);
                                                                    (-52) -> (-52);
                                                                    (-51) -> (-51);
                                                                    (-50) -> (-50);
                                                                    (-49) -> (-49);
                                                                    (-48) -> (-48);
                                                                    (-47) -> (-47);
                                                                    (-46) -> (-46);
                                                                    (-45) -> (-45);
                                                                    (-44) -> (-44);
                                                                    (-43) -> (-43);
                                                                    (-42) -> (-42);
                                                                    (-41) -> (-41);
                                                                    (-40) -> (-40);
                                                                    (-39) -> (-39);
                                                                    (-38) -> (-38);
                                                                    (-37) -> (-37);
                                                                    (-36) -> (-36);
                                                                    (-35) -> (-35);
                                                                    (-34) -> (-34);
                                                                    (-33) -> (-33);
                                                                    (-31) -> (-31);
                                                                    (-30) -> (-30);
                                                                    (-29) -> (-29);
                                                                    (-28) -> (-28);
                                                                    (-27) -> (-27);
                                                                    (-26) -> (-26);
                                                                    (-25) -> (-25);
                                                                    (-24) -> (-24);
                                                                    (-23) -> (-23);
                                                                    (-22) -> (-22);
                                                                    (-21) -> (-21);
                                                                    (-20) -> (-20);
                                                                    (-19) -> (-19);
                                                                    (-18) -> (-18);
                                                                    (-17) -> (-17);
                                                                    (-16) -> (-16);
                                                                    (-15) -> (-15);
                                                                    (-14) -> (-14);
                                                                    (-13) -> (-13);
                                                                    (-12) -> (-12);
                                                                    (-11) -> (-11);
                                                                    (-10) -> (-10);
                                                                    (-9) -> (-9);
                                                                    (-8) -> (-8);
                                                                    (-7) -> (-7);
                                                                    (-6) -> (-6);
                                                                    (-5) -> (-5);
                                                                    (-4) -> (-4);
                                                                    (-3) -> (-3);
                                                                    (-2) -> (-2);
                                                                    (-1) -> (-1);
                                                                    0 -> 0;
                                                                    1 -> 1;
                                                                    4 -> 4;
                                                                    5 -> 5;
                                                                    14 -> 14;
                                                                    15 -> 15;
                                                                    84 -> 84;
                                                                    6082 -> 6082; _ -> (-32)|]
<check-ce>Normal RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous4.mlw", line 6, characters 7-8: 0
<check-ce>Result of checking model 1: BAD_CE
            - Concrete RAC: STUCK (failure in assumption at "bench/check-ce/anonymous4.mlw", line 4, characters 35-40)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File anonymous4.mlw:
                Line 6:
                  y = 0
                  y = 0
                  Execution of main function `g` with env:
                    y = 0
                    zero = 0
                    one = 1
                Line 9:
                  Normal execution of function `f` with args:
                    x = 0
                  Normal execution of function `(@)` with args:
                    u = (fun y -> assume { y > 0 };
                           y + x) with x = 0
                    u = 0
                Line 4:
                  Execution got stuck at assumption with:
                    y = 0
            - Abstract RAC: INCOMPLETE (terminated because Postcondition of `f` cannot be evaluated)
              
<check-ce-summary>Results:
- Checked model 0: BAD_CE
  - Concrete RAC: STUCK (failure in assumption at "bench/check-ce/anonymous4.mlw", line 4, characters 35-40)
  - Abstract RAC: INCOMPLETE (terminated because missing value for return value of call to f at "bench/check-ce/anonymous4.mlw", line 9, characters 2-5)
- Selected model 1: BAD_CE
  - Concrete RAC: STUCK (failure in assumption at "bench/check-ce/anonymous4.mlw", line 4, characters 35-40)
  - Abstract RAC: INCOMPLETE (terminated because Postcondition of `f` cannot be evaluated)
File "bench/check-ce/anonymous4.mlw", line 8, characters 13-23:
Sub-goal Postcondition of goal g'vc.
Prover result is: Unknown (unknown) (2.11s, 7500000 steps).
Sorry, we don't have a good counterexample for you :(


