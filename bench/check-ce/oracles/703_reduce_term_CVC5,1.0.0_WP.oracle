Warning: term reduction aborted (term size blows up from 289 to 491721, after 278 steps).

Warning: term reduction aborted (takes more than 1024 steps).

Warning: term reduction aborted (term size blows up from 289 to 491721, after 278 steps).

Warning: term reduction aborted (takes more than 1024 steps).

Warning: term reduction aborted (term size blows up from 289 to 491721, after 278 steps).

Warning: term reduction aborted (takes more than 1024 steps).

Warning: term reduction aborted (term size blows up from 289 to 491721, after 278 steps).

Warning: term reduction aborted (takes more than 1024 steps).

<check-ce-categorization>Categorizations of models:
- Checked model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `local` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `local` cannot be evaluated)
- Selected model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `local` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `local` cannot be evaluated)
File "bench/check-ce/703_reduce_term.mlw", line 391, characters 4-55:
Sub-goal Precondition of goal def'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because Precondition of `local` cannot be evaluated):
File bv.mlw:
  Line 638:
    lsr :
      t
      ->
      int
      ->
      t = fun bOUND_VARIABLE_29159 bOUND_VARIABLE_29160 ->
           #b00000000000000000000000000000000
    nth :
      t
      ->
      int
      ->
      bool = fun bOUND_VARIABLE_29155 bOUND_VARIABLE_29156 -> false
    nth_bv :
      t
      ->
      t
      ->
      bool = fun bOUND_VARIABLE_29166 bOUND_VARIABLE_29167 -> false
    of_int : int -> t = [|_ => #b00000000000000000000000000000000|]
File 703_reduce_term.mlw:
  Line 5:
    base : t = #b11111111111111111111111111111111
  Line 13:
    oor :
      t
      ->
      t
      ->
      t = fun _arg_1 _arg_2 -> #b00000000000000000000000000000000
  Line 16:
    oor__function_guard :
      t
      ->
      t
      ->
      t
      ->
      t = fun _arg_1 _arg_2 _arg_3 -> #b00000000000000000000000000000000
  Line 24:
    oand :
      t
      ->
      t
      ->
      t = fun _arg_1 _arg_2 -> #b00000000000000000000000000000000
  Line 27:
    oand__function_guard :
      t
      ->
      t
      ->
      t
      ->
      t = fun _arg_1 _arg_2 _arg_3 -> #b11111111111111111111111111111110
  Line 391:
    base : t = #b11111111111111111111111111111111

