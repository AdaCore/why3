File bench/check-ce/jlamp_array_mono.mlw:
Goal array'vc.
Prover result is: Valid.

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
File "bench/check-ce/jlamp_array_mono.mlw", line 48, characters 4-16:
Sub-goal Index in array bounds of goal f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because Precondition of `f` cannot be evaluated):
File jlamp_array_mono.mlw:
  Line 8:
    to_int :
      t
      ->
      int = fun (x!0:t) ->
             if x!0 = (epsilon x:t. to_int x = 2) then 2
             else if x!0 = (epsilon x:t. to_int x = 3) then 3 else 2
  Line 11:
    two : t = epsilon x:t. to_int x = 2
  Line 14:
    three : t = epsilon x:t. to_int x = 3
  Line 19:
    length :
      array
      ->
      int = fun (x!0:array) ->
             if x!0 = (epsilon x:array. x.length = 0) then 0 else 0
  Line 22:
    mixfix [] :
      array
      ->
      int
      ->
      t = fun (x!0:array) (x!1:int) -> epsilon x:t. to_int x = 3
  Line 28:
    mixfix [<-] :
      array
      ->
      int
      ->
      t
      ->
      array = fun (x!0:array) (x!1:int) (x!2:t) -> epsilon x:array.
               x.length = 0
  Line 33:
    a : array = epsilon x:array. x.length = 0
  Line 44:
    a : array = epsilon x:array. x.length = 0
  Line 48:
    a : array = epsilon x:array. x.length = 0

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `f` cannot be evaluated)
File "bench/check-ce/jlamp_array_mono.mlw", line 47, characters 14-27:
Sub-goal Postcondition of goal f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because Precondition of `f` cannot be evaluated):
File jlamp_array_mono.mlw:
  Line 8:
    to_int :
      t
      ->
      int = fun (x!0:t) ->
             if x!0 = (epsilon x:t. to_int x = 2) then 2
             else if x!0 = (epsilon x:t. to_int x = 3) then 3 else 2
  Line 11:
    two : t = epsilon x:t. to_int x = 2
  Line 14:
    three : t = epsilon x:t. to_int x = 3
  Line 19:
    length :
      array
      ->
      int = fun (x!0:array) ->
             if x!0 = (epsilon x:array. x.length = 4) then 4
             else if x!0 = (epsilon x:array. x.length = 4) then 4 else 4
  Line 28:
    mixfix [<-] :
      array
      ->
      int
      ->
      t
      ->
      array = fun (x!0:array) (x!1:int) (x!2:t) ->
               if (x!0 = (epsilon x:array. x.length = 4) /\ x!1 = 42) /\
                  x!2 = (epsilon x:t. to_int x = 2)
               then epsilon x:array. x.length = 4 else epsilon x:array.
               x.length = 4
  Line 32:
    a : array = epsilon x:array. x.length = 4
  Line 34:
    a : array = epsilon x:array. x.length = 4
  Line 44:
    a : array = epsilon x:array. x.length = 4
  Line 47:
    a : array = epsilon x:array. x.length = 4
    three : t = epsilon x:t. to_int x = 3
  Line 48:
    a : array = epsilon x:array. x.length = 4

File "bench/check-ce/jlamp_array_mono.mlw", line 54, characters 4-16:
Sub-goal Index in array bounds of goal g'vc.
Prover result is: Valid.

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `g` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `g` cannot be evaluated)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `g` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `g` cannot be evaluated)
File "bench/check-ce/jlamp_array_mono.mlw", line 53, characters 14-27:
Sub-goal Postcondition of goal g'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because Precondition of `g` cannot be evaluated):
File jlamp_array_mono.mlw:
  Line 8:
    to_int :
      t
      ->
      int = fun (x!0:t) ->
             if x!0 = (epsilon x:t. to_int x = 2) then 2
             else if x!0 = (epsilon x:t. to_int x = 3) then 3 else 2
  Line 11:
    two : t = epsilon x:t. to_int x = 2
  Line 14:
    three : t = epsilon x:t. to_int x = 3
  Line 19:
    length :
      array
      ->
      int = fun (x!0:array) ->
             if x!0 = (epsilon x:array. x.length = 43) then 43
             else if x!0 = (epsilon x:array. x.length = 43) then 43 else 43
  Line 28:
    mixfix [<-] :
      array
      ->
      int
      ->
      t
      ->
      array = fun (x!0:array) (x!1:int) (x!2:t) ->
               if (x!0 = (epsilon x:array. x.length = 43) /\ x!1 = 42) /\
                  x!2 = (epsilon x:t. to_int x = 2)
               then epsilon x:array. x.length = 43 else epsilon x:array.
               x.length = 43
  Line 32:
    a : array = epsilon x:array. x.length = 43
  Line 34:
    a : array = epsilon x:array. x.length = 43
  Line 50:
    a : array = epsilon x:array. x.length = 43
  Line 53:
    a : array = epsilon x:array. x.length = 43
    three : t = epsilon x:t. to_int x = 3
  Line 54:
    a : array = epsilon x:array. x.length = 43

File "bench/check-ce/jlamp_array_mono.mlw", line 60, characters 4-16:
Sub-goal Index in array bounds of goal h'vc.
Prover result is: Valid.

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `h` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `h` cannot be evaluated)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `h` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `h` cannot be evaluated)
File "bench/check-ce/jlamp_array_mono.mlw", line 59, characters 14-27:
Sub-goal Postcondition of goal h'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because Precondition of `h` cannot be evaluated):
File jlamp_array_mono.mlw:
  Line 8:
    to_int :
      t
      ->
      int = fun (x!0:t) ->
             if x!0 = (epsilon x:t. to_int x = 2) then 2
             else if x!0 = (epsilon x:t. to_int x = 3) then 3 else 2
  Line 11:
    two : t = epsilon x:t. to_int x = 2
  Line 14:
    three : t = epsilon x:t. to_int x = 3
  Line 19:
    length :
      array
      ->
      int = fun (x!0:array) ->
             if x!0 = (epsilon x:array. x.length = 43) then 43
             else if x!0 = (epsilon x:array. x.length = 43) then 43 else 43
  Line 28:
    mixfix [<-] :
      array
      ->
      int
      ->
      t
      ->
      array = fun (x!0:array) (x!1:int) (x!2:t) ->
               if (x!0 = (epsilon x:array. x.length = 43) /\ x!1 = 17) /\
                  x!2 = (epsilon x:t. to_int x = 2)
               then epsilon x:array. x.length = 43 else epsilon x:array.
               x.length = 43
  Line 32:
    a : array = epsilon x:array. x.length = 43
  Line 34:
    a : array = epsilon x:array. x.length = 43
  Line 56:
    a : array = epsilon x:array. x.length = 43
  Line 59:
    a : array = epsilon x:array. x.length = 43
    three : t = epsilon x:t. to_int x = 3
  Line 60:
    a : array = epsilon x:array. x.length = 43

