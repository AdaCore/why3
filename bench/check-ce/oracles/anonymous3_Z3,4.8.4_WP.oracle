<check-ce>Check model 0 ("bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
<check-ce>Checking model:
          File anonymous3.mlw:
            Line 6:
              y = {"type": "Integer", "val": "0"}
            Line 7:
              y = {"type": "Integer", "val": "0"}
            Line 8:
              result = {"type": "Integer", "val": "1"}
<check-ce>Giant-step RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous3.mlw", line 6, characters 7-8: 0
<rac-values>No value for return value of call to f at "bench/check-ce/anonymous3.mlw", line 8, characters 2-5 at "bench/check-ce/anonymous3.mlw", line 8, characters 2-5
<check-ce>Normal RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous3.mlw", line 6, characters 7-8: 0
<check-ce>Result of checking model 0: NC
            - Concrete RAC: FAILURE (postcondition at "bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File anonymous3.mlw:
                Line 6:
                  y = 0
                  y = 0
                  Execution of main function `g` with env:
                    y = 0
                    zero = 0
                    one = 1
                Line 8:
                  Normal execution of function `f` with args:
                    x = 0
                  Normal execution of function `(@)` with args:
                    u = (fun y -> y + x) with x = 0
                    u = 0
                Line 4:
                  Normal execution of function `(+)` with args:
                    _ = 0
                    _ = 0
                Line 7:
                  Property failure at postcondition of `g` with:
                    y = 0
                    result = 0
            - Abstract RAC: INCOMPLETE (terminated because missing value for return value of call to f at "bench/check-ce/anonymous3.mlw", line 8, characters 2-5)
              
<check-ce>Check model 1 ("bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
<check-ce>Checking model:
          File anonymous3.mlw:
            Line 6:
              y = {"type": "Integer", "val": "-1186"}
            Line 7:
              y = {"type": "Integer", "val": "-1186"}
            Line 8:
              result = {"type": "Integer", "val": "-2372"}
              result =
                {"type": "Array",
                 "val":
                  [{"indice": {"type": "Integer", "val": "-7173"},
                    "value": {"type": "Integer", "val": "-8359"}},
                   {"indice": {"type": "Integer", "val": "-7172"},
                    "value": {"type": "Integer", "val": "-8358"}},
                   {"indice": {"type": "Integer", "val": "-7171"},
                    "value": {"type": "Integer", "val": "-8357"}},
                   {"indice": {"type": "Integer", "val": "-7170"},
                    "value": {"type": "Integer", "val": "-8356"}},
                   {"indice": {"type": "Integer", "val": "-7169"},
                    "value": {"type": "Integer", "val": "-8355"}},
                   {"indice": {"type": "Integer", "val": "-7168"},
                    "value": {"type": "Integer", "val": "-8354"}},
                   {"indice": {"type": "Integer", "val": "-7167"},
                    "value": {"type": "Integer", "val": "-8353"}},
                   {"indice": {"type": "Integer", "val": "-7166"},
                    "value": {"type": "Integer", "val": "-8352"}},
                   {"indice": {"type": "Integer", "val": "-7165"},
                    "value": {"type": "Integer", "val": "-8351"}},
                   {"indice": {"type": "Integer", "val": "-7164"},
                    "value": {"type": "Integer", "val": "-8350"}},
                   {"indice": {"type": "Integer", "val": "-7163"},
                    "value": {"type": "Integer", "val": "-8349"}},
                   {"indice": {"type": "Integer", "val": "-7162"},
                    "value": {"type": "Integer", "val": "-8348"}},
                   {"indice": {"type": "Integer", "val": "-7161"},
                    "value": {"type": "Integer", "val": "-8347"}},
                   {"indice": {"type": "Integer", "val": "-7160"},
                    "value": {"type": "Integer", "val": "-8346"}},
                   {"indice": {"type": "Integer", "val": "-7159"},
                    "value": {"type": "Integer", "val": "-8345"}},
                   {"indice": {"type": "Integer", "val": "-7158"},
                    "value": {"type": "Integer", "val": "-8344"}},
                   {"indice": {"type": "Integer", "val": "-7157"},
                    "value": {"type": "Integer", "val": "-8343"}},
                   {"indice": {"type": "Integer", "val": "-7156"},
                    "value": {"type": "Integer", "val": "-8342"}},
                   {"indice": {"type": "Integer", "val": "-7155"},
                    "value": {"type": "Integer", "val": "-8341"}},
                   {"indice": {"type": "Integer", "val": "-7154"},
                    "value": {"type": "Integer", "val": "-8340"}},
                   {"indice": {"type": "Integer", "val": "-7153"},
                    "value": {"type": "Integer", "val": "-8339"}},
                   {"indice": {"type": "Integer", "val": "-7152"},
                    "value": {"type": "Integer", "val": "-8338"}},
                   {"indice": {"type": "Integer", "val": "-7151"},
                    "value": {"type": "Integer", "val": "-8337"}},
                   {"indice": {"type": "Integer", "val": "-7150"},
                    "value": {"type": "Integer", "val": "-8336"}},
                   {"indice": {"type": "Integer", "val": "-7149"},
                    "value": {"type": "Integer", "val": "-8335"}},
                   {"indice": {"type": "Integer", "val": "-7148"},
                    "value": {"type": "Integer", "val": "-8334"}},
                   {"indice": {"type": "Integer", "val": "-7147"},
                    "value": {"type": "Integer", "val": "-8333"}},
                   {"indice": {"type": "Integer", "val": "-7146"},
                    "value": {"type": "Integer", "val": "-8332"}},
                   {"indice": {"type": "Integer", "val": "-7145"},
                    "value": {"type": "Integer", "val": "-8331"}},
                   {"indice": {"type": "Integer", "val": "-7144"},
                    "value": {"type": "Integer", "val": "-8330"}},
                   {"indice": {"type": "Integer", "val": "-7143"},
                    "value": {"type": "Integer", "val": "-8329"}},
                   {"indice": {"type": "Integer", "val": "-7142"},
                    "value": {"type": "Integer", "val": "-8328"}},
                   {"indice": {"type": "Integer", "val": "-7141"},
                    "value": {"type": "Integer", "val": "-8327"}},
                   {"indice": {"type": "Integer", "val": "-7139"},
                    "value": {"type": "Integer", "val": "-8325"}},
                   {"indice": {"type": "Integer", "val": "-7138"},
                    "value": {"type": "Integer", "val": "-8324"}},
                   {"indice": {"type": "Integer", "val": "-7137"},
                    "value": {"type": "Integer", "val": "-8323"}},
                   {"indice": {"type": "Integer", "val": "-7136"},
                    "value": {"type": "Integer", "val": "-8322"}},
                   {"indice": {"type": "Integer", "val": "-7135"},
                    "value": {"type": "Integer", "val": "-8321"}},
                   {"indice": {"type": "Integer", "val": "-7134"},
                    "value": {"type": "Integer", "val": "-8320"}},
                   {"indice": {"type": "Integer", "val": "-7133"},
                    "value": {"type": "Integer", "val": "-8319"}},
                   {"indice": {"type": "Integer", "val": "-7132"},
                    "value": {"type": "Integer", "val": "-8318"}},
                   {"indice": {"type": "Integer", "val": "-7131"},
                    "value": {"type": "Integer", "val": "-8317"}},
                   {"indice": {"type": "Integer", "val": "-7130"},
                    "value": {"type": "Integer", "val": "-8316"}},
                   {"indice": {"type": "Integer", "val": "-7129"},
                    "value": {"type": "Integer", "val": "-8315"}},
                   {"indice": {"type": "Integer", "val": "-7128"},
                    "value": {"type": "Integer", "val": "-8314"}},
                   {"indice": {"type": "Integer", "val": "-7127"},
                    "value": {"type": "Integer", "val": "-8313"}},
                   {"indice": {"type": "Integer", "val": "-7126"},
                    "value": {"type": "Integer", "val": "-8312"}},
                   {"indice": {"type": "Integer", "val": "-7125"},
                    "value": {"type": "Integer", "val": "-8311"}},
                   {"indice": {"type": "Integer", "val": "-7124"},
                    "value": {"type": "Integer", "val": "-8310"}},
                   {"indice": {"type": "Integer", "val": "-7123"},
                    "value": {"type": "Integer", "val": "-8309"}},
                   {"indice": {"type": "Integer", "val": "-7122"},
                    "value": {"type": "Integer", "val": "-8308"}},
                   {"indice": {"type": "Integer", "val": "-7121"},
                    "value": {"type": "Integer", "val": "-8307"}},
                   {"indice": {"type": "Integer", "val": "-7120"},
                    "value": {"type": "Integer", "val": "-8306"}},
                   {"indice": {"type": "Integer", "val": "-7119"},
                    "value": {"type": "Integer", "val": "-8305"}},
                   {"indice": {"type": "Integer", "val": "-7118"},
                    "value": {"type": "Integer", "val": "-8304"}},
                   {"indice": {"type": "Integer", "val": "-7117"},
                    "value": {"type": "Integer", "val": "-8303"}},
                   {"indice": {"type": "Integer", "val": "-7116"},
                    "value": {"type": "Integer", "val": "-8302"}},
                   {"indice": {"type": "Integer", "val": "-7115"},
                    "value": {"type": "Integer", "val": "-8301"}},
                   {"indice": {"type": "Integer", "val": "-7114"},
                    "value": {"type": "Integer", "val": "-8300"}},
                   {"indice": {"type": "Integer", "val": "-7113"},
                    "value": {"type": "Integer", "val": "-8299"}},
                   {"indice": {"type": "Integer", "val": "-7112"},
                    "value": {"type": "Integer", "val": "-8298"}},
                   {"indice": {"type": "Integer", "val": "-7111"},
                    "value": {"type": "Integer", "val": "-8297"}},
                   {"indice": {"type": "Integer", "val": "-7110"},
                    "value": {"type": "Integer", "val": "-8296"}},
                   {"indice": {"type": "Integer", "val": "-7109"},
                    "value": {"type": "Integer", "val": "-8295"}},
                   {"indice": {"type": "Integer", "val": "-7108"},
                    "value": {"type": "Integer", "val": "-8294"}},
                   {"indice": {"type": "Integer", "val": "-7107"},
                    "value": {"type": "Integer", "val": "-8293"}},
                   {"indice": {"type": "Integer", "val": "-7106"},
                    "value": {"type": "Integer", "val": "-8292"}},
                   {"indice": {"type": "Integer", "val": "-7105"},
                    "value": {"type": "Integer", "val": "-8291"}},
                   {"indice": {"type": "Integer", "val": "-7104"},
                    "value": {"type": "Integer", "val": "-8290"}},
                   {"indice": {"type": "Integer", "val": "-7103"},
                    "value": {"type": "Integer", "val": "-8289"}},
                   {"indice": {"type": "Integer", "val": "-7102"},
                    "value": {"type": "Integer", "val": "-8288"}},
                   {"indice": {"type": "Integer", "val": "-7101"},
                    "value": {"type": "Integer", "val": "-8287"}},
                   {"indice": {"type": "Integer", "val": "-7100"},
                    "value": {"type": "Integer", "val": "-8286"}},
                   {"indice": {"type": "Integer", "val": "-7099"},
                    "value": {"type": "Integer", "val": "-8285"}},
                   {"indice": {"type": "Integer", "val": "-7098"},
                    "value": {"type": "Integer", "val": "-8284"}},
                   {"indice": {"type": "Integer", "val": "-7097"},
                    "value": {"type": "Integer", "val": "-8283"}},
                   {"indice": {"type": "Integer", "val": "-1774"},
                    "value": {"type": "Integer", "val": "-2960"}},
                   {"indice": {"type": "Integer", "val": "-1773"},
                    "value": {"type": "Integer", "val": "-2959"}},
                   {"indice": {"type": "Integer", "val": "-1772"},
                    "value": {"type": "Integer", "val": "-2958"}},
                   {"indice": {"type": "Integer", "val": "-1771"},
                    "value": {"type": "Integer", "val": "-2957"}},
                   {"indice": {"type": "Integer", "val": "-1770"},
                    "value": {"type": "Integer", "val": "-2956"}},
                   {"indice": {"type": "Integer", "val": "-1769"},
                    "value": {"type": "Integer", "val": "-2955"}},
                   {"indice": {"type": "Integer", "val": "-1768"},
                    "value": {"type": "Integer", "val": "-2954"}},
                   {"indice": {"type": "Integer", "val": "-1189"},
                    "value": {"type": "Integer", "val": "-2375"}},
                   {"indice": {"type": "Integer", "val": "-1188"},
                    "value": {"type": "Integer", "val": "-2374"}},
                   {"indice": {"type": "Integer", "val": "-1187"},
                    "value": {"type": "Integer", "val": "-2373"}},
                   {"indice": {"type": "Integer", "val": "-1186"},
                    "value": {"type": "Integer", "val": "-2372"}},
                   {"indice": {"type": "Integer", "val": "-1185"},
                    "value": {"type": "Integer", "val": "-2371"}},
                   {"indice": {"type": "Integer", "val": "-1"},
                    "value": {"type": "Integer", "val": "-1187"}},
                   {"indice": {"type": "Integer", "val": "0"},
                    "value": {"type": "Integer", "val": "-1186"}},
                   {"indice": {"type": "Integer", "val": "15"},
                    "value": {"type": "Integer", "val": "-1171"}},
                   {"indice": {"type": "Integer", "val": "17"},
                    "value": {"type": "Integer", "val": "-1169"}},
                   {"indice": {"type": "Integer", "val": "84"},
                    "value": {"type": "Integer", "val": "-1102"}},
                   {"indice": {"type": "Integer", "val": "92"},
                    "value": {"type": "Integer", "val": "-1094"}},
                   {"indice": {"type": "Integer", "val": "2956"},
                    "value": {"type": "Integer", "val": "1770"}},
                   {"indice": {"type": "Integer", "val": "9948"},
                    "value": {"type": "Integer", "val": "8762"}},
                   {"indice": {"type": "Integer", "val": "9949"},
                    "value": {"type": "Integer", "val": "8763"}},
                   {"others": {"type": "Integer", "val": "-8326"}}]}
<check-ce>Giant-step RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous3.mlw", line 6, characters 7-8: (-1186)
<rac-values>Value from model for return value of call to f at "bench/check-ce/anonymous3.mlw", line 8, characters 2-5 at "bench/check-ce/anonymous3.mlw", line 8, characters 2-5: [|
                                                                    (-7173) -> (-8359);
                                                                    (-7172) -> (-8358);
                                                                    (-7171) -> (-8357);
                                                                    (-7170) -> (-8356);
                                                                    (-7169) -> (-8355);
                                                                    (-7168) -> (-8354);
                                                                    (-7167) -> (-8353);
                                                                    (-7166) -> (-8352);
                                                                    (-7165) -> (-8351);
                                                                    (-7164) -> (-8350);
                                                                    (-7163) -> (-8349);
                                                                    (-7162) -> (-8348);
                                                                    (-7161) -> (-8347);
                                                                    (-7160) -> (-8346);
                                                                    (-7159) -> (-8345);
                                                                    (-7158) -> (-8344);
                                                                    (-7157) -> (-8343);
                                                                    (-7156) -> (-8342);
                                                                    (-7155) -> (-8341);
                                                                    (-7154) -> (-8340);
                                                                    (-7153) -> (-8339);
                                                                    (-7152) -> (-8338);
                                                                    (-7151) -> (-8337);
                                                                    (-7150) -> (-8336);
                                                                    (-7149) -> (-8335);
                                                                    (-7148) -> (-8334);
                                                                    (-7147) -> (-8333);
                                                                    (-7146) -> (-8332);
                                                                    (-7145) -> (-8331);
                                                                    (-7144) -> (-8330);
                                                                    (-7143) -> (-8329);
                                                                    (-7142) -> (-8328);
                                                                    (-7141) -> (-8327);
                                                                    (-7139) -> (-8325);
                                                                    (-7138) -> (-8324);
                                                                    (-7137) -> (-8323);
                                                                    (-7136) -> (-8322);
                                                                    (-7135) -> (-8321);
                                                                    (-7134) -> (-8320);
                                                                    (-7133) -> (-8319);
                                                                    (-7132) -> (-8318);
                                                                    (-7131) -> (-8317);
                                                                    (-7130) -> (-8316);
                                                                    (-7129) -> (-8315);
                                                                    (-7128) -> (-8314);
                                                                    (-7127) -> (-8313);
                                                                    (-7126) -> (-8312);
                                                                    (-7125) -> (-8311);
                                                                    (-7124) -> (-8310);
                                                                    (-7123) -> (-8309);
                                                                    (-7122) -> (-8308);
                                                                    (-7121) -> (-8307);
                                                                    (-7120) -> (-8306);
                                                                    (-7119) -> (-8305);
                                                                    (-7118) -> (-8304);
                                                                    (-7117) -> (-8303);
                                                                    (-7116) -> (-8302);
                                                                    (-7115) -> (-8301);
                                                                    (-7114) -> (-8300);
                                                                    (-7113) -> (-8299);
                                                                    (-7112) -> (-8298);
                                                                    (-7111) -> (-8297);
                                                                    (-7110) -> (-8296);
                                                                    (-7109) -> (-8295);
                                                                    (-7108) -> (-8294);
                                                                    (-7107) -> (-8293);
                                                                    (-7106) -> (-8292);
                                                                    (-7105) -> (-8291);
                                                                    (-7104) -> (-8290);
                                                                    (-7103) -> (-8289);
                                                                    (-7102) -> (-8288);
                                                                    (-7101) -> (-8287);
                                                                    (-7100) -> (-8286);
                                                                    (-7099) -> (-8285);
                                                                    (-7098) -> (-8284);
                                                                    (-7097) -> (-8283);
                                                                    (-1774) -> (-2960);
                                                                    (-1773) -> (-2959);
                                                                    (-1772) -> (-2958);
                                                                    (-1771) -> (-2957);
                                                                    (-1770) -> (-2956);
                                                                    (-1769) -> (-2955);
                                                                    (-1768) -> (-2954);
                                                                    (-1189) -> (-2375);
                                                                    (-1188) -> (-2374);
                                                                    (-1187) -> (-2373);
                                                                    (-1186) -> (-2372);
                                                                    (-1185) -> (-2371);
                                                                    (-1) -> (-1187);
                                                                    0 -> (-1186);
                                                                    15 -> (-1171);
                                                                    17 -> (-1169);
                                                                    84 -> (-1102);
                                                                    92 -> (-1094);
                                                                    2956 -> 1770;
                                                                    9948 -> 8762;
                                                                    9949 -> 8763; _ -> (-8326)|]
<check-ce>Normal RAC
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Value from model for parameter `y` at "bench/check-ce/anonymous3.mlw", line 6, characters 7-8: (-1186)
<check-ce>Result of checking model 1: NC
            - Concrete RAC: FAILURE (postcondition at "bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File anonymous3.mlw:
                Line 6:
                  y = (-1186)
                  y = (-1186)
                  Execution of main function `g` with env:
                    y = (-1186)
                    zero = 0
                    one = 1
                Line 8:
                  Normal execution of function `f` with args:
                    x = (-1186)
                  Normal execution of function `(@)` with args:
                    u = (fun y -> y + x) with x = (-1186)
                    u = (-1186)
                Line 4:
                  Normal execution of function `(+)` with args:
                    _ = (-1186)
                    _ = (-1186)
                Line 7:
                  Property failure at postcondition of `g` with:
                    y = (-1186)
                    result = (-2372)
            - Abstract RAC: INCOMPLETE (terminated because Postcondition of `f` cannot be evaluated)
              
<check-ce-summary>Results:
- Selected model 0: NC
  - Concrete RAC: FAILURE (postcondition at "bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
  - Abstract RAC: INCOMPLETE (terminated because missing value for return value of call to f at "bench/check-ce/anonymous3.mlw", line 8, characters 2-5)
- Checked model 1: NC
  - Concrete RAC: FAILURE (postcondition at "bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
  - Abstract RAC: INCOMPLETE (terminated because Postcondition of `f` cannot be evaluated)
File "bench/check-ce/anonymous3.mlw", line 7, characters 12-22:
Sub-goal Postcondition of goal g'vc.
Prover result is: Unknown (unknown) (2.24s, 7500000 steps).
The program does not comply to the verification goal, for example during the
  following execution:
File int.mlw:
  Line 13:
    Constant zero initialization
    zero = 0
  Line 14:
    Constant one initialization
    one = 1
File anonymous3.mlw:
  Line 6:
    y = 0
    y = 0
    Execution of main function `g` with env:
      y = 0
      zero = 0
      one = 1
  Line 8:
    Normal execution of function `f` with args:
      x = 0
    Normal execution of function `(@)` with args:
      u = (fun y -> y + x) with x = 0
      u = 0
  Line 4:
    Normal execution of function `(+)` with args:
      _ = 0
      _ = 0
  Line 7:
    Property failure at postcondition of `g` with:
      y = 0
      result = 0

