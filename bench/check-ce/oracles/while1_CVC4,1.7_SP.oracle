File "bench/check-ce/while1.mlw", line 10, characters 18-24:
Formula `Loop invariant init' from verification condition f'vc.
Prover result is: valid (0.05s, 1177 steps).

File "bench/check-ce/while1.mlw", line 9, characters 16-21:
Formula `Loop variant decrease' from verification condition f'vc.
Prover result is: valid (0.03s, 1830 steps).

File "bench/check-ce/while1.mlw", line 10, characters 18-24:
Formula `Loop invariant preservation' from verification condition f'vc.
Prover result is: valid (0.02s, 1763 steps).

<check-ce>Check model 0 ("bench/check-ce/while1.mlw", line 5, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/while1.mlw", line 6, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/while1.mlw", line 7, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>                        VALUE from ce-model: (ref'mk 0)
<check-ce>                        VALUE from ce-model: (ref'mk 0)
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File while1.mlw:
                Line 4:
                  _ = ()
                  Concrete execution of f
                Line 6:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 7:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 11:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 12:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 11:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 12:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 14:
                  Concrete execution of contents
                Line 4:
                  Execution of main function terminated normally
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/while1.mlw", line 8, characters 4-113)
              File while1.mlw:
                Line 4:
                  _ = ()
                  Concrete execution of f
                Line 6:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 7:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 8:
                  x = (ref'mk 0)
                  i = (ref'mk 0)
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 11:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 12:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 8:
                  Execution got stucked: Cannot continue after arbitrary iteration
<check-ce>Check model 1 ("bench/check-ce/while1.mlw", line 5, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/while1.mlw", line 6, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/while1.mlw", line 7, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>                          VALUE from ce-model: (ref'mk 0)
<check-ce>                          VALUE from ce-model: (ref'mk 2)
<check-ce>Model 1:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File while1.mlw:
                Line 4:
                  _ = ()
                  Concrete execution of f
                Line 6:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 7:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 11:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 12:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 11:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 12:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 14:
                  Concrete execution of contents
                Line 4:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File while1.mlw:
                Line 4:
                  _ = ()
                  Concrete execution of f
                Line 6:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 7:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 8:
                  x = (ref'mk 0)
                  i = (ref'mk 2)
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 14:
                  Concrete execution of contents
                Line 5:
                  Property failure: Postcondition of f failed
<check-ce>Check model 2 ("bench/check-ce/while1.mlw", line 5, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/while1.mlw", line 6, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/while1.mlw", line 7, characters 16-17 not in ce-model, taking default (ref'mk 0)
<check-ce>                            VALUE from ce-model: (ref'mk 0)
<check-ce>                            VALUE from ce-model: (ref'mk 2)
<check-ce>Model 2:
            - Concrete: bad model (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File while1.mlw:
                Line 4:
                  _ = ()
                  Concrete execution of f
                Line 6:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 7:
                  Concrete execution of ref
                  Concrete execution of ref'mk
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 11:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 12:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 11:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 12:
                  Concrete execution of contents
                  Concrete execution of infix +
                Line 8:
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 14:
                  Concrete execution of contents
                Line 4:
                  Execution of main function terminated normally
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File while1.mlw:
                Line 4:
                  _ = ()
                  Concrete execution of f
                Line 6:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 7:
                  Abstract execution of ref
                  result = (ref'mk 0)
                Line 8:
                  x = (ref'mk 0)
                  i = (ref'mk 2)
                  Concrete execution of contents
                  Concrete execution of infix <
                Line 14:
                  Concrete execution of contents
                Line 5:
                  Property failure: Postcondition of f failed
<check-ce>Models:
          - Checked model 0: bad model/bad model -> Sorry, we don't have a
                                                    good counterexample for
                                                    you :(
          - Checked model 1: bad model/good model -> The contracts of some
                                                     function or loop are
                                                     underspecified, for
                                                     example during the
                                                     following execution:
          - Checked model 2: bad model/good model -> The contracts of some
                                                     function or loop are
                                                     underspecified, for
                                                     example during the
                                                     following execution:
File "bench/check-ce/while1.mlw", line 5, characters 12-22:
Formula `Postcondition' from verification condition f'vc.
Prover result is: unknown (unknown + incomplete) (0.05s, 6577 steps).
The contracts of some function or loop are underspecified, for example during
the following execution:
File while1.mlw:
  Line 4:
    _ = ()
    Concrete execution of f
  Line 6:
    Abstract execution of ref
    result = (ref'mk 0)
  Line 7:
    Abstract execution of ref
    result = (ref'mk 0)
  Line 8:
    x = (ref'mk 0)
    i = (ref'mk 2)
    Concrete execution of contents
    Concrete execution of infix <
  Line 14:
    Concrete execution of contents
  Line 5:
    Property failure: Postcondition of f failed

