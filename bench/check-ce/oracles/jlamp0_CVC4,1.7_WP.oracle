<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 12, characters 13-26)
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC, with the counterexample model cannot continue after "bench/check-ce/jlamp0.mlw", line 9, characters 15-45)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 0)
                  c = (ref'mk 0)
                Line 9:
                  Execution got stuck, Precondition of p1 with:
                    a = (ref'mk 0)
                    b = (ref'mk 0)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/jlamp0.mlw", line 9, characters 15-45)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 0)
                  c = (ref'mk 0)
                Line 9:
                  Execution got stuck, Precondition of p1 with:
                    a = (ref'mk 0)
                    b = (ref'mk 0)
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 12, characters 13-26)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 11, characters 14-16 not in ce-model, taking default 0
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 3)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 3)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 0)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 3
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 3
                Line 12:
                  Property failure, Assertion with:
                    a = (ref'mk 3)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after )
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Abstract execution of (!) with args:
                    r = (ref'mk 3)
                  result = 0
              Unknown location:
                  Execution got stuck, Assume postcondition of (!) with:
                    r = (ref'mk 3)
                    result = 0
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 12, characters 13-26)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 11, characters 14-16 not in ce-model, taking default 0
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 3)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 3)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 0)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 0)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 3
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 3
                Line 12:
                  Property failure, Assertion with:
                    a = (ref'mk 3)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after )
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Abstract execution of (!) with args:
                    r = (ref'mk 3)
                  result = 0
              Unknown location:
                  Execution got stuck, Assume postcondition of (!) with:
                    r = (ref'mk 3)
                    result = 0
<check-ce>Models:
          - Checked model 0: bad model/bad model -> Sorry, we don't have a
                                                    good counterexample for
                                                    you :(
          - Checked model 1: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 2: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
File "bench/check-ce/jlamp0.mlw", line 12, characters 13-26:
Formula `Assertion' from verification condition p1'vc.
Prover result is: unknown (unknown + incomplete) (0.08s, 6821 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 8:
    a = (ref'mk 0)
    b = (ref'mk 3)
    c = (ref'mk 0)
    Concrete execution of p1 with args:
      b = (ref'mk 3)
  Line 11:
    Concrete execution of (!) with args:
      r = (ref'mk 3)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 3)
File jlamp0.mlw:
  Line 11:
    Concrete execution of (!) with args:
      r = (ref'mk 0)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 0)
File jlamp0.mlw:
  Line 11:
    Concrete execution of (+) with args:
      _ = 0
      _ = 3
    Concrete execution of (:=) with args:
      r = (ref'mk 0)
      v = 3
  Line 12:
    Property failure, Assertion with:
      a = (ref'mk 3)

<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 10, characters 15-29)
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC, with the counterexample model cannot continue after "bench/check-ce/jlamp0.mlw", line 9, characters 15-45)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 0)
                  c = (ref'mk 0)
                Line 9:
                  Execution got stuck, Precondition of p1 with:
                    a = (ref'mk 0)
                    b = (ref'mk 0)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/jlamp0.mlw", line 9, characters 15-45)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 0)
                  c = (ref'mk 0)
                Line 9:
                  Execution got stuck, Precondition of p1 with:
                    a = (ref'mk 0)
                    b = (ref'mk 0)
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 10, characters 15-29)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 11, characters 14-16 not in ce-model, taking default 0
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 7)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 3)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 3)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 7)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 7)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (+) with args:
                    _ = 7
                    _ = 3
                  Concrete execution of (:=) with args:
                    r = (ref'mk 7)
                    v = 10
                Line 13:
                  Concrete execution of (!) with args:
                    r = (ref'mk 10)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 10)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (>=) with args:
                    x = 10
                    y = 10
                  Concrete execution of (!) with args:
                    r = (ref'mk 10)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 10)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (-) with args:
                    x = 10
                    y = 1
              File int.mlw:
                Line 23:
                  Concrete execution of (-_) with args:
                    _ = 1
                  Concrete execution of (+) with args:
                    _ = 10
                    _ = (-1)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 10)
                    v = 9
                Line 10:
                  Property failure, Postcondition of p1 with:
                    a = (ref'mk 9)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after )
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 7)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Abstract execution of (!) with args:
                    r = (ref'mk 3)
                  result = 0
              Unknown location:
                  Execution got stuck, Assume postcondition of (!) with:
                    r = (ref'mk 3)
                    result = 0
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 10, characters 15-29)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 11, characters 14-16 not in ce-model, taking default 0
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 7)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 3)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 3)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 7)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 7)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (+) with args:
                    _ = 7
                    _ = 3
                  Concrete execution of (:=) with args:
                    r = (ref'mk 7)
                    v = 10
                Line 13:
                  Concrete execution of (!) with args:
                    r = (ref'mk 10)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 10)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (>=) with args:
                    x = 10
                    y = 10
                  Concrete execution of (!) with args:
                    r = (ref'mk 10)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 10)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (-) with args:
                    x = 10
                    y = 1
              File int.mlw:
                Line 23:
                  Concrete execution of (-_) with args:
                    _ = 1
                  Concrete execution of (+) with args:
                    _ = 10
                    _ = (-1)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 10)
                    v = 9
                Line 10:
                  Property failure, Postcondition of p1 with:
                    a = (ref'mk 9)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after )
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 7)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Abstract execution of (!) with args:
                    r = (ref'mk 3)
                  result = 0
              Unknown location:
                  Execution got stuck, Assume postcondition of (!) with:
                    r = (ref'mk 3)
                    result = 0
<check-ce>Models:
          - Checked model 0: bad model/bad model -> Sorry, we don't have a
                                                    good counterexample for
                                                    you :(
          - Checked model 1: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 2: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
File "bench/check-ce/jlamp0.mlw", line 10, characters 15-29:
Formula `Postcondition' from verification condition p1'vc.
Prover result is: unknown (unknown + incomplete) (0.05s, 7064 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 8:
    a = (ref'mk 7)
    b = (ref'mk 3)
    c = (ref'mk 0)
    Concrete execution of p1 with args:
      b = (ref'mk 3)
  Line 11:
    Concrete execution of (!) with args:
      r = (ref'mk 3)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 3)
File jlamp0.mlw:
  Line 11:
    Concrete execution of (!) with args:
      r = (ref'mk 7)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 7)
File jlamp0.mlw:
  Line 11:
    Concrete execution of (+) with args:
      _ = 7
      _ = 3
    Concrete execution of (:=) with args:
      r = (ref'mk 7)
      v = 10
  Line 13:
    Concrete execution of (!) with args:
      r = (ref'mk 10)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 10)
File jlamp0.mlw:
  Line 13:
    Concrete execution of (>=) with args:
      x = 10
      y = 10
    Concrete execution of (!) with args:
      r = (ref'mk 10)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 10)
File jlamp0.mlw:
  Line 13:
    Concrete execution of (-) with args:
      x = 10
      y = 1
File int.mlw:
  Line 23:
    Concrete execution of (-_) with args:
      _ = 1
    Concrete execution of (+) with args:
      _ = 10
      _ = (-1)
File jlamp0.mlw:
  Line 13:
    Concrete execution of (:=) with args:
      r = (ref'mk 10)
      v = 9
  Line 10:
    Property failure, Postcondition of p1 with:
      a = (ref'mk 9)

<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 10, characters 15-29)
<check-ce>Model 0:
            - Concrete: bad model (Concrete RAC, with the counterexample model cannot continue after "bench/check-ce/jlamp0.mlw", line 9, characters 15-45)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 0)
                  c = (ref'mk 0)
                Line 9:
                  Execution got stuck, Precondition of p1 with:
                    a = (ref'mk 0)
                    b = (ref'mk 0)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "bench/check-ce/jlamp0.mlw", line 9, characters 15-45)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 0)
                  b = (ref'mk 0)
                  c = (ref'mk 0)
                Line 9:
                  Execution got stuck, Precondition of p1 with:
                    a = (ref'mk 0)
                    b = (ref'mk 0)
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 10, characters 15-29)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 11, characters 14-16 not in ce-model, taking default 0
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 2)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 3)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 3)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 2)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 2)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (+) with args:
                    _ = 2
                    _ = 3
                  Concrete execution of (:=) with args:
                    r = (ref'mk 2)
                    v = 5
                Line 13:
                  Concrete execution of (!) with args:
                    r = (ref'mk 5)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 5)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (>=) with args:
                    x = 5
                    y = 10
                  Concrete execution of Tuple0 with args:
                Line 10:
                  Property failure, Postcondition of p1 with:
                    a = (ref'mk 5)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after )
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 2)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Abstract execution of (!) with args:
                    r = (ref'mk 3)
                  result = 0
              Unknown location:
                  Execution got stuck, Assume postcondition of (!) with:
                    r = (ref'mk 3)
                    result = 0
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 10, characters 15-29)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 11, characters 14-16 not in ce-model, taking default 0
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 2)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 3)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 3)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (!) with args:
                    r = (ref'mk 2)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 2)
              File jlamp0.mlw:
                Line 11:
                  Concrete execution of (+) with args:
                    _ = 2
                    _ = 3
                  Concrete execution of (:=) with args:
                    r = (ref'mk 2)
                    v = 5
                Line 13:
                  Concrete execution of (!) with args:
                    r = (ref'mk 5)
              File ref.mlw:
                Line 18:
                  Concrete execution of contents with args:
                    arg = (ref'mk 5)
              File jlamp0.mlw:
                Line 13:
                  Concrete execution of (>=) with args:
                    x = 5
                    y = 10
                  Concrete execution of Tuple0 with args:
                Line 10:
                  Property failure, Postcondition of p1 with:
                    a = (ref'mk 5)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after )
              File jlamp0.mlw:
                Line 8:
                  a = (ref'mk 2)
                  b = (ref'mk 3)
                  c = (ref'mk 0)
                  Concrete execution of p1 with args:
                    b = (ref'mk 3)
                Line 11:
                  Abstract execution of (!) with args:
                    r = (ref'mk 3)
                  result = 0
              Unknown location:
                  Execution got stuck, Assume postcondition of (!) with:
                    r = (ref'mk 3)
                    result = 0
<check-ce>Models:
          - Checked model 0: bad model/bad model -> Sorry, we don't have a
                                                    good counterexample for
                                                    you :(
          - Checked model 1: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 2: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
File "bench/check-ce/jlamp0.mlw", line 10, characters 15-29:
Formula `Postcondition' from verification condition p1'vc.
Prover result is: unknown (unknown + incomplete) (0.05s, 6963 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 8:
    a = (ref'mk 2)
    b = (ref'mk 3)
    c = (ref'mk 0)
    Concrete execution of p1 with args:
      b = (ref'mk 3)
  Line 11:
    Concrete execution of (!) with args:
      r = (ref'mk 3)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 3)
File jlamp0.mlw:
  Line 11:
    Concrete execution of (!) with args:
      r = (ref'mk 2)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 2)
File jlamp0.mlw:
  Line 11:
    Concrete execution of (+) with args:
      _ = 2
      _ = 3
    Concrete execution of (:=) with args:
      r = (ref'mk 2)
      v = 5
  Line 13:
    Concrete execution of (!) with args:
      r = (ref'mk 5)
File ref.mlw:
  Line 18:
    Concrete execution of contents with args:
      arg = (ref'mk 5)
File jlamp0.mlw:
  Line 13:
    Concrete execution of (>=) with args:
      x = 5
      y = 10
    Concrete execution of Tuple0 with args:
  Line 10:
    Property failure, Postcondition of p1 with:
      a = (ref'mk 5)

<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
<check-ce>                      VALUE from ce-model: (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 0:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "WHY3DATA/stdlib/ref.mlw", line 20, characters 39-44)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 0)
                  result = ()
              File ref.mlw:
                Line 20:
                  Execution got stuck, Assume postcondition of (:=) with:
                    r = (ref'mk 0)
                    v = 1
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
<check-ce>                        VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
<check-ce>                          VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Models:
          - Checked model 0: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 1: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
          - Checked model 2: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
File "bench/check-ce/jlamp0.mlw", line 22, characters 18-31:
Formula `Loop invariant init' from verification condition p2'vc.
Prover result is: unknown (unknown + incomplete) (0.05s, 6612 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 17:
    a = (ref'mk 0)
    c = (ref'mk 0)
    _ = ()
    Concrete execution of p2 with args:
      _ = ()
  Line 20:
    Concrete execution of (:=) with args:
      r = (ref'mk 0)
      v = 1
  Line 21:
    Concrete execution of loop
  Line 22:
    Property failure, Loop invariant initialization with:
      c = (ref'mk 1)

File "bench/check-ce/jlamp0.mlw", line 23, characters 18-31:
Formula `Loop invariant init' from verification condition p2'vc.
Prover result is: valid (0.03s, 1612 steps).

<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 24, characters 16-18)
<check-ce>                      VALUE from ce-model: (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 0:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "WHY3DATA/stdlib/ref.mlw", line 20, characters 39-44)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 0)
                  result = ()
              File ref.mlw:
                Line 20:
                  Execution got stuck, Assume postcondition of (:=) with:
                    r = (ref'mk 0)
                    v = 1
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 24, characters 16-18)
<check-ce>                        VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 24, characters 16-18)
<check-ce>                          VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Models:
          - Checked model 0: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 1: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
          - Checked model 2: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
File "bench/check-ce/jlamp0.mlw", line 24, characters 16-18:
Formula `Loop variant decrease' from verification condition p2'vc.
Prover result is: unknown (unknown + incomplete) (0.06s, 7208 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 17:
    a = (ref'mk 0)
    c = (ref'mk 0)
    _ = ()
    Concrete execution of p2 with args:
      _ = ()
  Line 20:
    Concrete execution of (:=) with args:
      r = (ref'mk 0)
      v = 1
  Line 21:
    Concrete execution of loop
  Line 22:
    Property failure, Loop invariant initialization with:
      c = (ref'mk 1)

<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
<check-ce>                      VALUE from ce-model: (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 0:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "WHY3DATA/stdlib/ref.mlw", line 20, characters 39-44)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 0)
                  result = ()
              File ref.mlw:
                Line 20:
                  Execution got stuck, Assume postcondition of (:=) with:
                    r = (ref'mk 0)
                    v = 1
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
<check-ce>                        VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
<check-ce>                          VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC confirms the counter-example)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Models:
          - Checked model 0: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 1: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
          - Checked model 2: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
File "bench/check-ce/jlamp0.mlw", line 22, characters 18-31:
Formula `Loop invariant preservation' from verification condition p2'vc.
Prover result is: unknown (unknown + incomplete) (0.06s, 7157 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 17:
    a = (ref'mk 0)
    c = (ref'mk 0)
    _ = ()
    Concrete execution of p2 with args:
      _ = ()
  Line 20:
    Concrete execution of (:=) with args:
      r = (ref'mk 0)
      v = 1
  Line 21:
    Concrete execution of loop
  Line 22:
    Property failure, Loop invariant initialization with:
      c = (ref'mk 1)

<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 23, characters 18-31)
<check-ce>                      VALUE from ce-model: (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 0:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "WHY3DATA/stdlib/ref.mlw", line 20, characters 39-44)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 0)
                  result = ()
              File ref.mlw:
                Line 20:
                  Execution got stuck, Assume postcondition of (:=) with:
                    r = (ref'mk 0)
                    v = 1
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 23, characters 18-31)
<check-ce>                        VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 23, characters 18-31)
<check-ce>                          VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Models:
          - Checked model 0: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 1: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
          - Checked model 2: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
File "bench/check-ce/jlamp0.mlw", line 23, characters 18-31:
Formula `Loop invariant preservation' from verification condition p2'vc.
Prover result is: unknown (unknown + incomplete) (0.06s, 7230 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 17:
    a = (ref'mk 0)
    c = (ref'mk 0)
    _ = ()
    Concrete execution of p2 with args:
      _ = ()
  Line 20:
    Concrete execution of (:=) with args:
      r = (ref'mk 0)
      v = 1
  Line 21:
    Concrete execution of loop
  Line 22:
    Property failure, Loop invariant initialization with:
      c = (ref'mk 1)

<check-ce>Check model 0 ("bench/check-ce/jlamp0.mlw", line 19, characters 15-28)
<check-ce>                      VALUE from ce-model: (ref'mk 0)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 0:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: bad model (Abstract RAC, with the counterexample model cannot continue after "WHY3DATA/stdlib/ref.mlw", line 20, characters 39-44)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 0)
                  result = ()
              File ref.mlw:
                Line 20:
                  Execution got stuck, Assume postcondition of (:=) with:
                    r = (ref'mk 0)
                    v = 1
<check-ce>Check model 1 ("bench/check-ce/jlamp0.mlw", line 19, characters 15-28)
<check-ce>                        VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Check model 2 ("bench/check-ce/jlamp0.mlw", line 19, characters 15-28)
<check-ce>                          VALUE from ce-model: (ref'mk 1)
<check-ce>VALUE for result "bench/check-ce/jlamp0.mlw", line 20, characters 4-10 not in ce-model, taking default ()
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Concrete execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                Line 21:
                  Concrete execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
            - Abstract: good model (Abstract RAC found a contradiction at different location "bench/check-ce/jlamp0.mlw", line 22, characters 18-31)
              File jlamp0.mlw:
                Line 17:
                  a = (ref'mk 0)
                  c = (ref'mk 0)
                  _ = ()
                  Concrete execution of p2 with args:
                    _ = ()
                Line 20:
                  Abstract execution of (:=) with args:
                    r = (ref'mk 0)
                    v = 1
                  c = (ref'mk 1)
                  result = ()
                Line 21:
                  Abstract execution of loop
                Line 22:
                  Property failure, Loop invariant initialization with:
                    c = (ref'mk 1)
<check-ce>Models:
          - Checked model 0: good model/bad model -> The program does not
                                                     comply to the
                                                     verification goal, for
                                                     example during the
                                                     following execution:
          - Checked model 1: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
          - Checked model 2: good model/good model -> The program does not
                                                      comply to the
                                                      verification goal, for
                                                      example during the
                                                      following execution:
File "bench/check-ce/jlamp0.mlw", line 19, characters 15-28:
Formula `Postcondition' from verification condition p2'vc.
Prover result is: unknown (unknown + incomplete) (0.05s, 6936 steps).
The program does not comply to the verification goal, for example during the
following execution:
File jlamp0.mlw:
  Line 17:
    a = (ref'mk 0)
    c = (ref'mk 0)
    _ = ()
    Concrete execution of p2 with args:
      _ = ()
  Line 20:
    Concrete execution of (:=) with args:
      r = (ref'mk 0)
      v = 1
  Line 21:
    Concrete execution of loop
  Line 22:
    Property failure, Loop invariant initialization with:
      c = (ref'mk 1)

