File bench/check-ce/array_records_mono.mlw:
Goal array_of_records'vc.
Prover result is: Valid.

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 49, characters 45-49:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 49, characters 21-25:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 49, characters 5-81:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 27:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = true; first_val = 3; sec_val = 5});
       length = 0}
    i = -1
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 50, characters 64-68:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    i = -1
  Line 27:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    i = -1

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 50, characters 21-25:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    i = -1
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
  Line 35:
    old a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = -1});
       length = 0}
    i = -1
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 50, characters 5-82:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 27:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 35:
    old a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 51, characters 64-68:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 27:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
  Line 51:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 51, characters 21-25:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 35:
    old a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
  Line 51:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
    result of call at line 51, characters 64-81 = 69 (0X45)
    result of call at line 51, characters 64-68 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 51, characters 5-82:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 27:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 35:
    old a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
  Line 51:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
    result of call at line 51, characters 13-82 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 51, characters 21-30 = true
    result of call at line 51, characters 21-25 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 51, characters 64-81 = 69 (0X45)
    result of call at line 51, characters 64-68 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 52, characters 74-78:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 27:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
  Line 51:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 51, characters 13-82 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 51, characters 21-30 = true
    result of call at line 51, characters 21-25 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 51, characters 64-81 = 69 (0X45)
    result of call at line 51, characters 64-68 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
  Line 52:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 52, characters 41-45:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 26:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 35:
    old a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
  Line 51:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 51, characters 13-82 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 51, characters 21-30 = true
    result of call at line 51, characters 21-25 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 51, characters 64-81 = 69 (0X45)
    result of call at line 51, characters 64-68 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
  Line 52:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
    result of call at line 52, characters 74-91 = 69 (0X45)
    result of call at line 52, characters 74-78 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 52, characters 5-92:
Sub-goal Index in array bounds of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 27:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 33:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 35:
    old a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
  Line 45:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
  Line 49:
    a =
      {elts =
       (-1 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (-1 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
  Line 51:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    result of call at line 51, characters 13-82 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 51, characters 21-30 = true
    result of call at line 51, characters 21-25 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 51, characters 64-81 = 69 (0X45)
    result of call at line 51, characters 64-68 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
  Line 52:
    a =
      {elts =
       (-1 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 2; sec_val = 2});
       length = 0}
    i = -1
    result of call at line 52, characters 13-92 =
      {flag = false; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 52, characters 41-57 = 23 (0X17)
    result of call at line 52, characters 41-45 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 52, characters 74-91 = 69 (0X45)
    result of call at line 52, characters 74-78 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}

File "bench/check-ce/array_records_mono.mlw", line 53, characters 13-35:
Sub-goal Assertion of goal var_overwrite'vc.
Prover result is: Valid.

<check-ce-categorization>Categorizations of models:
- Selected model 0: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
  - Abstract RAC: INCOMPLETE (terminated because cannot import value from model: type with not exactly one constructors array_of_records/0)
- Checked model 1: INCOMPLETE
  - Concrete RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
  - Abstract RAC: INCOMPLETE (terminated because Precondition of `var_overwrite` cannot be evaluated)
File "bench/check-ce/array_records_mono.mlw", line 47, characters 15-36:
Sub-goal Postcondition of goal var_overwrite'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model could not be verified
  (both RAC terminated because cannot import value from model: type with not exactly one constructors array_of_records/0):
File array_records_mono.mlw:
  Line 27:
    a =
      {elts =
       (2 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
    i = 2
  Line 33:
    a =
      {elts =
       (2 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
  Line 35:
    a =
      {elts =
       (2 => {flag = false; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
  Line 45:
    a =
      {elts =
       (2 => {flag = true; first_val = 3; sec_val = 5},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
    i = 2
  Line 47:
    a =
      {elts =
       (2 => {flag = false; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
    i = 2
  Line 49:
    a =
      {elts =
       (2 => {flag = true; first_val = 3; sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
    result of call at line 49, characters 13-81 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 49, characters 21-30 = true
    result of call at line 49, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 5}
    result of call at line 49, characters 45-61 = 3
    result of call at line 49, characters 45-49 =
      {flag = true; first_val = 3; sec_val = 5}
  Line 50:
    a =
      {elts =
       (2 => {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
    result of call at line 50, characters 13-82 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 50, characters 21-30 = true
    result of call at line 50, characters 21-25 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
    result of call at line 50, characters 64-81 = 69 (0X45)
    result of call at line 50, characters 64-68 =
      {flag = true; first_val = 3; sec_val = 69 (0X45)}
  Line 51:
    a =
      {elts =
       (2 => {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
    result of call at line 51, characters 13-82 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 51, characters 21-30 = true
    result of call at line 51, characters 21-25 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
    result of call at line 51, characters 64-81 = 69 (0X45)
    result of call at line 51, characters 64-68 =
      {flag = true; first_val = 42 (0X2A); sec_val = 69 (0X45)}
  Line 52:
    a =
      {elts =
       (2 => {flag = false; first_val = 23 (0X17); sec_val = 69 (0X45)},
       others => {flag = false; first_val = 6; sec_val = 2});
       length = 4}
    result of call at line 52, characters 13-92 =
      {flag = false; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 52, characters 41-57 = 23 (0X17)
    result of call at line 52, characters 41-45 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}
    result of call at line 52, characters 74-91 = 69 (0X45)
    result of call at line 52, characters 74-78 =
      {flag = true; first_val = 23 (0X17); sec_val = 69 (0X45)}

