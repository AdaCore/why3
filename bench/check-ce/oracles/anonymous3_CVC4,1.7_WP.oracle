<check-ce>Check model 0 ("bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/anonymous3.mlw", line 8, characters 2-5 not in ce-model, taking default UNDEFINED
<check-ce>Model 0:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File anonymous3.mlw:
                Line 6:
                  y = 0
                  Concrete execution of g with args:
                    y = 0
                Line 8:
                  Concrete execution of f with args:
                    x = 0
                  Concrete execution of (@) with args:
                    u = ({x -> 0} fun y -> y + x)
                    u = 0
                Line 4:
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 0
                Line 7:
                  Property failure, Postcondition of g with:
                    y = 0
                    result = 0
            - Abstract: don't know (RAC execution got stuck: Assume postcondition of f cannot be evaluated)
              
<check-ce>Check model 1 ("bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/anonymous3.mlw", line 8, characters 2-5 not in ce-model, taking default UNDEFINED
<check-ce>Model 1:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File anonymous3.mlw:
                Line 6:
                  y = 0
                  Concrete execution of g with args:
                    y = 0
                Line 8:
                  Concrete execution of f with args:
                    x = 0
                  Concrete execution of (@) with args:
                    u = ({x -> 0} fun y -> y + x)
                    u = 0
                Line 4:
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 0
                Line 7:
                  Property failure, Postcondition of g with:
                    y = 0
                    result = 0
            - Abstract: don't know (RAC execution got stuck: Assume postcondition of f cannot be evaluated)
              
<check-ce>Check model 2 ("bench/check-ce/anonymous3.mlw", line 7, characters 12-22)
<check-ce>VALUE for result "bench/check-ce/anonymous3.mlw", line 8, characters 2-5 not in ce-model, taking default UNDEFINED
<check-ce>Model 2:
            - Concrete: good model (Concrete RAC confirms the counter-example)
              File anonymous3.mlw:
                Line 6:
                  y = 0
                  Concrete execution of g with args:
                    y = 0
                Line 8:
                  Concrete execution of f with args:
                    x = 0
                  Concrete execution of (@) with args:
                    u = ({x -> 0} fun y -> y + x)
                    u = 0
                Line 4:
                  Concrete execution of (+) with args:
                    _ = 0
                    _ = 0
                Line 7:
                  Property failure, Postcondition of g with:
                    y = 0
                    result = 0
            - Abstract: don't know (RAC execution got stuck: Assume postcondition of f cannot be evaluated)
              
<check-ce>Models:
- Selected model 0 (Concrete: good model, Abstract: don't know)
    Summary: The program does not comply to the verification goal
- Checked model 1 (Concrete: good model, Abstract: don't know)
    Summary: The program does not comply to the verification goal
- Checked model 2 (Concrete: good model, Abstract: don't know)
    Summary: The program does not comply to the verification goal
File "bench/check-ce/anonymous3.mlw", line 7, characters 12-22:
Goal Postcondition from verification condition g'vc.
Prover result is: unknown (unknown + incomplete) (0.06s, 5025 steps).
The program does not comply to the verification goal, for example during the
following execution:
File anonymous3.mlw:
  Line 6:
    y = 0
    Concrete execution of g with args:
      y = 0
  Line 8:
    Concrete execution of f with args:
      x = 0
    Concrete execution of (@) with args:
      u = ({x -> 0} fun y -> y + x)
      u = 0
  Line 4:
    Concrete execution of (+) with args:
      _ = 0
      _ = 0
  Line 7:
    Property failure, Postcondition of g with:
      y = 0
      result = 0

