theory Why2
  use unit_inf.Unit
  use int.Int
  use int.ComputerDivision
  use real.Real
  use bool_inf.Bool
  predicate eq_unit Unit.unit Unit.unit

  predicate neq_unit Unit.unit Unit.unit

  predicate eq_bool Bool.bool Bool.bool

  predicate neq_bool Bool.bool Bool.bool

  predicate lt_int int int

  predicate le_int int int

  predicate gt_int int int

  predicate ge_int int int

  predicate eq_int int int

  predicate neq_int int int

  function add_int int int : int

  function sub_int int int : int

  function mul_int int int : int

  function div_int int int : int

  function mod_int int int : int

  function neg_int int : int

  predicate zwf_zero (a : int) (b : int) = ((Int.(<=) 0 b) /\ (Int.(<) a b))

  goal Swap1_po_1:
    (forall x0:int.
      (forall y:int.
        (forall x:int. ((x = y) -> (forall y0:int. ((y0 = x0) -> (x = y)))))))

  goal Swap1_po_2:
    (forall x0:int.
      (forall y:int.
        (forall x:int.
          ((x = y) -> (forall y0:int. ((y0 = x0) -> (y0 = x0)))))))

  goal Swap2_po_1:
    (forall x0:int.
      (forall y:int.
        (forall x:int. ((x = y) -> (forall y0:int. ((y0 = x0) -> (x = y)))))))

  goal Swap2_po_2:
    (forall x0:int.
      (forall y:int.
        (forall x:int.
          ((x = y) -> (forall y0:int. ((y0 = x0) -> (y0 = x0)))))))

  goal Swap3_po_1:
    (forall a0:int.
      (forall b:int.
        (forall a:int. ((a = b) -> (forall b0:int. ((b0 = a0) -> (a = b)))))))

  goal Swap3_po_2:
    (forall a0:int.
      (forall b:int.
        (forall a:int.
          ((a = b) -> (forall b0:int. ((b0 = a0) -> (b0 = a0)))))))

  goal Swap4_po_1:
    (forall a:int.
      (forall b:int.
        (forall tmp:int.
          ((tmp = a) ->
           (forall a0:int.
             ((a0 = b) -> (forall b0:int. ((b0 = tmp) -> (a0 = b)))))))))

  goal Swap4_po_2:
    (forall a:int.
      (forall b:int.
        (forall tmp:int.
          ((tmp = a) ->
           (forall a0:int.
             ((a0 = b) -> (forall b0:int. ((b0 = tmp) -> (b0 = a)))))))))

  goal Call_swap4_x_y_po_1:
    (forall x:int.
      (forall y:int.
        ((x = 3) ->
         (forall x0:int.
           (forall y0:int. (((x0 = y) /\ (y0 = x)) -> (y0 = 3)))))))

  goal Call_swap4_y_x_po_1:
    (forall x:int.
      (forall y:int.
        ((x = 3) ->
         (forall x0:int.
           (forall y0:int. (((y0 = x) /\ (x0 = y)) -> (y0 = 3)))))))


end