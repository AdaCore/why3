theory Why2
use map.Map as A
  use unit_inf.Unit
  use int.Int
  use int.ComputerDivision
  use real.Real
  use bool_inf.Bool
  predicate eq_unit Unit.unit Unit.unit

  predicate neq_unit Unit.unit Unit.unit

  predicate eq_bool Bool.bool Bool.bool

  predicate neq_bool Bool.bool Bool.bool

  predicate lt_int int int

  predicate le_int int int

  predicate gt_int int int

  predicate ge_int int int

  predicate eq_int int int

  predicate neq_int int int

  function add_int int int : int

  function sub_int int int : int

  function mul_int int int : int

  function div_int int int : int

  function mod_int int int : int

  function neg_int int : int

  predicate zwf_zero (a : int) (b : int) = ((Int.(<=) 0 b) /\ (Int.(<) a b))

  type farray 'a = A.map int 'a

  function access (m:farray 'a1) (k:int) : 'a1 = A.get m k

  function update (m:farray 'a1) (k:int) (v:'a1) : (farray 'a1) = A.set m k v



  function array_length (farray 'a1) : int

  predicate sorted_array (t : (farray int)) (i : int) (j : int) =
    (forall k1:int.
      (forall k2:int.
        ((((Int.(<=) i k1) /\ (Int.(<=) k1 k2)) /\ (Int.(<=) k2 j)) ->
         (Int.(<=) (access t k1 : int) (access t k2 : int)))))

  predicate exchange (a1 : (farray 'a1)) (a2 : (farray 'a1)) (i : int) (j : int) =
    (((array_length a1 : int) = (array_length a2 : int)) /\
     (((access a1 i : 'a1) = (access a2 j : 'a1)) /\
      (((access a2 i : 'a1) = (access a1 j : 'a1)) /\
       (forall k:int.
         (((k <> i) /\ (k <> j)) ->
          ((access a1 k : 'a1) = (access a2 k : 'a1)))))))

  predicate permut (farray 'a1) (farray 'a1) int int

  axiom Permut_refl:
    (forall t:(farray 'a1). (forall l:int. (forall u:int. (permut t t l u))))

  axiom Permut_sym:
    (forall t1:(farray 'a1).
      (forall t2:(farray 'a1).
        (forall l:int.
          (forall u:int. ((permut t1 t2 l u) -> (permut t2 t1 l u))))))

  axiom Permut_trans:
    (forall t1:(farray 'a1).
      (forall t2:(farray 'a1).
        (forall t3:(farray 'a1).
          (forall l:int.
            (forall u:int.
              ((permut t1 t2 l u) ->
               ((permut t2 t3 l u) -> (permut t1 t3 l u))))))))

  axiom Permut_exchange:
    (forall a1:(farray 'a1).
      (forall a2:(farray 'a1).
        (forall l:int.
          (forall u:int.
            (forall i:int.
              (forall j:int.
                (((Int.(<=) l i) /\ (Int.(<=) i u)) ->
                 (((Int.(<=) l j) /\ (Int.(<=) j u)) ->
                  ((exchange a1 a2 i j) -> (permut a1 a2 l u))))))))))

  axiom Exchange_upd:
    (forall a:(farray 'a1).
      (forall i:int.
        (forall j:int.
          (exchange a (update (update a i (access a j : 'a1) : (farray 'a1)) j (access a i : 'a1) : (farray 'a1)) i j))))

  axiom Permut_weakening:
    (forall a1:(farray 'a1).
      (forall a2:(farray 'a1).
        (forall l1:int.
          (forall r1:int.
            (forall l2:int.
              (forall r2:int.
                ((((Int.(<=) l1 l2) /\ (Int.(<=) l2 r2)) /\
                  (Int.(<=) r2 r1)) ->
                 ((permut a1 a2 l2 r2) -> (permut a1 a2 l1 r1)))))))))

  axiom Permut_eq:
    (forall a1:(farray 'a1).
      (forall a2:(farray 'a1).
        (forall l:int.
          (forall u:int.
            ((Int.(<=) l u) ->
             ((permut a1 a2 l u) ->
              (forall i:int.
                (((Int.(<) i l) \/ (Int.(<) u i)) ->
                 ((access a2 i : 'a1) = (access a1 i : 'a1))))))))))

  predicate permutation (a1 : (farray 'a1)) (a2 : (farray 'a1)) =
    (permut a1 a2 0 (Int.(-) (array_length a1 : int) 1 : int))

  axiom Array_length_update:
    (forall a:(farray 'a1).
      (forall i:int.
        (forall v:'a1.
          ((array_length (update a i v : (farray 'a1)) : int) = (array_length a : int)))))

  axiom Permut_array_length:
    (forall a1:(farray 'a1).
      (forall a2:(farray 'a1).
        (forall l:int.
          (forall u:int.
            ((permut a1 a2 l u) ->
             ((array_length a1 : int) = (array_length a2 : int)))))))

  goal Swap_po_1:
    (forall i:int.
      (forall j:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) /\
            ((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int)))) ->
           (Int.(<=) 0 i)))))

  goal Swap_po_2:
    (forall i:int.
      (forall j:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) /\
            ((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int)))) ->
           (Int.(<) i (array_length t : int))))))

  goal Swap_po_3:
    (forall i:int.
      (forall j:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) /\
            ((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int)))) ->
           (((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) ->
            (forall result:int.
              ((result = (access t i : int)) -> (Int.(<=) 0 j))))))))

  goal Swap_po_4:
    (forall i:int.
      (forall j:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) /\
            ((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int)))) ->
           (((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) ->
            (forall result:int.
              ((result = (access t i : int)) ->
               (Int.(<) j (array_length t : int)))))))))

  goal Swap_po_5:
    (forall i:int.
      (forall j:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) /\
            ((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int)))) ->
           (((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) ->
            (forall result:int.
              ((result = (access t i : int)) ->
               (((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int))) ->
                (forall result0:int.
                  ((result0 = (access t j : int)) ->
                   (((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) ->
                    (forall t0:(farray int).
                      ((t0 = (update t i result0 : (farray int))) ->
                       (Int.(<) j (array_length t0 : int)))))))))))))))

  goal Swap_po_6:
    (forall i:int.
      (forall j:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) /\
            ((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int)))) ->
           (((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) ->
            (forall result:int.
              ((result = (access t i : int)) ->
               (((Int.(<=) 0 j) /\ (Int.(<) j (array_length t : int))) ->
                (forall result0:int.
                  ((result0 = (access t j : int)) ->
                   (((Int.(<=) 0 i) /\ (Int.(<) i (array_length t : int))) ->
                    (forall t0:(farray int).
                      ((t0 = (update t i result0 : (farray int))) ->
                       (((Int.(<=) 0 j) /\
                         (Int.(<) j (array_length t0 : int))) ->
                        (forall t1:(farray int).
                          ((t1 = (update t0 j result : (farray int))) ->
                           (exchange t1 t i j)))))))))))))))))

  predicate select_son (t : (farray int)) (k : int) (n : int) (j : int) =
    (((j = (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
      ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 2 : int) n) ->
       (Int.(>=) (access t j : int) (access t (Int.(+) (Int.(*) 2 k : int) 2 : int) : int)))) \/
     ((j = (Int.(+) (Int.(*) 2 k : int) 2 : int)) /\
      ((Int.(<=) j n) /\
       (Int.(>=) (access t j : int) (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)))))

  predicate inftree (farray int) int int int

  axiom Inftree_def:
    (forall a:(farray int).
      (forall n:int.
        (forall v:int.
          (forall k:int.
            ((inftree a n v k) <->
             (((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
              ((Int.(<=) (access a k : int) v) /\
               (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
                 (inftree a n v (Int.(+) (Int.(*) 2 k : int) 1 : int))) /\
                ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 2 : int) n) ->
                 (inftree a n v (Int.(+) (Int.(*) 2 k : int) 2 : int)))))))))))

  predicate heap (farray int) int int

  axiom Heap_def:
    (forall a:(farray int).
      (forall n:int.
        (forall k:int.
          ((heap a n k) <->
           (((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
              (Int.(>=) (access a k : int) (access a (Int.(+) (Int.(*) 2 k : int) 1 : int) : int))) /\
             (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
               (heap a n (Int.(+) (Int.(*) 2 k : int) 1 : int))) /\
              (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 2 : int) n) ->
                (Int.(>=) (access a k : int) (access a (Int.(+) (Int.(*) 2 k : int) 2 : int) : int))) /\
               ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 2 : int) n) ->
                (heap a n (Int.(+) (Int.(*) 2 k : int) 2 : int)))))))))))

  goal Downheap_po_1:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int))))))))

  goal Downheap_po_2:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))))))))

  goal Downheap_po_3:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)))))))))))

  goal Downheap_po_4:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))))))))))

  goal Downheap_po_5:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (select_son t k n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)))))))))))))))

  goal Downheap_po_6:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) -> (Int.(<=) 0 k))))))))))))))

  goal Downheap_po_7:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (Int.(<) k (array_length t : int)))))))))))))))

  goal Downheap_po_8:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (Int.(<=) 0 (Int.(-) n k : int)))))))))))))))))))))))))

  goal Downheap_po_9:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (Int.(<) (Int.(-) n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) (Int.(-) n k : int)))))))))))))))))))))))))

  goal Downheap_po_10:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    (Int.(<) n (array_length t0 : int))))))))))))))))))))))))))

  goal Downheap_po_11:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) 1 : int) i) /\
                                        (Int.(<=) i n)) ->
                                       (heap t0 n i)))))))))))))))))))))))))))

  goal Downheap_po_12:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))))))) ->
                                        (permutation t1 t))))))))))))))))))))))))))))

  goal Downheap_po_13:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))))))) ->
                                        (forall i:int.
                                          (((Int.(<=) k i) /\ (Int.(<=) i n)) ->
                                           (heap t1 n i))))))))))))))))))))))))))))))

  goal Downheap_po_14:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))))))) ->
                                        (forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                            (((Int.(<) k i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                             ((Int.(<) n i) /\
                                              (Int.(<) i (array_length t1 : int))))) ->
                                           ((access t1 i : int) = (access t i : int)))))))))))))))))))))))))))))))

  goal Downheap_po_15:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int))))))) ->
                                        (forall v:int.
                                          ((inftree t n v k) ->
                                           (inftree t1 n v k))))))))))))))))))))))))))))))

  goal Downheap_po_16:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(>=) result1 result2) ->
                               (permutation t t)))))))))))))))))))))

  goal Downheap_po_17:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                              ((Int.(>=) result1 result2) ->
                               (forall i:int.
                                 (((Int.(<=) k i) /\ (Int.(<=) i n)) ->
                                  (heap t n i)))))))))))))))))))))))

  goal Downheap_po_18:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (select_son t k n (Int.(+) (Int.(*) 2 k : int) 1 : int)))))))))))))))

  goal Downheap_po_19:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) -> (Int.(<=) 0 k))))))))))))))

  goal Downheap_po_20:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (Int.(<) k (array_length t : int)))))))))))))))

  goal Downheap_po_21:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (Int.(<=) 0 (Int.(-) n k : int)))))))))))))))))))))))))

  goal Downheap_po_22:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int)))))))))))))))))))))))))

  goal Downheap_po_23:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    (Int.(<) n (array_length t0 : int))))))))))))))))))))))))))

  goal Downheap_po_24:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                        (Int.(<=) i n)) ->
                                       (heap t0 n i)))))))))))))))))))))))))))

  goal Downheap_po_25:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                                        (permutation t1 t))))))))))))))))))))))))))))

  goal Downheap_po_26:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                                        (forall i:int.
                                          (((Int.(<=) k i) /\ (Int.(<=) i n)) ->
                                           (heap t1 n i))))))))))))))))))))))))))))))

  goal Downheap_po_27:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                                        (forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                            (((Int.(<) k i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                             ((Int.(<) n i) /\
                                              (Int.(<) i (array_length t1 : int))))) ->
                                           ((access t1 i : int) = (access t i : int)))))))))))))))))))))))))))))))

  goal Downheap_po_28:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(<) result1 result2) ->
                               ((((Int.(<=) 0 k) /\
                                  (Int.(<) k (array_length t : int))) /\
                                 ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                  (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                                (forall t0:(farray int).
                                  ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                   (((Int.(<=) 0 (Int.(-) n k : int)) /\
                                     (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                                    ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                                       (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                                      ((Int.(<) n (array_length t0 : int)) /\
                                       (forall i:int.
                                         (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                           (Int.(<=) i n)) ->
                                          (heap t0 n i))))) ->
                                     (forall t1:(farray int).
                                       (((permutation t1 t0) /\
                                         ((forall i:int.
                                            (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                              (Int.(<=) i n)) ->
                                             (heap t1 n i))) /\
                                          ((forall i:int.
                                             ((((Int.(<=) 0 i) /\
                                                (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                               (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                                 (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                                ((Int.(<) n i) /\
                                                 (Int.(<) i (array_length t1 : int))))) ->
                                              ((access t1 i : int) = (access t0 i : int)))) /\
                                           (forall v:int.
                                             ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                              (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                                        (forall v:int.
                                          ((inftree t n v k) ->
                                           (inftree t1 n v k))))))))))))))))))))))))))))))

  goal Downheap_po_29:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(>=) result1 result2) ->
                               (permutation t t)))))))))))))))))))))

  goal Downheap_po_30:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
               (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
              (forall result:int.
                ((result = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
                       (forall result1:int.
                         ((result1 = (access t k : int)) ->
                          (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                            (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                           (forall result2:int.
                             ((result2 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                              ((Int.(>=) result1 result2) ->
                               (forall i:int.
                                 (((Int.(<=) k i) /\ (Int.(<=) i n)) ->
                                  (heap t n i)))))))))))))))))))))))

  goal Downheap_po_31:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (select_son t k n (Int.(+) (Int.(*) 2 k : int) 1 : int))))))))

  goal Downheap_po_32:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (Int.(<=) 0 k)))))))

  goal Downheap_po_33:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (Int.(<) k (array_length t : int))))))))

  goal Downheap_po_34:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)))))))))))

  goal Downheap_po_35:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))))))))))

  goal Downheap_po_36:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (Int.(<=) 0 (Int.(-) n k : int))))))))))))))))))

  goal Downheap_po_37:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))))))))))))))))))

  goal Downheap_po_38:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (((Int.(<=) 0 (Int.(-) n k : int)) /\
                            (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                           (Int.(<) n (array_length t0 : int)))))))))))))))))))

  goal Downheap_po_39:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (((Int.(<=) 0 (Int.(-) n k : int)) /\
                            (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                           (forall i:int.
                             (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                               (Int.(<=) i n)) ->
                              (heap t0 n i))))))))))))))))))))

  goal Downheap_po_40:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (((Int.(<=) 0 (Int.(-) n k : int)) /\
                            (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                           ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                              (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                             ((Int.(<) n (array_length t0 : int)) /\
                              (forall i:int.
                                (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                  (Int.(<=) i n)) ->
                                 (heap t0 n i))))) ->
                            (forall t1:(farray int).
                              (((permutation t1 t0) /\
                                ((forall i:int.
                                   (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                     (Int.(<=) i n)) ->
                                    (heap t1 n i))) /\
                                 ((forall i:int.
                                    ((((Int.(<=) 0 i) /\
                                       (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                      (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                        (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                       ((Int.(<) n i) /\
                                        (Int.(<) i (array_length t1 : int))))) ->
                                     ((access t1 i : int) = (access t0 i : int)))) /\
                                  (forall v:int.
                                    ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                     (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                               (permutation t1 t)))))))))))))))))))))

  goal Downheap_po_41:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (((Int.(<=) 0 (Int.(-) n k : int)) /\
                            (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                           ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                              (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                             ((Int.(<) n (array_length t0 : int)) /\
                              (forall i:int.
                                (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                  (Int.(<=) i n)) ->
                                 (heap t0 n i))))) ->
                            (forall t1:(farray int).
                              (((permutation t1 t0) /\
                                ((forall i:int.
                                   (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                     (Int.(<=) i n)) ->
                                    (heap t1 n i))) /\
                                 ((forall i:int.
                                    ((((Int.(<=) 0 i) /\
                                       (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                      (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                        (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                       ((Int.(<) n i) /\
                                        (Int.(<) i (array_length t1 : int))))) ->
                                     ((access t1 i : int) = (access t0 i : int)))) /\
                                  (forall v:int.
                                    ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                     (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                               (forall i:int.
                                 (((Int.(<=) k i) /\ (Int.(<=) i n)) ->
                                  (heap t1 n i)))))))))))))))))))))))

  goal Downheap_po_42:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (((Int.(<=) 0 (Int.(-) n k : int)) /\
                            (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                           ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                              (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                             ((Int.(<) n (array_length t0 : int)) /\
                              (forall i:int.
                                (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                  (Int.(<=) i n)) ->
                                 (heap t0 n i))))) ->
                            (forall t1:(farray int).
                              (((permutation t1 t0) /\
                                ((forall i:int.
                                   (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                     (Int.(<=) i n)) ->
                                    (heap t1 n i))) /\
                                 ((forall i:int.
                                    ((((Int.(<=) 0 i) /\
                                       (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                      (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                        (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                       ((Int.(<) n i) /\
                                        (Int.(<) i (array_length t1 : int))))) ->
                                     ((access t1 i : int) = (access t0 i : int)))) /\
                                  (forall v:int.
                                    ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                     (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                               (forall i:int.
                                 ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                   (((Int.(<) k i) /\
                                     (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                    ((Int.(<) n i) /\
                                     (Int.(<) i (array_length t1 : int))))) ->
                                  ((access t1 i : int) = (access t i : int))))))))))))))))))))))))

  goal Downheap_po_43:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(<) result result0) ->
                      ((((Int.(<=) 0 k) /\
                         (Int.(<) k (array_length t : int))) /\
                        ((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                         (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int)))) ->
                       (forall t0:(farray int).
                         ((exchange t0 t k (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                          (((Int.(<=) 0 (Int.(-) n k : int)) /\
                            (Int.(<) (Int.(-) n (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) (Int.(-) n k : int))) ->
                           ((((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                              (Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n)) /\
                             ((Int.(<) n (array_length t0 : int)) /\
                              (forall i:int.
                                (((Int.(<=) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) i) /\
                                  (Int.(<=) i n)) ->
                                 (heap t0 n i))))) ->
                            (forall t1:(farray int).
                              (((permutation t1 t0) /\
                                ((forall i:int.
                                   (((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                     (Int.(<=) i n)) ->
                                    (heap t1 n i))) /\
                                 ((forall i:int.
                                    ((((Int.(<=) 0 i) /\
                                       (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                      (((Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) i) /\
                                        (Int.(<) i (Int.(+) (Int.(*) 2 (Int.(+) (Int.(*) 2 k : int) 1 : int) : int) 1 : int))) \/
                                       ((Int.(<) n i) /\
                                        (Int.(<) i (array_length t1 : int))))) ->
                                     ((access t1 i : int) = (access t0 i : int)))) /\
                                  (forall v:int.
                                    ((inftree t0 n v (Int.(+) (Int.(*) 2 k : int) 1 : int)) ->
                                     (inftree t1 n v (Int.(+) (Int.(*) 2 k : int) 1 : int))))))) ->
                               (forall v:int.
                                 ((inftree t n v k) -> (inftree t1 n v k)))))))))))))))))))))))

  goal Downheap_po_44:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) -> (permutation t t))))))))))))))

  goal Downheap_po_45:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(<=) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            ((Int.(>) (Int.(+) (Int.(+) (Int.(*) 2 k : int) 1 : int) 1 : int) n) ->
             (((Int.(<=) 0 k) /\ (Int.(<) k (array_length t : int))) ->
              (forall result:int.
                ((result = (access t k : int)) ->
                 (((Int.(<=) 0 (Int.(+) (Int.(*) 2 k : int) 1 : int)) /\
                   (Int.(<) (Int.(+) (Int.(*) 2 k : int) 1 : int) (array_length t : int))) ->
                  (forall result0:int.
                    ((result0 = (access t (Int.(+) (Int.(*) 2 k : int) 1 : int) : int)) ->
                     ((Int.(>=) result result0) ->
                      (forall i:int.
                        (((Int.(<=) k i) /\ (Int.(<=) i n)) -> (heap t n i))))))))))))))))

  goal Downheap_po_46:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(>) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            (permutation t t))))))

  goal Downheap_po_47:
    (forall k:int.
      (forall n:int.
        (forall t:(farray int).
          ((((Int.(<=) 0 k) /\ (Int.(<=) k n)) /\
            ((Int.(<) n (array_length t : int)) /\
             (forall i:int.
               (((Int.(<=) (Int.(+) k 1 : int) i) /\ (Int.(<=) i n)) ->
                (heap t n i))))) ->
           ((Int.(>) (Int.(+) (Int.(*) 2 k : int) 1 : int) n) ->
            (forall i:int.
              (((Int.(<=) k i) /\ (Int.(<=) i n)) -> (heap t n i))))))))

  axiom Div2_1:
    (forall n:int.
      ((Int.(<) 0 n) ->
       ((Int.(<=) 0 (ComputerDivision.div n 2 : int)) /\
        (Int.(<) (ComputerDivision.div n 2 : int) n))))

  axiom Div2_2:
    (forall n:int.
      ((Int.(<=) (Int.(-) n 1 : int) (Int.(*) 2 (ComputerDivision.div n 2 : int) : int)) /\
       (Int.(<=) (Int.(*) 2 (ComputerDivision.div n 2 : int) : int) n)))

  goal Heapsort_po_1:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int. ((result = (array_length t : int)) -> (2 <> 0)))))

  goal Heapsort_po_2:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (Int.(<=) (Int.(-_) 1 : int) (Int.(-) result0 1 : int)))))))))

  goal Heapsort_po_3:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (Int.(<=) (Int.(-) result0 1 : int) (Int.(-) (array_length t : int) 1 : int)))))))))

  goal Heapsort_po_4:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall i:int.
                (((Int.(<=) (Int.(+) (Int.(-) result0 1 : int) 1 : int) i) /\
                  (Int.(<=) i (Int.(-) (array_length t : int) 1 : int))) ->
                 (heap t (Int.(-) (array_length t : int) 1 : int) i))))))))))

  goal Heapsort_po_5:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (permutation t t))))))))

  goal Heapsort_po_6:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) -> (Int.(<=) 0 k))))))))))))))

  goal Heapsort_po_7:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (Int.(<=) k (Int.(-) result1 1 : int)))))))))))))))

  goal Heapsort_po_8:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (Int.(<) (Int.(-) result1 1 : int) (array_length t0 : int)))))))))))))))

  goal Heapsort_po_9:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall i:int.
                         (((Int.(<=) (Int.(+) k 1 : int) i) /\
                           (Int.(<=) i (Int.(-) result1 1 : int))) ->
                          (heap t0 (Int.(-) result1 1 : int) i))))))))))))))))

  goal Heapsort_po_10:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((((Int.(<=) 0 k) /\
                          (Int.(<=) k (Int.(-) result1 1 : int))) /\
                         ((Int.(<) (Int.(-) result1 1 : int) (array_length t0 : int)) /\
                          (forall i:int.
                            (((Int.(<=) (Int.(+) k 1 : int) i) /\
                              (Int.(<=) i (Int.(-) result1 1 : int))) ->
                             (heap t0 (Int.(-) result1 1 : int) i))))) ->
                        (forall t1:(farray int).
                          (((permutation t1 t0) /\
                            ((forall i:int.
                               (((Int.(<=) k i) /\
                                 (Int.(<=) i (Int.(-) result1 1 : int))) ->
                                (heap t1 (Int.(-) result1 1 : int) i))) /\
                             ((forall i:int.
                                ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                  (((Int.(<) k i) /\
                                    (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                   ((Int.(<) (Int.(-) result1 1 : int) i) /\
                                    (Int.(<) i (array_length t1 : int))))) ->
                                 ((access t1 i : int) = (access t0 i : int)))) /\
                              (forall v:int.
                                ((inftree t0 (Int.(-) result1 1 : int) v k) ->
                                 (inftree t1 (Int.(-) result1 1 : int) v k)))))) ->
                           (forall k0:int.
                             ((k0 = (Int.(-) k 1 : int)) ->
                              (Int.(<=) (Int.(-_) 1 : int) k0)))))))))))))))))))

  goal Heapsort_po_11:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((((Int.(<=) 0 k) /\
                          (Int.(<=) k (Int.(-) result1 1 : int))) /\
                         ((Int.(<) (Int.(-) result1 1 : int) (array_length t0 : int)) /\
                          (forall i:int.
                            (((Int.(<=) (Int.(+) k 1 : int) i) /\
                              (Int.(<=) i (Int.(-) result1 1 : int))) ->
                             (heap t0 (Int.(-) result1 1 : int) i))))) ->
                        (forall t1:(farray int).
                          (((permutation t1 t0) /\
                            ((forall i:int.
                               (((Int.(<=) k i) /\
                                 (Int.(<=) i (Int.(-) result1 1 : int))) ->
                                (heap t1 (Int.(-) result1 1 : int) i))) /\
                             ((forall i:int.
                                ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                  (((Int.(<) k i) /\
                                    (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                   ((Int.(<) (Int.(-) result1 1 : int) i) /\
                                    (Int.(<) i (array_length t1 : int))))) ->
                                 ((access t1 i : int) = (access t0 i : int)))) /\
                              (forall v:int.
                                ((inftree t0 (Int.(-) result1 1 : int) v k) ->
                                 (inftree t1 (Int.(-) result1 1 : int) v k)))))) ->
                           (forall k0:int.
                             ((k0 = (Int.(-) k 1 : int)) ->
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))))))))))))))))))))

  goal Heapsort_po_12:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((((Int.(<=) 0 k) /\
                          (Int.(<=) k (Int.(-) result1 1 : int))) /\
                         ((Int.(<) (Int.(-) result1 1 : int) (array_length t0 : int)) /\
                          (forall i:int.
                            (((Int.(<=) (Int.(+) k 1 : int) i) /\
                              (Int.(<=) i (Int.(-) result1 1 : int))) ->
                             (heap t0 (Int.(-) result1 1 : int) i))))) ->
                        (forall t1:(farray int).
                          (((permutation t1 t0) /\
                            ((forall i:int.
                               (((Int.(<=) k i) /\
                                 (Int.(<=) i (Int.(-) result1 1 : int))) ->
                                (heap t1 (Int.(-) result1 1 : int) i))) /\
                             ((forall i:int.
                                ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                  (((Int.(<) k i) /\
                                    (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                   ((Int.(<) (Int.(-) result1 1 : int) i) /\
                                    (Int.(<) i (array_length t1 : int))))) ->
                                 ((access t1 i : int) = (access t0 i : int)))) /\
                              (forall v:int.
                                ((inftree t0 (Int.(-) result1 1 : int) v k) ->
                                 (inftree t1 (Int.(-) result1 1 : int) v k)))))) ->
                           (forall k0:int.
                             ((k0 = (Int.(-) k 1 : int)) ->
                              (forall i:int.
                                (((Int.(<=) (Int.(+) k0 1 : int) i) /\
                                  (Int.(<=) i (Int.(-) (array_length t1 : int) 1 : int))) ->
                                 (heap t1 (Int.(-) (array_length t1 : int) 1 : int) i)))))))))))))))))))))

  goal Heapsort_po_13:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((((Int.(<=) 0 k) /\
                          (Int.(<=) k (Int.(-) result1 1 : int))) /\
                         ((Int.(<) (Int.(-) result1 1 : int) (array_length t0 : int)) /\
                          (forall i:int.
                            (((Int.(<=) (Int.(+) k 1 : int) i) /\
                              (Int.(<=) i (Int.(-) result1 1 : int))) ->
                             (heap t0 (Int.(-) result1 1 : int) i))))) ->
                        (forall t1:(farray int).
                          (((permutation t1 t0) /\
                            ((forall i:int.
                               (((Int.(<=) k i) /\
                                 (Int.(<=) i (Int.(-) result1 1 : int))) ->
                                (heap t1 (Int.(-) result1 1 : int) i))) /\
                             ((forall i:int.
                                ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                  (((Int.(<) k i) /\
                                    (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                   ((Int.(<) (Int.(-) result1 1 : int) i) /\
                                    (Int.(<) i (array_length t1 : int))))) ->
                                 ((access t1 i : int) = (access t0 i : int)))) /\
                              (forall v:int.
                                ((inftree t0 (Int.(-) result1 1 : int) v k) ->
                                 (inftree t1 (Int.(-) result1 1 : int) v k)))))) ->
                           (forall k0:int.
                             ((k0 = (Int.(-) k 1 : int)) ->
                              (permutation t1 t)))))))))))))))))))

  goal Heapsort_po_14:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((((Int.(<=) 0 k) /\
                          (Int.(<=) k (Int.(-) result1 1 : int))) /\
                         ((Int.(<) (Int.(-) result1 1 : int) (array_length t0 : int)) /\
                          (forall i:int.
                            (((Int.(<=) (Int.(+) k 1 : int) i) /\
                              (Int.(<=) i (Int.(-) result1 1 : int))) ->
                             (heap t0 (Int.(-) result1 1 : int) i))))) ->
                        (forall t1:(farray int).
                          (((permutation t1 t0) /\
                            ((forall i:int.
                               (((Int.(<=) k i) /\
                                 (Int.(<=) i (Int.(-) result1 1 : int))) ->
                                (heap t1 (Int.(-) result1 1 : int) i))) /\
                             ((forall i:int.
                                ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                  (((Int.(<) k i) /\
                                    (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                   ((Int.(<) (Int.(-) result1 1 : int) i) /\
                                    (Int.(<) i (array_length t1 : int))))) ->
                                 ((access t1 i : int) = (access t0 i : int)))) /\
                              (forall v:int.
                                ((inftree t0 (Int.(-) result1 1 : int) v k) ->
                                 (inftree t1 (Int.(-) result1 1 : int) v k)))))) ->
                           (forall k0:int.
                             ((k0 = (Int.(-) k 1 : int)) ->
                              (Int.(<=) 0 (Int.(+) k 1 : int))))))))))))))))))))

  goal Heapsort_po_15:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(>=) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((((Int.(<=) 0 k) /\
                          (Int.(<=) k (Int.(-) result1 1 : int))) /\
                         ((Int.(<) (Int.(-) result1 1 : int) (array_length t0 : int)) /\
                          (forall i:int.
                            (((Int.(<=) (Int.(+) k 1 : int) i) /\
                              (Int.(<=) i (Int.(-) result1 1 : int))) ->
                             (heap t0 (Int.(-) result1 1 : int) i))))) ->
                        (forall t1:(farray int).
                          (((permutation t1 t0) /\
                            ((forall i:int.
                               (((Int.(<=) k i) /\
                                 (Int.(<=) i (Int.(-) result1 1 : int))) ->
                                (heap t1 (Int.(-) result1 1 : int) i))) /\
                             ((forall i:int.
                                ((((Int.(<=) 0 i) /\ (Int.(<) i k)) \/
                                  (((Int.(<) k i) /\
                                    (Int.(<) i (Int.(+) (Int.(*) 2 k : int) 1 : int))) \/
                                   ((Int.(<) (Int.(-) result1 1 : int) i) /\
                                    (Int.(<) i (array_length t1 : int))))) ->
                                 ((access t1 i : int) = (access t0 i : int)))) /\
                              (forall v:int.
                                ((inftree t0 (Int.(-) result1 1 : int) v k) ->
                                 (inftree t1 (Int.(-) result1 1 : int) v k)))))) ->
                           (forall k0:int.
                             ((k0 = (Int.(-) k 1 : int)) ->
                              (Int.(<) (Int.(+) k0 1 : int) (Int.(+) k 1 : int))))))))))))))))))))

  goal Heapsort_po_16:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (heap t0 (Int.(-) (array_length t0 : int) 1 : int) 0))))))))))))

  goal Heapsort_po_17:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) -> (permutation t0 t))))))))))))

  goal Heapsort_po_18:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (Int.(<=) 0 (Int.(-) result1 1 : int)))))))))))))))

  goal Heapsort_po_19:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (Int.(<=) (Int.(-) result1 1 : int) (Int.(-) (array_length t0 : int) 1 : int)))))))))))))))

  goal Heapsort_po_20:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall i:int.
                         (((Int.(<=) 0 i) /\
                           (Int.(<=) i (Int.(-) result1 1 : int))) ->
                          (heap t0 (Int.(-) result1 1 : int) i))))))))))))))))

  goal Heapsort_po_21:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((Int.(<=) (Int.(+) (Int.(-) result1 1 : int) 1 : int) (Int.(-) (array_length t0 : int) 1 : int)) ->
                        (Int.(<=) (access t0 0 : int) (access t0 (Int.(+) (Int.(-) result1 1 : int) 1 : int) : int))))))))))))))))

  goal Heapsort_po_22:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       ((Int.(<=) (Int.(+) (Int.(-) result1 1 : int) 1 : int) (Int.(-) (array_length t0 : int) 1 : int)) ->
                        (sorted_array t0 (Int.(+) (Int.(-) result1 1 : int) 1 : int) (Int.(-) (array_length t0 : int) 1 : int))))))))))))))))

  goal Heapsort_po_23:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (permutation t0 t))))))))))))))

  goal Heapsort_po_24:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) -> (Int.(<=) 0 0))))))))))))))))))

  goal Heapsort_po_25:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             (Int.(<) 0 (array_length t1 : int)))))))))))))))))))

  goal Heapsort_po_26:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) -> (Int.(<=) 0 k0))))))))))))))))))

  goal Heapsort_po_27:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             (Int.(<) k0 (array_length t1 : int)))))))))))))))))))

  goal Heapsort_po_28:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) -> (Int.(<=) 0 0)))))))))))))))))))))

  goal Heapsort_po_29:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 (Int.(<=) 0 (Int.(-) k0 1 : int))))))))))))))))))))))

  goal Heapsort_po_30:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 (Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int))))))))))))))))))))))

  goal Heapsort_po_31:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 (forall i:int.
                                   (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                     (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                    (heap t2 (Int.(-) k0 1 : int) i)))))))))))))))))))))))

  goal Heapsort_po_32:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        (Int.(<=) 0 k1))))))))))))))))))))))))))

  goal Heapsort_po_33:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        (Int.(<=) k1 (Int.(-) (array_length t3 : int) 1 : int)))))))))))))))))))))))))))

  goal Heapsort_po_34:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        (forall i:int.
                                          (((Int.(<=) 0 i) /\
                                            (Int.(<=) i k1)) ->
                                           (heap t3 k1 i))))))))))))))))))))))))))))

  goal Heapsort_po_35:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        ((Int.(<=) (Int.(+) k1 1 : int) (Int.(-) (array_length t3 : int) 1 : int)) ->
                                         (Int.(<=) (access t3 0 : int) (access t3 (Int.(+) k1 1 : int) : int))))))))))))))))))))))))))))

  goal Heapsort_po_36:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        ((Int.(<=) (Int.(+) k1 1 : int) (Int.(-) (array_length t3 : int) 1 : int)) ->
                                         (sorted_array t3 (Int.(+) k1 1 : int) (Int.(-) (array_length t3 : int) 1 : int))))))))))))))))))))))))))))

  goal Heapsort_po_37:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        (permutation t3 t))))))))))))))))))))))))))

  goal Heapsort_po_38:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        (Int.(<=) 0 k0))))))))))))))))))))))))))

  goal Heapsort_po_39:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(>=) k0 1) ->
                             ((((Int.(<=) 0 0) /\
                                (Int.(<) 0 (array_length t1 : int))) /\
                               ((Int.(<=) 0 k0) /\
                                (Int.(<) k0 (array_length t1 : int)))) ->
                              (forall t2:(farray int).
                                ((exchange t2 t1 0 k0) ->
                                 ((((Int.(<=) 0 0) /\
                                    (Int.(<=) 0 (Int.(-) k0 1 : int))) /\
                                   ((Int.(<) (Int.(-) k0 1 : int) (array_length t2 : int)) /\
                                    (forall i:int.
                                      (((Int.(<=) (Int.(+) 0 1 : int) i) /\
                                        (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                       (heap t2 (Int.(-) k0 1 : int) i))))) ->
                                  (forall t3:(farray int).
                                    (((permutation t3 t2) /\
                                      ((forall i:int.
                                         (((Int.(<=) 0 i) /\
                                           (Int.(<=) i (Int.(-) k0 1 : int))) ->
                                          (heap t3 (Int.(-) k0 1 : int) i))) /\
                                       ((forall i:int.
                                          ((((Int.(<=) 0 i) /\ (Int.(<) i 0)) \/
                                            (((Int.(<) 0 i) /\
                                              (Int.(<) i (Int.(+) (Int.(*) 2 0 : int) 1 : int))) \/
                                             ((Int.(<) (Int.(-) k0 1 : int) i) /\
                                              (Int.(<) i (array_length t3 : int))))) ->
                                           ((access t3 i : int) = (access t2 i : int)))) /\
                                        (forall v:int.
                                          ((inftree t2 (Int.(-) k0 1 : int) v 0) ->
                                           (inftree t3 (Int.(-) k0 1 : int) v 0)))))) ->
                                     (forall k1:int.
                                       ((k1 = (Int.(-) k0 1 : int)) ->
                                        (Int.(<) k1 k0))))))))))))))))))))))))))

  goal Heapsort_po_40:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(<) k0 1) ->
                             (sorted_array t1 0 (Int.(-) (array_length t1 : int) 1 : int)))))))))))))))))))

  goal Heapsort_po_41:
    (forall t:(farray int).
      ((Int.(<=) 1 (array_length t : int)) ->
       (forall result:int.
         ((result = (array_length t : int)) ->
          ((2 <> 0) ->
           (forall result0:int.
             ((result0 = (ComputerDivision.div result 2 : int)) ->
              (forall k:int.
                (forall t0:(farray int).
                  ((((Int.(<=) (Int.(-_) 1 : int) k) /\
                     (Int.(<=) k (Int.(-) (array_length t0 : int) 1 : int))) /\
                    ((forall i:int.
                       (((Int.(<=) (Int.(+) k 1 : int) i) /\
                         (Int.(<=) i (Int.(-) (array_length t0 : int) 1 : int))) ->
                        (heap t0 (Int.(-) (array_length t0 : int) 1 : int) i))) /\
                     (permutation t0 t))) ->
                   ((Int.(<) k 0) ->
                    (forall result1:int.
                      ((result1 = (array_length t0 : int)) ->
                       (forall k0:int.
                         (forall t1:(farray int).
                           ((((Int.(<=) 0 k0) /\
                              (Int.(<=) k0 (Int.(-) (array_length t1 : int) 1 : int))) /\
                             ((forall i:int.
                                (((Int.(<=) 0 i) /\ (Int.(<=) i k0)) ->
                                 (heap t1 k0 i))) /\
                              (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                (Int.(<=) (access t1 0 : int) (access t1 (Int.(+) k0 1 : int) : int))) /\
                               (((Int.(<=) (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int)) ->
                                 (sorted_array t1 (Int.(+) k0 1 : int) (Int.(-) (array_length t1 : int) 1 : int))) /\
                                (permutation t1 t))))) ->
                            ((Int.(<) k0 1) -> (permutation t1 t))))))))))))))))))


end