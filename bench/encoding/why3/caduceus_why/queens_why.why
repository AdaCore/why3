theory Why2
  use unit_inf.Unit
  use int.Int
  use int.ComputerDivision
  use real.Real
  use bool_inf.Bool
  predicate eq_unit Unit.unit Unit.unit

  predicate neq_unit Unit.unit Unit.unit

  predicate eq_bool Bool.bool Bool.bool

  predicate neq_bool Bool.bool Bool.bool

  predicate lt_int int int

  predicate le_int int int

  predicate gt_int int int

  predicate ge_int int int

  predicate eq_int int int

  predicate neq_int int int

  function add_int int int : int

  function sub_int int int : int

  function mul_int int int : int

  function div_int int int : int

  function mod_int int int : int

  function neg_int int : int

  predicate zwf_zero (a : int) (b : int) = ((Int.(<=) 0 b) /\ (Int.(<) a b))

  function why3_N  : int

  type iset

  predicate in_ int iset

  predicate included (a : iset) (b : iset) =
    (forall i:int. ((in_ i a) -> (in_ i b)))

  function card iset : int

  axiom Card_nonneg: (forall s:iset. (Int.(>=) (card s : int) 0))

  function empty  : iset

  axiom Empty_def: (forall i:int. (not (in_ i (empty : iset))))

  axiom Empty_card:
    (forall s:iset. (((card s : int) = 0) <-> (s = (empty : iset))))

  function diff iset iset : iset

  axiom Diff_def_1:
    (forall a:iset.
      (forall b:iset.
        (forall i:int.
          ((in_ i (diff a b : iset)) -> ((in_ i a) /\ (not (in_ i b)))))))

  axiom Diff_def_2:
    (forall a:iset.
      (forall b:iset.
        (forall i:int.
          (((in_ i a) /\ (not (in_ i b))) -> (in_ i (diff a b : iset))))))

  function add int iset : iset

  axiom Add_def:
    (forall s:iset.
      (forall x:int.
        (forall i:int [(in_ i (add x s : iset))].
          ((in_ i (add x s : iset)) <-> ((i = x) \/ (in_ i s))))))

  function remove int iset : iset

  axiom Remove_def:
    (forall s:iset.
      (forall x:int.
        (forall i:int [(in_ i (remove x s : iset))].
          ((in_ i (remove x s : iset)) <-> ((in_ i s) /\ (i <> x))))))

  axiom Remove_card:
    (forall s:iset.
      (forall i:int.
        ((in_ i s) ->
         ((card (remove i s : iset) : int) = (Int.(-) (card s : int) 1 : int)))))

  function min_elt iset : int

  axiom Min_elt_def_1:
    (forall s:iset.
      ((Int.(>) (card s : int) 0) -> (in_ (min_elt s : int) s)))

  axiom Min_elt_def_2:
    (forall s:iset.
      ((Int.(>) (card s : int) 0) ->
       (forall i:int. ((in_ i s) -> (Int.(<=) (min_elt s : int) i)))))

  function succ iset : iset

  axiom Succ_def_1:
    (forall s:iset.
      (forall i:int.
        ((in_ i s) -> (in_ (Int.(+) i 1 : int) (succ s : iset)))))

  axiom Succ_def_2:
    (forall s:iset.
      (forall i:int.
        ((in_ i (succ s : iset)) ->
         ((Int.(>=) i 1) /\ (in_ (Int.(-) i 1 : int) s)))))

  function pred iset : iset

  axiom Pred_def_1:
    (forall s:iset.
      (forall i:int [(in_ i (pred s : iset))].
        ((Int.(>=) i 0) ->
         ((in_ (Int.(+) i 1 : int) s) -> (in_ i (pred s : iset))))))

  axiom Pred_def_2:
    (forall s:iset.
      (forall i:int.
        ((in_ i (pred s : iset)) -> (in_ (Int.(+) i 1 : int) s))))

  type arr 'a

  function acc (arr 'a1) int : 'a1

  function upd (arr 'a1) int 'a1 : (arr 'a1)

  axiom Acc_upd_eq:
    (forall a:(arr 'a1).
      (forall i:int.
        (forall v:'a1. ((acc (upd a i v : (arr 'a1)) i : 'a1) = v))))

  axiom Acc_upd_neq:
    (forall a:(arr 'a1).
      (forall i:int.
        (forall j:int.
          (forall v:'a1.
            ((i <> j) ->
             ((acc (upd a i v : (arr 'a1)) j : 'a1) = (acc a j : 'a1)))))))

  predicate eq_prefix (t : (arr 'a1)) (u : (arr 'a1)) (i : int) =
    (forall k:int.
      (((Int.(<=) 0 k) /\ (Int.(<) k i)) ->
       ((acc t k : 'a1) = (acc u k : 'a1))))

  predicate partial_solution (k : int) (s : (arr int)) =
    (forall i:int.
      (((Int.(<=) 0 i) /\ (Int.(<) i k)) ->
       (((Int.(<=) 0 (acc s i : int)) /\
         (Int.(<) (acc s i : int) (why3_N : int))) /\
        (forall j:int.
          (((Int.(<=) 0 j) /\ (Int.(<) j i)) ->
           (((acc s i : int) <> (acc s j : int)) /\
            (((Int.(-) (acc s i : int) (acc s j : int) : int) <> (Int.(-) i j : int)) /\
             ((Int.(-) (acc s i : int) (acc s j : int) : int) <> (Int.(-) j i : int)))))))))

  predicate solution (s : (arr int)) = (partial_solution (why3_N : int) s)

  predicate eq_sol (t : (arr int)) (u : (arr int)) =
    (eq_prefix t u (why3_N : int))

  axiom Partial_solution_eq_prefix:
    (forall t:(arr int).
      (forall u:(arr int).
        (forall k:int [(partial_solution k t), (partial_solution k u)].
          ((partial_solution k t) ->
           ((eq_prefix t u k) -> (partial_solution k u))))))

  predicate lt_sol (s1 : (arr int)) (s2 : (arr int)) =
    (exists i:int.
      (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
       ((eq_prefix s1 s2 i) /\ (Int.(<) (acc s1 i : int) (acc s2 i : int)))))

  predicate sorted (s : (arr (arr int))) (a : int) (b : int) =
    (forall i:int.
      (forall j:int.
        ((((Int.(<=) a i) /\ (Int.(<) i j)) /\ (Int.(<) j b)) ->
         (lt_sol (acc s i : (arr int)) (acc s j : (arr int))))))

  goal Count_po_1:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (((Int.(<=) 0 k) /\
                  (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                   ((Int.(<=) 0 s) /\
                    ("pre_a"
                    ((forall i:int.
                       ((in_ i a) <->
                        (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                         (forall j:int.
                           (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                            (i <> (acc col j : int))))))) /\
                     ("pre_b"
                     ((forall i:int.
                        ((Int.(<=) 0 i) ->
                         ((in_ i b) <->
                          (exists j:int.
                            (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                             ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                      ("pre_c"
                      ((forall i:int.
                         ((Int.(<=) 0 i) ->
                          ((in_ i c) <->
                           (exists j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                              ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                       (partial_solution k col)))))))))) ->
                 (((card a : int) = 0) -> (solution col)))))))))

  goal Count_po_2:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (1 = (Int.(-) s0 s : int)))))))))))))))

  goal Count_po_3:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (Int.(>=) 1 0))))))))))))))

  goal Count_po_4:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (eq_prefix col col k))))))))))))))

  goal Count_po_5:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (eq_prefix sol sol0 s))))))))))))))

  goal Count_po_6:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (sorted sol0 s s0))))))))))))))

  goal Count_po_7:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (forall t:(arr int).
                            (((solution t) /\ (eq_prefix col t k)) ->
                             (exists i:int.
                               (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                (eq_sol t (acc sol0 i : (arr int))))))))))))))))))))

  goal Count_po_8:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (forall t:(arr int).
                            ((exists i:int.
                               (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                (eq_sol t (acc sol0 i : (arr int))))) ->
                             (solution t))))))))))))))))

  goal Count_po_9:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) = 0) ->
                    ((solution col) ->
                     (forall s0:int.
                       (forall sol0:(arr (arr int)).
                         (((s0 = (Int.(+) s 1 : int)) /\
                           ((eq_prefix sol sol0 s) /\
                            ((acc sol0 s : (arr int)) = col))) ->
                          (forall t:(arr int).
                            ((exists i:int.
                               (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                (eq_sol t (acc sol0 i : (arr int))))) ->
                             (eq_prefix col t k))))))))))))))))

  goal Count_po_10:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (((Int.(<=) 0 k) /\
                  (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                   ((Int.(<=) 0 s) /\
                    ("pre_a"
                    ((forall i:int.
                       ((in_ i a) <->
                        (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                         (forall j:int.
                           (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                            (i <> (acc col j : int))))))) /\
                     ("pre_b"
                     ((forall i:int.
                        ((Int.(<=) 0 i) ->
                         ((in_ i b) <->
                          (exists j:int.
                            (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                             ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                      ("pre_c"
                      ((forall i:int.
                         ((Int.(<=) 0 i) ->
                          ((in_ i c) <->
                           (exists j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                              ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                       (partial_solution k col)))))))))) ->
                 (((card a : int) <> 0) ->
                  (included (diff (diff a b : iset) c : iset) (diff (diff a b : iset) c : iset))))))))))

  goal Count_po_11:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (((Int.(<=) 0 k) /\
                  (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                   ((Int.(<=) 0 s) /\
                    ("pre_a"
                    ((forall i:int.
                       ((in_ i a) <->
                        (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                         (forall j:int.
                           (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                            (i <> (acc col j : int))))))) /\
                     ("pre_b"
                     ((forall i:int.
                        ((Int.(<=) 0 i) ->
                         ((in_ i b) <->
                          (exists j:int.
                            (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                             ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                      ("pre_c"
                      ((forall i:int.
                         ((Int.(<=) 0 i) ->
                          ((in_ i c) <->
                           (exists j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                              ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                       (partial_solution k col)))))))))) ->
                 (((card a : int) <> 0) -> (0 = (Int.(-) s s : int))))))))))

  goal Count_po_12:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (((Int.(<=) 0 k) /\
                  (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                   ((Int.(<=) 0 s) /\
                    ("pre_a"
                    ((forall i:int.
                       ((in_ i a) <->
                        (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                         (forall j:int.
                           (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                            (i <> (acc col j : int))))))) /\
                     ("pre_b"
                     ((forall i:int.
                        ((Int.(<=) 0 i) ->
                         ((in_ i b) <->
                          (exists j:int.
                            (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                             ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                      ("pre_c"
                      ((forall i:int.
                         ((Int.(<=) 0 i) ->
                          ((in_ i c) <->
                           (exists j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                              ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                       (partial_solution k col)))))))))) ->
                 (((card a : int) <> 0) -> (Int.(>=) 0 0)))))))))

  goal Count_po_13:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (((Int.(<=) 0 k) /\
                  (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                   ((Int.(<=) 0 s) /\
                    ("pre_a"
                    ((forall i:int.
                       ((in_ i a) <->
                        (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                         (forall j:int.
                           (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                            (i <> (acc col j : int))))))) /\
                     ("pre_b"
                     ((forall i:int.
                        ((Int.(<=) 0 i) ->
                         ((in_ i b) <->
                          (exists j:int.
                            (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                             ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                      ("pre_c"
                      ((forall i:int.
                         ((Int.(<=) 0 i) ->
                          ((in_ i c) <->
                           (exists j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                              ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                       (partial_solution k col)))))))))) ->
                 (((card a : int) <> 0) ->
                  (forall i:int.
                    (forall j:int.
                      ((in_ i (diff (diff (diff a b : iset) c : iset) (diff (diff a b : iset) c : iset) : iset)) ->
                       ((in_ j (diff (diff a b : iset) c : iset)) ->
                        (Int.(<) i j)))))))))))))

  goal Count_po_14:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (((Int.(<=) 0 k) /\
                  (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                   ((Int.(<=) 0 s) /\
                    ("pre_a"
                    ((forall i:int.
                       ((in_ i a) <->
                        (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                         (forall j:int.
                           (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                            (i <> (acc col j : int))))))) /\
                     ("pre_b"
                     ((forall i:int.
                        ((Int.(<=) 0 i) ->
                         ((in_ i b) <->
                          (exists j:int.
                            (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                             ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                      ("pre_c"
                      ((forall i:int.
                         ((Int.(<=) 0 i) ->
                          ((in_ i c) <->
                           (exists j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                              ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                       (partial_solution k col)))))))))) ->
                 (((card a : int) <> 0) -> (partial_solution k col)))))))))

  goal Count_po_15:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (((Int.(<=) 0 k) /\
                  (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                   ((Int.(<=) 0 s) /\
                    ("pre_a"
                    ((forall i:int.
                       ((in_ i a) <->
                        (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                         (forall j:int.
                           (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                            (i <> (acc col j : int))))))) /\
                     ("pre_b"
                     ((forall i:int.
                        ((Int.(<=) 0 i) ->
                         ((in_ i b) <->
                          (exists j:int.
                            (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                             ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                      ("pre_c"
                      ((forall i:int.
                         ((Int.(<=) 0 i) ->
                          ((in_ i c) <->
                           (exists j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                              ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                       (partial_solution k col)))))))))) ->
                 (((card a : int) <> 0) -> (eq_prefix col col k)))))))))

  goal Count_po_16:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) -> (eq_prefix sol sol s))))))))))

  goal Count_po_17:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall t:(arr int).
                      (((solution t) /\
                        (exists di:int.
                          ((in_ di (diff (diff (diff a b : iset) c : iset) (diff (diff a b : iset) c : iset) : iset)) /\
                           (eq_prefix (upd col k di : (arr int)) t (Int.(+) k 1 : int))))) ->
                       (exists i:int.
                         (((Int.(<=) s i) /\ (Int.(<) i s)) /\
                          (eq_sol t (acc sol i : (arr int))))))))))))))))

  goal Count_po_18:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall t:(arr int).
                      ((exists i:int.
                         (((Int.(<=) s i) /\ (Int.(<) i s)) /\
                          (eq_sol t (acc sol i : (arr int))))) ->
                       (solution t))))))))))))

  goal Count_po_19:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall t:(arr int).
                      ((exists i:int.
                         (((Int.(<=) s i) /\ (Int.(<) i s)) /\
                          (eq_sol t (acc sol i : (arr int))))) ->
                       (exists di:int.
                         ((in_ di (diff (diff (diff a b : iset) c : iset) (diff (diff a b : iset) c : iset) : iset)) /\
                          (eq_prefix (upd col k di : (arr int)) t (Int.(+) k 1 : int)))))))))))))))

  goal Count_po_20:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) -> (sorted sol s s))))))))))

  goal Count_po_21:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (Int.(<=) 0 (card a : int)))))))))))))))))))))))))

  goal Count_po_22:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int)))))))))))))))))))))))))

  goal Count_po_23:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (Int.(<=) 0 k1)))))))))))))))))))))))))

  goal Count_po_24:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            ((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int))))))))))))))))))))))))))

  goal Count_po_25:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (Int.(<=) 0 s0)))))))))))))))))))))))))

  goal Count_po_26:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((in_ i (remove (min_elt e : int) a : iset)) ->
                                               ("pre_a" (Int.(<=) 0 i))))))))))))))))))))))))))))

  goal Count_po_27:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((in_ i (remove (min_elt e : int) a : iset)) ->
                                               ("pre_a"
                                               (Int.(<) i (why3_N : int)))))))))))))))))))))))))))))

  goal Count_po_28:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((in_ i (remove (min_elt e : int) a : iset)) ->
                                               (forall j:int.
                                                 (((Int.(<=) 0 j) /\
                                                   (Int.(<) j k1)) ->
                                                  ("pre_a"
                                                  (i <> (acc col1 j : int)))))))))))))))))))))))))))))))

  goal Count_po_29:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((((Int.(<=) 0 i) /\
                                                 (Int.(<) i (why3_N : int))) /\
                                                (forall j:int.
                                                  (((Int.(<=) 0 j) /\
                                                    (Int.(<) j k1)) ->
                                                   (i <> (acc col1 j : int))))) ->
                                               ("pre_a"
                                               (in_ i (remove (min_elt e : int) a : iset)))))))))))))))))))))))))))))

  goal Count_po_30:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((Int.(<=) 0 i) ->
                                               ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) ->
                                                ("pre_a"
                                                ("pre_b"
                                                (exists j:int.
                                                  (((Int.(<=) 0 j) /\
                                                    (Int.(<) j k1)) /\
                                                   ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int)))))))))))))))))))))))))))))))))

  goal Count_po_31:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((Int.(<=) 0 i) ->
                                               ((exists j:int.
                                                  (((Int.(<=) 0 j) /\
                                                    (Int.(<) j k1)) /\
                                                   ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int)))) ->
                                                ("pre_a"
                                                ("pre_b"
                                                (in_ i (succ (add (min_elt e : int) b : iset) : iset)))))))))))))))))))))))))))))))

  goal Count_po_32:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((Int.(<=) 0 i) ->
                                               ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) ->
                                                ("pre_a"
                                                ("pre_b"
                                                ("pre_c"
                                                (exists j:int.
                                                  (((Int.(<=) 0 j) /\
                                                    (Int.(<) j k1)) /\
                                                   ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))))))))))))))))))))))))))))))

  goal Count_po_33:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (forall i:int.
                                              ((Int.(<=) 0 i) ->
                                               ((exists j:int.
                                                  (((Int.(<=) 0 j) /\
                                                    (Int.(<) j k1)) /\
                                                   ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int)))) ->
                                                ("pre_a"
                                                ("pre_b"
                                                ("pre_c"
                                                (in_ i (pred (add (min_elt e : int) c : iset) : iset))))))))))))))))))))))))))))))))

  goal Count_po_34:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            ("pre_a"
                                            ("pre_b"
                                            ("pre_c"
                                            (partial_solution k1 col1))))))))))))))))))))))))))))

  goal Count_po_35:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (included e0 (diff (diff a b : iset) c : iset)))))))))))))))))))))))))))))))))))))

  goal Count_po_36:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (f0 = (Int.(-) s1 s : int)))))))))))))))))))))))))))))))))))))

  goal Count_po_37:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (Int.(>=) f0 0))))))))))))))))))))))))))))))))))))

  goal Count_po_38:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (k3 = k))))))))))))))))))))))))))))))))))))

  goal Count_po_39:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (forall i:int.
                                                                (forall j:int.
                                                                  ((in_ i (diff (diff (diff a b : iset) c : iset) e0 : iset)) ->
                                                                   ((in_ j e0) ->
                                                                    (Int.(<) i j))))))))))))))))))))))))))))))))))))))))

  goal Count_po_40:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (partial_solution k3 col2))))))))))))))))))))))))))))))))))))

  goal Count_po_41:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (eq_prefix col col2 k))))))))))))))))))))))))))))))))))))

  goal Count_po_42:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (eq_prefix sol sol1 s))))))))))))))))))))))))))))))))))))

  goal Count_po_43:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (exists di:int.
                                                                    (
                                                                    (in_ di (diff (diff (diff a b : iset) c : iset) e0 : iset)) /\
                                                                    (eq_prefix (upd col2 k3 di : (arr int)) t (Int.(+) k3 1 : int))))) ->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))))))))))))))))))))))))))))))))

  goal Count_po_44:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (forall t:(arr int).
                                                                ((exists i:int.
                                                                   ((
                                                                    (Int.(<=) s i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))) ->
                                                                 (solution t))))))))))))))))))))))))))))))))))))))

  goal Count_po_45:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (forall t:(arr int).
                                                                ((exists i:int.
                                                                   ((
                                                                    (Int.(<=) s i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))) ->
                                                                 (exists di:int.
                                                                   ((in_ di (diff (diff (diff a b : iset) c : iset) e0 : iset)) /\
                                                                    (eq_prefix (upd col2 k3 di : (arr int)) t (Int.(+) k3 1 : int)))))))))))))))))))))))))))))))))))))))))

  goal Count_po_46:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (sorted sol1 s s1))))))))))))))))))))))))))))))))))))

  goal Count_po_47:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (Int.(<=) 0 (card e : int)))))))))))))))))))))))))))))))))))))

  goal Count_po_48:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(>) (card e : int) 0) ->
                                  (forall e0:iset.
                                    ((e0 = (remove (min_elt e : int) e : iset)) ->
                                     (forall col1:(arr int).
                                       ((col1 = (upd col0 k0 (min_elt e : int) : (arr int))) ->
                                        (forall k1:int.
                                          ((k1 = (Int.(+) k0 1 : int)) ->
                                           (((Int.(<=) 0 (card a : int)) /\
                                             (Int.(<) (card (remove (min_elt e : int) a : iset) : int) (card a : int))) ->
                                            (((Int.(<=) 0 k1) /\
                                              (((Int.(+) k1 (card (remove (min_elt e : int) a : iset) : int) : int) = (why3_N : int)) /\
                                               ((Int.(<=) 0 s0) /\
                                                ("pre_a"
                                                ((forall i:int.
                                                   ((in_ i (remove (min_elt e : int) a : iset)) <->
                                                    (((Int.(<=) 0 i) /\
                                                      (Int.(<) i (why3_N : int))) /\
                                                     (forall j:int.
                                                       (((Int.(<=) 0 j) /\
                                                         (Int.(<) j k1)) ->
                                                        (i <> (acc col1 j : int))))))) /\
                                                 ("pre_b"
                                                 ((forall i:int.
                                                    ((Int.(<=) 0 i) ->
                                                     ((in_ i (succ (add (min_elt e : int) b : iset) : iset)) <->
                                                      (exists j:int.
                                                        (((Int.(<=) 0 j) /\
                                                          (Int.(<) j k1)) /\
                                                         ((acc col1 j : int) = (Int.(-) (Int.(+) i j : int) k1 : int))))))) /\
                                                  ("pre_c"
                                                  ((forall i:int.
                                                     ((Int.(<=) 0 i) ->
                                                      ((in_ i (pred (add (min_elt e : int) c : iset) : iset)) <->
                                                       (exists j:int.
                                                         (((Int.(<=) 0 j) /\
                                                           (Int.(<) j k1)) /\
                                                          ((acc col1 j : int) = (Int.(-) (Int.(+) i k1 : int) j : int))))))) /\
                                                   (partial_solution k1 col1)))))))))) ->
                                             (forall result:int.
                                               (forall col2:(arr int).
                                                 (forall k2:int.
                                                   (forall s1:int.
                                                     (forall sol1:(arr (arr int)).
                                                       (((result = (Int.(-) s1 s0 : int)) /\
                                                         ((Int.(>=) result 0) /\
                                                          ((k2 = k1) /\
                                                           ((eq_prefix col1 col2 k2) /\
                                                            ((eq_prefix sol0 sol1 s0) /\
                                                             ((sorted sol1 s0 s1) /\
                                                              (forall t:(arr int).
                                                                (((solution t) /\
                                                                  (eq_prefix col2 t k2)) <->
                                                                 (exists i:int.
                                                                   ((
                                                                    (Int.(<=) s0 i) /\
                                                                    (Int.(<) i s1)) /\
                                                                    (eq_sol t (acc sol1 i : (arr int))))))))))))) ->
                                                        (forall f0:int.
                                                          ((f0 = (Int.(+) f result : int)) ->
                                                           (forall k3:int.
                                                             ((k3 = (Int.(-) k2 1 : int)) ->
                                                              (Int.(<) (card e0 : int) (card e : int)))))))))))))))))))))))))))))))))))))

  goal Count_po_49:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (f = (Int.(-) s0 s : int)))))))))))))))))))

  goal Count_po_50:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (Int.(>=) f 0))))))))))))))))))

  goal Count_po_51:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) -> (k0 = k))))))))))))))))))

  goal Count_po_52:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (eq_prefix col col0 k0))))))))))))))))))

  goal Count_po_53:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (eq_prefix sol sol0 s))))))))))))))))))

  goal Count_po_54:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (sorted sol0 s s0))))))))))))))))))

  goal Count_po_55:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (forall t:(arr int).
                                    (((solution t) /\ (eq_prefix col0 t k0)) ->
                                     (exists i:int.
                                       (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                        (eq_sol t (acc sol0 i : (arr int))))))))))))))))))))))))

  goal Count_po_56:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (forall t:(arr int).
                                    ((exists i:int.
                                       (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                        (eq_sol t (acc sol0 i : (arr int))))) ->
                                     (solution t))))))))))))))))))))

  goal Count_po_57:
    (forall a:iset.
      (forall b:iset.
        (forall c:iset.
          (forall col:(arr int).
            (forall k:int.
              (forall s:int.
                (forall sol:(arr (arr int)).
                  (((Int.(<=) 0 k) /\
                    (((Int.(+) k (card a : int) : int) = (why3_N : int)) /\
                     ((Int.(<=) 0 s) /\
                      ("pre_a"
                      ((forall i:int.
                         ((in_ i a) <->
                          (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                           (forall j:int.
                             (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                              (i <> (acc col j : int))))))) /\
                       ("pre_b"
                       ((forall i:int.
                          ((Int.(<=) 0 i) ->
                           ((in_ i b) <->
                            (exists j:int.
                              (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                               ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                        ("pre_c"
                        ((forall i:int.
                           ((Int.(<=) 0 i) ->
                            ((in_ i c) <->
                             (exists j:int.
                               (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                                ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                         (partial_solution k col)))))))))) ->
                   (((card a : int) <> 0) ->
                    (forall col0:(arr int).
                      (forall e:iset.
                        (forall f:int.
                          (forall k0:int.
                            (forall s0:int.
                              (forall sol0:(arr (arr int)).
                                (((included e (diff (diff a b : iset) c : iset)) /\
                                  ((f = (Int.(-) s0 s : int)) /\
                                   ((Int.(>=) f 0) /\
                                    ((k0 = k) /\
                                     ((forall i:int.
                                        (forall j:int.
                                          ((in_ i (diff (diff (diff a b : iset) c : iset) e : iset)) ->
                                           ((in_ j e) -> (Int.(<) i j))))) /\
                                      ((partial_solution k0 col0) /\
                                       ((eq_prefix col col0 k) /\
                                        ((eq_prefix sol sol0 s) /\
                                         ((forall t:(arr int).
                                            (((solution t) /\
                                              (exists di:int.
                                                ((in_ di (diff (diff (diff a b : iset) c : iset) e : iset)) /\
                                                 (eq_prefix (upd col0 k0 di : (arr int)) t (Int.(+) k0 1 : int))))) <->
                                             (exists i:int.
                                               (((Int.(<=) s i) /\
                                                 (Int.(<) i s0)) /\
                                                (eq_sol t (acc sol0 i : (arr int))))))) /\
                                          (sorted sol0 s s0)))))))))) ->
                                 ((Int.(<=) (card e : int) 0) ->
                                  (forall t:(arr int).
                                    ((exists i:int.
                                       (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                        (eq_sol t (acc sol0 i : (arr int))))) ->
                                     (eq_prefix col0 t k0))))))))))))))))))))

  function below_N  : iset

  axiom Below_N_def:
    (forall i:int.
      ((in_ i (below_N : iset)) <->
       ((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int)))))

  axiom Below_N_card: ((card (below_N : iset) : int) = (why3_N : int))

  goal Queens_po_1:
    (forall k:int. (forall s:int. (((s = 0) /\ (k = 0)) -> (Int.(<=) 0 k))))

  goal Queens_po_2:
    (forall k:int.
      (forall s:int.
        (((s = 0) /\ (k = 0)) ->
         ((Int.(+) k (card (below_N : iset) : int) : int) = (why3_N : int)))))

  goal Queens_po_3:
    (forall k:int. (forall s:int. (((s = 0) /\ (k = 0)) -> (Int.(<=) 0 s))))

  goal Queens_po_4:
    (forall k:int.
      (forall s:int.
        (((s = 0) /\ (k = 0)) ->
         (forall i:int.
           ((in_ i (below_N : iset)) -> ("pre_a" (Int.(<=) 0 i)))))))

  goal Queens_po_5:
    (forall k:int.
      (forall s:int.
        (((s = 0) /\ (k = 0)) ->
         (forall i:int.
           ((in_ i (below_N : iset)) -> ("pre_a" (Int.(<) i (why3_N : int))))))))

  goal Queens_po_6:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (((s = 0) /\ (k = 0)) ->
           (forall i:int.
             ((in_ i (below_N : iset)) ->
              (forall j:int.
                (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                 ("pre_a" (i <> (acc col j : int)))))))))))

  goal Queens_po_7:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (((s = 0) /\ (k = 0)) ->
           (forall i:int.
             ((((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
               (forall j:int.
                 (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                  (i <> (acc col j : int))))) ->
              ("pre_a" (in_ i (below_N : iset)))))))))

  goal Queens_po_8:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (((s = 0) /\ (k = 0)) ->
           (forall i:int.
             ((Int.(<=) 0 i) ->
              ((in_ i (empty : iset)) ->
               ("pre_a"
               ("pre_b"
               (exists j:int.
                 (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                  ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int)))))))))))))

  goal Queens_po_9:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (((s = 0) /\ (k = 0)) ->
           (forall i:int.
             ((Int.(<=) 0 i) ->
              ((exists j:int.
                 (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                  ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int)))) ->
               ("pre_a" ("pre_b" (in_ i (empty : iset)))))))))))

  goal Queens_po_10:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (((s = 0) /\ (k = 0)) ->
           (forall i:int.
             ((Int.(<=) 0 i) ->
              ((in_ i (empty : iset)) ->
               ("pre_a"
               ("pre_b"
               ("pre_c"
               (exists j:int.
                 (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                  ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))))))))))

  goal Queens_po_11:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (((s = 0) /\ (k = 0)) ->
           (forall i:int.
             ((Int.(<=) 0 i) ->
              ((exists j:int.
                 (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                  ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int)))) ->
               ("pre_a" ("pre_b" ("pre_c" (in_ i (empty : iset))))))))))))

  goal Queens_po_12:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (((s = 0) /\ (k = 0)) ->
           ("pre_a" ("pre_b" ("pre_c" (partial_solution k col))))))))

  goal Queens_po_13:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (forall sol:(arr (arr int)).
            (((s = 0) /\ (k = 0)) ->
             (((Int.(<=) 0 k) /\
               (((Int.(+) k (card (below_N : iset) : int) : int) = (why3_N : int)) /\
                ((Int.(<=) 0 s) /\
                 ("pre_a"
                 ((forall i:int.
                    ((in_ i (below_N : iset)) <->
                     (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                      (forall j:int.
                        (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                         (i <> (acc col j : int))))))) /\
                  ("pre_b"
                  ((forall i:int.
                     ((Int.(<=) 0 i) ->
                      ((in_ i (empty : iset)) <->
                       (exists j:int.
                         (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                          ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                   ("pre_c"
                   ((forall i:int.
                      ((Int.(<=) 0 i) ->
                       ((in_ i (empty : iset)) <->
                        (exists j:int.
                          (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                           ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                    (partial_solution k col)))))))))) ->
              (forall result:int.
                (forall col0:(arr int).
                  (forall k0:int.
                    (forall s0:int.
                      (forall sol0:(arr (arr int)).
                        (((result = (Int.(-) s0 s : int)) /\
                          ((Int.(>=) result 0) /\
                           ((k0 = k) /\
                            ((eq_prefix col col0 k0) /\
                             ((eq_prefix sol sol0 s) /\
                              ((sorted sol0 s s0) /\
                               (forall t:(arr int).
                                 (((solution t) /\ (eq_prefix col0 t k0)) <->
                                  (exists i:int.
                                    (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                     (eq_sol t (acc sol0 i : (arr int))))))))))))) ->
                         (result = s0)))))))))))))

  goal Queens_po_14:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (forall sol:(arr (arr int)).
            (((s = 0) /\ (k = 0)) ->
             (((Int.(<=) 0 k) /\
               (((Int.(+) k (card (below_N : iset) : int) : int) = (why3_N : int)) /\
                ((Int.(<=) 0 s) /\
                 ("pre_a"
                 ((forall i:int.
                    ((in_ i (below_N : iset)) <->
                     (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                      (forall j:int.
                        (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                         (i <> (acc col j : int))))))) /\
                  ("pre_b"
                  ((forall i:int.
                     ((Int.(<=) 0 i) ->
                      ((in_ i (empty : iset)) <->
                       (exists j:int.
                         (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                          ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                   ("pre_c"
                   ((forall i:int.
                      ((Int.(<=) 0 i) ->
                       ((in_ i (empty : iset)) <->
                        (exists j:int.
                          (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                           ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                    (partial_solution k col)))))))))) ->
              (forall result:int.
                (forall col0:(arr int).
                  (forall k0:int.
                    (forall s0:int.
                      (forall sol0:(arr (arr int)).
                        (((result = (Int.(-) s0 s : int)) /\
                          ((Int.(>=) result 0) /\
                           ((k0 = k) /\
                            ((eq_prefix col col0 k0) /\
                             ((eq_prefix sol sol0 s) /\
                              ((sorted sol0 s s0) /\
                               (forall t:(arr int).
                                 (((solution t) /\ (eq_prefix col0 t k0)) <->
                                  (exists i:int.
                                    (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                     (eq_sol t (acc sol0 i : (arr int))))))))))))) ->
                         (sorted sol0 0 s0)))))))))))))

  goal Queens_po_15:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (forall sol:(arr (arr int)).
            (((s = 0) /\ (k = 0)) ->
             (((Int.(<=) 0 k) /\
               (((Int.(+) k (card (below_N : iset) : int) : int) = (why3_N : int)) /\
                ((Int.(<=) 0 s) /\
                 ("pre_a"
                 ((forall i:int.
                    ((in_ i (below_N : iset)) <->
                     (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                      (forall j:int.
                        (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                         (i <> (acc col j : int))))))) /\
                  ("pre_b"
                  ((forall i:int.
                     ((Int.(<=) 0 i) ->
                      ((in_ i (empty : iset)) <->
                       (exists j:int.
                         (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                          ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                   ("pre_c"
                   ((forall i:int.
                      ((Int.(<=) 0 i) ->
                       ((in_ i (empty : iset)) <->
                        (exists j:int.
                          (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                           ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                    (partial_solution k col)))))))))) ->
              (forall result:int.
                (forall col0:(arr int).
                  (forall k0:int.
                    (forall s0:int.
                      (forall sol0:(arr (arr int)).
                        (((result = (Int.(-) s0 s : int)) /\
                          ((Int.(>=) result 0) /\
                           ((k0 = k) /\
                            ((eq_prefix col col0 k0) /\
                             ((eq_prefix sol sol0 s) /\
                              ((sorted sol0 s s0) /\
                               (forall t:(arr int).
                                 (((solution t) /\ (eq_prefix col0 t k0)) <->
                                  (exists i:int.
                                    (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                     (eq_sol t (acc sol0 i : (arr int))))))))))))) ->
                         (forall t:(arr int).
                           ((solution t) ->
                            (exists i:int.
                              (((Int.(<=) 0 i) /\ (Int.(<) i s0)) /\
                               (eq_sol t (acc sol0 i : (arr int)))))))))))))))))))

  goal Queens_po_16:
    (forall col:(arr int).
      (forall k:int.
        (forall s:int.
          (forall sol:(arr (arr int)).
            (((s = 0) /\ (k = 0)) ->
             (((Int.(<=) 0 k) /\
               (((Int.(+) k (card (below_N : iset) : int) : int) = (why3_N : int)) /\
                ((Int.(<=) 0 s) /\
                 ("pre_a"
                 ((forall i:int.
                    ((in_ i (below_N : iset)) <->
                     (((Int.(<=) 0 i) /\ (Int.(<) i (why3_N : int))) /\
                      (forall j:int.
                        (((Int.(<=) 0 j) /\ (Int.(<) j k)) ->
                         (i <> (acc col j : int))))))) /\
                  ("pre_b"
                  ((forall i:int.
                     ((Int.(<=) 0 i) ->
                      ((in_ i (empty : iset)) <->
                       (exists j:int.
                         (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                          ((acc col j : int) = (Int.(-) (Int.(+) i j : int) k : int))))))) /\
                   ("pre_c"
                   ((forall i:int.
                      ((Int.(<=) 0 i) ->
                       ((in_ i (empty : iset)) <->
                        (exists j:int.
                          (((Int.(<=) 0 j) /\ (Int.(<) j k)) /\
                           ((acc col j : int) = (Int.(-) (Int.(+) i k : int) j : int))))))) /\
                    (partial_solution k col)))))))))) ->
              (forall result:int.
                (forall col0:(arr int).
                  (forall k0:int.
                    (forall s0:int.
                      (forall sol0:(arr (arr int)).
                        (((result = (Int.(-) s0 s : int)) /\
                          ((Int.(>=) result 0) /\
                           ((k0 = k) /\
                            ((eq_prefix col col0 k0) /\
                             ((eq_prefix sol sol0 s) /\
                              ((sorted sol0 s s0) /\
                               (forall t:(arr int).
                                 (((solution t) /\ (eq_prefix col0 t k0)) <->
                                  (exists i:int.
                                    (((Int.(<=) s i) /\ (Int.(<) i s0)) /\
                                     (eq_sol t (acc sol0 i : (arr int))))))))))))) ->
                         (forall t:(arr int).
                           ((exists i:int.
                              (((Int.(<=) 0 i) /\ (Int.(<) i s0)) /\
                               (eq_sol t (acc sol0 i : (arr int))))) ->
                            (solution t)))))))))))))))


end