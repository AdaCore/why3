theory Why2
  use Tuple0
  use int.Int
  use int.ComputerDivision
  use real.Real
  use bool.Bool
  logic eq_unit Tuple0.tuple0 Tuple0.tuple0

  logic neq_unit Tuple0.tuple0 Tuple0.tuple0

  logic eq_bool Bool.bool Bool.bool

  logic neq_bool Bool.bool Bool.bool

  logic lt_int int int

  logic le_int int int

  logic gt_int int int

  logic ge_int int int

  logic eq_int int int

  logic neq_int int int

  logic add_int int int : int

  logic sub_int int int : int

  logic mul_int int int : int

  logic div_int int int : int

  logic mod_int int int : int

  logic neg_int int : int

  logic zwf_zero (a : int) (b : int) = ((Int.(<=) 0 b) and (Int.(<) a b))

  goal Loop1_po_1:
    (forall i:int.
      (forall i0:int.
        (forall i1:int.
          (forall i2:int.
            ((Int.(<=) i 10) ->
             ((Int.(<=) i0 10) ->
              ((((Int.(<) i0 10) and (i1 = (Int.(+) i0 1 : int))) and
                (i2 = i1)) ->
               (Int.(<=) i2 10))))))))

  goal Loop1_po_2:
    (forall i:int.
      (forall i0:int.
        (forall i1:int.
          (forall i2:int.
            ((Int.(<=) i 10) ->
             ((Int.(<=) i0 10) ->
              ((((Int.(<) i0 10) and (i1 = (Int.(+) i0 1 : int))) and
                (i2 = i1)) ->
               ((Int.(<=) 0 (Int.(-) 10 i0 : int)) and
                (Int.(<) (Int.(-) 10 i2 : int) (Int.(-) 10 i0 : int))))))))))

  goal Loop1_po_3:
    (forall i:int.
      (forall i0:int.
        (forall i3:int.
          ((Int.(<=) i 10) ->
           ((((Int.(<=) i0 10) and (Int.(>=) i0 10)) and (i3 = i0)) ->
            (i3 = 10))))))

  goal Oppose_po_1:
    (forall x:int.
      (forall x0:int.
        ((x0 = (Int.(-_) x : int)) -> (x0 = (Int.(-_) x : int)))))

  goal Loop2_po_1:
    (forall x:int.
      (forall x1:int.
        (forall x2:int.
          (forall x3:int.
            ((Int.(<=) x 10) ->
             ((Int.(<=) x1 10) ->
              ((((Int.(<) x1 10) and (x2 = (Int.(+) x1 1 : int))) and
                (x3 = x2)) ->
               (Int.(<=) x3 10))))))))

  goal Loop2_po_2:
    (forall x:int.
      (forall x1:int.
        (forall x2:int.
          (forall x3:int.
            ((Int.(<=) x 10) ->
             ((Int.(<=) x1 10) ->
              ((((Int.(<) x1 10) and (x2 = (Int.(+) x1 1 : int))) and
                (x3 = x2)) ->
               ((Int.(<=) 0 (Int.(-) 10 x1 : int)) and
                (Int.(<) (Int.(-) 10 x3 : int) (Int.(-) 10 x1 : int))))))))))

  goal Loop2_po_3:
    (forall x:int.
      (forall x1:int.
        (forall x4:int.
          ((Int.(<=) x 10) ->
           ((((Int.(<=) x1 10) and (Int.(>=) x1 10)) and (x4 = x1)) ->
            (x4 = 10))))))

  goal Loop2_po_4:
    (forall x:int.
      (forall x1:int.
        (forall x4:int.
          (forall x5:int.
            (forall x6:int.
              ((Int.(<=) x 10) ->
               ((((((Int.(<=) x1 10) and (Int.(>=) x1 10)) and (x4 = x1)) and
                  (x4 = 10)) and
                 ((((Int.(>) x4 0) and (x5 = (Int.(-_) x4 : int))) and
                   (x6 = x5)) or
                  ((Int.(<=) x4 0) and (x6 = x4)))) ->
                (x6 = (Int.(-_) 10 : int)))))))))


end