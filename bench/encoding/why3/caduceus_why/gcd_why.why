theory Why2
  use unit_inf.Unit
  use int.Int
  use int.ComputerDivision
  use real.Real
  use bool_inf.Bool
  predicate eq_unit Unit.unit Unit.unit

  predicate neq_unit Unit.unit Unit.unit

  predicate eq_bool Bool.bool Bool.bool

  predicate neq_bool Bool.bool Bool.bool

  predicate lt_int int int

  predicate le_int int int

  predicate gt_int int int

  predicate ge_int int int

  predicate eq_int int int

  predicate neq_int int int

  function add_int int int : int

  function sub_int int int : int

  function mul_int int int : int

  function div_int int int : int

  function mod_int int int : int

  function neg_int int : int

  predicate zwf_zero (a : int) (b : int) = ((Int.(<=) 0 b) /\ (Int.(<) a b))

  function gcd int int : int

  axiom Gcd_asubb_b:
    (forall a:int.
      (forall b:int. ((gcd a b : int) = (gcd (Int.(-) a b : int) b : int))))

  axiom Gcd_a_bsuba:
    (forall a:int.
      (forall b:int. ((gcd a b : int) = (gcd a (Int.(-) b a : int) : int))))

  axiom Gcd_a_a: (forall a:int. ((gcd a a : int) = a))

  axiom Gcd_a_0: (forall a:int. ((gcd a 0 : int) = a))

  function max int int : int

  axiom Max_def:
    (forall x:int.
      (forall y:int.
        ((((max x y : int) = x) \/ ((max x y : int) = y)) /\
         ((Int.(>=) (max x y : int) x) /\ (Int.(>=) (max x y : int) y)))))

  goal Gcd1_po_1:
    (forall a:int.
      (forall b:int. (((Int.(>) a 0) /\ (Int.(>) b 0)) -> (Int.(<) 0 a))))

  goal Gcd1_po_2:
    (forall a:int.
      (forall b:int. (((Int.(>) a 0) /\ (Int.(>) b 0)) -> (Int.(<) 0 b))))

  goal Gcd1_po_3:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(>) x y) ->
                (forall x0:int.
                  ((x0 = (Int.(-) x y : int)) -> (Int.(<) 0 x0)))))))))))

  goal Gcd1_po_4:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(>) x y) ->
                (forall x0:int.
                  ((x0 = (Int.(-) x y : int)) -> (Int.(<) 0 y)))))))))))

  goal Gcd1_po_5:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(>) x y) ->
                (forall x0:int.
                  ((x0 = (Int.(-) x y : int)) ->
                   ((gcd x0 y : int) = (gcd a b : int))))))))))))

  goal Gcd1_po_6:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(>) x y) ->
                (forall x0:int.
                  ((x0 = (Int.(-) x y : int)) -> (Int.(<=) 0 (max x y : int))))))))))))

  goal Gcd1_po_7:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(>) x y) ->
                (forall x0:int.
                  ((x0 = (Int.(-) x y : int)) ->
                   (Int.(<) (max x0 y : int) (max x y : int))))))))))))

  goal Gcd1_po_8:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(<=) x y) ->
                (forall y0:int.
                  ((y0 = (Int.(-) y x : int)) -> (Int.(<) 0 y0)))))))))))

  goal Gcd1_po_9:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(<=) x y) ->
                (forall y0:int.
                  ((y0 = (Int.(-) y x : int)) ->
                   ((gcd x y0 : int) = (gcd a b : int))))))))))))

  goal Gcd1_po_10:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(<=) x y) ->
                (forall y0:int.
                  ((y0 = (Int.(-) y x : int)) -> (Int.(<=) 0 (max x y : int))))))))))))

  goal Gcd1_po_11:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x <> y) ->
               ((Int.(<=) x y) ->
                (forall y0:int.
                  ((y0 = (Int.(-) y x : int)) ->
                   (Int.(<) (max x y0 : int) (max x y : int))))))))))))

  goal Gcd1_po_12:
    (forall a:int.
      (forall b:int.
        (((Int.(>) a 0) /\ (Int.(>) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<) 0 x) /\
               ((Int.(<) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((x = y) -> (x = (gcd a b : int)))))))))

  axiom Gcd_a_amodb:
    (forall a:int.
      (forall b:int.
        ((gcd a b : int) = (gcd b (ComputerDivision.mod a b : int) : int))))

  axiom Mod_lt:
    (forall a:int.
      (forall b:int.
        ((Int.(<=) 0 (ComputerDivision.mod a b : int)) /\
         (Int.(<) (ComputerDivision.mod a b : int) b))))

  goal Gcd2_po_1:
    (forall a:int.
      (forall b:int. (((Int.(>=) a 0) /\ (Int.(>=) b 0)) -> (Int.(<=) 0 a))))

  goal Gcd2_po_2:
    (forall a:int.
      (forall b:int. (((Int.(>=) a 0) /\ (Int.(>=) b 0)) -> (Int.(<=) 0 b))))

  goal Gcd2_po_3:
    (forall a:int.
      (forall b:int.
        (((Int.(>=) a 0) /\ (Int.(>=) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<=) 0 x) /\
               ((Int.(<=) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((y <> 0) ->
               (forall x0:int.
                 ((x0 = y) ->
                  (forall y0:int.
                    ((y0 = (ComputerDivision.mod x y : int)) ->
                     (Int.(<=) 0 x0))))))))))))

  goal Gcd2_po_4:
    (forall a:int.
      (forall b:int.
        (((Int.(>=) a 0) /\ (Int.(>=) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<=) 0 x) /\
               ((Int.(<=) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((y <> 0) ->
               (forall x0:int.
                 ((x0 = y) ->
                  (forall y0:int.
                    ((y0 = (ComputerDivision.mod x y : int)) ->
                     (Int.(<=) 0 y0))))))))))))

  goal Gcd2_po_5:
    (forall a:int.
      (forall b:int.
        (((Int.(>=) a 0) /\ (Int.(>=) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<=) 0 x) /\
               ((Int.(<=) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((y <> 0) ->
               (forall x0:int.
                 ((x0 = y) ->
                  (forall y0:int.
                    ((y0 = (ComputerDivision.mod x y : int)) ->
                     ((gcd x0 y0 : int) = (gcd a b : int)))))))))))))

  goal Gcd2_po_6:
    (forall a:int.
      (forall b:int.
        (((Int.(>=) a 0) /\ (Int.(>=) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<=) 0 x) /\
               ((Int.(<=) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((y <> 0) ->
               (forall x0:int.
                 ((x0 = y) ->
                  (forall y0:int.
                    ((y0 = (ComputerDivision.mod x y : int)) ->
                     (Int.(<=) 0 y))))))))))))

  goal Gcd2_po_7:
    (forall a:int.
      (forall b:int.
        (((Int.(>=) a 0) /\ (Int.(>=) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<=) 0 x) /\
               ((Int.(<=) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((y <> 0) ->
               (forall x0:int.
                 ((x0 = y) ->
                  (forall y0:int.
                    ((y0 = (ComputerDivision.mod x y : int)) ->
                     (Int.(<) y0 y))))))))))))

  goal Gcd2_po_8:
    (forall a:int.
      (forall b:int.
        (((Int.(>=) a 0) /\ (Int.(>=) b 0)) ->
         (forall x:int.
           (forall y:int.
             (((Int.(<=) 0 x) /\
               ((Int.(<=) 0 y) /\ ((gcd x y : int) = (gcd a b : int)))) ->
              ((y = 0) -> (x = (gcd a b : int)))))))))


end