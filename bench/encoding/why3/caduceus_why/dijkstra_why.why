theory Why2
  use unit_inf.Unit
  use int.Int
  use int.ComputerDivision
  use real.Real
  use bool_inf.Bool
  predicate eq_unit Unit.unit Unit.unit

  predicate neq_unit Unit.unit Unit.unit

  predicate eq_bool Bool.bool Bool.bool

  predicate neq_bool Bool.bool Bool.bool

  predicate lt_int int int

  predicate le_int int int

  predicate gt_int int int

  predicate ge_int int int

  predicate eq_int int int

  predicate neq_int int int

  function add_int int int : int

  function sub_int int int : int

  function mul_int int int : int

  function div_int int int : int

  function mod_int int int : int

  function neg_int int : int

  predicate zwf_zero (a : int) (b : int) = ((Int.(<=) 0 b) /\ (Int.(<) a b))

  type set 'a

  function set_empty  : (set 'a1)

  function set_add 'a1 (set 'a1) : (set 'a1)

  function set_rmv 'a1 (set 'a1) : (set 'a1)

  predicate why3_In 'a1 (set 'a1)

  predicate why3_Is_empty (s : (set 'a1)) = (forall x:'a1. (not (why3_In x s)))

  predicate why3_Incl (s1 : (set 'a1)) (s2 : (set 'a1)) =
    (forall x:'a1. ((why3_In x s1) -> (why3_In x s2)))

  axiom Set_empty_def: (why3_Is_empty (set_empty : (set 'a1)))

  axiom Set_add_def:
    (forall x:'a1.
      (forall y:'a1.
        (forall s:(set 'a1).
          ((why3_In x (set_add y s : (set 'a1))) <->
           ((x = y) \/ (why3_In x s))))))

  axiom Set_rmv_def:
    (forall x:'a1.
      (forall y:'a1.
        (forall s:(set 'a1).
          ((why3_In x (set_rmv y s : (set 'a1))) <->
           ((x <> y) /\ (why3_In x s))))))

  function set_card (set 'a1) : int

  axiom Card_nonneg: (forall s:(set 'a1). (Int.(>=) (set_card s : int) 0))

  axiom Card_set_add:
    (forall x:'a1.
      (forall s:(set 'a1).
        ((not (why3_In x s)) ->
         ((set_card (set_add x s : (set 'a1)) : int) = (Int.(+) 1 (set_card s : int) : int)))))

  axiom Card_set_rmv:
    (forall x:'a1.
      (forall s:(set 'a1).
        ((why3_In x s) ->
         ((set_card s : int) = (Int.(+) 1 (set_card (set_rmv x s : (set 'a1)) : int) : int)))))

  axiom Card_Incl:
    (forall s1:(set 'a1).
      (forall s2:(set 'a1).
        ((why3_Incl s1 s2) ->
         (Int.(<=) (set_card s1 : int) (set_card s2 : int)))))

  type map 'a 'b

  function map_get (map 'a2 'a1) 'a2 : 'a1

  function map_set (map 'a1 'a2) 'a1 'a2 : (map 'a1 'a2)

  axiom Map_get_set_eq:
    (forall m:(map 'a1 'a2).
      (forall i:'a1.
        (forall v:'a2.
          ((map_get (map_set m i v : (map 'a1 'a2)) i : 'a2) = v))))

  axiom Map_get_set_neq:
    (forall m:(map 'a1 'a2).
      (forall i:'a1.
        (forall j:'a1.
          (forall v:'a2.
            ((i <> j) ->
             ((map_get (map_set m i v : (map 'a1 'a2)) j : 'a2) = (map_get m j : 'a2)))))))

  type vertex

  function why3_V  : (set vertex)

  function g_succ vertex : (set vertex)

  axiom G_succ_sound:
    (forall x:vertex.
      (why3_Incl (g_succ x : (set vertex)) (why3_V : (set vertex))))

  function weight vertex vertex : int

  axiom Weight_nonneg:
    (forall x:vertex. (forall y:vertex. (Int.(>=) (weight x y : int) 0)))

  predicate why3_Min (m : vertex) (why3_Q : (set vertex)) (d : (map vertex int)) =
    ((why3_In m why3_Q) /\
     (forall x:vertex.
       ((why3_In x why3_Q) ->
        (Int.(<=) (map_get d x : int) (map_get d m : int)))))

  predicate path vertex vertex int

  axiom Path_nil: (forall x:vertex. (path x x 0))

  axiom Path_cons:
    (forall x:vertex.
      (forall y:vertex.
        (forall z:vertex.
          (forall d:int.
            ((path x y d) ->
             ((why3_In z (g_succ y : (set vertex))) ->
              (path x z (Int.(+) d (weight y z : int) : int))))))))

  axiom Length_nonneg:
    (forall x:vertex.
      (forall y:vertex. (forall d:int. ((path x y d) -> (Int.(>=) d 0)))))

  predicate shortest_path (x : vertex) (y : vertex) (d : int) =
    ((path x y d) /\ (forall d':int. ((path x y d') -> (Int.(<=) d d'))))

  axiom Path_inversion:
    (forall src:vertex.
      (forall v:vertex.
        (forall d:int.
          ((path src v d) ->
           (((v = src) /\ (d = 0)) \/
            (exists v':vertex.
              ((path src v' (Int.(-) d (weight v' v : int) : int)) /\
               (why3_In v (g_succ v' : (set vertex))))))))))

  axiom Path_shortest_path:
    (forall src:vertex.
      (forall v:vertex.
        (forall d:int.
          ((path src v d) ->
           (exists d':int. ((shortest_path src v d') /\ (Int.(<=) d' d)))))))

  axiom Main_lemma:
    (forall src:vertex.
      (forall v:vertex.
        (forall d:int.
          ((path src v d) ->
           ((not (shortest_path src v d)) ->
            (exists v':vertex.
              (exists d':int.
                ((shortest_path src v' d') /\
                 ((why3_In v (g_succ v' : (set vertex))) /\
                  (Int.(<) (Int.(+) d' (weight v' v : int) : int) d))))))))))

  axiom Completeness_lemma:
    (forall s:(set vertex).
      (forall src:vertex.
        (forall dst:vertex.
          (forall d:int.
            ((forall v:vertex.
               ((why3_In v s) ->
                (forall w:vertex.
                  ((why3_In w (g_succ v : (set vertex))) -> (why3_In w s))))) ->
             ((why3_In src s) -> ((path src dst d) -> (why3_In dst s))))))))

  predicate why3_Inv_src (src : vertex) (why3_S : (set vertex)) (why3_Q : (set vertex)) =
    ((why3_In src why3_S) \/ (why3_In src why3_Q))

  predicate why3_Inv (src : vertex) (why3_S : (set vertex)) (why3_Q : (set vertex)) (d : (map vertex int)) =
    ((why3_Inv_src src why3_S why3_Q) /\
     ((why3_Incl why3_S (why3_V : (set vertex))) /\
      ((why3_Incl why3_Q (why3_V : (set vertex))) /\
       ((forall v:vertex.
          ((why3_In v why3_Q) -> ((why3_In v why3_S) -> false))) /\
        ((forall v:vertex.
           ((why3_In v why3_S) -> (shortest_path src v (map_get d v : int)))) /\
         ((forall v:vertex.
            ((why3_In v why3_Q) -> (path src v (map_get d v : int)))) /\
          (forall m:vertex.
            ((why3_Min m why3_Q d) ->
             (forall x:vertex.
               (forall dx:int.
                 ((shortest_path src x dx) ->
                  ((Int.(<) dx (map_get d m : int)) -> (why3_In x why3_S)))))))))))))

  predicate why3_InvSucc (src : vertex) (why3_S : (set vertex)) (why3_Q : (set vertex)) =
    (forall x:vertex.
      ((why3_In x why3_S) ->
       (forall y:vertex.
         ((why3_In y (g_succ x : (set vertex))) ->
          ((why3_In y why3_S) \/ (why3_In y why3_Q))))))

  predicate why3_InvSucc2 (src : vertex) (why3_S : (set vertex)) (why3_Q : (set vertex)) (u : vertex) (su : (set vertex)) =
    (forall x:vertex.
      ((why3_In x why3_S) ->
       (forall y:vertex.
         ((why3_In y (g_succ x : (set vertex))) ->
          (((x <> u) \/ ((x = u) /\ (not (why3_In y su)))) ->
           ((why3_In y why3_S) \/ (why3_In y why3_Q)))))))

  goal Shortest_path_po_1:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (why3_Inv src why3_S why3_Q d0)))))))))

  goal Shortest_path_po_2:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (why3_InvSucc src why3_S why3_Q)))))))))

  goal Shortest_path_po_3:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               (shortest_path src result (map_get d1 result : int))))))))))))))))))

  goal Shortest_path_po_4:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (why3_Incl (g_succ result : (set vertex)) (g_succ result : (set vertex))))))))))))))))))))))

  goal Shortest_path_po_5:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (why3_Inv src why3_S1 why3_Q1 d1))))))))))))))))))))

  goal Shortest_path_po_6:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (why3_InvSucc2 src why3_S1 why3_Q1 result (g_succ result : (set vertex))))))))))))))))))))))

  goal Shortest_path_po_7:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((not (why3_Is_empty su)) ->
                                           ((not (why3_Is_empty su)) ->
                                            (forall result0:vertex.
                                              (forall su0:(set vertex).
                                                (((why3_In result0 su) /\
                                                  (su0 = (set_rmv result0 su : (set vertex)))) ->
                                                 (forall why3_Q3:(set vertex).
                                                   (forall d3:(map vertex int).
                                                     ((((why3_In result0 why3_S1) /\
                                                        ((why3_Q3 = why3_Q2) /\
                                                         (d3 = d2))) \/
                                                       (((why3_In result0 why3_Q3) /\
                                                         ((Int.(>=) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                          ((why3_Q3 = why3_Q2) /\
                                                           (d3 = d2)))) \/
                                                        (((why3_In result0 why3_Q3) /\
                                                          ((Int.(<) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                           ((why3_Q3 = why3_Q2) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int)))))) \/
                                                         ((not (why3_In result0 why3_S1)) /\
                                                          ((not (why3_In result0 why3_Q3)) /\
                                                           ((why3_Q3 = (set_add result0 why3_Q2 : (set vertex))) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int))))))))) ->
                                                      (why3_Incl su0 (g_succ result : (set vertex))))))))))))))))))))))))))))))))))

  goal Shortest_path_po_8:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((not (why3_Is_empty su)) ->
                                           ((not (why3_Is_empty su)) ->
                                            (forall result0:vertex.
                                              (forall su0:(set vertex).
                                                (((why3_In result0 su) /\
                                                  (su0 = (set_rmv result0 su : (set vertex)))) ->
                                                 (forall why3_Q3:(set vertex).
                                                   (forall d3:(map vertex int).
                                                     ((((why3_In result0 why3_S1) /\
                                                        ((why3_Q3 = why3_Q2) /\
                                                         (d3 = d2))) \/
                                                       (((why3_In result0 why3_Q3) /\
                                                         ((Int.(>=) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                          ((why3_Q3 = why3_Q2) /\
                                                           (d3 = d2)))) \/
                                                        (((why3_In result0 why3_Q3) /\
                                                          ((Int.(<) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                           ((why3_Q3 = why3_Q2) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int)))))) \/
                                                         ((not (why3_In result0 why3_S1)) /\
                                                          ((not (why3_In result0 why3_Q3)) /\
                                                           ((why3_Q3 = (set_add result0 why3_Q2 : (set vertex))) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int))))))))) ->
                                                      (why3_Inv src why3_S1 why3_Q3 d3))))))))))))))))))))))))))))))))

  goal Shortest_path_po_9:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((not (why3_Is_empty su)) ->
                                           ((not (why3_Is_empty su)) ->
                                            (forall result0:vertex.
                                              (forall su0:(set vertex).
                                                (((why3_In result0 su) /\
                                                  (su0 = (set_rmv result0 su : (set vertex)))) ->
                                                 (forall why3_Q3:(set vertex).
                                                   (forall d3:(map vertex int).
                                                     ((((why3_In result0 why3_S1) /\
                                                        ((why3_Q3 = why3_Q2) /\
                                                         (d3 = d2))) \/
                                                       (((why3_In result0 why3_Q3) /\
                                                         ((Int.(>=) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                          ((why3_Q3 = why3_Q2) /\
                                                           (d3 = d2)))) \/
                                                        (((why3_In result0 why3_Q3) /\
                                                          ((Int.(<) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                           ((why3_Q3 = why3_Q2) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int)))))) \/
                                                         ((not (why3_In result0 why3_S1)) /\
                                                          ((not (why3_In result0 why3_Q3)) /\
                                                           ((why3_Q3 = (set_add result0 why3_Q2 : (set vertex))) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int))))))))) ->
                                                      (why3_InvSucc2 src why3_S1 why3_Q3 result su0))))))))))))))))))))))))))))))))

  goal Shortest_path_po_10:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((not (why3_Is_empty su)) ->
                                           ((not (why3_Is_empty su)) ->
                                            (forall result0:vertex.
                                              (forall su0:(set vertex).
                                                (((why3_In result0 su) /\
                                                  (su0 = (set_rmv result0 su : (set vertex)))) ->
                                                 (forall why3_Q3:(set vertex).
                                                   (forall d3:(map vertex int).
                                                     ((((why3_In result0 why3_S1) /\
                                                        ((why3_Q3 = why3_Q2) /\
                                                         (d3 = d2))) \/
                                                       (((why3_In result0 why3_Q3) /\
                                                         ((Int.(>=) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                          ((why3_Q3 = why3_Q2) /\
                                                           (d3 = d2)))) \/
                                                        (((why3_In result0 why3_Q3) /\
                                                          ((Int.(<) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                           ((why3_Q3 = why3_Q2) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int)))))) \/
                                                         ((not (why3_In result0 why3_S1)) /\
                                                          ((not (why3_In result0 why3_Q3)) /\
                                                           ((why3_Q3 = (set_add result0 why3_Q2 : (set vertex))) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int))))))))) ->
                                                      (Int.(<=) 0 (set_card su : int)))))))))))))))))))))))))))))))))

  goal Shortest_path_po_11:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((not (why3_Is_empty su)) ->
                                           ((not (why3_Is_empty su)) ->
                                            (forall result0:vertex.
                                              (forall su0:(set vertex).
                                                (((why3_In result0 su) /\
                                                  (su0 = (set_rmv result0 su : (set vertex)))) ->
                                                 (forall why3_Q3:(set vertex).
                                                   (forall d3:(map vertex int).
                                                     ((((why3_In result0 why3_S1) /\
                                                        ((why3_Q3 = why3_Q2) /\
                                                         (d3 = d2))) \/
                                                       (((why3_In result0 why3_Q3) /\
                                                         ((Int.(>=) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                          ((why3_Q3 = why3_Q2) /\
                                                           (d3 = d2)))) \/
                                                        (((why3_In result0 why3_Q3) /\
                                                          ((Int.(<) (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) (map_get d3 result0 : int)) /\
                                                           ((why3_Q3 = why3_Q2) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int)))))) \/
                                                         ((not (why3_In result0 why3_S1)) /\
                                                          ((not (why3_In result0 why3_Q3)) /\
                                                           ((why3_Q3 = (set_add result0 why3_Q2 : (set vertex))) /\
                                                            (d3 = (map_set d2 result0 (Int.(+) (map_get d3 result : int) (weight result result0 : int) : int) : (map vertex int))))))))) ->
                                                      (Int.(<) (set_card su0 : int) (set_card su : int)))))))))))))))))))))))))))))))))

  goal Shortest_path_po_12:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((why3_Is_empty su) ->
                                           (why3_Inv src why3_S1 why3_Q2 d2)))))))))))))))))))))))))

  goal Shortest_path_po_13:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((why3_Is_empty su) ->
                                           (why3_InvSucc src why3_S1 why3_Q2)))))))))))))))))))))))))

  goal Shortest_path_po_14:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((why3_Is_empty su) ->
                                           (Int.(<=) 0 (Int.(-) (set_card (why3_V : (set vertex)) : int) (set_card why3_S0 : int) : int))))))))))))))))))))))))))

  goal Shortest_path_po_15:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((not (why3_Is_empty why3_Q0)) ->
                          (forall result:vertex.
                            (forall why3_Q1:(set vertex).
                              (((why3_Min result why3_Q0 d1) /\
                                (why3_Q1 = (set_rmv result why3_Q0 : (set vertex)))) ->
                               ((shortest_path src result (map_get d1 result : int)) ->
                                (forall why3_S1:(set vertex).
                                  ((why3_S1 = (set_add result why3_S0 : (set vertex))) ->
                                   (forall why3_Q2:(set vertex).
                                     (forall d2:(map vertex int).
                                       (forall su:(set vertex).
                                         (((why3_Incl su (g_succ result : (set vertex))) /\
                                           ((why3_Inv src why3_S1 why3_Q2 d2) /\
                                            (why3_InvSucc2 src why3_S1 why3_Q2 result su))) ->
                                          ((why3_Is_empty su) ->
                                           (Int.(<) (Int.(-) (set_card (why3_V : (set vertex)) : int) (set_card why3_S1 : int) : int) (Int.(-) (set_card (why3_V : (set vertex)) : int) (set_card why3_S0 : int) : int))))))))))))))))))))))))))

  goal Shortest_path_po_16:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((why3_Is_empty why3_Q0) ->
                          (forall v:vertex.
                            ((why3_In v why3_S0) ->
                             (shortest_path src v (map_get d1 v : int)))))))))))))))))

  goal Shortest_path_po_17:
    (forall src:vertex.
      (forall dst:vertex.
        (forall d:(map vertex int).
          (((why3_In src (why3_V : (set vertex))) /\
            (why3_In dst (why3_V : (set vertex)))) ->
           (forall why3_Q:(set vertex).
             (forall why3_S:(set vertex).
               (forall d0:(map vertex int).
                 (((why3_Is_empty why3_S) /\
                   ((why3_Q = (set_add src (set_empty : (set vertex)) : (set vertex))) /\
                    (d0 = (map_set d src 0 : (map vertex int))))) ->
                  (forall why3_Q0:(set vertex).
                    (forall why3_S0:(set vertex).
                      (forall d1:(map vertex int).
                        (((why3_Inv src why3_S0 why3_Q0 d1) /\
                          (why3_InvSucc src why3_S0 why3_Q0)) ->
                         ((why3_Is_empty why3_Q0) ->
                          (forall v:vertex.
                            ((not (why3_In v why3_S0)) ->
                             (forall dv:int. (not (path src v dv))))))))))))))))))


end