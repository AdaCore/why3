logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

type 'a farray

logic access : 'a1 farray, int -> 'a1

logic update : 'a1 farray, int, 'a1 -> 'a1 farray

axiom access_update:
  (forall a:'a1 farray.
    (forall i:int. (forall v:'a1. (access(update(a, i, v), i) = v))))

axiom access_update_neq:
  (forall a:'a1 farray.
    (forall i:int.
      (forall j:int.
        (forall v:'a1.
          ((i <> j) -> (access(update(a, i, v), j) = access(a, j)))))))

logic array_length : 'a1 farray -> int

predicate sorted_array(t: int farray, i: int, j: int) =
  (forall k1:int.
    (forall k2:int.
      ((((i <= k1) and (k1 <= k2)) and (k2 <= j)) -> (access(t,
       k1) <= access(t, k2)))))

predicate exchange(a1: 'a1 farray, a2: 'a1 farray, i: int, j: int) =
  ((array_length(a1) = array_length(a2)) and
   ((access(a1, i) = access(a2, j)) and
    ((access(a2, i) = access(a1, j)) and
     (forall k:int.
       (((k <> i) and (k <> j)) -> (access(a1, k) = access(a2, k)))))))

logic permut : 'a1 farray, 'a1 farray, int, int -> prop

axiom permut_refl:
  (forall t:'a1 farray. (forall l:int. (forall u:int. permut(t, t, l, u))))

axiom permut_sym:
  (forall t1:'a1 farray.
    (forall t2:'a1 farray.
      (forall l:int.
        (forall u:int. (permut(t1, t2, l, u) -> permut(t2, t1, l, u))))))

axiom permut_trans:
  (forall t1:'a1 farray.
    (forall t2:'a1 farray.
      (forall t3:'a1 farray.
        (forall l:int.
          (forall u:int.
            (permut(t1, t2, l, u) ->
             (permut(t2, t3, l, u) -> permut(t1, t3, l, u))))))))

axiom permut_exchange:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l:int.
        (forall u:int.
          (forall i:int.
            (forall j:int.
              (((l <= i) and (i <= u)) ->
               (((l <= j) and (j <= u)) ->
                (exchange(a1, a2, i, j) -> permut(a1, a2, l, u))))))))))

axiom exchange_upd:
  (forall a:'a1 farray.
    (forall i:int.
      (forall j:int. exchange(a, update(update(a, i, access(a, j)), j,
        access(a, i)), i, j))))

axiom permut_weakening:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l1:int.
        (forall r1:int.
          (forall l2:int.
            (forall r2:int.
              ((((l1 <= l2) and (l2 <= r2)) and (r2 <= r1)) ->
               (permut(a1, a2, l2, r2) -> permut(a1, a2, l1, r1)))))))))

axiom permut_eq:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l:int.
        (forall u:int.
          ((l <= u) ->
           (permut(a1, a2, l, u) ->
            (forall i:int.
              (((i < l) or (u < i)) -> (access(a2, i) = access(a1, i))))))))))

predicate permutation(a1: 'a1 farray, a2: 'a1 farray) = permut(a1, a2, 0,
  (array_length(a1) - 1))

axiom array_length_update:
  (forall a:'a1 farray.
    (forall i:int.
      (forall v:'a1. (array_length(update(a, i, v)) = array_length(a)))))

axiom permut_array_length:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l:int.
        (forall u:int.
          (permut(a1, a2, l, u) -> (array_length(a1) = array_length(a2)))))))

goal find_po_1:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  (0 <= (n - m))

goal find_po_2:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((j - m) < (n - m))

goal find_po_3:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i <= k) ->
  (0 <= (n - m))

goal find_po_4:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i <= k) ->
  ((n - i) < (n - m))

goal find_po_5:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i <= k) ->
  ((0 <= (n - m)) and ((n - i) < (n - m))) ->
  ((i <= k) and (k <= n)) ->
  forall a2:int farray.
  (permut(a1, a2, i, n) and
   ((forall r:int.
      (((i <= r) and (r <= k)) -> (access(a2, r) <= access(a2, k)))) and
    (forall r:int.
      (((k <= r) and (r <= n)) -> (access(a2, k) <= access(a2, r)))))) ->
  permut(a, a2, m, n)

goal find_po_6:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i <= k) ->
  ((0 <= (n - m)) and ((n - i) < (n - m))) ->
  ((i <= k) and (k <= n)) ->
  forall a2:int farray.
  (permut(a1, a2, i, n) and
   ((forall r:int.
      (((i <= r) and (r <= k)) -> (access(a2, r) <= access(a2, k)))) and
    (forall r:int.
      (((k <= r) and (r <= n)) -> (access(a2, k) <= access(a2, r)))))) ->
  forall r:int.
  ((m <= r) and (r <= k)) ->
  (access(a2, r) <= access(a2, k))

goal find_po_7:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i <= k) ->
  ((0 <= (n - m)) and ((n - i) < (n - m))) ->
  ((i <= k) and (k <= n)) ->
  forall a2:int farray.
  (permut(a1, a2, i, n) and
   ((forall r:int.
      (((i <= r) and (r <= k)) -> (access(a2, r) <= access(a2, k)))) and
    (forall r:int.
      (((k <= r) and (r <= n)) -> (access(a2, k) <= access(a2, r)))))) ->
  forall r:int.
  ((k <= r) and (r <= n)) ->
  (access(a2, k) <= access(a2, r))

goal find_po_8:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i > k) ->
  permut(a, a1, m, n)

goal find_po_9:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i > k) ->
  forall r:int.
  ((m <= r) and (r <= k)) ->
  (access(a1, r) <= access(a1, k))

goal find_po_10:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k <= j) ->
  ((0 <= (n - m)) and ((j - m) < (n - m))) ->
  ((m <= k) and (k <= j)) ->
  forall a1:int farray.
  (permut(a0, a1, m, j) and
   ((forall r:int.
      (((m <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= j)) -> (access(a1, k) <= access(a1, r)))))) ->
  (i > k) ->
  forall r:int.
  ((k <= r) and (r <= n)) ->
  (access(a1, k) <= access(a1, r))

goal find_po_11:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i <= k) ->
  (0 <= (n - m))

goal find_po_12:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i <= k) ->
  ((n - i) < (n - m))

goal find_po_13:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i <= k) ->
  ((0 <= (n - m)) and ((n - i) < (n - m))) ->
  ((i <= k) and (k <= n)) ->
  forall a1:int farray.
  (permut(a0, a1, i, n) and
   ((forall r:int.
      (((i <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= n)) -> (access(a1, k) <= access(a1, r)))))) ->
  permut(a, a1, m, n)

goal find_po_14:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i <= k) ->
  ((0 <= (n - m)) and ((n - i) < (n - m))) ->
  ((i <= k) and (k <= n)) ->
  forall a1:int farray.
  (permut(a0, a1, i, n) and
   ((forall r:int.
      (((i <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= n)) -> (access(a1, k) <= access(a1, r)))))) ->
  forall r:int.
  ((m <= r) and (r <= k)) ->
  (access(a1, r) <= access(a1, k))

goal find_po_15:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i <= k) ->
  ((0 <= (n - m)) and ((n - i) < (n - m))) ->
  ((i <= k) and (k <= n)) ->
  forall a1:int farray.
  (permut(a0, a1, i, n) and
   ((forall r:int.
      (((i <= r) and (r <= k)) -> (access(a1, r) <= access(a1, k)))) and
    (forall r:int.
      (((k <= r) and (r <= n)) -> (access(a1, k) <= access(a1, r)))))) ->
  forall r:int.
  ((k <= r) and (r <= n)) ->
  (access(a1, k) <= access(a1, r))

goal find_po_16:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i > k) ->
  permut(a, a0, m, n)

goal find_po_17:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i > k) ->
  forall r:int.
  ((m <= r) and (r <= k)) ->
  (access(a0, r) <= access(a0, k))

goal find_po_18:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m < n) ->
  forall a0:int farray.
  forall i:int.
  forall j:int.
  ((m <= j) and
   ((j < i) and
    ((i <= n) and
     (permut(a, a0, m, n) and
      (exists x:int.
        ((forall r:int. (((m <= r) and (r <= j)) -> (access(a0, r) <= x))) and
         ((forall r:int. (((j < r) and (r < i)) -> (access(a0, r) = x))) and
          (forall r:int. (((i <= r) and (r <= n)) -> (access(a0, r) >= x)))))))))) ->
  (k > j) ->
  (i > k) ->
  forall r:int.
  ((k <= r) and (r <= n)) ->
  (access(a0, k) <= access(a0, r))

goal find_po_19:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m >= n) ->
  permut(a, a, m, n)

goal find_po_20:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m >= n) ->
  forall r:int.
  ((m <= r) and (r <= k)) ->
  (access(a, r) <= access(a, k))

goal find_po_21:
  forall m:int.
  forall n:int.
  forall k:int.
  forall a:int farray.
  ((m <= k) and (k <= n)) ->
  (m >= n) ->
  forall r:int.
  ((k <= r) and (r <= n)) ->
  (access(a, k) <= access(a, r))

