logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

type 'a farray

logic access : 'a1 farray, int -> 'a1

logic update : 'a1 farray, int, 'a1 -> 'a1 farray

axiom access_update:
  (forall a:'a1 farray.
    (forall i:int. (forall v:'a1. (access(update(a, i, v), i) = v))))

axiom access_update_neq:
  (forall a:'a1 farray.
    (forall i:int.
      (forall j:int.
        (forall v:'a1.
          ((i <> j) -> (access(update(a, i, v), j) = access(a, j)))))))

logic array_length : 'a1 farray -> int

predicate sorted_array(t: int farray, i: int, j: int) =
  (forall k1:int.
    (forall k2:int.
      ((((i <= k1) and (k1 <= k2)) and (k2 <= j)) -> (access(t,
       k1) <= access(t, k2)))))

predicate exchange(a1: 'a1 farray, a2: 'a1 farray, i: int, j: int) =
  ((array_length(a1) = array_length(a2)) and
   ((access(a1, i) = access(a2, j)) and
    ((access(a2, i) = access(a1, j)) and
     (forall k:int.
       (((k <> i) and (k <> j)) -> (access(a1, k) = access(a2, k)))))))

logic permut : 'a1 farray, 'a1 farray, int, int -> prop

axiom permut_refl:
  (forall t:'a1 farray. (forall l:int. (forall u:int. permut(t, t, l, u))))

axiom permut_sym:
  (forall t1:'a1 farray.
    (forall t2:'a1 farray.
      (forall l:int.
        (forall u:int. (permut(t1, t2, l, u) -> permut(t2, t1, l, u))))))

axiom permut_trans:
  (forall t1:'a1 farray.
    (forall t2:'a1 farray.
      (forall t3:'a1 farray.
        (forall l:int.
          (forall u:int.
            (permut(t1, t2, l, u) ->
             (permut(t2, t3, l, u) -> permut(t1, t3, l, u))))))))

axiom permut_exchange:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l:int.
        (forall u:int.
          (forall i:int.
            (forall j:int.
              (((l <= i) and (i <= u)) ->
               (((l <= j) and (j <= u)) ->
                (exchange(a1, a2, i, j) -> permut(a1, a2, l, u))))))))))

axiom exchange_upd:
  (forall a:'a1 farray.
    (forall i:int.
      (forall j:int. exchange(a, update(update(a, i, access(a, j)), j,
        access(a, i)), i, j))))

axiom permut_weakening:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l1:int.
        (forall r1:int.
          (forall l2:int.
            (forall r2:int.
              ((((l1 <= l2) and (l2 <= r2)) and (r2 <= r1)) ->
               (permut(a1, a2, l2, r2) -> permut(a1, a2, l1, r1)))))))))

axiom permut_eq:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l:int.
        (forall u:int.
          ((l <= u) ->
           (permut(a1, a2, l, u) ->
            (forall i:int.
              (((i < l) or (u < i)) -> (access(a2, i) = access(a1, i))))))))))

predicate permutation(a1: 'a1 farray, a2: 'a1 farray) = permut(a1, a2, 0,
  (array_length(a1) - 1))

axiom array_length_update:
  (forall a:'a1 farray.
    (forall i:int.
      (forall v:'a1. (array_length(update(a, i, v)) = array_length(a)))))

axiom permut_array_length:
  (forall a1:'a1 farray.
    (forall a2:'a1 farray.
      (forall l:int.
        (forall u:int.
          (permut(a1, a2, l, u) -> (array_length(a1) = array_length(a2)))))))

logic v : int

function mean(x: int, y: int) : int = ((x + y) / 2)

axiom mean:
  (forall x:int.
    (forall y:int. ((x <= y) -> ((x <= mean(x, y)) and (mean(x, y) <= y)))))

predicate In(t: int farray, l: int, u: int) =
  (exists i:int. (((l <= i) and (i <= u)) and (access(t, i) = v)))

goal binary_search_po_1:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  (1 <= l)

goal binary_search_po_2:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  (u <= (array_length(t) - 1))

goal binary_search_po_3:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  (0 <= p)

goal binary_search_po_4:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  (p <= (array_length(t) - 1))

goal binary_search_po_5:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  (p = 0) ->
  In(t, 1, (array_length(t) - 1)) ->
  In(t, l, u)

goal binary_search_po_6:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  (p > 0) ->
  (access(t, p) = v)

goal binary_search_po_7:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  (l0 <= m)

goal binary_search_po_8:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  (m <= u0)

goal binary_search_po_9:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  (0 <= m)

goal binary_search_po_10:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  (m < array_length(t))

goal binary_search_po_11:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (1 <= l1)

goal binary_search_po_12:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (u0 <= (array_length(t) - 1))

goal binary_search_po_13:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (0 <= p0)

goal binary_search_po_14:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (p0 <= (array_length(t) - 1))

goal binary_search_po_15:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (p0 = 0) ->
  In(t, 1, (array_length(t) - 1)) ->
  In(t, l1, u0)

goal binary_search_po_16:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (p0 > 0) ->
  (access(t, p0) = v)

goal binary_search_po_17:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (0 <= ((2 + u0) - l0))

goal binary_search_po_18:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 < v) ->
  forall l1:int.
  (l1 = (m + 1)) ->
  (((2 + u0) - l1) < ((2 + u0) - l0))

goal binary_search_po_19:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 > v) ->
  forall u1:int.
  (u1 = (m - 1)) ->
  (u1 <= (array_length(t) - 1))

goal binary_search_po_20:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 > v) ->
  forall u1:int.
  (u1 = (m - 1)) ->
  (0 <= p0)

goal binary_search_po_21:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 > v) ->
  forall u1:int.
  (u1 = (m - 1)) ->
  (p0 <= (array_length(t) - 1))

goal binary_search_po_22:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 > v) ->
  forall u1:int.
  (u1 = (m - 1)) ->
  (p0 = 0) ->
  In(t, 1, (array_length(t) - 1)) ->
  In(t, l0, u1)

goal binary_search_po_23:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 > v) ->
  forall u1:int.
  (u1 = (m - 1)) ->
  (p0 > 0) ->
  (access(t, p0) = v)

goal binary_search_po_24:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 > v) ->
  forall u1:int.
  (u1 = (m - 1)) ->
  (0 <= ((2 + u0) - l0))

goal binary_search_po_25:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 > v) ->
  forall u1:int.
  (u1 = (m - 1)) ->
  (((2 + u1) - l0) < ((2 + u0) - l0))

goal binary_search_po_26:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (1 <= l1)

goal binary_search_po_27:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (u0 <= (array_length(t) - 1))

goal binary_search_po_28:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (0 <= p1)

goal binary_search_po_29:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (p1 <= (array_length(t) - 1))

goal binary_search_po_30:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (p1 = 0) ->
  In(t, 1, (array_length(t) - 1)) ->
  In(t, l1, u0)

goal binary_search_po_31:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (p1 > 0) ->
  (access(t, p1) = v)

goal binary_search_po_32:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (0 <= ((2 + u0) - l0))

goal binary_search_po_33:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 <= u0) ->
  forall m:int.
  (m = mean(l0, u0)) ->
  ((l0 <= m) and (m <= u0)) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result0:int.
  (result0 = access(t, m)) ->
  (result0 >= v) ->
  ((0 <= m) and (m < array_length(t))) ->
  forall result1:int.
  (result1 = access(t, m)) ->
  (result1 <= v) ->
  forall p1:int.
  (p1 = m) ->
  forall l1:int.
  (l1 = (u0 + 1)) ->
  (((2 + u0) - l1) < ((2 + u0) - l0))

goal binary_search_po_34:
  forall t:int farray.
  ((array_length(t) >= 1) and sorted_array(t, 1, (array_length(t) - 1))) ->
  forall l:int.
  (l = 1) ->
  forall result:int.
  (result = array_length(t)) ->
  forall u:int.
  (u = (result - 1)) ->
  forall p:int.
  (p = 0) ->
  forall l0:int.
  forall p0:int.
  forall u0:int.
  ((1 <= l0) and
   ((u0 <= (array_length(t) - 1)) and
    (((0 <= p0) and (p0 <= (array_length(t) - 1))) and
     (((p0 = 0) -> (In(t, 1, (array_length(t) - 1)) -> In(t, l0, u0))) and
      ((p0 > 0) -> (access(t, p0) = v)))))) ->
  (l0 > u0) ->
  ((((1 <= p0) and (p0 <= (array_length(t) - 1))) and (access(t, p0) = v)) or
   ((p0 = 0) and (not In(t, 1, (array_length(t) - 1)))))

