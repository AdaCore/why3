logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

goal p_po_1:
  forall x0:int.
  forall result:int.
  ((((x0 = 0) and (x0 = 0)) and (result = 1)) or
   (((x0 = 0) and (x0 <> 0)) and (result = 2))) ->
  (result = 1)

goal p2_po_1:
  forall x2:int.
  forall y:int.
  forall y0:int.
  forall y1:int.
  forall y2:int.
  (y >= 0) ->
  (y0 >= 0) ->
  ((((x2 = y0) and (x2 <> 0)) and (y1 = (y0 - 1))) and (y2 = y1)) ->
  (y2 >= 0)

goal p2_po_2:
  forall x2:int.
  forall y:int.
  forall y0:int.
  forall y1:int.
  forall y2:int.
  (y >= 0) ->
  (y0 >= 0) ->
  ((((x2 = y0) and (x2 <> 0)) and (y1 = (y0 - 1))) and (y2 = y1)) ->
  ((0 <= y0) and (y2 < y0))

goal p2_po_3:
  forall x2:int.
  forall x3:int.
  forall x4:int.
  forall y:int.
  forall y0:int.
  forall y3:int.
  (y >= 0) ->
  (((y0 >= 0) and (((x2 = y0) and (x2 = 0)) and (x3 = x2))) and
   ((x4 = x3) and (y3 = y0))) ->
  (y3 = 0)

goal p3_po_1:
  forall b:bool.
  forall x6:int.
  forall y:int.
  forall y4:int.
  forall y5:int.
  forall y6:int.
  (y >= 0) ->
  (y4 >= 0) ->
  (((((x6 = y4) and (if b then (x6 <> 0) else (x6 = 0))) and (true = b)) and
    (y5 = (y4 - 1))) and
   (y6 = y5)) ->
  (y6 >= 0)

goal p3_po_2:
  forall b:bool.
  forall x6:int.
  forall y:int.
  forall y4:int.
  forall y5:int.
  forall y6:int.
  (y >= 0) ->
  (y4 >= 0) ->
  (((((x6 = y4) and (if b then (x6 <> 0) else (x6 = 0))) and (true = b)) and
    (y5 = (y4 - 1))) and
   (y6 = y5)) ->
  ((0 <= y4) and (y6 < y4))

goal p3_po_3:
  forall b:bool.
  forall x6:int.
  forall x7:int.
  forall x8:int.
  forall y:int.
  forall y4:int.
  forall y7:int.
  (y >= 0) ->
  (((y4 >= 0) and
    ((((x6 = y4) and (if b then (x6 <> 0) else (x6 = 0))) and (false = b)) and
     (x7 = x6))) and
   ((x8 = x7) and (y7 = y4))) ->
  (y7 = 0)

goal p4_po_1:
  forall x10:int.
  forall y:int.
  forall y8:int.
  forall y9:int.
  (y >= 1) ->
  (y8 >= 1) ->
  ((y9 = (y8 - 1)) and ((x10 = y9) and (x10 <> 0))) ->
  (y9 >= 1)

goal p4_po_2:
  forall x10:int.
  forall y:int.
  forall y8:int.
  forall y9:int.
  (y >= 1) ->
  (y8 >= 1) ->
  ((y9 = (y8 - 1)) and ((x10 = y9) and (x10 <> 0))) ->
  ((0 <= y8) and (y9 < y8))

goal p4_po_3:
  forall x10:int.
  forall x11:int.
  forall x12:int.
  forall y:int.
  forall y10:int.
  forall y11:int.
  forall y8:int.
  forall y9:int.
  (y >= 1) ->
  (((y8 >= 1) and
    (((y9 = (y8 - 1)) and ((x10 = y9) and (x10 = 0))) and
     ((x11 = x10) and (y10 = y9)))) and
   ((x12 = x11) and (y11 = y10))) ->
  (y11 = 0)

