#!/bin/sh

dir=`dirname $0`

updateoracle=false
files=""

while test $# != 0; do
case "$1" in
  "-update-oracle")
        updateoracle=true;;
  *)
       files="$files $1"
esac
shift
done

if test "$files" = "" ; then
    files="ce/*.mlw"
fi

cd $dir

# $1 = prover, $2 = file
run () {
    printf "  $2 ($1)... "
    f="$2_$1"
    ../bin/why3prove.opt -P "$1" --timelimit 1 -a split_intros_goal_wp --get-ce "$2.mlw" | \
        # This ad hoc sed removes any timing information from counterexamples output.
        # Counterexamples in JSON format cannot match this regexp.
        sed 's/ ([0-9]\+\.[0-9]\+s)//' > "$f.out"
    ../bin/why3prove.opt -P "$1" --timelimit 1 --debug fast_wp -a split_intros_goal_wp --get-ce "$2.mlw" | \
        sed 's/ ([0-9]\+\.[0-9]\+s)//' >> "$f.out"
    if cmp "$f.oracle" "$f.out" > /dev/null 2>&1 ; then
     echo "ok"
  else
     if $updateoracle; then
        echo "Updating oracle for $2, prover $1"
        mv "$f.out" "$f.oracle"
     else
       echo "FAILED!"
       echo "diff is the following:"
       diff "$f.oracle" "$f.out"
     fi
  fi
}



for file in $files; do
    filebase=`basename $file .mlw`
    run CVC4,1.5 ce/$filebase
    run Z3,4.5.0 ce/$filebase
    run Z3,4.6.0 ce/$filebase
done
