Weakest Precondition
bench/ce/records.mlw M VC record_match_eval_test1: Timeout or Unknown
Counter-example model:File records.mlw:
Line 14:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : "f" , "value" : {"type" : "Integer" ,
"val" : "2" } }, {"field" : "g" , "value" : {"type" : "Boolean" ,
"val" : true } }] } }
Line 15:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : "f" , "value" : {"type" : "Integer" ,
"val" : "2" } }, {"field" : "g" , "value" : {"type" : "Boolean" ,
"val" : true } }] } }

bench/ce/records.mlw M VC record_match_eval_test1: Valid
bench/ce/records.mlw M VC record_match_eval_test2: Timeout or Unknown
Counter-example model:File records.mlw:
Line 22:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "f" , "type" : "Proj" ,
"value" : {"type" : "Integer" , "val" : "2" } }
Line 23:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "f" , "type" : "Proj" ,
"value" : {"type" : "Integer" ,
"val" : "2" } }

bench/ce/records.mlw M VC record_match_eval_test3: Timeout or Unknown
Counter-example model:File records.mlw:
Line 27:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 28:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 30:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" ,
"val" : false } }

bench/ce/records.mlw M VC record_match_eval_test4: Timeout or Unknown
Counter-example model:File records.mlw:
Line 32:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 33:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 35:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" ,
"val" : false } }

bench/ce/records.mlw M VC test_record_match_eval_test5: Timeout or Unknown
Counter-example model:File records.mlw:
Line 38:
re, [[@introduced], [@model_trace:re]] = {"proj_name" : "g" ,
"type" : "Proj" , "value" : {"type" : "Boolean" ,
"val" : false } }
Line 40:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 41:
re, [[@introduced], [@model_trace:re]] = {"proj_name" : "g" ,
"type" : "Proj" , "value" : {"type" : "Boolean" ,
"val" : false } }
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" ,
"type" : "Proj" , "value" : {"type" : "Boolean" ,
"val" : false } }
Line 43:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" ,
"val" : false } }

bench/ce/records.mlw Mutable VC record_match_eval_test1: Unknown (sat)
Counter-example model:File records.mlw:
Line 57:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : true } }] } }
Line 58:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : true } }] } }

bench/ce/records.mlw Mutable VC record_match_eval_test1: Valid
bench/ce/records.mlw Mutable VC record_match_eval_test2: Unknown (sat)
Counter-example model:File records.mlw:
Line 65:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 66:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }

bench/ce/records.mlw Mutable VC record_match_eval_test3: Unknown (sat)
Counter-example model:File records.mlw:
Line 70:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 71:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 73:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }

bench/ce/records.mlw Mutable VC record_match_eval_test4: Unknown (sat)
Counter-example model:File records.mlw:
Line 75:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 76:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 78:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }

Strongest Postcondition
bench/ce/records.mlw M VC record_match_eval_test1: Timeout or Unknown
Counter-example model:File records.mlw:
Line 14:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : "f" , "value" : {"type" : "Integer" ,
"val" : "2" } }, {"field" : "g" , "value" : {"type" : "Boolean" ,
"val" : true } }] } }
Line 15:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : "f" , "value" : {"type" : "Integer" ,
"val" : "2" } }, {"field" : "g" , "value" : {"type" : "Boolean" ,
"val" : true } }] } }

bench/ce/records.mlw M VC record_match_eval_test1: Valid
bench/ce/records.mlw M VC record_match_eval_test2: Timeout or Unknown
Counter-example model:File records.mlw:
Line 22:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "f" , "type" : "Proj" ,
"value" : {"type" : "Integer" , "val" : "2" } }
Line 23:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "f" , "type" : "Proj" ,
"value" : {"type" : "Integer" ,
"val" : "2" } }

bench/ce/records.mlw M VC record_match_eval_test3: Timeout or Unknown
Counter-example model:File records.mlw:
Line 27:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 28:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" ,
"val" : false } }

bench/ce/records.mlw M VC record_match_eval_test4: Timeout or Unknown
Counter-example model:File records.mlw:
Line 32:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 33:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" ,
"val" : false } }

bench/ce/records.mlw M VC test_record_match_eval_test5: Timeout or Unknown
Counter-example model:File records.mlw:
Line 38:
re, [[@introduced], [@model_trace:re]] = {"proj_name" : "g" ,
"type" : "Proj" , "value" : {"type" : "Boolean" ,
"val" : false } }
Line 40:
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" , "type" : "Proj" ,
"value" : {"type" : "Boolean" , "val" : false } }
Line 41:
re, [[@introduced], [@model_trace:re]] = {"proj_name" : "g" ,
"type" : "Proj" , "value" : {"type" : "Boolean" ,
"val" : false } }
x, [[@introduced], [@model_trace:x]] = {"proj_name" : "g" ,
"type" : "Proj" , "value" : {"type" : "Boolean" ,
"val" : false } }

bench/ce/records.mlw Mutable VC record_match_eval_test1: Unknown (sat)
Counter-example model:File records.mlw:
Line 57:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : true } }] } }
Line 58:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : true } }] } }

bench/ce/records.mlw Mutable VC record_match_eval_test1: Valid
bench/ce/records.mlw Mutable VC record_match_eval_test2: Unknown (sat)
Counter-example model:File records.mlw:
Line 65:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 66:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }

bench/ce/records.mlw Mutable VC record_match_eval_test3: Unknown (sat)
Counter-example model:File records.mlw:
Line 70:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 71:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }

bench/ce/records.mlw Mutable VC record_match_eval_test4: Unknown (sat)
Counter-example model:File records.mlw:
Line 75:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }
Line 76:
x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
"val" : {"Field" : [{"field" : ".my_field_f" ,
"value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
"value" : {"type" : "Boolean" ,
"val" : false } }] } }

