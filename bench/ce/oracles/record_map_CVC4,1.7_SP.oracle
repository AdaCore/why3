Strongest Postcondition
bench/ce/record_map.mlw M map_record_proj_test1'VC: Unknown (sat)
Counter-example model:
File record_map.mlw:
  Line 41:
    map_rec, [[@model_projected], [@introduced]] = {"type" : "Array" ,
    "val" : [{"indice" : {"type" : "Boolean" , "val" : true } ,
    "value" : {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".field_f" ,
    "value" : {"type" : "Integer" , "val" : "-1" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } } },
    {"others" : {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } } }] }
  Line 42:
    map_rec, [[@model_projected], [@introduced], [@model_trace:map_rec]] =
    {"type" : "Array" , "val" : [{"indice" : {"type" : "Boolean" ,
    "val" : true } , "value" : {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".field_f" ,
    "value" : {"type" : "Integer" , "val" : "-1" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } } },
    {"others" : {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } } }] }

bench/ce/record_map.mlw M record_map_proj_test2'VC: Unknown (sat)
Counter-example model:
File record_map.mlw:
  Line 46:
    rec_map, [[@model_projected], [@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "f_map" , "value" : {"type" : "Array" ,
    "val" : [{"indice" : {"type" : "Boolean" , "val" : true } ,
    "value" : {"type" : "Integer" , "val" : "-1" } },
    {"others" : {"type" : "Integer" , "val" : "0" } }] } },
    {"field" : "g_bool" , "value" : {"type" : "Boolean" ,
    "val" : false } }] } }
  Line 47:
    rec_map, [[@model_projected], [@introduced], [@model_trace:rec_map]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "f_map" ,
    "value" : {"type" : "Array" , "val" : [{"indice" : {"type" : "Boolean" ,
    "val" : true } , "value" : {"type" : "Integer" , "val" : "-1" } },
    {"others" : {"type" : "Integer" , "val" : "0" } }] } },
    {"field" : "g_bool" , "value" : {"type" : "Boolean" ,
    "val" : false } }] } }

bench/ce/record_map.mlw M record_map_proj_test3'VC: Unknown (sat)
Counter-example model:
File record_map.mlw:
  Line 51:
    re_rec_map, [[@model_projected], [@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "f_map" , "value" : {"type" : "Array" ,
    "val" : [{"others" : {"type" : "Integer" , "val" : "0" } }] } },
    {"field" : "g_bool" , "value" : {"type" : "Boolean" ,
    "val" : true } }] } }
  Line 53:
    rec_map, [[@model_projected], [@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "f_map" , "value" : {"type" : "Array" ,
    "val" : [{"others" : {"type" : "Integer" , "val" : "0" } }] } },
    {"field" : "g_bool" , "value" : {"type" : "Boolean" ,
    "val" : false } }] } }
  Line 54:
    re_rec_map, [[@model_projected], [@introduced],
                [@model_trace:re_rec_map]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "f_map" ,
    "value" : {"type" : "Array" , "val" : [{"others" : {"type" : "Integer" ,
    "val" : "0" } }] } }, {"field" : "g_bool" ,
    "value" : {"type" : "Boolean" , "val" : true } }] } }
    rec_map, [[@model_projected], [@introduced], [@model_trace:rec_map]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "f_map" ,
    "value" : {"type" : "Array" , "val" : [{"others" : {"type" : "Integer" ,
    "val" : "0" } }] } }, {"field" : "g_bool" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }

