Weakest Precondition
Model 0:
  Concrete RAC:  good model (Concrete RAC confirms the counter-example, 0 warnings)
    _ -> (), #"bench/ce/let_constant.mlw" 5 6 11#
  Abstract RAC:  good model (Abstract RAC confirms the counter-example, 0 warnings)
    _ -> (), #"bench/ce/let_constant.mlw" 5 6 11#
Model 1:
  Concrete RAC:  good model (Concrete RAC confirms the counter-example, 0 warnings)
    _ -> (), #"bench/ce/let_constant.mlw" 5 6 11#
  Abstract RAC:  good model (Abstract RAC confirms the counter-example, 0 warnings)
    _ -> (), #"bench/ce/let_constant.mlw" 5 6 11#
Model 2:
  Concrete RAC:  good model (Concrete RAC confirms the counter-example, 0 warnings)
    _ -> (), #"bench/ce/let_constant.mlw" 5 6 11#
  Abstract RAC:  good model (Abstract RAC confirms the counter-example, 0 warnings)
    _ -> (), #"bench/ce/let_constant.mlw" 5 6 11#
bench/ce/let_constant.mlw Let_constant dummy'vc: Unknown (sat)
Counter-example model for term at #"bench/ce/let_constant.mlw" 9 13 24#
File let_constant.mlw:
  Line 7:
    T [@introduced] [@model_trace:T] = {"type" : "Integer" , "val" : "25" }
  Line 9:
    T [@introduced] [@model_trace:T] = {"type" : "Integer" , "val" : "25" }

