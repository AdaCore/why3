Strongest Postcondition
File "bench/ce/threshold.mlw", line 10, characters 11-20:
Goal Integer overflow from verification condition f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 7:
    max [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    min [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
  Line 10:
    max [@introduced] [@model_trace:max] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    min [@introduced] [@model_trace:min] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}

File "bench/ce/threshold.mlw", line 8, characters 13-33:
Goal Postcondition from verification condition f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 7:
    max [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}
    min [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    n [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}
  Line 8:
    max [@introduced] [@model_trace:max] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}
    min [@introduced] [@model_trace:min] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    result [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
  Line 10:
    _x [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}

File "bench/ce/threshold.mlw", line 25, characters 11-29:
Goal Arithmetic overflow from verification condition f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 21:
    max [@introduced] = {"type": "Integer", "val": "4026531703"}
    min [@introduced] = {"type": "Integer", "val": "4116707090"}
  Line 25:
    max [@introduced] [@model_trace:max] =
      {"type": "Integer", "val": "4026531703"}
    min [@introduced] [@model_trace:min] =
      {"type": "Integer", "val": "4116707090"}

File "bench/ce/threshold.mlw", line 22, characters 13-45:
Goal Postcondition from verification condition f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 21:
    max [@introduced] = {"type": "Integer", "val": "1074330528"}
    min [@introduced] = {"type": "Integer", "val": "1746500513"}
    n [@introduced] = {"type": "Integer", "val": "1746795424"}
  Line 22:
    max [@introduced] [@model_trace:max] =
      {"type": "Integer", "val": "1074330528"}
    min [@introduced] [@model_trace:min] =
      {"type": "Integer", "val": "1746500513"}
    result [@introduced] = {"type": "Integer", "val": "1074330528"}
  Line 25:
    _x [@introduced] = {"type": "Integer", "val": "2820831041"}

