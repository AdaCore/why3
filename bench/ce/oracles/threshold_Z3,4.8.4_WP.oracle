Weakest Precondition
File "bench/ce/threshold.mlw", line 10, characters 11-20:
Sub-goal Integer overflow of goal f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 7:
    max [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    min [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
  Line 10:
    max [@introduced] [@model_trace:max] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    min [@introduced] [@model_trace:min] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}

File "bench/ce/threshold.mlw", line 8, characters 13-33:
Sub-goal Postcondition of goal f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 7:
    max [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}
    min [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    n [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}
  Line 8:
    max [@introduced] [@model_trace:max] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}
    min [@introduced] [@model_trace:min] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
    result [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
  Line 10:
    _x [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "-1"}}
    result [@introduced] =
      {"proj_name": "int32'int",
       "type": "Proj",
       "value": {"type": "Integer", "val": "0"}}
  Line 11:
    result [@introduced]
      [@model_result_call_loc:11:5:12:bench/ce/threshold.mlw]
      [@model_trace:result] =
      {"type": "Boolean", "val": true}

File "bench/ce/threshold.mlw", line 25, characters 11-29:
Sub-goal Arithmetic overflow of goal f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 21:
    max [@introduced] = {"type": "Integer", "val": "2147483776"}
    min [@introduced] = {"type": "Integer", "val": "2147483651"}
  Line 25:
    max [@introduced] [@model_trace:max] =
      {"type": "Integer", "val": "2147483776"}
    min [@introduced] [@model_trace:min] =
      {"type": "Integer", "val": "2147483651"}

File "bench/ce/threshold.mlw", line 22, characters 13-45:
Sub-goal Postcondition of goal f'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File threshold.mlw:
  Line 21:
    max [@introduced] = {"type": "Integer", "val": "5324832"}
    min [@introduced] = {"type": "Integer", "val": "1068490825"}
    n [@introduced] = {"type": "Integer", "val": "5328897"}
  Line 22:
    max [@introduced] [@model_trace:max] =
      {"type": "Integer", "val": "5324832"}
    min [@introduced] [@model_trace:min] =
      {"type": "Integer", "val": "1068490825"}
    result [@introduced] = {"type": "Integer", "val": "1068490825"}
  Line 25:
    _x [@introduced] = {"type": "Integer", "val": "1073815657"}
    result [@introduced] = {"type": "Integer", "val": "1068490825"}
  Line 26:
    result [@introduced]
      [@model_result_call_loc:26:5:20:bench/ce/threshold.mlw]
      [@model_trace:result] =
      {"type": "Boolean", "val": true}

