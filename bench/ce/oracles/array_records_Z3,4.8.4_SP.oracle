Strongest Postcondition
bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 27:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 27:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 27:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 28:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 28:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 28:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 29:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 29:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 29:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 30:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 30:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 30:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "-1" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "2" }
  Line 31:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "2" }

bench/ce/array_records.mlw Array_records var_overwrite'VC: Timeout or Unknown
Counter-example model:
File array_records.mlw:
  Line 23:
    i, [[@introduced]] = {"type" : "Integer" , "val" : "2" }
  Line 25:
    i, [[@introduced], [@model_trace:i]] = {"type" : "Integer" ,
    "val" : "2" }

