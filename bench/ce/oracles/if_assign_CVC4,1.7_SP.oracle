Strongest Postcondition
bench/ce/if_assign.mlw Test f'VC: Timeout or Unknown
Counter-example model:
File if_assign.mlw:
  Line 10:
    x, [[@introduced], [@field:0:contents], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }
  Line 12:
    x, [[@introduced], [@field:0:contents]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }

bench/ce/if_assign.mlw Test f2'VC: Timeout or Unknown
Counter-example model:
File if_assign.mlw:
  Line 16:
    x, [[@introduced], [@field:0:contents], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }
  Line 18:
    x, [[@introduced], [@field:0:contents]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }

bench/ce/if_assign.mlw Test f3'VC: Timeout or Unknown
Counter-example model:
File int.mlw:
  Line 16:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "0" }
File ref.mlw:
  Line 18:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }
File if_assign.mlw:
  Line 21:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "0" }
  Line 22:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }
  Line 25:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }
  Line 27:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }

bench/ce/if_assign.mlw Test f3'VC: Timeout or Unknown
Counter-example model:
File int.mlw:
  Line 16:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
File ref.mlw:
  Line 18:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "18" } }] } }
File if_assign.mlw:
  Line 21:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 22:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "18" } }] } }
  Line 25:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "18" } }] } }
  Line 27:
    x, [[@introduced], [@field:0:contents],
       [@vc:written:25:4:20:bench/ce/if_assign.mlw],
       [@vc:written:27:4:11:bench/ce/if_assign.mlw], [@model_trace:x]] =
    {"type" : "Record" , "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "18" } }] } }

bench/ce/if_assign.mlw Test f4'VC: Timeout or Unknown
Counter-example model:
File int.mlw:
  Line 16:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "0" }
File if_assign.mlw:
  Line 30:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "0" }
  Line 34:
    x, [[@introduced], [@field:0:contents]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "42" } }] } }

bench/ce/if_assign.mlw Test f4'VC: Valid
bench/ce/if_assign.mlw Test f4'VC: Timeout or Unknown
Counter-example model:
File int.mlw:
  Line 16:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
File ref.mlw:
  Line 20:
    x, [[@introduced], [@field:0:contents]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "18" } }] } }
File if_assign.mlw:
  Line 30:
    a, [[@introduced]] = {"type" : "Integer" , "val" : "-1" }
  Line 31:
    the check fails with all inputs
  Line 34:
    x, [[@introduced], [@field:0:contents]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "0" } }] } }
  Line 36:
    x, [[@introduced], [@field:0:contents]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : "contents" ,
    "value" : {"type" : "Integer" , "val" : "18" } }] } }

