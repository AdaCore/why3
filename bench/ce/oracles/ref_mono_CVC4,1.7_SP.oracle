Strongest Postcondition
File "bench/ce/ref_mono.mlw", line 7, characters 30-55:
Sub-goal Postcondition of goal ref1'vc.
Prover result is: Valid.

File "bench/ce/ref_mono.mlw", line 9, characters 29-40:
Sub-goal Postcondition of goal prefix !'vc.
Prover result is: Valid.

File "bench/ce/ref_mono.mlw", line 11, characters 38-44:
Sub-goal Postcondition of goal infix :='vc.
Prover result is: Valid.

File "bench/ce/ref_mono.mlw", line 21, characters 14-25:
Sub-goal Postcondition of goal test_post'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File ref_mono.mlw:
  Line 9:
    y [@at:'Old:loc:bench/ce/ref_mono.mlw:21] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 11:
    y [@field:0:contents] [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 20:
    x [@introduced] = {"type": "Integer", "val": "1"}
    y [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 21:
    x [@introduced] [@model_trace:x] = {"type": "Integer", "val": "1"}
    old y [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:21]
      [@field:0:contents] [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 23:
    y [@field:0:contents] [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}

File "bench/ce/ref_mono.mlw", line 27, characters 14-29:
Sub-goal Postcondition of goal test_post2'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File ref_mono.mlw:
  Line 9:
    y [@at:'Old:loc:bench/ce/ref_mono.mlw:27] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 11:
    y [@field:0:contents] [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "42"}}]}}
  Line 25:
    x [@introduced] = {"type": "Integer", "val": "43"}
    y [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 27:
    x [@introduced] [@model_trace:x] = {"type": "Integer", "val": "43"}
    old y [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:27]
      [@field:0:contents] [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    y [@field:0:contents] [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "42"}}]}}
  Line 29:
    y [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}

File "bench/ce/ref_mono.mlw", line 38, characters 12-36:
Sub-goal Postcondition of goal incr'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File ref_mono.mlw:
  Line 9:
    x23 [@field:0:contents] [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "1"}}]}}
  Line 11:
    x23 [@field:0:contents] [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
  Line 35:
    y [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 37:
    x23 [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 38:
    old x23 [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:38]
      [@field:0:contents] [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x23 [@field:0:contents] [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "2"}}]}}
    old y [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:38]
      [@field:0:contents] [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "-1"}}]}}
  Line 40:
    y [@field:0:contents] [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 41:
    x23 [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 42:
    x23 [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}

File "bench/ce/ref_mono.mlw", line 51, characters 14-36:
Sub-goal Loop invariant init of goal test_loop'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File ref_mono.mlw:
  Line 35:
    y [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 37:
    x23 [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 38:
    old x [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:38]
      [@at:L:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x [@at:M:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 44:
    x [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 48:
    x [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 51:
    x at L [@at:L] [@at:L:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x at M [@at:M] [@at:M:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x [@field:0:contents] [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}

File "bench/ce/ref_mono.mlw", line 52, characters 12-14:
Sub-goal Loop variant decrease of goal test_loop'vc.
Prover result is: Valid.

File "bench/ce/ref_mono.mlw", line 51, characters 14-36:
Sub-goal Loop invariant preservation of goal test_loop'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File ref_mono.mlw:
  Line 9:
    x [@field:0:contents] [@introduced] [@loop:bench/ce/ref_mono.mlw:50:2:96]
      [@vc:written:50:2:96:bench/ce/ref_mono.mlw] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "1"}}]}}
  Line 11:
    x [@field:0:contents] [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 35:
    y [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 37:
    x23 [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 38:
    old x [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:38]
      [@at:L:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x [@at:M:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 44:
    x [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 48:
    x [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 50:
    [before iteration] x [@introduced] [@loop:bench/ce/ref_mono.mlw:50:2:96]
      [@model_trace:x] [@vc:written:50:2:96:bench/ce/ref_mono.mlw] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 51:
    x at L [@at:L] [@at:L:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x at M [@at:M] [@at:M:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    [current iteration] x [@field:0:contents] [@introduced]
      [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 53:
    [current iteration] x [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}

File "bench/ce/ref_mono.mlw", line 45, characters 12-23:
Sub-goal Postcondition of goal test_loop'vc.
Prover result is: Unknown or time/memory/step limit.
The following counterexample model has not been verified
  (not checking CE model, missing option --check-ce):
File ref_mono.mlw:
  Line 9:
    x [@field:0:contents] [@introduced] [@loop:bench/ce/ref_mono.mlw:50:2:96]
      [@vc:written:50:2:96:bench/ce/ref_mono.mlw] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 35:
    y [@introduced] [@model_trace:y] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 37:
    x23 [@introduced] [@model_trace:x23] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 38:
    old x [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:38]
      [@at:'Old:loc:bench/ce/ref_mono.mlw:45]
      [@at:L:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x [@at:M:loc:bench/ce/ref_mono.mlw:51] [@field:0:contents]
      [@introduced] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "-1"}}]}}
  Line 44:
    x [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 45:
    old x [@at:'Old] [@at:'Old:loc:bench/ce/ref_mono.mlw:45]
      [@field:0:contents] [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
    x [@field:0:contents] [@introduced] [@loop:bench/ce/ref_mono.mlw:50:2:96]
      [@model_trace:x] [@vc:written:50:2:96:bench/ce/ref_mono.mlw] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 48:
    x [@introduced] [@model_trace:x] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}
  Line 50:
    x [@introduced] [@loop:bench/ce/ref_mono.mlw:50:2:96] [@model_trace:x]
      [@vc:written:50:2:96:bench/ce/ref_mono.mlw] =
      {"type": "Record",
       "val":
        {"Field":
          [{"field": "contents", "value": {"type": "Integer", "val": "0"}}]}}

