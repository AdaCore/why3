Strongest Postcondition
bench/ce/records_inv.mlw M r'vc: Valid
RAC failure: Cannot construct term for constructor r'mk that is not a function
RAC impossible: Cannot import model value: Value of non-free type r
RAC impossible: Cannot import model value: Value of non-free type r
bench/ce/records_inv.mlw M record_match_eval_test1'vc: Timeout or Unknown
Counter-example model:
File records_inv.mlw:
  Line 15:
    x, [[@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : true } }] } }
  Line 16:
    result, [[@introduced]] = {"type" : "Integer" , "val" : "0" }

RAC failure: Cannot construct term for constructor r'mk that is not a function
bench/ce/records_inv.mlw M record_match_eval_test1'vc: Valid
RAC impossible: Cannot import model value: Value of non-free type r
RAC impossible: Cannot import model value: Value of non-free type r
RAC impossible: Cannot import model value: Value of non-free type r
bench/ce/records_inv.mlw M record_match_eval_test2'vc: Timeout or Unknown
Counter-example model:
File records_inv.mlw:
  Line 23:
    x, [[@introduced]] = {"proj_name" : ".my_field_f" , "type" : "Proj" ,
    "value" : {"type" : "Integer" , "val" : "0" } }
  Line 24:
    x, [[@introduced], [@model_trace:x]] = {"proj_name" : ".my_field_f" ,
    "type" : "Proj" , "value" : {"type" : "Integer" , "val" : "0" } }

bench/ce/records_inv.mlw M record_match_eval_test3'vc: Timeout or Unknown
RAC failure: Cannot construct term for constructor r'mk that is not a function
RAC impossible: Cannot import model value: Value of non-free type r
bench/ce/records_inv.mlw M record_match_eval_test3'vc: Valid
bench/ce/records_inv.mlw M record_match_eval_test4'vc: Timeout or Unknown
RAC failure: Cannot construct term for constructor r'mk that is not a function
RAC impossible: Cannot import model value: Value of non-free type r
bench/ce/records_inv.mlw M record_match_eval_test4'vc: Valid
bench/ce/records_inv.mlw M record_match_eval_test44'vc: Timeout or Unknown
RAC failure: Cannot construct term for constructor r'mk that is not a function
RAC impossible: Cannot import model value: Value of non-free type r
bench/ce/records_inv.mlw M record_match_eval_test44'vc: Valid
RAC failure: Cannot construct term for constructor r'mk that is not a function
bench/ce/records_inv.mlw M record_match_eval_test44'vc: Valid
bench/ce/records_inv.mlw M test_record_match_eval_test5'vc: Timeout or Unknown
RAC impossible: Cannot import model value: Value of non-free type r
bench/ce/records_inv.mlw M test_record_match_eval_test5'vc: Valid
RAC does not confirm the counter-example (no contradiction during execution)
RAC confirms the counter-example
RAC confirms the counter-example
bench/ce/records_inv.mlw Mutable record_match_eval_test1'vc: Unknown (sat)
Counter-example model:
File records_inv.mlw:
  Line 65:
    x, [[@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : true } }] } }
  Line 66:
    result, [[@introduced]] = {"type" : "Integer" , "val" : "0" }

RAC does not confirm the counter-example (no contradiction during execution)
bench/ce/records_inv.mlw Mutable record_match_eval_test1'vc: Valid
RAC confirms the counter-example
RAC confirms the counter-example
RAC confirms the counter-example
bench/ce/records_inv.mlw Mutable record_match_eval_test2'vc: Unknown (sat)
Counter-example model:
File records_inv.mlw:
  Line 73:
    x, [[@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }
  Line 74:
    x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }

RAC confirms the counter-example
RAC confirms the counter-example
RAC confirms the counter-example
bench/ce/records_inv.mlw Mutable record_match_eval_test3'vc: Unknown (sat)
Counter-example model:
File records_inv.mlw:
  Line 78:
    x, [[@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }
  Line 79:
    x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }
  Line 81:
    x, [[@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }

RAC confirms the counter-example
RAC confirms the counter-example
RAC confirms the counter-example
bench/ce/records_inv.mlw Mutable record_match_eval_test4'vc: Unknown (sat)
Counter-example model:
File records_inv.mlw:
  Line 83:
    x, [[@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "0" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }
  Line 84:
    x, [[@introduced], [@model_trace:x]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }
  Line 86:
    x, [[@introduced]] = {"type" : "Record" ,
    "val" : {"Field" : [{"field" : ".my_field_f" ,
    "value" : {"type" : "Integer" , "val" : "6" } }, {"field" : "g" ,
    "value" : {"type" : "Boolean" , "val" : false } }] } }

