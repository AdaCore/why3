bench/ce/int_overflow.mlw ModelInt test0 : Valid
bench/ce/int_overflow.mlw ModelInt test1 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 9:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "0" }

bench/ce/int_overflow.mlw ModelInt test2 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 14:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "0" }

bench/ce/int_overflow.mlw ModelInt test_overflow : Valid
bench/ce/int_overflow.mlw ModelInt test_overflow : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 18:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65535" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow2 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 23:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "-2" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow2 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 23:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65535" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 30:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65361" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "175" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_alt : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 35:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "-65536" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_alt : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 35:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65535" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_bis : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 40:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "54" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "65482" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 48:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "2147483473" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "175" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 53:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "54" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "2147483594" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis_inline : Valid
bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis_inline : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 58:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "1073741824" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1073741824" }

bench/ce/int_overflow.mlw ModelInt test0 : Valid
bench/ce/int_overflow.mlw ModelInt test1 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 9:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "0" }

bench/ce/int_overflow.mlw ModelInt test2 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 14:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "0" }

bench/ce/int_overflow.mlw ModelInt test_overflow : Valid
bench/ce/int_overflow.mlw ModelInt test_overflow : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 18:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65535" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow2 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 23:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "-2" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow2 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 23:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65535" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 30:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65361" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "175" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_alt : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 35:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "-65536" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_alt : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 35:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "65535" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_bis : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 40:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "54" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "65482" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32 : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 48:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "2147483473" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "175" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 53:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "54" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "2147483594" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis_inline : Valid
bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis_inline : Unknown (other)
Counter-example model:File int_overflow.mlw:
Line 58:
x, ["model", "model_trace:x"] = {"type" : "Integer" ,
"val" : "1073741824" }
y, ["model", "model_trace:y"] = {"type" : "Integer" ,
"val" : "1073741824" }

