bench/ce/int_overflow.mlw ModelInt test0: Valid
bench/ce/int_overflow.mlw ModelInt test1: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 9:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "0" }

bench/ce/int_overflow.mlw ModelInt test2: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 14:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "0" }

bench/ce/int_overflow.mlw ModelInt test_overflow: Valid
bench/ce/int_overflow.mlw ModelInt test_overflow: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 18:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "65535" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow2: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 23:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "-2" }
y, [[@introduced], [@model_trace:y]] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow2: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 23:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "65535" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 30:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "-65536" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_alt: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 35:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "-65536" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_alt: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 35:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "65535" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int16_bis: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 40:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "32768" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "32768" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 48:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "-2147483648" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "-1" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 53:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "1073741824" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "1073741824" }

bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis_inline: Valid
bench/ce/int_overflow.mlw ModelInt test_overflow_int32_bis_inline: Unknown (unknown)
Counter-example model:File int_overflow.mlw:
Line 58:
x, [[@introduced], [@model_trace:x]] = {"type" : "Integer" ,
"val" : "1073741824" }
y, [[@introduced],
[@model_trace:y]] = {"type" : "Integer" ,
"val" : "1073741824" }

