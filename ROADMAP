

============ Long-term Roadmap (see below for roadmaps to next release) ===========

== Papers to write ==

  * paper on the module system, its semantics, realizations, avec en
    particulier la solution avec les types classes qui reste a
    implanter

  * DONE Encodings and transformations (Andrei+Francois FroCos 11)
  * DONE Why presentation at the IVL workshop of CADE:
    (http://research.microsoft.com/en-us/um/people/moskal/boogie2011/)
    deadline: May 1st
  * Caml code ?
  * logic language for talking to provers
    - DONE (Boogie 11)
    - DONE FOL + poly (FroCos 11)
    -  alg + ind + rec ? + theories
  * proof sessions
  * VACID-0
  * system description (e.g. at CAD, TACAS)
  * rapports recherche ?

== stages ==

* M1. preuve d'un petit compilateur, pas de pb de lieur,
   eventuellement outils pour les preuves par recurrence
   a la Leino, + fct size automatique
* M2. Lieur en Why3, POPLmark challenge. vers
   un theorie et/ou un module réutilisable de lieurs
* (M2?) Stage Airbus, "TIP" avec Frama-C/Jessie ou WP/Why/Coq
   besoin de la tactique Coq?

== new major features ==

* Logic language
 - support for higher-order logic
 - rename andb, orb, xorb and notb into and, or, xor and not

* more libraries (theories and modules)

* A true Jessie3 front-end

* Why3ML
 - Fast WP a la Leino
 - assert qui ne donne pas une hypothese dans la suite -> "check"
   also: in a black box

* Add more examples in the regression tests and in the proval gallery

* A literate programming tool for Why3 (JCF)


* IDE:
 - edition, navigation (partially done)
 - saving session: add shortcut "ctrl-S", but beware of confusion with saving the input file
 - reimplement "hide proved goals" feature
  + suggested solution: replace model + filter_model by a custom model
  (JC + ?)
 - restore provers detection in the middle of a session.
 - commentaires dans les sessions, attachés a chaque ligne


=========== Middle-term roadmap ==========================================

* replayer
** deplacer option -bench dans une commande de why3session

* Projets interessant Cesar ?
** Preuve de prog flottants avec Frama-C+WP+Why3+PVS
** Generation d'annotations
** porter multirounding a jessie->Why3. Completer le mode full et faire passer
   interval_arith.c. Completer la galerie
** preuve sur l'assembleur

* extraction vers Caml
 - PRIORITAIRE, JCF, ANDREI

* terminaison
** generer une obligation de preuve de well-foundedness quand on utilise
   un variant avec "with R" (une seule fois pour chaque R !)
** quand une definition logique recursive ne peut pas etre verifiee
   bien-fondee statiquement, generer une obligation de preuve
   (feature wish de F Besson)

* Coq detection
** refuser de detecter Coq si on n'a pas compilé avec le support de Coq
   (i.e. si Coq a ete installé apres)

* Coq tactic
** ajout de bases de hint

* efficiency issues
 - understand problems when large number of goals (cf D Mentré examples)
 - also: BTS 13736
https://gforge.inria.fr/tracker/index.php?func=detail&aid=13736&group_id=2990

* Smoke detector and absurd: on pourrait mettre un label particulier
  sur le "false" genéré par absurd, pour indiquer que c'est
  intentionel que l'on veuille prouver false. Un tel cas pourrait etre
  traité de facon speciale par le smoke detector avec option "deep",
  pour eviter une fausse alarme.

* IDE
** todo: run detection immediately at start up if conf file absent or
    outdated. should become doable with the new Session module
** "detect provers" menu
** syntax highlighting bugs ?
   some keywords are not colored in the bottom-right window
   (but they are in the top-right window)
   NEED FEEDBACK which ones ???

* (JCF) reject global "val"s in typing environment for logic decls.

==================== Roadmap for release 0.74 ========================

scheduled on Sep 2012

* Sortie PVS
** avec mecanisme de realization

* Yices 2 ? interesserait Cesar

* mettre au propre les loc des fichiers de sessions, en particulier
  les noms de fichiers doivent etre relatifs au fichier de session
  lui-meme. Utiliser Sysutil.relativize_filename a bon escient.

* Contre-exemples de Alt-Ergo

* detect editors
*** check if coqide and also emacs/proof-general is installed

* Documentation
 - (ANDREI) make the glossary available 
 - (CLAUDE) complete api.tex: explain how to build theories, apply
   transformations, write new functions on terms (A)

* PRIORITAIRE Coq output
 - corriger l'incoherence, comprendre si on veut vraiment accepter

  function x : 'a
  (cf: en caml cela ne marche pas)
 Solution proposee: utiliser des types classes, en particulier Inhabited

* PRIORITAIRE, JCF et ANDREI, clone de module
 - demarche: ecrire une API avec smart constructors garantissant
   le bon typage, et clone sera en premier lieu un de ces constructors
 - cas d'utilisation: range d'entiers de Jessie, Flottants -> double ou single
   containeurs pour Adacore et Claire
 - NON PRIORITAIRE ?
  + regions : strong update
  + ghost code
  + logic symbols used in programs






==================== Roadmap for release 0.73 ========================

== New Features to announce ==

New features:
  o [Why3ml] new construct "abstract e { q }"
  o [Coq output] default tactic is now "intros ..." with a pattern
    that matches the structure of the goal
  o [why3replayer] option -obsolete-only
  o co-inductive predicates
  o new option -e for "why3session latex" allows to specify when to
    split tables in parts
  o [Sessions] a small change in the format. This hopefully improves
    the association of old goals and new goals when the input is
    modified.  For compatibility, Why3 is still able to read session
    files in the old format.
  o [Provers] support for Z3 4.0

Bug fix:
  o completed support for the "Out Of Memory" prover result
  o [Coq output] quotes in identifiers remain quotes in Coq
  o workaround for a bug about modulo operator in Alt-Ergo 0.94
  o fixed a consistency issue with set.Fset theory


== Final preparation ==

* check that nightly bench is OK
* put 0.73 in file Version
* check headers
* check the file CHANGES
* manual in PDF: check that macro \todo is commented out
    in ./macros.tex
* do "make distrib"
* test the distrib why3-0.73.tar.gz
* make a last commit:
 - add tag 0.73 to the git repository 
 - do not forget to push it using git push --tags

* put on the web page
 - why3-0.73.tar.gz
 - standard library online, using why3doc, to http://why3.lri.fr/stdlib/
   (make stdlibdoc ;
    cp -r doc/stdlibdoc /users/www-perso/projets/why3/stdlib-0.73;
    ln -s /users/www-perso/projets/why3/stdlib-0.73 \
            /users/www-perso/projets/why3/stdlib)
 - API doc, produced using ocamldoc, to http://why3.lri.fr/api/
    Note: check that URL of API doc is correct in doc/api.tex line 9.
     (make apidoc ;
    cp -r doc/apidoc /users/www-perso/projets/why3/api-0.73;
    ln -s /users/www-perso/projets/why3/api-0.73 \
            /users/www-perso/projets/why3/api    )
 - update the main HTML page (sources are in why3-papers/www)

* produce the Why3 part of ProVal gallery ?
* Announce the distrib
 - What to put in the announcement: see New Features above
* The next commit : add +git to the version in file Version

== TODOs ==

* DONE Ajouter un result de prouveur "outofmemory" analogue a "timeout"

* Why3ML new language constructs
** NOT NEEDED ANYMORE sandbox
** DONE abstract e { q }
** DELAYED contract e { q }

* replayer
** DONE option pour ne rejouer que si obsolete

* Documentation
 - DELAYED document co-inductive predicates
 - DONE (CLAUDE) revoir documentation du smoke detector

==================== Roadmap for release 0.72 ========================

== New Features to announce ==

* Coq realizations. See manual Chapter xx
* Coq tactic. See manual Chapter xx
* tool why3session, including commands latex, html, stats. See manual Section xx
* tool why3doc. See manual Section xx
* Support for several versions of the same prover, for prover upgrade.
See manual Section xx
* Improved IDE:
 - left scrollbar, selection of shown or hidden provers, font enlargement
 - integration of the support for prover upgrade
 - support for selection of alternate editors
* Complete support for limiting provers' memory usage
* Improved support of Microsoft Windows OS
* what else ?
* see also the file CHANGES

== Final preparation ==

* check that nightly bench is OK
* put 0.72 in file Version
* increment the magic number in config (needed ???)
* check headers
* check the file CHANGES
* manual in PDF: check that macro \todo is commented out
    in ./macros.tex
* do "make distrib"
* test the distrib why3-0.72.tar.gz
* make a last commit:
 - add tag 0.72 to the git repository (do not forget to push it)
* put on the web page
 - why3-0.72.tar.gz
 - standard library online, using why3doc (make stdlibdoc),
   to http://why3.lri.fr/stdlib/
 - API doc, produced using ocamldoc (make apidoc), to http://why3.lri.fr/api/
    Note: check that URL of API doc is correct in doc/api.tex line 9.
 - update the main HTML page (sources are in why3-papers/www)
 - add links to extra resources like
   http://why3.lri.fr/jfla-2012/, http://www.lri.fr/~marche/MPRI-2-36-1/,
   http://proval.lri.fr/gallery/index.en.html
   page du cours de l'X (in french ? using Krakatoa/why3 bridge)

* produce the Why3 part of ProVal gallery ?
* Announce the distrib
 - What to put in the announcement: see New Features above
* The next commit : add +git to the version in file Version
* Announce the why3 tactic on Coq Club

== TODOs ==


* DONE bug CVC3 avec la division par 0, cf examples/tests-provers/cvc3.why

* DONE Document the Coq plugin and tactic
** DONE option timelimit <n>
** DONE renommer "coq-plugin" en "coq-tactic"

* DONE (JCF, ANDREI) add all examples from the VSTTE 2012 competition

* DONE (CLAUDE) Ajouter page provers sur le site web why3
** !TODO! relire

* Documentation

 - DONE traiter les \todo :

 DONE install.tex:179:% \todo{que devient l'option -to-known-prover de why3session ?
 DONE manpages.tex:790:% \todo{A adapter en fonction de la decision sur l'upgrade de prover}
 DONE manpages.tex:809:\section{The \texttt{why3doc} tool} \todo{Documenter}


 - (ANDREI) complete technical.tex: section "Drivers of external
   provers"

 - DONE (GUILLAUME) Realisations Coq, comment fait l'utilisateur pour faire
   ses realisations ne pas oublier de dire que les dependances avec le
   .why ou .mlw: ne sera pas vérifié

 - DONE Documenter l'utilisation de plusieurs versions du meme
   prouveur comme CVC3 et Z3

 - DONE (ANDREI) ajouter option a why3config pour ajouter association
   ident-executable
   DONE remplacer le ":" par " " (Arg.Tuple)

 - DONE (CLAUDE) Documenter les popups qui peuvent apparaitre dans why3ide
   quand les prouveurs ont changé. Et les mettre au point:

   . DONE Lors d'un replay, le dialogue "replace proof" apparait un nombre
     important de fois, il faut absolument pouvoir interrompre, ou
     donner une reponse qui soit appliquée pour le reste.  (le 3e
     bouton "never replace..." ne semble pas jourer ce role...)

   . DONE le dialogue "replace proof" est de toute facon trop large, et les
   choix possibles sont confus.

 - DONE (CLAUDE) meme ordre d'idee: ne pas ecraser "default editor" et
   "timelimit"
   en fait c'était déjà le cas

* DONE permettre d'utiliser emacs/proof general a la place de coqide depuis
  why3ide
*** DONE allow to choose which one the IDE Preferences

* (CLAUDE) why3session
 - DONE passe sur la documentation ecrite par Francois reecrite par Guillaume
 - DONE "why3replayer -latex" remplacé par "why3session latex"
 - DONE "why3html" remplacé par "why3session html"
 - DONE "why3stats" (src/ide/stats.ml) remplacé par "why3session info --stats"

* (JCF) ameliorer why3doc
 - DONE rajouter la production des liens
 - DONE produire un index.html

* DONE provers
 - DONE (CLAUDE) Ensure that we kill a prover after some time
   (ressurect %T ? with a meaning like twice the value of %t ?),
   because we cannot be sure they always honor their own -timeout
   option.

 - DONE (ANDREI) better use of Alt-Ergo's builtin theories: records,
   enumeration types (Alt-Ergo >= 0.94) => at least two drivers for
   Alt-Ergo, depending on its version number

* DONE fix bugs and update the BTS
 - DONE (CLAUDE) Refreshing the IDE pane for prover output

* DONE (CLAUDE) IDE:
 - DONE enlarge font (menu + shortcut Ctrl-+)
 - DONE Ctrl-A to select all rows
 - DONE Do not save if not needed
 - DONE ne pas ecrire saving sessions si on ne sauve pas la session
 - DONE add a scrollbar for the left panel

* DONE (FRANCOIS) move Session module and its dependencies into the
  Why3 library
 - but avoid duplication with session_ro
 - avoid also duplication of type like prover_data record
 - do not include task and transf in the data type, so that
   one can reload, and redetect provers
 - session + session_ro -> session_data + session_dynamic

======================= Roadmap for release 0.71 ========================

* DONE Final preparation:
** put on the web page
*** why3-0.71.tar.gz
*** manual in PDF: check that macro \todo is commented out
    in ./macros.tex
*** API doc in HTML (suggestion: http://why3.lri.fr/api/)
    Note: check that URL of API doc is correct in doc/api.tex line 9.
** What to put in the announcement:
*** traceability from front-ends work
    (see Krakatoa and Jessie of the next release 2.30 of Why2)
*** many new examples in examples/ and examples/programs
*** significantly improved efficiency of WP calculus
*** improved method for matching old and new goals in proof sessions
*** several bug fixes
*** see also the file CHANGES
** The last commit:
*** DONE increment the magic number in config
*** add a tag to the git repository
*** The next commit : increment why3 version

* misc
** DONE fix bug with term shapes, not taking triggers into account
** DONE remove prover coq-realize

* prover support
** DONE test/debug TPTP output, make Vampire work

* IDE:
** saving session
   * DONE add a "cancel" choice in the "ask" window

* DONE replayer: don't replay a goal that has changed, just display as an
  unsuccessful replay

* DONE reload: improve matching of new and old goals by use a kind a distance
  between some notion of shape of a goal

=== Roadmap for third release 0.70, july 2011 ========================

* Final preparation: put on the web page
** why3-0.70.tar.gz
** DONE manual in PDF: check that macro \todo can be commented out
   from ./macros.tex
** API doc in HTML (suggestion: http://why3.lri.fr/api/)
   Note: check that URL of API doc is correct in doc/api.tex line 9.
** What to put in the annoucement
   - WhyML VC generator to prove programs
   - new tool why3replayer
   - incompatible changes in syntax: function, predicate, and, or
   - session database in XML format instead of sqlite3
   - threads problem in IDE solved (by not using threads anymore)
   - IDE: not necessary to exit to change the input file: just use "reload"

* The last commit (A):
  ** DONE increment the magic number in config
  ** add a tag to the git repository
  ** The next commit : increment de why3 version

* DONE Distribution of examples: we should distribute those who have an xml file
  under git, and distribute the XML and Coq proofs (JC)

* DONE document "Make obsolete" (A+C)

* DONE update IDE section of starting.tex (C)

* DONE update doc for why3replayer

* DONE fix bug 12934 : Coq syntax
  https://gforge.inria.fr/tracker/index.php?func=detail&aid=12934&group_id=2990&atid=10293

* DONE document new IDE features (C)

* DONE doc: citer l'article Boogie 2011 quelque part

* DONE deplacer le bouton "Cancel" dans le menu "tools",
  le renommer en "make obsolete"

* DONE Check if remark in doc/api.tex line 80 is still valid (A)

* DONE put an up-to-date use_api.ml in the manual (C)

* DONE enlever les caracteres de tab des sources
  et les caracteres latin1 (A)

* DONE faire tourner headache pour refabriquer les headers (A)
  ** dans gappa.ml : ajouter Guillaume en dessous de l'entete

* DONE Rendre optionnel la question "would you like to save the session ?"
   (C) -> 3-state options (Yes/No/ask) dans la config
  + DONE dans le menu "file" : "save session" sans raccourci clavier

* DONE desactiver "Save" (et editable=false dans la fenetre)

* DONE mettre "Quit" en dernier (C)

* DONE checkout frais, compilation (local ou non) et make bench chaque nuit sur moloch
  (?)

* DONE IDE: reload
  (claude)

* DONE BD : se passer de sqlite3
  (Claude)
  Solution: un unique fichier XML, qui est ecrit mais pas
  tres souvent (pas plus d'une fois par seconde)
  ne pas oublier neanmoins de mettre une action dans Timeout
  qui enregistre au bout d'un moment
  pb: n'est pas independant de l'IDE, peut-on faire un module
  independant de l'IDE ? qui serait utilisé par why3bench ?

* DONE IDE: avoir des transformations non codees en dur
  (Claude d'abord)

* DONE Bug des md5
  (Claude. pas reproductible ? Pb de duplication des buts ?)

* DONE IDE: no more threads

* DONE proof replay
  ** DONE IDE: replay all obsolete but previously successful proofs
  ** DONE in why3replay in whybench
  ** DONE add replay of existing proofs in "make bench" to detect regression
  ** DONE add automatic recompilation, install and bench every night on moloch

* DONE IDE: implement "inline" (use transformation inline_goal)
  ** problem 1: detect that transformation did nothing
  ** DONE problem 2: reimport from db does apply inline correctly

* DONE IDE: debug "remove" et "clean" qui provoquent des segfaults !!

* IDE: ajouter "invalid" comme cas de resultats de preuve
  (utiliser call_provers.proof_result dans gmain)
  DONE


=== Roadmap for second release 0.64 ========================================

* fix local installation
  ** fix local executables names (DONE)

* fix problems with .why.conf (DONE)
  ** if we distribute the current state, users who already have a ~/.why.conf
     will get a error message because of missing loadpath to modules
     Done? - the magic number will force to not use the old ~/.why.conf of
             the user
  ** generally speaking, we should rethink the design of that .why.conf: avoid
     absolute paths,
     Partially done - libdir, datadir, loadpath, ... are not written in
     why.conf if they correspond to the default value.


* IDE, file names in DB: use only file names relative to the db file
  DONE

=== Roadmap for December 2010 ================================================

== Documentation ==

1 Introduction (done: suppressed)
2 getting started (Claude: done, to be read by others)
3 Syntax, tutorial (done: Andrei)
4 tutorial for API:
** build a task (Claude: done, to be read by others)
** call a prover (Claude: done, to be read by others)
** apply a transformation (a completer plus tard)
** develop a new transformation (a completer plus tard)
5 syntax reference (a completer plus tard par typage et semantique)
6 Standard lib of theories:
  (Claude: done, although quite sparse, to be read by others)
7 Manpages
7.1 Compilation, Installation (done)
7.2 external provers (done)
7.3 why3config (done)
7.4 why3 (done)
7.5 whyml (done)
7.6 IDE (done)
7.7 whybench (done, to be read by others)
7.8 why.conf (done)
7.9 drivers (to be done later)
7.10 transformations (done)
8 API: Andrei + Francois
  (should we really add that in the doc ?)
** on remplace par la version HTML a mettre sur la forge INRIA (Francois)
** TODO: mettre un titre au HTML engendré

== IDE ==

(Claude)

* database, session save and restore (done)
* Coq output (done)
* Gappa output (done)
* debug hide goals (TODO)
* add "context" options (partially done)
** semantics not clear, should be clarified, documented and
   implemented accordingly
* add transf "inline goal" (to be done later)
* add button "remove"
** removing goals: done
** removing transformation: done, but subgoals stay in db (not critical)
* add button "replay" (to be done later)
** semantics: replay obsolete proofs

== Misc ==

* README (done)
* INSTALL (done)
* LICENSE (done)
* OCAML-LICENSE (done)
* TODO: licence pour les boomy icons

* debuguer cpulimit pour gappa (pb de return code)

* option --version a tous les executables (done, except IDE: bug 11604)
** + affichage dans l'IDE (done)
* Builtin arrays in provers (done)
* make install (done)
* make distrib (done)
* "make -j" (done)
* META for ocamlfind (done)
* headers (done)

== Mails announcement ==

----------------------- Why-discuss list ---------------------------

We are happy to announce the first public release of Why3, also known
as the Why platform next generation. It is a new project, independent
from Why versions 2.xx.

The home web page of Why3 is http://why3.gforge.inria.fr, where you
can find the source distribution and the manual. See the manual for
installation instructions and contact information.

The main new features with respect to Why 2.xx are the following.

1) Completely redesigned input syntax for logic declarations

* new syntax for terms and formulas
* enumerated and algebraic data types, pattern matching
* recursive definitions of logic functions and predicates,
  with termination checking
* inductive definitions of predicates
* declarations are structured in components called "theories",
  which can be reused and instantiated

2) More generic handling of goals and lemmas to prove

* concept of proof task
* generic concept of task transformation
* generic approach for communicating with external provers

3) Source code organized as a library with a documented API,
to allow access to Why3 features programmatically.

4) GUI with new features w.r.t. the former GWhy

* session save and restore
* prover calls in parallel
* splitting, and more generally applying task transformations, on demand
* ability to edit proofs for interactive provers (Coq only for the moment)
  on any subtask

5) Extensible architecture via plugins

* users can define new transformations
* users can add connections to additional provers


Beware that some Why features are not yet available in Why3:

* There is a VC generator distributed in Why3 in an experimental stage
  and intentionally undocumented in the current documentation (the input
  syntax for programs may change a lot in the future).

* There is no front-end for other languages like C or Java. However,
  the last release Why 2.28 is able to use Why3 as a back-end

Notice that Why3 is expected to replace Why2 in the future. As such,
it is the project where improvements and new features will be
implemented. As this is the first public release of Why3, it is likely
that missing features, and possibly bugs, will raise soon. Please
report those in the bug tracker, we will do our best to fix them and
provide new releases in a short time.





--------------------- Frama-C list ----------------------------


The first release of Why3, also known as the Why platform next
generation, is publicly available. Why3 is a new project, independent
from Why. The detailed announcement is attached below.

The Jessie plugin of the Why release 2.28 has the ability to use Why3
as back-end. You must install both Why 2.28 and Why3 for this to work.

Using the Why3 GUI on a C file is done as follows
  frama-c -jessie -jessie-atp why3ide <file>.c
(You can also run it in batch mode using
  frama-c -jessie -jessie-atp why3 <file>.c
and process the generated Why3 file "<file>.jessie/why/<file>_why3.why"
with Why3 batch tools).

The main new features of interest in the GUI are

* new provers available
* calling provers in parallel
* splitting on demand
* ability to call Coq on a given VC to provide a proof script. Incidentally,
  this feature can be used to analyse the VC to understand why it is
  not proved automatically.
* proof session saved and restored at startup

Any question, remark or bug report concerning only Why3 should be done
using the Why3 public discussion list and bug tracker.





