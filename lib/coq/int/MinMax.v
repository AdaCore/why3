(* This file is generated by Why3's Coq-realize driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require int.Int.

(* Why3 comment *)
(* min is replaced with (ZArith.BinInt.Z.min x x1) by the coq driver *)

(* Why3 comment *)
(* max is replaced with (ZArith.BinInt.Z.max x x1) by the coq driver *)

(* Why3 goal *)
Lemma Max_is_ge : forall (x:Z) (y:Z), (x <= (ZArith.BinInt.Z.max x y))%Z /\
  (y <= (ZArith.BinInt.Z.max x y))%Z.
split.
apply Zle_max_l.
apply Zle_max_r.
Qed.

(* Why3 goal *)
Lemma Max_is_some : forall (x:Z) (y:Z), ((ZArith.BinInt.Z.max x y) = x) \/
  ((ZArith.BinInt.Z.max x y) = y).
intros x y.
unfold Zmax.
case Zcompare.
now left.
now right.
now left.
Qed.

(* Why3 goal *)
Lemma Min_is_le : forall (x:Z) (y:Z), ((ZArith.BinInt.Z.min x y) <= x)%Z /\
  ((ZArith.BinInt.Z.min x y) <= y)%Z.
split.
apply Zle_min_l.
apply Zle_min_r.
Qed.

(* Why3 goal *)
Lemma Min_is_some : forall (x:Z) (y:Z), ((ZArith.BinInt.Z.min x y) = x) \/
  ((ZArith.BinInt.Z.min x y) = y).
intros x y.
unfold Zmin.
case Zcompare.
now left.
now left.
now right.
Qed.

(* Why3 goal *)
Lemma Max_x : forall (x:Z) (y:Z), (y <= x)%Z ->
  ((ZArith.BinInt.Z.max x y) = x).
exact Zmax_l.
Qed.

(* Why3 goal *)
Lemma Max_y : forall (x:Z) (y:Z), (x <= y)%Z ->
  ((ZArith.BinInt.Z.max x y) = y).
exact Zmax_r.
Qed.

(* Why3 goal *)
Lemma Min_x : forall (x:Z) (y:Z), (x <= y)%Z ->
  ((ZArith.BinInt.Z.min x y) = x).
exact Zmin_l.
Qed.

(* Why3 goal *)
Lemma Min_y : forall (x:Z) (y:Z), (y <= x)%Z ->
  ((ZArith.BinInt.Z.min x y) = y).
exact Zmin_r.
Qed.

(* Why3 goal *)
Lemma Max_sym : forall (x:Z) (y:Z), (y <= x)%Z ->
  ((ZArith.BinInt.Z.max x y) = (ZArith.BinInt.Z.max y x)).
intros x y _.
apply Zmax_comm.
Qed.

(* Why3 goal *)
Lemma Min_sym : forall (x:Z) (y:Z), (y <= x)%Z ->
  ((ZArith.BinInt.Z.min x y) = (ZArith.BinInt.Z.min y x)).
intros x y _.
apply Zmin_comm.
Qed.

