
(* The Why prelude *)

theory Int 

  type int

  logic lt(int, int)
  logic le(int, int)
  logic gt(int, int)
  logic ge(int, int)
  
end

theory Bool

  (*type t = | True | False*)

end

theory List

  (* type 'a list = Nil | Cons ('a, 'a list) *)

  type 'a list

  logic nil : 'a list

  logic cons('a, 'a list) : 'a list

  logic is_nil('a list)

end

theory Array

  type ('a,'b) t

  logic select (('a,'b) t, 'a) : 'b
  logic store (('a,'b) t, 'a, 'b) : ('a,'b) t
  
  axiom Select_eq : 
    forall m : ('a,'b) t. forall a1,a2 : 'a. forall b : 'b.
    a1 = a2 -> select(store(m,a1,b),a2) = b

  axiom Select_neq : 
    forall m : ('a,'b) t. forall a1,a2 : 'a. forall b : 'b.
    a1 <> a2 -> select(store(m,a1,b),a2) = select(m,a2)

  logic const('b) : ('a,'b) t

  axiom Const : forall b:'b. forall a:'a. select(const(b),a) = b

end

(*
Local Variables: 
compile-command: "make -C ../.. test"
End: 
*)
