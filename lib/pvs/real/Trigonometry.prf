(Trigonometry
 (pythagorean_identity 0
  (pythagorean_identity-1 nil 3552164504 ("" (default-strategy)) nil
   shostak))
 (cos_le_one 0
  (cos_le_one-1 nil 3552164504 ("" (default-strategy))
   ((abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (cos_range application-judgement "trig_range" trig_basic "trig/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (sin_le_one 0
  (sin_le_one-1 nil 3552164505 ("" (default-strategy))
   ((abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sin_range application-judgement "trig_range" trig_basic "trig/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (cos_0 0 (cos_0-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (sin_0 0 (sin_0-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (pi_interval 0
  (pi_interval-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (cos_pi 0
  (cos_pi-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (sin_pi 0
  (sin_pi-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (cos_pi2 0
  (cos_pi2-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (sin_pi2 0
  (sin_pi2-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (cos_plus_pi 0
  (cos_plus_pi-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (sin_plus_pi 0
  (sin_plus_pi-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (cos_plus_pi2 0
  (cos_plus_pi2-1 nil 3552164505 ("" (default-strategy)) nil shostak))
 (sin_plus_pi2 0
  (sin_plus_pi2-1 nil 3552164506 ("" (default-strategy)) nil shostak))
 (cos_neg 0
  (cos_neg-1 nil 3552164506 ("" (default-strategy)) nil shostak))
 (sin_neg 0
  (sin_neg-1 nil 3552164506 ("" (default-strategy)) nil shostak))
 (cos_sum 0
  (cos_sum-1 nil 3552164506 ("" (default-strategy)) nil shostak))
 (sin_sum 0
  (sin_sum-1 nil 3552164506 ("" (default-strategy)) nil shostak))
 (tan_atan 0
  (tan_atan-1 nil 3552164506 ("" (default-strategy)) nil shostak)))

