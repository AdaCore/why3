<theory name="set.Set" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/></realized><typedecl name="set" altname="set" path="set.Set"><params><param name="a"/></params></typedecl><param name="mem" altname="mem" path="set.Set"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></param><lemma name="infix_eqeq_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="HOL.eq"/><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app></abs></app></app></concls></lemma><lemma name="extensionality" altname="extensionality" path="set.Set"><prems><app><const name="HOL.eq"/><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="HOL.eq"/><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></concls></lemma><lemma name="subset_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="Orderings.ord_class.less_eq"/><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.implies"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app></abs></app></app></concls></lemma><lemma name="subset_refl" altname="subset_refl" path="set.Set"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><var name="s"><type name="set" local="true"><tvar name="a"/></type></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></concls></lemma><lemma name="subset_trans" altname="subset_trans" path="set.Set"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var><var name="s3"><type name="set" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s3"><type name="set" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="empty" altname="empty" path="set.Set"><type name="set" local="true"><tvar name="a"/></type></param><definition altname="is_empty" path="set.Set"><app><const name="HOL.eq"/><app><var name="is_empty"><pred><type name="set" local="true"><tvar name="a"/></type></pred></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app></abs></app></app></definition><lemma name="empty_def1" altname="empty_def1" path="set.Set"><prems/><concls><app><const name="is_empty" local="true"><pred><type name="set" local="true"><tvar name="a"/></type></pred></const><const name="empty" local="true"><type name="set" local="true"><tvar name="a"/></type></const></app></concls></lemma><lemma name="mem_empty" altname="mem_empty" path="set.Set"><prems/><concls><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><const name="empty" local="true"><type name="set" local="true"><tvar name="a"/></type></const></app></app></concls></lemma><param name="add" altname="add" path="set.Set"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></param><lemma name="add_def1" altname="add_def1" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="add" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="y"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.disj"/><app><const name="HOL.eq"/><var name="x"><tvar name="a"/></var><var name="y"><tvar name="a"/></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><param name="remove" altname="remove" path="set.Set"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></param><lemma name="remove_def1" altname="remove_def1" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="remove" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="y"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.conj"/><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="x"><tvar name="a"/></var><var name="y"><tvar name="a"/></var></app></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="add_remove" altname="add_remove" path="set.Set"><prems><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="add" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><app><const name="remove" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></concls></lemma><lemma name="remove_add" altname="remove_add" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="remove" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><app><const name="add" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app><app><const name="remove" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="subset_remove" altname="subset_remove" path="set.Set"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="remove" local="true"><fun><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="union" altname="union" path="set.Set"><fun><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></param><lemma name="union_def1" altname="union_def1" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="union" local="true"><fun><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.disj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><param name="inter" altname="inter" path="set.Set"><fun><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></param><lemma name="inter_def1" altname="inter_def1" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="inter" local="true"><fun><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><param name="diff" altname="diff" path="set.Set"><fun><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></param><lemma name="diff_def1" altname="diff_def1" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="diff" local="true"><fun><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app></app></app></app></concls></lemma><lemma name="subset_diff" altname="subset_diff" path="set.Set"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="diff" local="true"><fun><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type><type name="set" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var><var name="s2"><type name="set" local="true"><tvar name="a"/></type></var></app><var name="s1"><type name="set" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="choose" altname="choose" path="set.Set"><fun><type name="set" local="true"><tvar name="a"/></type><tvar name="a"/></fun></param><lemma name="choose_def" altname="choose_def" path="set.Set"><prems><app><const name="HOL.Not"/><app><const name="is_empty" local="true"><pred><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></app></prems><concls><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><app><const name="choose" local="true"><fun><type name="set" local="true"><tvar name="a"/></type><tvar name="a"/></fun></const><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app><var name="s"><type name="set" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="all" altname="all" path="set.Set"><type name="set" local="true"><tvar name="a"/></type></param><lemma name="all_def" altname="all_def" path="set.Set"><prems/><concls><app><const name="mem" local="true"><pred><tvar name="a"/><type name="set" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><const name="all" local="true"><type name="set" local="true"><tvar name="a"/></type></const></app></concls></lemma></theory>