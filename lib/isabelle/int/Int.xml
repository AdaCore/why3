<theory name="int.Int" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/></realized><lemma name="infix_lseq_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="HOL.disj"/><app><const name="Orderings.ord_class.less"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="HOL.eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Assoc" altname="Assoc" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><var name="z"><type name="Int.int"/></var></app><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Unit_def_l" altname="Unit_def_l" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><num val="0"><type name="Int.int"/></num><var name="x"><type name="Int.int"/></var></app><var name="x"><type name="Int.int"/></var></app></concls></lemma><lemma name="Unit_def_r" altname="Unit_def_r" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app><var name="x"><type name="Int.int"/></var></app></concls></lemma><lemma name="Inv_def_l" altname="Inv_def_l" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Int.int"/></var></app><var name="x"><type name="Int.int"/></var></app><num val="0"><type name="Int.int"/></num></app></concls></lemma><lemma name="Inv_def_r" altname="Inv_def_r" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Int.int"/></var></app></app><num val="0"><type name="Int.int"/></num></app></concls></lemma><lemma name="Comm" altname="Comm" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Int.int"/></var><var name="x"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="Assoc1" altname="Assoc" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><var name="z"><type name="Int.int"/></var></app><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="y"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Mul_distr_l" altname="Mul_distr_l" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></app><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Mul_distr_r" altname="Mul_distr_r" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app><var name="x"><type name="Int.int"/></var></app><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><var name="y"><type name="Int.int"/></var><var name="x"><type name="Int.int"/></var></app><app><const name="Groups.times_class.times"/><var name="z"><type name="Int.int"/></var><var name="x"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="infix_mn_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.minus_class.minus"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><app><const name="Groups.uminus_class.uminus"/><var name="y"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Comm1" altname="Comm" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Groups.times_class.times"/><var name="y"><type name="Int.int"/></var><var name="x"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="Unitary" altname="Unitary" path="int.Int"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><num val="1"><type name="Int.int"/></num><var name="x"><type name="Int.int"/></var></app><var name="x"><type name="Int.int"/></var></app></concls></lemma><lemma name="NonTrivialRing" altname="NonTrivialRing" path="int.Int"><prems/><concls><app><const name="HOL.Not"/><app><const name="HOL.eq"/><num val="0"><type name="Int.int"/></num><num val="1"><type name="Int.int"/></num></app></app></concls></lemma><lemma name="Refl" altname="Refl" path="int.Int"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="x"><type name="Int.int"/></var></app></concls></lemma><lemma name="Trans" altname="Trans" path="int.Int"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="y"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></concls></lemma><lemma name="Antisymm" altname="Antisymm" path="int.Int"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="y"><type name="Int.int"/></var><var name="x"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app></concls></lemma><lemma name="Total" altname="Total" path="int.Int"><prems/><concls><app><const name="HOL.disj"/><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="y"><type name="Int.int"/></var><var name="x"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="ZeroLessOne" altname="ZeroLessOne" path="int.Int"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Int.int"/></num><num val="1"><type name="Int.int"/></num></app></concls></lemma><lemma name="CompatOrderAdd" altname="CompatOrderAdd" path="int.Int"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="CompatOrderMult" altname="CompatOrderMult" path="int.Int"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Int.int"/></num><var name="z"><type name="Int.int"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app><app><const name="Groups.times_class.times"/><var name="y"><type name="Int.int"/></var><var name="z"><type name="Int.int"/></var></app></app></concls></lemma></theory>