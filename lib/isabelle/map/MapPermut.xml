<theory name="map.MapPermut" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="map.Map"/><require name="map.Occ"/></realized><definition altname="permut" path="map.MapPermut"><app><const name="HOL.eq"/><app><var name="permut"><pred><fun><type name="Int.int"/><tvar name="a"/></fun><fun><type name="Int.int"/><tvar name="a"/></fun><type name="Int.int"/><type name="Int.int"/></pred></var><var name="m1"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="m2"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="l"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app><app><const name="HOL.All"/><abs name="v"><tvar name="a"/><app><const name="HOL.eq"/><app><const name="occ" path="map.Occ"><fun><tvar name="a"/><fun><type name="Int.int"/><tvar name="a"/></fun><type name="Int.int"/><type name="Int.int"/><type name="Int.int"/></fun></const><var name="v"><tvar name="a"/></var><var name="m1"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="l"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app><app><const name="occ" path="map.Occ"><fun><tvar name="a"/><fun><type name="Int.int"/><tvar name="a"/></fun><type name="Int.int"/><type name="Int.int"/><type name="Int.int"/></fun></const><var name="v"><tvar name="a"/></var><var name="m2"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="l"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app></app></abs></app></app></definition><lemma name="permut_trans" altname="permut_trans" path="map.MapPermut"><prems><app><const name="permut" local="true"><pred><fun><type name="Int.int"/><tvar name="a"/></fun><fun><type name="Int.int"/><tvar name="a"/></fun><type name="Int.int"/><type name="Int.int"/></pred></const><var name="a1"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="a2"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="l"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app><app><const name="permut" local="true"><pred><fun><type name="Int.int"/><tvar name="a"/></fun><fun><type name="Int.int"/><tvar name="a"/></fun><type name="Int.int"/><type name="Int.int"/></pred></const><var name="a2"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="a3"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="l"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app></prems><concls><app><const name="permut" local="true"><pred><fun><type name="Int.int"/><tvar name="a"/></fun><fun><type name="Int.int"/><tvar name="a"/></fun><type name="Int.int"/><type name="Int.int"/></pred></const><var name="a1"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="a3"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="l"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app></concls></lemma><lemma name="permut_exists" altname="permut_exists" path="map.MapPermut"><prems><app><const name="permut" local="true"><pred><fun><type name="Int.int"/><tvar name="a"/></fun><fun><type name="Int.int"/><tvar name="a"/></fun><type name="Int.int"/><type name="Int.int"/></pred></const><var name="a1"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="a2"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="l"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="l"><type name="Int.int"/></var><var name="i"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less"/><var name="i"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.Ex"/><abs name="j"><type name="Int.int"/><app><const name="HOL.conj"/><app><const name="HOL.conj"/><app><const name="Orderings.ord_class.less_eq"/><var name="l"><type name="Int.int"/></var><var name="j"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less"/><var name="j"><type name="Int.int"/></var><var name="u"><type name="Int.int"/></var></app></app><app><const name="HOL.eq"/><app><var name="a1"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="j"><type name="Int.int"/></var></app><app><var name="a2"><fun><type name="Int.int"/><tvar name="a"/></fun></var><var name="i"><type name="Int.int"/></var></app></app></app></abs></app></concls></lemma></theory>