<theory name="list.Append" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="list.List"/><require name="list.Length"/><require name="list.Mem"/></realized><lemma name="infix_plpl_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app><case><var name="l1"><type name="List.list"><tvar name="a"/></type></var><pat><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const><var name="l2"><type name="List.list"><tvar name="a"/></type></var></pat><pat><app><const name="List.list.Cons"/><var name="x1"><tvar name="a"/></var><var name="r1"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="List.list.Cons"/><var name="x1"><tvar name="a"/></var><app><const name="List.append"/><var name="r1"><type name="List.list"><tvar name="a"/></type></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></pat></case></app></concls></lemma><lemma name="Append_assoc" altname="Append_assoc" path="list.Append"><prems/><concls><app><const name="HOL.eq"/><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><app><const name="List.append"/><var name="l2"><type name="List.list"><tvar name="a"/></type></var><var name="l3"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="List.append"/><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app><var name="l3"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="Append_l_nil" altname="Append_l_nil" path="list.Append"><prems/><concls><app><const name="HOL.eq"/><app><const name="List.append"/><var name="l"><type name="List.list"><tvar name="a"/></type></var><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const></app><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></concls></lemma><lemma name="Append_length" altname="Append_length" path="list.Append"><prems/><concls><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></app><app><const name="Groups.plus_class.plus"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></app></app></concls></lemma><lemma name="mem_append" altname="mem_append" path="list.Append"><prems/><concls><app><const name="HOL.eq"/><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></app><app><const name="HOL.disj"/><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></app></app></concls></lemma><lemma name="mem_decomp" altname="mem_decomp" path="list.Append"><prems><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app></prems><concls><app><const name="HOL.Ex"/><abs name="l1"><type name="List.list"><tvar name="a"/></type><app><const name="HOL.Ex"/><abs name="l2"><type name="List.list"><tvar name="a"/></type><app><const name="HOL.eq"/><var name="l"><type name="List.list"><tvar name="a"/></type></var><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><app><const name="List.list.Cons"/><var name="x"><tvar name="a"/></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></app></abs></app></abs></app></concls></lemma></theory>