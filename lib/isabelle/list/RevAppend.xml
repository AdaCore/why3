<theory name="list.RevAppend" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="list.List"/><require name="list.Length"/><require name="list.Mem"/><require name="list.Append"/><require name="list.Reverse"/></realized><function><eqn altname="rev_append" path="list.RevAppend"><app><const name="HOL.eq"/><app><var name="rev_append"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></var><var name="s"><type name="List.list"><tvar name="a"/></type></var><var name="t"><type name="List.list"><tvar name="a"/></type></var></app><case><var name="s"><type name="List.list"><tvar name="a"/></type></var><pat><app><const name="List.list.Cons"/><var name="x"><tvar name="a"/></var><var name="r"><type name="List.list"><tvar name="a"/></type></var></app><app><var name="rev_append"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></var><var name="r"><type name="List.list"><tvar name="a"/></type></var><app><const name="List.list.Cons"/><var name="x"><tvar name="a"/></var><var name="t"><type name="List.list"><tvar name="a"/></type></var></app></app></pat><pat><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const><var name="t"><type name="List.list"><tvar name="a"/></type></var></pat></case></app></eqn></function><lemma name="rev_append_append_l" altname="rev_append_append_l" path="list.RevAppend"><prems/><concls><app><const name="HOL.eq"/><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><app><const name="List.append"/><var name="r"><type name="List.list"><tvar name="a"/></type></var><var name="s"><type name="List.list"><tvar name="a"/></type></var></app><var name="t"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><var name="s"><type name="List.list"><tvar name="a"/></type></var><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><var name="r"><type name="List.list"><tvar name="a"/></type></var><var name="t"><type name="List.list"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="rev_append_length" altname="rev_append_length" path="list.RevAppend"><prems/><concls><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><var name="s"><type name="List.list"><tvar name="a"/></type></var><var name="t"><type name="List.list"><tvar name="a"/></type></var></app></app></app><app><const name="Groups.plus_class.plus"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><var name="s"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><var name="t"><type name="List.list"><tvar name="a"/></type></var></app></app></app></app></concls></lemma><lemma name="rev_append_def" altname="rev_append_def" path="list.RevAppend"><prems/><concls><app><const name="HOL.eq"/><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><var name="r"><type name="List.list"><tvar name="a"/></type></var><var name="s"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="List.append"/><app><const name="List.rev"/><var name="r"><type name="List.list"><tvar name="a"/></type></var></app><var name="s"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="rev_append_append_r" altname="rev_append_append_r" path="list.RevAppend"><prems/><concls><app><const name="HOL.eq"/><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><var name="r"><type name="List.list"><tvar name="a"/></type></var><app><const name="List.append"/><var name="s"><type name="List.list"><tvar name="a"/></type></var><var name="t"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><app><const name="rev_append" local="true"><fun><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type><type name="List.list"><tvar name="a"/></type></fun></const><var name="s"><type name="List.list"><tvar name="a"/></type></var><var name="r"><type name="List.list"><tvar name="a"/></type></var></app><var name="t"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma></theory>