<theory name="list.HdTl" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="list.List"/></realized><definition altname="hd" path="list.HdTl"><app><const name="HOL.eq"/><app><var name="hd"><fun><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><case><var name="l"><type name="List.list"><tvar name="a"/></type></var><pat><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const></pat><pat><app><const name="List.list.Cons"/><var name="h"><tvar name="a"/></var><const name="Pure.dummy_pattern"/></app><app><const name="Option.option.Some"/><var name="h"><tvar name="a"/></var></app></pat></case></app></definition><definition altname="tl" path="list.HdTl"><app><const name="HOL.eq"/><app><var name="tl"><fun><type name="List.list"><tvar name="a"/></type><type name="Option.option"><type name="List.list"><tvar name="a"/></type></type></fun></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><case><var name="l"><type name="List.list"><tvar name="a"/></type></var><pat><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const><const name="Option.option.None"><type name="Option.option"><type name="List.list"><tvar name="a"/></type></type></const></pat><pat><app><const name="List.list.Cons"/><const name="Pure.dummy_pattern"/><var name="t"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="Option.option.Some"/><var name="t"><type name="List.list"><tvar name="a"/></type></var></app></pat></case></app></definition></theory>