<theory name="list.NumOcc" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="list.List"/><require name="list.Length"/><require name="list.Mem"/><require name="list.Append"/><require name="list.Reverse"/></realized><function><eqn altname="num_occ" path="list.NumOcc"><app><const name="HOL.eq"/><app><var name="num_occ"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></var><var name="x"><tvar name="a"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><case><var name="l"><type name="List.list"><tvar name="a"/></type></var><pat><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const><num val="0"><type name="Int.int"/></num></pat><pat><app><const name="List.list.Cons"/><var name="y"><tvar name="a"/></var><var name="r"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="Groups.plus_class.plus"/><app><const name="HOL.If"/><app><const name="HOL.eq"/><var name="x"><tvar name="a"/></var><var name="y"><tvar name="a"/></var></app><num val="1"><type name="Int.int"/></num><num val="0"><type name="Int.int"/></num></app><app><var name="num_occ"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></var><var name="x"><tvar name="a"/></var><var name="r"><type name="List.list"><tvar name="a"/></type></var></app></app></pat></case></app></eqn></function><lemma name="Num_Occ_NonNeg" altname="Num_Occ_NonNeg" path="list.NumOcc"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Int.int"/></num><app><const name="num_occ" local="true"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></const><var name="x"><tvar name="a"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="Mem_Num_Occ" altname="Mem_Num_Occ" path="list.NumOcc"><prems/><concls><app><const name="HOL.eq"/><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="Orderings.ord_class.less"/><num val="0"><type name="Int.int"/></num><app><const name="num_occ" local="true"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></const><var name="x"><tvar name="a"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="Append_Num_Occ" altname="Append_Num_Occ" path="list.NumOcc"><prems/><concls><app><const name="HOL.eq"/><app><const name="num_occ" local="true"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></const><var name="x"><tvar name="a"/></var><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="Groups.plus_class.plus"/><app><const name="num_occ" local="true"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></const><var name="x"><tvar name="a"/></var><var name="l1"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="num_occ" local="true"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></const><var name="x"><tvar name="a"/></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="reverse_num_occ" altname="reverse_num_occ" path="list.NumOcc"><prems/><concls><app><const name="HOL.eq"/><app><const name="num_occ" local="true"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></const><var name="x"><tvar name="a"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="num_occ" local="true"><fun><tvar name="a"/><type name="List.list"><tvar name="a"/></type><type name="Int.int"/></fun></const><var name="x"><tvar name="a"/></var><app><const name="List.rev"/><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app></app></concls></lemma></theory>