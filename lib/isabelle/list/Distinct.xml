<theory name="list.Distinct" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="list.List"/><require name="list.Length"/><require name="list.Mem"/><require name="list.Append"/></realized><lemma name="distinct_zero" altname="distinct_zero" path="list.Distinct"><prems/><concls><app><const name="List.distinct"/><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const></app></concls></lemma><lemma name="distinct_one" altname="distinct_one" path="list.Distinct"><prems/><concls><app><const name="List.distinct"/><app><const name="List.list.Cons"/><var name="x"><tvar name="a"/></var><const name="List.list.Nil"><type name="List.list"><tvar name="a"/></type></const></app></app></concls></lemma><lemma name="distinct_many" altname="distinct_many" path="list.Distinct"><prems><app><const name="HOL.Not"/><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app></app><app><const name="List.distinct"/><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></prems><concls><app><const name="List.distinct"/><app><const name="List.list.Cons"/><var name="x"><tvar name="a"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="distinct_append" altname="distinct_append" path="list.Distinct"><prems><app><const name="List.distinct"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="List.distinct"/><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.implies"/><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="HOL.Not"/><app><const name="Set.member"/><var name="x"><tvar name="a"/></var><app><const name="List.list.set"/><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></app></app></abs></app></prems><concls><app><const name="List.distinct"/><app><const name="List.append"/><var name="l1"><type name="List.list"><tvar name="a"/></type></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma></theory>