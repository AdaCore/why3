<theory name="real.FromInt" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="real.Real"/></realized><param name="from_int" altname="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></param><lemma name="Zero" altname="Zero" path="real.FromInt"><prems/><concls><app><const name="HOL.eq"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><num val="0"><type name="Int.int"/></num></app><num val="0"><type name="Real.real"/></num></app></concls></lemma><lemma name="One" altname="One" path="real.FromInt"><prems/><concls><app><const name="HOL.eq"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><num val="1"><type name="Int.int"/></num></app><num val="1"><type name="Real.real"/></num></app></concls></lemma><lemma name="Add" altname="Add" path="real.FromInt"><prems/><concls><app><const name="HOL.eq"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app></app><app><const name="Groups.plus_class.plus"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="x"><type name="Int.int"/></var></app><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="y"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Sub" altname="Sub" path="real.FromInt"><prems/><concls><app><const name="HOL.eq"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.minus_class.minus"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app></app><app><const name="Groups.minus_class.minus"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="x"><type name="Int.int"/></var></app><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="y"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Mul" altname="Mul" path="real.FromInt"><prems/><concls><app><const name="HOL.eq"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.times_class.times"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app></app><app><const name="Groups.times_class.times"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="x"><type name="Int.int"/></var></app><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="y"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Neg" altname="Neg" path="real.FromInt"><prems/><concls><app><const name="HOL.eq"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Int.int"/></var></app></app><app><const name="Groups.uminus_class.uminus"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="x"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="Monotonic" altname="Monotonic" path="real.FromInt"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Int.int"/></var><var name="y"><type name="Int.int"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="x"><type name="Int.int"/></var></app><app><const name="from_int" local="true"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="y"><type name="Int.int"/></var></app></app></concls></lemma></theory>