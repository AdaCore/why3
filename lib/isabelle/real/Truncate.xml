<theory name="real.Truncate" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="real.Real"/><require name="real.FromInt"/></realized><param name="truncate" altname="truncate" path="real.Truncate"><fun><type name="Real.real"/><type name="Int.int"/></fun></param><lemma name="Truncate_int" altname="Truncate_int" path="real.Truncate"><prems/><concls><app><const name="HOL.eq"/><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="i"><type name="Int.int"/></var></app></app><var name="i"><type name="Int.int"/></var></app></concls></lemma><lemma name="Truncate_down_pos" altname="Truncate_down_pos" path="real.Truncate"><prems><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Real.real"/></num><var name="x"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app></app><var name="x"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less"/><var name="x"><type name="Real.real"/></var><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.plus_class.plus"/><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><num val="1"><type name="Int.int"/></num></app></app></app></concls></lemma><lemma name="Truncate_up_neg" altname="Truncate_up_neg" path="real.Truncate"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></prems><concls><app><const name="Orderings.ord_class.less"/><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.minus_class.minus"/><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><num val="1"><type name="Int.int"/></num></app></app><var name="x"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="Real_of_truncate" altname="Real_of_truncate" path="real.Truncate"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.minus_class.minus"/><var name="x"><type name="Real.real"/></var><num val="1"><type name="Real.real"/></num></app><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app></app></app><app><const name="Orderings.ord_class.less_eq"/><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app></app><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><num val="1"><type name="Real.real"/></num></app></app></concls></lemma><lemma name="Truncate_monotonic" altname="Truncate_monotonic" path="real.Truncate"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="y"><type name="Real.real"/></var></app></app></concls></lemma><lemma name="Truncate_monotonic_int1" altname="Truncate_monotonic_int1" path="real.Truncate"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="i"><type name="Int.int"/></var></app></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><var name="i"><type name="Int.int"/></var></app></concls></lemma><lemma name="Truncate_monotonic_int2" altname="Truncate_monotonic_int2" path="real.Truncate"><prems><app><const name="Orderings.ord_class.less_eq"/><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="i"><type name="Int.int"/></var></app><var name="x"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><var name="i"><type name="Int.int"/></var><app><const name="truncate" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app></app></concls></lemma><param name="floor" altname="floor" path="real.Truncate"><fun><type name="Real.real"/><type name="Int.int"/></fun></param><param name="ceil" altname="ceil" path="real.Truncate"><fun><type name="Real.real"/><type name="Int.int"/></fun></param><lemma name="Floor_int" altname="Floor_int" path="real.Truncate"><prems/><concls><app><const name="HOL.eq"/><app><const name="floor" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="i"><type name="Int.int"/></var></app></app><var name="i"><type name="Int.int"/></var></app></concls></lemma><lemma name="Ceil_int" altname="Ceil_int" path="real.Truncate"><prems/><concls><app><const name="HOL.eq"/><app><const name="ceil" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="i"><type name="Int.int"/></var></app></app><var name="i"><type name="Int.int"/></var></app></concls></lemma><lemma name="Floor_down" altname="Floor_down" path="real.Truncate"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="floor" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app></app><var name="x"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less"/><var name="x"><type name="Real.real"/></var><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.plus_class.plus"/><app><const name="floor" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><num val="1"><type name="Int.int"/></num></app></app></app></concls></lemma><lemma name="Ceil_up" altname="Ceil_up" path="real.Truncate"><prems/><concls><app><const name="Orderings.ord_class.less"/><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="Groups.minus_class.minus"/><app><const name="ceil" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><num val="1"><type name="Int.int"/></num></app></app><var name="x"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="ceil" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="Floor_monotonic" altname="Floor_monotonic" path="real.Truncate"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="floor" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><app><const name="floor" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="y"><type name="Real.real"/></var></app></app></concls></lemma><lemma name="Ceil_monotonic" altname="Ceil_monotonic" path="real.Truncate"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="ceil" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="x"><type name="Real.real"/></var></app><app><const name="ceil" local="true"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><var name="y"><type name="Real.real"/></var></app></app></concls></lemma></theory>