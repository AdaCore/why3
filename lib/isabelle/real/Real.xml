<theory name="real.Real" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/></realized><lemma name="infix_lseq_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="HOL.disj"/><app><const name="Orderings.ord_class.less"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="HOL.eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="Assoc" altname="Assoc" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><var name="z"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="Unit_def_l" altname="Unit_def_l" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><num val="0"><type name="Real.real"/></num><var name="x"><type name="Real.real"/></var></app><var name="x"><type name="Real.real"/></var></app></concls></lemma><lemma name="Unit_def_r" altname="Unit_def_r" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app><var name="x"><type name="Real.real"/></var></app></concls></lemma><lemma name="Inv_def_l" altname="Inv_def_l" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Real.real"/></var></app><var name="x"><type name="Real.real"/></var></app><num val="0"><type name="Real.real"/></num></app></concls></lemma><lemma name="Inv_def_r" altname="Inv_def_r" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Real.real"/></var></app></app><num val="0"><type name="Real.real"/></num></app></concls></lemma><lemma name="Comm" altname="Comm" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Real.real"/></var><var name="x"><type name="Real.real"/></var></app></app></concls></lemma><lemma name="Assoc1" altname="Assoc" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><var name="z"><type name="Real.real"/></var></app><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.times_class.times"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="Mul_distr_l" altname="Mul_distr_l" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="Mul_distr_r" altname="Mul_distr_r" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app><var name="x"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><var name="y"><type name="Real.real"/></var><var name="x"><type name="Real.real"/></var></app><app><const name="Groups.times_class.times"/><var name="z"><type name="Real.real"/></var><var name="x"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="infix_mn_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.minus_class.minus"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.uminus_class.uminus"/><var name="y"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="Comm1" altname="Comm" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Groups.times_class.times"/><var name="y"><type name="Real.real"/></var><var name="x"><type name="Real.real"/></var></app></app></concls></lemma><lemma name="Unitary" altname="Unitary" path="real.Real"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><num val="1"><type name="Real.real"/></num><var name="x"><type name="Real.real"/></var></app><var name="x"><type name="Real.real"/></var></app></concls></lemma><lemma name="NonTrivialRing" altname="NonTrivialRing" path="real.Real"><prems/><concls><app><const name="HOL.Not"/><app><const name="HOL.eq"/><num val="0"><type name="Real.real"/></num><num val="1"><type name="Real.real"/></num></app></app></concls></lemma><lemma name="Inverse" altname="Inverse" path="real.Real"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="x"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><app><const name="Fields.inverse_class.inverse"/><var name="x"><type name="Real.real"/></var></app></app><num val="1"><type name="Real.real"/></num></app></concls></lemma><lemma name="infix_sl_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="Rings.divide_class.divide"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><app><const name="Fields.inverse_class.inverse"/><var name="y"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="add_div" altname="add_div" path="real.Real"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="z"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="Rings.divide_class.divide"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><var name="z"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><app><const name="Rings.divide_class.divide"/><var name="x"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app><app><const name="Rings.divide_class.divide"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="sub_div" altname="sub_div" path="real.Real"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="z"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="Rings.divide_class.divide"/><app><const name="Groups.minus_class.minus"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><var name="z"><type name="Real.real"/></var></app><app><const name="Groups.minus_class.minus"/><app><const name="Rings.divide_class.divide"/><var name="x"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app><app><const name="Rings.divide_class.divide"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="neg_div" altname="neg_div" path="real.Real"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="y"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="Rings.divide_class.divide"/><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Real.real"/></var></app><var name="y"><type name="Real.real"/></var></app><app><const name="Groups.uminus_class.uminus"/><app><const name="Rings.divide_class.divide"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="assoc_mul_div" altname="assoc_mul_div" path="real.Real"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="z"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="Rings.divide_class.divide"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><var name="z"><type name="Real.real"/></var></app><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><app><const name="Rings.divide_class.divide"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="assoc_div_mul" altname="assoc_div_mul" path="real.Real"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="y"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="z"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="Rings.divide_class.divide"/><app><const name="Rings.divide_class.divide"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><var name="z"><type name="Real.real"/></var></app><app><const name="Rings.divide_class.divide"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.times_class.times"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></app></concls></lemma><lemma name="assoc_div_div" altname="assoc_div_div" path="real.Real"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="y"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="z"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="Rings.divide_class.divide"/><var name="x"><type name="Real.real"/></var><app><const name="Rings.divide_class.divide"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app><app><const name="Rings.divide_class.divide"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app><var name="y"><type name="Real.real"/></var></app></app></concls></lemma><lemma name="Refl" altname="Refl" path="real.Real"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="x"><type name="Real.real"/></var></app></concls></lemma><lemma name="Trans" altname="Trans" path="real.Real"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></concls></lemma><lemma name="Antisymm" altname="Antisymm" path="real.Real"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="y"><type name="Real.real"/></var><var name="x"><type name="Real.real"/></var></app></prems><concls><app><const name="HOL.eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></concls></lemma><lemma name="Total" altname="Total" path="real.Real"><prems/><concls><app><const name="HOL.disj"/><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="y"><type name="Real.real"/></var><var name="x"><type name="Real.real"/></var></app></app></concls></lemma><lemma name="ZeroLessOne" altname="ZeroLessOne" path="real.Real"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Real.real"/></num><num val="1"><type name="Real.real"/></num></app></concls></lemma><lemma name="CompatOrderAdd" altname="CompatOrderAdd" path="real.Real"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></concls></lemma><lemma name="CompatOrderMult" altname="CompatOrderMult" path="real.Real"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Real.real"/></num><var name="z"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.times_class.times"/><var name="x"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app><app><const name="Groups.times_class.times"/><var name="y"><type name="Real.real"/></var><var name="z"><type name="Real.real"/></var></app></app></concls></lemma></theory>