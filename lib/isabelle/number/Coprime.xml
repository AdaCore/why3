<theory name="number.Coprime" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="int.Abs"/><require name="int.EuclideanDivision"/><require name="int.ComputerDivision"/><require name="number.Parity"/><require name="number.Divisibility"/><require name="number.Gcd"/><require name="number.Prime"/></realized><lemma name="coprime_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="GCD.gcd_class.coprime"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><app><const name="HOL.eq"/><app><const name="GCD.gcd_class.gcd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><num val="1"><type name="Int.int"/></num></app></app></concls></lemma><lemma name="prime_coprime" altname="prime_coprime" path="number.Coprime"><prems/><concls><app><const name="HOL.eq"/><app><const name="Factorial_Ring.normalization_semidom_class.prime"/><var name="p"><type name="Int.int"/></var></app><app><const name="HOL.conj"/><app><const name="Orderings.ord_class.less_eq"/><num val="2"><type name="Int.int"/></num><var name="p"><type name="Int.int"/></var></app><app><const name="HOL.All"/><abs name="n"><type name="Int.int"/><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="Orderings.ord_class.less_eq"/><num val="1"><type name="Int.int"/></num><var name="n"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less"/><var name="n"><type name="Int.int"/></var><var name="p"><type name="Int.int"/></var></app></app><app><const name="GCD.gcd_class.coprime"/><var name="n"><type name="Int.int"/></var><var name="p"><type name="Int.int"/></var></app></app></abs></app></app></app></concls></lemma><lemma name="Gauss" altname="Gauss" path="number.Coprime"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="b"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></app><app><const name="GCD.gcd_class.coprime"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></concls></lemma><lemma name="Euclid" altname="Euclid" path="number.Coprime"><prems><app><const name="Factorial_Ring.normalization_semidom_class.prime"/><var name="p"><type name="Int.int"/></var></app><app><const name="Rings.dvd_class.dvd"/><var name="p"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></app></prems><concls><app><const name="HOL.disj"/><app><const name="Rings.dvd_class.dvd"/><var name="p"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app><app><const name="Rings.dvd_class.dvd"/><var name="p"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="gcd_coprime" altname="gcd_coprime" path="number.Coprime"><prems><app><const name="GCD.gcd_class.coprime"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="GCD.gcd_class.gcd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="b"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></app><app><const name="GCD.gcd_class.gcd"/><var name="a"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></app></concls></lemma></theory>