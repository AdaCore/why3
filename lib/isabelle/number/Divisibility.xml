<theory name="number.Divisibility" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="int.Abs"/><require name="int.EuclideanDivision"/><require name="int.ComputerDivision"/><require name="number.Parity"/></realized><lemma name="divides_def"><prems/><concls><app><const name="HOL.eq"/><app><const name="Rings.dvd_class.dvd"/><var name="d"><type name="Int.int"/></var><var name="n"><type name="Int.int"/></var></app><app><const name="HOL.Ex"/><abs name="q"><type name="Int.int"/><app><const name="HOL.eq"/><var name="n"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="q"><type name="Int.int"/></var><var name="d"><type name="Int.int"/></var></app></app></abs></app></app></concls></lemma><lemma name="divides_refl" altname="divides_refl" path="number.Divisibility"><prems/><concls><app><const name="Rings.dvd_class.dvd"/><var name="n"><type name="Int.int"/></var><var name="n"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_1_n" altname="divides_1_n" path="number.Divisibility"><prems/><concls><app><const name="Rings.dvd_class.dvd"/><num val="1"><type name="Int.int"/></num><var name="n"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_0" altname="divides_0" path="number.Divisibility"><prems/><concls><app><const name="Rings.dvd_class.dvd"/><var name="n"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app></concls></lemma><lemma name="divides_left" altname="divides_left" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><app><const name="Groups.times_class.times"/><var name="c"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app><app><const name="Groups.times_class.times"/><var name="c"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_right" altname="divides_right" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><app><const name="Groups.times_class.times"/><var name="a"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app><app><const name="Groups.times_class.times"/><var name="b"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_oppr" altname="divides_oppr" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.uminus_class.uminus"/><var name="b"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_oppl" altname="divides_oppl" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><app><const name="Groups.uminus_class.uminus"/><var name="a"><type name="Int.int"/></var></app><var name="b"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_oppr_rev" altname="divides_oppr_rev" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><app><const name="Groups.uminus_class.uminus"/><var name="a"><type name="Int.int"/></var></app><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_oppl_rev" altname="divides_oppl_rev" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.uminus_class.uminus"/><var name="b"><type name="Int.int"/></var></app></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_plusr" altname="divides_plusr" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.plus_class.plus"/><var name="b"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_minusr" altname="divides_minusr" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.minus_class.minus"/><var name="b"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_multl" altname="divides_multl" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="c"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_multr" altname="divides_multr" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="b"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_factorl" altname="divides_factorl" path="number.Divisibility"><prems/><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="b"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_factorr" altname="divides_factorr" path="number.Divisibility"><prems/><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.times_class.times"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="divides_n_1" altname="divides_n_1" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="n"><type name="Int.int"/></var><num val="1"><type name="Int.int"/></num></app></prems><concls><app><const name="HOL.disj"/><app><const name="HOL.eq"/><var name="n"><type name="Int.int"/></var><num val="1"><type name="Int.int"/></num></app><app><const name="HOL.eq"/><var name="n"><type name="Int.int"/></var><app><const name="Groups.uminus_class.uminus"/><num val="1"><type name="Int.int"/></num></app></app></app></concls></lemma><lemma name="divides_antisym" altname="divides_antisym" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><app><const name="Rings.dvd_class.dvd"/><var name="b"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.disj"/><app><const name="HOL.eq"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><app><const name="HOL.eq"/><var name="a"><type name="Int.int"/></var><app><const name="Groups.uminus_class.uminus"/><var name="b"><type name="Int.int"/></var></app></app></app></concls></lemma><lemma name="divides_trans" altname="divides_trans" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><app><const name="Rings.dvd_class.dvd"/><var name="b"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="c"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_bounds" altname="divides_bounds" path="number.Divisibility"><prems><app><const name="Rings.dvd_class.dvd"/><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="b"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.abs_class.abs"/><var name="a"><type name="Int.int"/></var></app><app><const name="Groups.abs_class.abs"/><var name="b"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="mod_divides_euclidean" altname="mod_divides_euclidean" path="number.Divisibility"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="b"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app></app><app><const name="HOL.eq"/><app><const name="mod" path="int.EuclideanDivision"><fun><type name="Int.int"/><type name="Int.int"/><type name="Int.int"/></fun></const><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><num val="0"><type name="Int.int"/></num></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="b"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_mod_euclidean" altname="divides_mod_euclidean" path="number.Divisibility"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="b"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app></app><app><const name="Rings.dvd_class.dvd"/><var name="b"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="mod" path="int.EuclideanDivision"><fun><type name="Int.int"/><type name="Int.int"/><type name="Int.int"/></fun></const><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><num val="0"><type name="Int.int"/></num></app></concls></lemma><lemma name="mod_divides_computer" altname="mod_divides_computer" path="number.Divisibility"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="b"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app></app><app><const name="HOL.eq"/><app><const name="mod" path="int.ComputerDivision"><fun><type name="Int.int"/><type name="Int.int"/><type name="Int.int"/></fun></const><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><num val="0"><type name="Int.int"/></num></app></prems><concls><app><const name="Rings.dvd_class.dvd"/><var name="b"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app></concls></lemma><lemma name="divides_mod_computer" altname="divides_mod_computer" path="number.Divisibility"><prems><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="b"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app></app><app><const name="Rings.dvd_class.dvd"/><var name="b"><type name="Int.int"/></var><var name="a"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="mod" path="int.ComputerDivision"><fun><type name="Int.int"/><type name="Int.int"/><type name="Int.int"/></fun></const><var name="a"><type name="Int.int"/></var><var name="b"><type name="Int.int"/></var></app><num val="0"><type name="Int.int"/></num></app></concls></lemma><lemma name="even_divides" altname="even_divides" path="number.Divisibility"><prems/><concls><app><const name="HOL.eq"/><app><const name="Parity.semiring_parity_class.even"/><var name="a"><type name="Int.int"/></var></app><app><const name="Rings.dvd_class.dvd"/><num val="2"><type name="Int.int"/></num><var name="a"><type name="Int.int"/></var></app></app></concls></lemma><lemma name="odd_divides" altname="odd_divides" path="number.Divisibility"><prems/><concls><app><const name="HOL.eq"/><app><const name="Parity.semiring_parity_class.odd"/><var name="a"><type name="Int.int"/></var></app><app><const name="HOL.Not"/><app><const name="Rings.dvd_class.dvd"/><num val="2"><type name="Int.int"/></num><var name="a"><type name="Int.int"/></var></app></app></app></concls></lemma></theory>