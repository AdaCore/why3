<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.1.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="ral.mlw"/>
<theory name="RAL" proved="true">
 <goal name="balancing&#39;vc" expl="VC for balancing" proved="true">
 <proof prover="0"><result status="valid" time="0.010000" steps="4"/></proof>
 </goal>
 <goal name="M.assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="M.neutral" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="M.M.assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="M.M.neutral" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="M.zero&#39;vc" expl="VC for zero" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="M.op&#39;vc" expl="VC for op" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="agg_measure_is_length&#39;vc" expl="VC for agg_measure_is_length" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="101"/></proof>
 </goal>
 <goal name="selected_part&#39;vc" expl="VC for selected_part" proved="true">
 <proof prover="2"><result status="valid" time="0.120000" steps="1437"/></proof>
 </goal>
 <goal name="Sel.M.assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="Sel.M.neutral" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="Sel.M.zero&#39;refn&#39;vc" expl="VC for zero&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="Sel.M.op&#39;refn&#39;vc" expl="VC for op&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="Sel.M.agg_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="8"/></proof>
 </goal>
 <goal name="Sel.M.agg_sing" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="30"/></proof>
 </goal>
 <goal name="Sel.M.agg_cat" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="8"/></proof>
 </goal>
 <goal name="Sel.balancing&#39;refn&#39;vc" expl="VC for balancing&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="Sel.selection_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="21"/></proof>
 </goal>
 <goal name="Sel.selected_part&#39;refn&#39;vc" expl="VC for selected_part&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.100000" steps="60"/></proof>
 </goal>
 <goal name="empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="10"/></proof>
 </goal>
 <goal name="singleton&#39;vc" expl="VC for singleton" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="10"/></proof>
 </goal>
 <goal name="is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="decompose_front&#39;vc" expl="VC for decompose_front" proved="true">
 <proof prover="2"><result status="valid" time="0.030000" steps="6"/></proof>
 </goal>
 <goal name="decompose_back&#39;vc" expl="VC for decompose_back" proved="true">
 <proof prover="2"><result status="valid" time="0.040000" steps="6"/></proof>
 </goal>
 <goal name="front&#39;vc" expl="VC for front" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="6"/></proof>
 </goal>
 <goal name="back&#39;vc" expl="VC for back" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
 <goal name="cons&#39;vc" expl="VC for cons" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="12"/></proof>
 </goal>
 <goal name="snoc&#39;vc" expl="VC for snoc" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="12"/></proof>
 </goal>
 <goal name="concat&#39;vc" expl="VC for concat" proved="true">
 <proof prover="2"><result status="valid" time="0.030000" steps="6"/></proof>
 </goal>
 <goal name="length&#39;vc" expl="VC for length" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="8"/></proof>
 </goal>
 <goal name="set&#39;vc" expl="VC for set" proved="true">
 <proof prover="2"><result status="valid" time="0.200000" steps="1225"/></proof>
 </goal>
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="2"><result status="valid" time="0.070000" steps="188"/></proof>
 </goal>
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <proof prover="2"><result status="valid" time="0.280000" steps="1481"/></proof>
 </goal>
 <goal name="remove&#39;vc" expl="VC for remove" proved="true">
 <proof prover="2"><result status="valid" time="0.210000" steps="689"/></proof>
 </goal>
 <goal name="cut&#39;vc" expl="VC for cut" proved="true">
 <proof prover="2"><result status="valid" time="0.090000" steps="391"/></proof>
 </goal>
 <goal name="split&#39;vc" expl="VC for split" proved="true">
 <proof prover="2"><result status="valid" time="0.150000" steps="497"/></proof>
 </goal>
 <goal name="harness&#39;vc" expl="VC for harness" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="harness&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="10"/></proof>
  </goal>
  <goal name="harness&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="16"/></proof>
  </goal>
  <goal name="harness&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="22"/></proof>
  </goal>
  <goal name="harness&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="28"/></proof>
  </goal>
  <goal name="harness&#39;vc.4" expl="check" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="168"/></proof>
  </goal>
  <goal name="harness&#39;vc.5" expl="check" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="168"/></proof>
  </goal>
  <goal name="harness&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="34"/></proof>
  </goal>
  <goal name="harness&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="38"/></proof>
  </goal>
  <goal name="harness&#39;vc.8" expl="check" proved="true">
  <proof prover="2"><result status="valid" time="0.240000" steps="548"/></proof>
  </goal>
  <goal name="harness&#39;vc.9" expl="check" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.300000" steps="805"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="harness2&#39;vc" expl="VC for harness2" proved="true">
 <proof prover="2"><result status="valid" time="0.240000" steps="1141"/></proof>
 </goal>
</theory>
</file>
</why3session>
