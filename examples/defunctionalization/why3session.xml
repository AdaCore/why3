<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Spass" version="3.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.3.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.5.0" timelimit="30" steplimit="0" memlimit="4000"/>
<prover id="6" name="Z3" version="3.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="0.95.2" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.3" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../defunctionalization.mlw" proved="true">
<theory name="Expr" proved="true" sum="c1de442f7d0db8bea88eee421a52208c">
 <goal name="VC p4" expl="VC for p4" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC p3" expl="VC for p3" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC p2" expl="VC for p2" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC p1" expl="VC for p1" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC p0" expl="VC for p0" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="DirectSem" proved="true" sum="0baec78740607ca49346469390b68a94">
 <goal name="eval_p3" proved="true">
 <proof prover="0"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="4000"><result status="valid" time="0.00"/></proof>
 <proof prover="6" memlimit="4000"><result status="valid" time="0.02"/></proof>
 <proof prover="7" timelimit="5"><result status="valid" time="0.02" steps="7"/></proof>
 <proof prover="8" memlimit="4000"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC interpret_0" expl="VC for interpret_0" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC eval_0" expl="VC for eval_0" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="CPS" proved="true" sum="4931b7b6f398610f25915609c488b205">
 <goal name="VC interpret_1" expl="VC for interpret_1" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="VC eval_1" expl="VC for eval_1" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="46"/></proof>
 </goal>
</theory>
<theory name="Defunctionalization" proved="true" sum="e401ab519c7d06ec2679b263e78436c3">
 <goal name="VC test" expl="VC for test" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="3"/></proof>
 </goal>
 <goal name="VC interpret_2" expl="VC for interpret_2" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="116"/></proof>
 </goal>
 <goal name="VC continue_2" expl="VC for continue_2" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="82"/></proof>
 </goal>
 <goal name="size_c_pos" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_c_pos.0" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_e_pos" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_e_pos.0" proved="true">
  <proof prover="7"><result status="valid" time="0.04" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Defunctionalization2" proved="true" sum="9facfdbfa15cf2673b66d832c6a5594f">
 <goal name="VC test" expl="VC for test" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="3"/></proof>
 </goal>
 <goal name="VC interpret_2" expl="VC for interpret_2" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="15"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC eval_2.0" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC eval_2.1" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC eval_2.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="49"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC continue_2" expl="VC for continue_2" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="107"/></proof>
 </goal>
</theory>
<theory name="SemWithError" proved="true" sum="d3c9a8a8c554462c7733658c6393830a">
 <goal name="VC test" expl="VC for test" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="6"/></proof>
 </goal>
 <goal name="VC interpret_4" expl="VC for interpret_4" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="40"/></proof>
 </goal>
 <goal name="VC eval_4" expl="VC for eval_4" proved="true">
 <proof prover="4"><result status="valid" time="0.12" steps="724"/></proof>
 </goal>
 <goal name="VC continue_4" expl="VC for continue_4" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="170"/></proof>
 </goal>
 <goal name="size_c_pos" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_c_pos.0" proved="true">
  <proof prover="7"><result status="valid" time="0.03" steps="15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_e_pos" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_e_pos.0" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cps3_correct" proved="true">
 <proof prover="3"><result status="valid" time="0.01"/></proof>
 <proof prover="6"><result status="valid" time="0.02"/></proof>
 <proof prover="7" timelimit="5"><result status="valid" time="0.03" steps="10"/></proof>
 <proof prover="8"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="VC cps3_correct_expr" expl="VC for cps3_correct_expr" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC cps3_correct_expr.0" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC cps3_correct_expr.1" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC cps3_correct_expr.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="VC cps3_correct_expr.3" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="VC cps3_correct_expr.3.0" expl="postcondition" proved="true">
   <proof prover="4" timelimit="1"><result status="valid" time="0.01" steps="63"/></proof>
   </goal>
   <goal name="VC cps3_correct_expr.3.1" expl="postcondition" proved="true">
   <proof prover="5" timelimit="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cps2_correct" proved="true">
 <proof prover="3"><result status="valid" time="0.01"/></proof>
 <proof prover="6"><result status="valid" time="0.03"/></proof>
 <proof prover="7" timelimit="5"><result status="valid" time="0.02" steps="18"/></proof>
 <proof prover="8"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="cps2_correct_expr" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="cps2_correct_expr.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="cps2_correct_expr.0.0" proved="true">
   <proof prover="7"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
   <goal name="cps2_correct_expr.0.1" proved="true">
   <proof prover="3" timelimit="6"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cps2_correct_expr_aux" proved="true">
 <proof prover="7"><result status="valid" time="0.02" steps="2"/></proof>
 </goal>
 <goal name="cps_correct" proved="true">
 <proof prover="0"><result status="valid" time="0.01"/></proof>
 <proof prover="3"><result status="valid" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.01"/></proof>
 <proof prover="7" timelimit="5"><result status="valid" time="0.02" steps="4"/></proof>
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="cps_correct_expr" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="cps_correct_expr.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="cps_correct_expr.0.0" proved="true">
   <proof prover="7"><result status="valid" time="0.02" steps="8"/></proof>
   </goal>
   <goal name="cps_correct_expr.0.1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="cps_correct_expr.0.1.0" proved="true">
    <proof prover="5"><result status="valid" time="0.99"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ReductionSemantics" proved="true" sum="27c7a2d5da07fc1c0c6477463b986ed6">
 <goal name="VC test" expl="VC for test" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="5"/></proof>
 </goal>
 <goal name="VC interpret" expl="VC for interpret" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2" proved="true">
 <proof prover="4"><result status="valid" time="0.04" steps="111"/></proof>
 </goal>
 <goal name="VC eval_1" expl="VC for eval_1" proved="true">
 <proof prover="4"><result status="valid" time="0.05" steps="51"/></proof>
 </goal>
 <goal name="VC normalize" expl="VC for normalize" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
 <goal name="VC itere_opt" expl="VC for itere_opt" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC itere_opt.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC itere_opt.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC itere_opt.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC itere_opt.3" expl="unreachable point" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC itere_opt.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC refocus" expl="VC for refocus" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
 <goal name="VC itere" expl="VC for itere" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="18"/></proof>
 </goal>
 <goal name="VC reduce" expl="VC for reduce" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="VC decompose" expl="VC for decompose" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="13"/></proof>
 </goal>
 <goal name="VC decompose_cont" expl="VC for decompose_cont" proved="true">
 <proof prover="4"><result status="valid" time="0.03" steps="219"/></proof>
 </goal>
 <goal name="VC decompose_term" expl="VC for decompose_term" proved="true">
 <proof prover="4"><result status="valid" time="0.03" steps="199"/></proof>
 </goal>
 <goal name="size_c_pos" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_c_pos.0" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC recompose_values" expl="VC for recompose_values" proved="true">
 <proof prover="4"><result status="valid" time="0.04" steps="445"/></proof>
 </goal>
 <goal name="VC recompose" expl="VC for recompose" proved="true">
 <proof prover="4"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="VC contract" expl="VC for contract" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="44"/></proof>
 </goal>
</theory>
<theory name="RWithError" proved="true" sum="932490749e5f7f6af0e87a5aae143d90">
 <goal name="VC test" expl="VC for test" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="VC interpret" expl="VC for interpret" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2" proved="true">
 <proof prover="4"><result status="valid" time="0.17" steps="924"/></proof>
 </goal>
 <goal name="VC eval_1" expl="VC for eval_1" proved="true">
 <proof prover="4"><result status="valid" time="0.04" steps="253"/></proof>
 </goal>
 <goal name="VC recompose_underflow" expl="VC for recompose_underflow" proved="true">
 <proof prover="4"><result status="valid" time="0.11" steps="981"/></proof>
 </goal>
 <goal name="VC recompose_values" expl="VC for recompose_values" proved="true">
 <proof prover="4"><result status="valid" time="0.74" steps="3992"/></proof>
 </goal>
 <goal name="size_c_pos" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_c_pos.0" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
