<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="2" name="Z3" version="3.2" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="5" name="CVC4" version="1.4" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="6" name="Alt-Ergo" version="1.01" timelimit="1" memlimit="1000"/>
<prover id="7" name="Z3" version="4.4.1" timelimit="5" steplimit="1" memlimit="4000"/>
<file name="../defunctionalization.mlw" expanded="true">
<theory name="Expr" sum="806c12d4403bd9222cb5ec7de53e16e5">
 <goal name="VC p0" expl="VC for p0">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC p1" expl="VC for p1">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC p2" expl="VC for p2">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC p3" expl="VC for p3">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC p4" expl="VC for p4">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="DirectSem" sum="8a9bbf89be9ee6cdbabf7acdd7bd0b1f">
 <goal name="VC eval_0" expl="VC for eval_0">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC interpret_0" expl="VC for interpret_0">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="eval_p3">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 <proof prover="5"><result status="valid" time="0.01"/></proof>
 <proof prover="6" timelimit="5" steplimit="1"><result status="valid" time="0.02" steps="1"/></proof>
 <proof prover="7"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="CPS" sum="82b26c2ca649503f06c24e2173e94eca">
 <goal name="cps_correct_expr">
 <transf name="induction_ty_lex">
  <goal name="cps_correct_expr.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cps_correct">
 <proof prover="0"><result status="valid" time="0.01"/></proof>
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 <proof prover="5"><result status="valid" time="0.01"/></proof>
 <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.01" steps="2"/></proof>
 <proof prover="7"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="Defunctionalization" sum="aeee577d06643e200bb33172bdd9c4e1">
 <goal name="size_e_pos">
 <transf name="induction_ty_lex">
  <goal name="size_e_pos.1" expl="1.">
  <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.04" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC continue_2" expl="VC for continue_2">
 <proof prover="6"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2">
 <proof prover="6"><result status="valid" time="0.01" steps="51"/></proof>
 </goal>
 <goal name="VC interpret_2" expl="VC for interpret_2">
 <proof prover="6"><result status="valid" time="0.00" steps="9"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="6"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Defunctionalization2" sum="6a38e37bf1e1366701e6eff39534ea60">
 <goal name="VC continue_2" expl="VC for continue_2">
 <proof prover="6"><result status="valid" time="0.01" steps="79"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2">
 <proof prover="5" timelimit="1" steplimit="-1" memlimit="1000"><result status="timeout" time="1.01"/></proof>
 <proof prover="6"><result status="unknown" time="0.04"/></proof>
 <proof prover="7" timelimit="1" steplimit="-1" memlimit="1000"><result status="timeout" time="0.99"/></proof>
 <transf name="split_goal_wp">
  <goal name="VC eval_2.1" expl="1. variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC eval_2.2" expl="2. postcondition">
  <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="VC eval_2.3" expl="3. variant decrease">
  <proof prover="5" timelimit="1" steplimit="-1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="6"><result status="unknown" time="0.02"/></proof>
  </goal>
  <goal name="VC eval_2.4" expl="4. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interpret_2" expl="VC for interpret_2">
 <proof prover="6"><result status="valid" time="0.00" steps="8"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="6"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="SemWithError" sum="1dacbbe70ab19eb8d6b2e9d5cbe5fe0e">
 <goal name="cps_correct_expr">
 <transf name="induction_ty_lex">
  <goal name="cps_correct_expr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="cps_correct_expr.1.1" expl="1.">
   <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.02" steps="6"/></proof>
   </goal>
   <goal name="cps_correct_expr.1.2" expl="2.">
   <proof prover="7" timelimit="6" memlimit="1000"><result status="valid" time="0.35"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cps_correct">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="6" timelimit="5" steplimit="1"><result status="valid" time="0.02" steps="3"/></proof>
 <proof prover="7" memlimit="1000"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="cps2_correct_expr_aux">
 <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.02" steps="2"/></proof>
 </goal>
 <goal name="cps2_correct_expr">
 <transf name="induction_ty_lex">
  <goal name="cps2_correct_expr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="cps2_correct_expr.1.1" expl="1.">
   <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="cps2_correct_expr.1.2" expl="2.">
   <proof prover="7" timelimit="6" memlimit="1000"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cps2_correct">
 <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
 <proof prover="5" memlimit="1000"><result status="valid" time="0.03"/></proof>
 <proof prover="6" timelimit="5" steplimit="1"><result status="valid" time="0.02" steps="10"/></proof>
 <proof prover="7" memlimit="1000"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC cps3_correct_expr" expl="VC for cps3_correct_expr">
 <proof prover="5" timelimit="1" steplimit="-1" memlimit="1000"><result status="timeout" time="2.00"/></proof>
 <proof prover="6"><result status="timeout" time="1.00"/></proof>
 <proof prover="7" timelimit="1" steplimit="-1" memlimit="1000"><result status="timeout" time="0.99"/></proof>
 <transf name="split_goal_wp">
  <goal name="VC cps3_correct_expr.1" expl="1. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC cps3_correct_expr.2" expl="2. variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC cps3_correct_expr.3" expl="3. variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC cps3_correct_expr.4" expl="4. assertion">
  <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="VC cps3_correct_expr.5" expl="5. postcondition">
  <proof prover="5" timelimit="1" steplimit="-1" memlimit="1000"><result status="timeout" time="1.12"/></proof>
  <proof prover="6"><result status="timeout" time="1.01"/></proof>
  <proof prover="7" timelimit="1" steplimit="-1" memlimit="1000"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cps3_correct">
 <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="5" memlimit="1000"><result status="valid" time="0.03"/></proof>
 <proof prover="6" timelimit="5" steplimit="1"><result status="valid" time="0.03" steps="6"/></proof>
 <proof prover="7" memlimit="1000"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="size_e_pos">
 <transf name="induction_ty_lex">
  <goal name="size_e_pos.1" expl="1.">
  <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC continue_4" expl="VC for continue_4">
 <proof prover="6"><result status="valid" time="0.02" steps="80"/></proof>
 </goal>
 <goal name="VC eval_4" expl="VC for eval_4">
 <proof prover="6"><result status="valid" time="0.09" steps="278"/></proof>
 </goal>
 <goal name="VC interpret_4" expl="VC for interpret_4">
 <proof prover="6"><result status="valid" time="0.02" steps="21"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
</theory>
<theory name="ReductionSemantics" sum="3797ee0b4c42647a37a86226041c5e4e" expanded="true">
 <goal name="VC contract" expl="VC for contract">
 <proof prover="6"><result status="valid" time="0.01" steps="34"/></proof>
 </goal>
 <goal name="VC recompose" expl="VC for recompose">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC recompose_values" expl="VC for recompose_values">
 <proof prover="6"><result status="valid" time="0.01" steps="36"/></proof>
 </goal>
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC decompose_term" expl="VC for decompose_term">
 <proof prover="6"><result status="valid" time="0.00" steps="15"/></proof>
 </goal>
 <goal name="VC decompose_cont" expl="VC for decompose_cont" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC decompose_cont.1" expl="1. exceptional postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC decompose_cont.2" expl="2. variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC decompose_cont.3" expl="3. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC decompose_cont.4" expl="4. exceptional postcondition" expanded="true">
  </goal>
  <goal name="VC decompose_cont.5" expl="5. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC decompose" expl="VC for decompose" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC decompose.1" expl="1. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC decompose.2" expl="2. exceptional postcondition" expanded="true">
  </goal>
 </transf>
 </goal>
 <goal name="VC reduce" expl="VC for reduce">
 <proof prover="6"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
 <goal name="VC itere" expl="VC for itere">
 <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="VC refocus" expl="VC for refocus" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC refocus.1" expl="1. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC refocus.2" expl="2. exceptional postcondition" expanded="true">
  </goal>
 </transf>
 </goal>
 <goal name="VC itere_opt" expl="VC for itere_opt">
 <transf name="split_goal_wp">
  <goal name="VC itere_opt.1" expl="1. precondition">
  <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC itere_opt.2" expl="2. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC itere_opt.3" expl="3. assertion">
  <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC itere_opt.4" expl="4. postcondition">
  <transf name="introduce_premises">
   <goal name="VC itere_opt.4.1" expl="1. postcondition">
   <proof prover="7" timelimit="30" steplimit="-1"><result status="valid" time="21.28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC itere_opt.5" expl="5. VC for itere_opt">
  <proof prover="6"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC normalize" expl="VC for normalize">
 <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="VC eval_1" expl="VC for eval_1">
 <proof prover="6"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2">
 <proof prover="6"><result status="valid" time="0.01" steps="46"/></proof>
 </goal>
 <goal name="VC interpret" expl="VC for interpret">
 <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="6"><result status="valid" time="0.01" steps="4"/></proof>
 </goal>
</theory>
<theory name="RWithError" sum="650b406878f8bb3f8da55736586de3fa">
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="6" timelimit="6" steplimit="1"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC recompose_values" expl="VC for recompose_values">
 <proof prover="6"><result status="valid" time="0.17" steps="596"/></proof>
 </goal>
 <goal name="VC recompose_underflow" expl="VC for recompose_underflow">
 <proof prover="6"><result status="valid" time="0.04" steps="146"/></proof>
 </goal>
 <goal name="VC eval_1" expl="VC for eval_1">
 <proof prover="6"><result status="valid" time="0.01" steps="30"/></proof>
 </goal>
 <goal name="VC eval_2" expl="VC for eval_2">
 <proof prover="6"><result status="valid" time="0.17" steps="669"/></proof>
 </goal>
 <goal name="VC interpret" expl="VC for interpret">
 <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="6"><result status="valid" time="0.01" steps="7"/></proof>
 </goal>
</theory>
</file>
</why3session>
