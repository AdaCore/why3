<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" memlimit="4000"/>
<prover id="1" name="Z3" version="4.3.1" timelimit="5" memlimit="4000"/>
<prover id="2" name="Z3" version="3.2" timelimit="5" memlimit="4000"/>
<prover id="3" name="Alt-Ergo" version="0.95.2" timelimit="5" memlimit="4000"/>
<prover id="4" name="CVC4" version="1.3" timelimit="5" memlimit="4000"/>
<file name="../defunctionalization.mlw" expanded="true">
<theory name="Expr" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="DirectSem" sum="af2552f4879203af23b438bd246b031f">
 <goal name="WP_parameter test" expl="VC for test">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="0"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="eval_p3">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="1"><result status="valid" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="7"/></proof>
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="CPS" sum="0ce100ed4efe873b1f2eb404c40294b0">
 <goal name="cps_correct_expr">
 <transf name="induction_ty_lex">
  <goal name="cps_correct_expr.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cps_correct">
 <proof prover="0"><result status="valid" time="0.01"/></proof>
 <proof prover="1"><result status="valid" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.01" steps="2"/></proof>
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="Defunctionalization" sum="cf8631b199a4317af16ffbb700483b06">
 <goal name="size_e_pos">
 <transf name="induction_ty_lex">
  <goal name="size_e_pos.1" expl="1.">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.04" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter continue_2" expl="VC for continue_2">
 <proof prover="0"><result status="valid" time="0.02"/></proof>
 <proof prover="1"><result status="valid" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="120"/></proof>
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="WP_parameter eval_2" expl="VC for eval_2">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.05"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.10" steps="122"/></proof>
 </goal>
 <goal name="WP_parameter interpret_2" expl="VC for interpret_2">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="20"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter test" expl="VC for test">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.00" steps="2"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="Defunctionalization2" sum="b91a7552f2709489b5e30f8b1aeaa5ce">
 <goal name="WP_parameter continue_2" expl="VC for continue_2">
 <transf name="split_goal_wp">
  <goal name="WP_parameter continue_2.1" expl="1. variant decrease">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  <proof prover="1"><result status="valid" time="1.03"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="26"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter continue_2.2" expl="2. postcondition">
  <proof prover="0"><result status="valid" time="0.00"/></proof>
  <proof prover="1"><result status="valid" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter continue_2.3" expl="3. variant decrease">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  <proof prover="1"><result status="valid" time="0.04"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="9"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter continue_2.4" expl="4. postcondition">
  <proof prover="0"><result status="valid" time="0.00"/></proof>
  <proof prover="1"><result status="valid" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter continue_2.5" expl="5. postcondition">
  <proof prover="0"><result status="valid" time="0.00"/></proof>
  <proof prover="1"><result status="valid" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="0.00"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="4"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter eval_2" expl="VC for eval_2">
 <transf name="split_goal_wp">
  <goal name="WP_parameter eval_2.1" expl="1. variant decrease">
  <proof prover="0"><result status="valid" time="0.00"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="9"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.2" expl="2. postcondition">
  <proof prover="0"><result status="valid" time="0.00"/></proof>
  <proof prover="1"><result status="valid" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.00" steps="5"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.3" expl="3. variant decrease">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.4" expl="4. postcondition">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="58"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter interpret_2" expl="VC for interpret_2">
 <proof prover="0"><result status="valid" time="0.01"/></proof>
 <proof prover="1"><result status="valid" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="16"/></proof>
 <proof prover="4"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="WP_parameter test" expl="VC for test">
 <proof prover="0"><result status="valid" time="0.00"/></proof>
 <proof prover="1"><result status="valid" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.00"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="2"/></proof>
 <proof prover="4"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="SemWithError" sum="2f22bb58d78805807aaa7698c001c4c8">
 <goal name="cps_correct_expr">
 <transf name="induction_ty_lex">
  <goal name="cps_correct_expr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="cps_correct_expr.1.1" expl="1.">
   <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="8"/></proof>
   </goal>
   <goal name="cps_correct_expr.1.2" expl="2.">
   <proof prover="1" timelimit="6" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cps_correct">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="3"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="cps2_correct_expr_aux">
 <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="2"/></proof>
 </goal>
 <goal name="cps2_correct_expr">
 <transf name="induction_ty_lex">
  <goal name="cps2_correct_expr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="cps2_correct_expr.1.1" expl="1.">
   <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.01" steps="23"/></proof>
   </goal>
   <goal name="cps2_correct_expr.1.2" expl="2.">
   <proof prover="1" timelimit="6" memlimit="1000"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cps2_correct">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="WP_parameter cps3_correct_expr" expl="VC for cps3_correct_expr">
 <transf name="split_goal_wp">
  <goal name="WP_parameter cps3_correct_expr.1" expl="1. postcondition">
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="45"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter cps3_correct_expr.2" expl="2. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="13"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter cps3_correct_expr.3" expl="3. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="11"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter cps3_correct_expr.4" expl="4. assertion">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="3"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter cps3_correct_expr.5" expl="5. postcondition">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cps3_correct">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.03" steps="7"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="size_e_pos">
 <transf name="induction_ty_lex">
  <goal name="size_e_pos.1" expl="1.">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.03" steps="15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter continue_4" expl="VC for continue_4">
 <transf name="split_goal_wp">
  <goal name="WP_parameter continue_4.1" expl="1. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter continue_4.2" expl="2. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="13"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter continue_4.3" expl="3. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.03" steps="11"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter continue_4.4" expl="4. precondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="8"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter continue_4.5" expl="5. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="16"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter continue_4.6" expl="6. postcondition">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="21"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter continue_4.7" expl="7. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="8"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter eval_4" expl="VC for eval_4">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.17"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.10"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.83" steps="856"/></proof>
 </goal>
 <goal name="WP_parameter interpret_4" expl="VC for interpret_4">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="37"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="WP_parameter test" expl="VC for test">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="5"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="ReductionSemantics" sum="2b00365ecdd41e590f7ace3a9f26df8c">
 <goal name="WP_parameter contract" expl="VC for contract">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="60"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="WP_parameter recompose_values" expl="VC for recompose_values">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="86"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter decompose_term" expl="VC for decompose_term">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.06"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.04" steps="264"/></proof>
 </goal>
 <goal name="WP_parameter decompose_cont" expl="VC for decompose_cont">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.05" steps="173"/></proof>
 </goal>
 <goal name="WP_parameter decompose" expl="VC for decompose">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="94"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="WP_parameter reduce" expl="VC for reduce">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="113"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter itere" expl="VC for itere">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="25"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="WP_parameter refocus" expl="VC for refocus">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.03" steps="113"/></proof>
 </goal>
 <goal name="WP_parameter itere_opt" expl="VC for itere_opt">
 <transf name="split_goal_wp">
  <goal name="WP_parameter itere_opt.1" expl="1. precondition">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="WP_parameter itere_opt.2" expl="2. postcondition">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter itere_opt.3" expl="3. assertion">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter itere_opt.4" expl="4. postcondition">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="WP_parameter itere_opt.5" expl="5. unreachable point">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter normalize" expl="VC for normalize">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="5"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="WP_parameter eval_1" expl="VC for eval_1">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="33"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.08"/></proof>
 </goal>
 <goal name="WP_parameter eval_2" expl="VC for eval_2">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.06"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.04" steps="76"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="WP_parameter interpret" expl="VC for interpret">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="5"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="WP_parameter test" expl="VC for test">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="4"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="RWithError" sum="c53a143e855c4c2ae6bc0851b3022dc7">
 <goal name="size_c_pos">
 <transf name="induction_ty_lex">
  <goal name="size_c_pos.1" expl="1.">
  <proof prover="3" timelimit="6" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter recompose_values" expl="VC for recompose_values">
 <transf name="split_goal_wp">
  <goal name="WP_parameter recompose_values.1" expl="1. postcondition">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="11"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter recompose_values.2" expl="2. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="34"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter recompose_values.3" expl="3. precondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.04" steps="84"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter recompose_values.4" expl="4. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="13"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter recompose_values.5" expl="5. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter recompose_values.6" expl="6. precondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter recompose_values.7" expl="7. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="13"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter recompose_underflow" expl="VC for recompose_underflow">
 <proof prover="3" memlimit="1000"><result status="valid" time="0.07" steps="235"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.14"/></proof>
 </goal>
 <goal name="WP_parameter eval_1" expl="VC for eval_1">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="51"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="WP_parameter eval_2" expl="VC for eval_2">
 <transf name="split_goal_wp">
  <goal name="WP_parameter eval_2.1" expl="1. postcondition">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="23"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.2" expl="2. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="13"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.3" expl="3. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.4" expl="4. variant decrease">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="2" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="15"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.5" expl="5. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="1.17"/></proof>
  </goal>
  <goal name="WP_parameter eval_2.6" expl="6. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
  <proof prover="3" memlimit="1000"><result status="valid" time="2.27" steps="842"/></proof>
  <proof prover="4" memlimit="1000"><result status="valid" time="0.38"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter interpret" expl="VC for interpret">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.02"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.02" steps="8"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="WP_parameter test" expl="VC for test">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="2" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="3" memlimit="1000"><result status="valid" time="0.01" steps="7"/></proof>
 <proof prover="4" memlimit="1000"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
</file>
</why3session>
