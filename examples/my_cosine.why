theory CosineSingle

use import real.Real
use import real.Abs
use import real.Trigonometry
use import floating_point.Rounding
use import floating_point.Single

(* approximation of cosine function by 1 - x^2 / 2 on interval [-1/32; 1/32] *)



lemma MethodError: forall x:real. abs x <= 0x1p-5 ->
  abs (1.0 - x * x * 0.5 - cos x) <= 0x1p-24 


(* computation in single precision *)

logic round_single (m:mode) (x:real) : single

axiom RoundSingle: forall m:mode, x:real.
  value (round_single m x) = round m x

logic cos_single (x:single) : single =
  let x2 = round_single NearestTiesToEven (value x * value x) in
  let x2o2 = round_single NearestTiesToEven (0.5 * value x2) in
  round_single NearestTiesToEven (1.0 - value x2o2) 

lemma TotalError: forall x:single. abs (value x) <= 0x1p-5 ->
  let cos_x = cos_single x in
  abs (value cos_x - cos (value x)) <= 0x1p-24

end

(*
Local Variables:
compile-command: "../bin/whyide.byte my_cosine.why"
End:
*)


