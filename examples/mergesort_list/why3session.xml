<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Z3" version="4.12.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="mergesort_list.mlw"/>
<theory name="Elt" proved="true">
 <goal name="Transitive.Trans" proved="true">
 <proof prover="2"><result status="valid" time="0.000000" steps="5"/></proof>
 </goal>
</theory>
<theory name="Merge" proved="true">
 <goal name="merge&#39;vc" expl="VC for merge" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="merge&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="17"/></proof>
  </goal>
  <goal name="merge&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="merge&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="17"/></proof>
  </goal>
  <goal name="merge&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="merge&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="merge&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="7"/></proof>
   </goal>
   <goal name="merge&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="7"/></proof>
   </goal>
   <goal name="merge&#39;vc.4.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="7"/></proof>
   </goal>
   <goal name="merge&#39;vc.4.3" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.450000"/></proof>
   </goal>
   <goal name="merge&#39;vc.4.4" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.500000"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="merge&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="11"/></proof>
   </goal>
   <goal name="merge&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.040000" steps="11"/></proof>
   </goal>
   <goal name="merge&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="11"/></proof>
   </goal>
   <goal name="merge&#39;vc.5.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.040000" steps="161"/></proof>
   </goal>
   <goal name="merge&#39;vc.5.4" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="2.580000" steps="2964"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="EfficientMerge" proved="true">
 <goal name="sorted_reverse_cons" proved="true">
 <proof prover="2"><result status="valid" time="0.290000" steps="913"/></proof>
 </goal>
 <goal name="merge_aux&#39;vc" expl="VC for merge_aux" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="merge_aux&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.100000" steps="373"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="253"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.926834" steps="3563"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.100000" steps="382"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="257"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.140000" steps="834"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.210000" steps="1269"/></proof>
  </goal>
  <goal name="merge_aux&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.760000" steps="5800"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="merge&#39;vc" expl="VC for merge" proved="true">
 <proof prover="2"><result status="valid" time="0.040000" steps="126"/></proof>
 </goal>
</theory>
<theory name="Mergesort" proved="true">
 <goal name="split&#39;vc" expl="VC for split" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="split&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="split&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.000000" steps="12"/></proof>
  </goal>
  <goal name="split&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="1.080000"/></proof>
  </goal>
  <goal name="split&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="2"/></proof>
  </goal>
  <goal name="split&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="99"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mergesort&#39;vc" expl="VC for mergesort" proved="true">
 <proof prover="2"><result status="valid" time="0.220000" steps="695"/></proof>
 </goal>
</theory>
<theory name="OCamlMergesort" proved="true">
 <goal name="sorted_reverse_cons" proved="true">
 <proof prover="2"><result status="valid" time="0.340000" steps="913"/></proof>
 </goal>
 <goal name="sorted_rev_append" proved="true">
 <proof prover="7"><result status="valid" time="0.030000" steps="140600"/></proof>
 </goal>
 <goal name="rev_merge&#39;vc" expl="VC for rev_merge" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="rev_merge&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.090000" steps="373"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="253"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.960000" steps="3563"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.130000" steps="382"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="257"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.150000" steps="834"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="168"/></proof>
  </goal>
  <goal name="rev_merge&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.410000" steps="5015"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sorted_reverse_mem" proved="true">
 <proof prover="2"><result status="valid" time="0.170000" steps="981"/></proof>
 </goal>
 <goal name="sorted_reverse_cons2" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="52"/></proof>
 </goal>
 <goal name="rev_merge_rev&#39;vc" expl="VC for rev_merge_rev" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="rev_merge_rev&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.100000" steps="358"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="318"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="352"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.100000" steps="353"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="565"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.200000" steps="845"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.320000" steps="1949"/></proof>
  </goal>
  <goal name="rev_merge_rev&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="rev_merge_rev&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.100000" steps="29"/></proof>
   </goal>
   <goal name="rev_merge_rev&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.130000" steps="155"/></proof>
   </goal>
   <goal name="rev_merge_rev&#39;vc.9.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.080000" steps="121"/></proof>
   </goal>
   <goal name="rev_merge_rev&#39;vc.9.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.090000" steps="175"/></proof>
   </goal>
   <goal name="rev_merge_rev&#39;vc.9.4" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.170000" steps="170"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="prefix_length&#39;vc" expl="VC for prefix_length" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="93"/></proof>
 </goal>
 <goal name="prefix_append&#39;vc" expl="VC for prefix_append" proved="true">
 <proof prover="2"><result status="valid" time="0.170000" steps="413"/></proof>
 </goal>
 <goal name="chop&#39;vc" expl="VC for chop" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="83"/></proof>
 </goal>
 <goal name="sort&#39;vc" expl="VC for sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="sort&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="7"/></proof>
  </goal>
  <goal name="sort&#39;vc.1" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="sort&#39;vc.2" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="9"/></proof>
  </goal>
  <goal name="sort&#39;vc.3" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="8"/></proof>
  </goal>
  <goal name="sort&#39;vc.4" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="7"/></proof>
  </goal>
  <goal name="sort&#39;vc.5" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="sort&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="9"/></proof>
  </goal>
  <goal name="sort&#39;vc.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.200000" steps="381"/></proof>
  </goal>
  <goal name="sort&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="20"/></proof>
  </goal>
  <goal name="sort&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="42"/></proof>
  </goal>
  <goal name="sort&#39;vc.10" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="26"/></proof>
  </goal>
  <goal name="sort&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="68"/></proof>
  </goal>
  <goal name="sort&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="sort&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="15"/></proof>
  </goal>
  <goal name="sort&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="15"/></proof>
  </goal>
  <goal name="sort&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="511"/></proof>
  </goal>
  <goal name="sort&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sort&#39;vc.16.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.140000" steps="29899"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.140000" steps="29597"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.2" expl="postcondition" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="1.840000" steps="248857"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.3" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.170000" steps="1550"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.4" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.300000" steps="1538"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.5" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.300000" steps="1578"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.6" expl="postcondition" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="1.820000" steps="227704"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.7" expl="postcondition" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="1.740000" steps="217737"/></proof>
   </goal>
   <goal name="sort&#39;vc.16.8" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.170000" steps="1604"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rev_sort&#39;vc" expl="VC for rev_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="rev_sort&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="7"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.1" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.2" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="9"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.3" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="8"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.4" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="7"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.5" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="9"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.200000" steps="381"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="42"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.10" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="24"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="62"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="34"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.280000" steps="11642"/></proof>
  </goal>
  <goal name="rev_sort&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="rev_sort&#39;vc.16.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.140000" steps="31273"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.150000" steps="30180"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.2" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.640000" steps="3662"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.3" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.650000" steps="3547"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.4" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.460000" steps="3900"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.5" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.590000" steps="3962"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.6" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.660000" steps="3562"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.7" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.570000" steps="3529"/></proof>
   </goal>
   <goal name="rev_sort&#39;vc.16.8" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.220000" steps="1510"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_prefix" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="permut_prefix.0" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="148"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mergesort&#39;vc" expl="VC for mergesort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mergesort&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="mergesort&#39;vc.0.0" expl="VC for mergesort" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="4"/></proof>
   </goal>
   <goal name="mergesort&#39;vc.0.1" expl="VC for mergesort" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="8"/></proof>
   </goal>
   <goal name="mergesort&#39;vc.0.2" expl="VC for mergesort" proved="true">
   <proof prover="2"><result status="valid" time="0.010000" steps="13"/></proof>
   </goal>
   <goal name="mergesort&#39;vc.0.3" expl="VC for mergesort" proved="true">
   <proof prover="2"><result status="valid" time="0.000000" steps="4"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="mergesort&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="3"/></proof>
  </goal>
  <goal name="mergesort&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="136"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
