<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.7.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_2019_cartesian_trees.mlw"/>
<theory name="Top" proved="true">
 <goal name="Decr.Transitive.Trans" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="8163"/></proof>
 </goal>
 <goal name="destruct&#39;vc" expl="VC for destruct" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="10876"/></proof>
 </goal>
 <goal name="peek&#39;vc" expl="VC for peek" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
 <goal name="tail&#39;vc" expl="VC for tail" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="9418"/></proof>
 </goal>
 <goal name="destruct_peek_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="33712"/></proof>
 </goal>
 <goal name="smaller_left&#39;vc" expl="VC for smaller_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="smaller_left&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="11865"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="13544"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10342"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13098"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12788"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10995"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="11109"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14002"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11339"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="16082"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11379"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12332"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14525"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13135"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13169"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12490"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12865"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="20856"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12926"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.19" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="155"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="21980"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="21244"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16981"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="1903"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="7018"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="687"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.26" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12778"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.27" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="13516"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.28" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="17572"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13742"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="19297"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="13855"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="319"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="517"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="120"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="249"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.37" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12960"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.38" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="13392"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.39" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="27345"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13557"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="20432"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="27278"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="688"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="788"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="1899"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="361"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13665"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.04" steps="13496"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14220"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12968"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.52" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12290"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="construct_dirs&#39;vc" expl="VC for construct_dirs" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="construct_dirs&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14769"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17155"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15442"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="19018"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15764"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15764"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17244"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17256"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17602"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17602"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = li)">
   <goal name="construct_dirs&#39;vc.10.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="391"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.10.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.16" steps="855"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="1209"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = li)">
   <goal name="construct_dirs&#39;vc.12.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="132"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.12.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="410"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17681"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.14" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17681"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = ri)">
   <goal name="construct_dirs&#39;vc.15.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="415"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.15.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="606"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="1606"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.17" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = ri)">
   <goal name="construct_dirs&#39;vc.17.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="134"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.17.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.07" steps="470"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.18" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17726"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="17726"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.20" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = li)">
   <goal name="construct_dirs&#39;vc.20.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="302"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.20.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="399"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="1189"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.22" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = li)">
   <goal name="construct_dirs&#39;vc.22.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="106"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.22.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="264"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.23" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17756"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.24" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17756"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.25" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = ri)">
   <goal name="construct_dirs&#39;vc.25.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="269"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.25.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="785"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="579"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = ri)">
   <goal name="construct_dirs&#39;vc.27.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="109"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.27.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="486"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = ri)">
   <goal name="construct_dirs&#39;vc.28.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="24"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.28.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="170"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="20115"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.30" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = ri)">
   <goal name="construct_dirs&#39;vc.30.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.30.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16240"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="126"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.33" expl="postcondition" proved="true">
  <transf name="revert" proved="true" arg1="p">
   <goal name="construct_dirs&#39;vc.33.0" expl="postcondition" proved="true">
   <transf name="revert" proved="true" arg1="s">
    <goal name="construct_dirs&#39;vc.33.0.0" expl="postcondition" proved="true">
    <transf name="induction_pr" proved="true" >
     <goal name="construct_dirs&#39;vc.33.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="25"/></proof>
     </goal>
     <goal name="construct_dirs&#39;vc.33.0.0.1" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="101"/></proof>
     </goal>
     <goal name="construct_dirs&#39;vc.33.0.0.2" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.04" steps="20138"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.34" expl="postcondition" proved="true">
  <transf name="revert" proved="true" arg1="p2">
   <goal name="construct_dirs&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="revert" proved="true" arg1="s">
    <goal name="construct_dirs&#39;vc.34.0.0" expl="postcondition" proved="true">
    <transf name="induction_pr" proved="true" >
     <goal name="construct_dirs&#39;vc.34.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.02" steps="44"/></proof>
     </goal>
     <goal name="construct_dirs&#39;vc.34.0.0.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="construct_dirs&#39;vc.34.0.0.1.0" expl="VC for construct_dirs" proved="true">
      <proof prover="2"><result status="valid" time="0.08" steps="29834"/></proof>
      </goal>
      <goal name="construct_dirs&#39;vc.34.0.0.1.1" expl="VC for construct_dirs" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="159"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="construct_dirs&#39;vc.34.0.0.2" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.04" steps="144"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.35" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="parent">
   <goal name="construct_dirs&#39;vc.35.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.02" steps="150942"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19971"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="23258"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="21275"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.39" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="19061"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="par&#39;vc" expl="VC for par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="par&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12865"/></proof>
  </goal>
  <goal name="par&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13720"/></proof>
  </goal>
  <goal name="par&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14408"/></proof>
  </goal>
  <goal name="par&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="47878"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="13954"/></proof>
  <transf name="split_all_full" proved="true" >
   <goal name="par&#39;vc.3.0" expl="VC for par" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="14820"/></proof>
   </goal>
   <goal name="par&#39;vc.3.1" expl="VC for par" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="53239"/></proof>
   <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.04" steps="15865"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="par&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14108"/></proof>
  </goal>
  <goal name="par&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14101"/></proof>
  </goal>
  <goal name="par&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="par&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14112"/></proof>
  </goal>
  <goal name="par&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="par&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14080"/></proof>
  </goal>
  <goal name="par&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="par&#39;vc.11" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="48204"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="14059"/></proof>
  </goal>
  <goal name="par&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14112"/></proof>
  </goal>
  <goal name="par&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="par&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13175"/></proof>
  </goal>
  <goal name="par&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="134"/></proof>
  </goal>
  <goal name="par&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13152"/></proof>
  </goal>
  <goal name="par&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="121"/></proof>
  </goal>
  <goal name="par&#39;vc.18" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13999"/></proof>
  </goal>
  <goal name="par&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14080"/></proof>
  </goal>
  <goal name="par&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14994"/></proof>
  </goal>
  <goal name="par&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13152"/></proof>
  </goal>
  <goal name="par&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="103"/></proof>
  </goal>
  <goal name="par&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13121"/></proof>
  </goal>
  <goal name="par&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="par&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="20969"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="par&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13006"/></proof>
  </goal>
  <goal name="par&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12477"/></proof>
  </goal>
  <goal name="par&#39;vc.27" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14381"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="all_descendant_root&#39;vc" expl="VC for all_descendant_root" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="all_descendant_root&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13132"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13132"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.2" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(not is_smallest a j)">
   <goal name="all_descendant_root&#39;vc.2.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="14936"/></proof>
   </goal>
   <goal name="all_descendant_root&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="15556"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_descendant_root&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13800"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="177"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19194"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13741"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="175"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="39973"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14100"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13571"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="16790"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="15533"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="find_smaller&#39;vc" expl="VC for find_smaller" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="find_smaller&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14092"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.1" expl="index in array bounds" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="find_smaller&#39;vc.1.0" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="15667"/></proof>
   </goal>
   <goal name="find_smaller&#39;vc.1.1" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="15672"/></proof>
   </goal>
   <goal name="find_smaller&#39;vc.1.2" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="15335"/></proof>
   </goal>
   <goal name="find_smaller&#39;vc.1.3" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="15340"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_smaller&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="18706"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.3" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="20305"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.4" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19634"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="19198"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19324"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15728"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="other_descendant" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="other_descendant.0" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16826"/></proof>
  </goal>
  <goal name="other_descendant.1" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15199"/></proof>
  </goal>
  <goal name="other_descendant.2" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15199"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_other_descendant" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="inv_other_descendant.0" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13128"/></proof>
  </goal>
  <goal name="inv_other_descendant.1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inv_other_descendant.1.0" proved="true">
   <transf name="case" proved="true" arg1="(p1 = s1)">
    <goal name="inv_other_descendant.1.0.0" expl="true case" proved="true">
    <transf name="right" proved="true" >
     <goal name="inv_other_descendant.1.0.0.0" expl="right case" proved="true">
     <transf name="exists" proved="true" arg1="s">
      <goal name="inv_other_descendant.1.0.0.0.0" proved="true">
      <proof prover="2"><result status="valid" time="0.03" steps="14008"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="inv_other_descendant.1.0.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.04" steps="15419"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_other_descendant.2" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inv_other_descendant.2.0" proved="true">
   <transf name="case" proved="true" arg1="(p1 = s1)">
    <goal name="inv_other_descendant.2.0.0" expl="true case" proved="true">
    <transf name="right" proved="true" >
     <goal name="inv_other_descendant.2.0.0.0" expl="right case" proved="true">
     <transf name="exists" proved="true" arg1="s">
      <goal name="inv_other_descendant.2.0.0.0.0" proved="true">
      <proof prover="2"><result status="valid" time="0.04" steps="14034"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="inv_other_descendant.2.0.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="15419"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="StrictIncr.Transitive.Trans" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="13882"/></proof>
 </goal>
 <goal name="traversal&#39;vc" expl="VC for traversal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="traversal&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="traversal&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="15439"/></proof>
   </goal>
   <goal name="traversal&#39;vc.0.1" expl="VC for traversal" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="16378"/></proof>
   </goal>
   <goal name="traversal&#39;vc.0.2" expl="VC for traversal" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="16374"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16077"/></proof>
  </goal>
  <goal name="traversal&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14589"/></proof>
  </goal>
  <goal name="traversal&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15600"/></proof>
  </goal>
  <goal name="traversal&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16074"/></proof>
  </goal>
  <goal name="traversal&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="traversal&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17399"/></proof>
  </goal>
  <goal name="traversal&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="traversal&#39;vc.7.0" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.7.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="17324"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.7.1" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.7.1.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.07" steps="24581"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.7.2" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(descendant dirs x1 son)">
    <goal name="traversal&#39;vc.7.2.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="58027"/></proof>
    </goal>
    <goal name="traversal&#39;vc.7.2.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="148"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.7.3" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(x + 1 = e)">
    <goal name="traversal&#39;vc.7.3.0" expl="true case (precondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.04" steps="14987"/></proof>
    </goal>
    <goal name="traversal&#39;vc.7.3.1" expl="false case (precondition)" proved="true">
    <transf name="assert" proved="true" arg1="(descendant dirs x (x+1))">
     <goal name="traversal&#39;vc.7.3.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.05" steps="17109"/></proof>
     </goal>
     <goal name="traversal&#39;vc.7.3.1.1" expl="false case (precondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="73"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14683"/></proof>
  </goal>
  <goal name="traversal&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15705"/></proof>
  </goal>
  <goal name="traversal&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16185"/></proof>
  </goal>
  <goal name="traversal&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="traversal&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17656"/></proof>
  </goal>
  <goal name="traversal&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="traversal&#39;vc.13.0" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.13.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.07" steps="33426"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.13.1" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.13.1.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="17525"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.13.2" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(descendant dirs x1 son)">
    <goal name="traversal&#39;vc.13.2.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.04" steps="17507"/></proof>
    </goal>
    <goal name="traversal&#39;vc.13.2.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="190"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.13.3" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(s = x)">
    <goal name="traversal&#39;vc.13.3.0" expl="true case (precondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="15088"/></proof>
    </goal>
    <goal name="traversal&#39;vc.13.3.1" expl="false case (precondition)" proved="true">
    <transf name="assert" proved="true" arg1="(descendant dirs x s)">
     <goal name="traversal&#39;vc.13.3.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="17295"/></proof>
     </goal>
     <goal name="traversal&#39;vc.13.3.1.1" expl="false case (precondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="86"/></proof>
     <transf name="split_all_full" proved="true" >
      <goal name="traversal&#39;vc.13.3.1.1.0" expl="false case (precondition)" proved="true">
      <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="0.01" steps="86"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.14" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="traversal&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="16064"/></proof>
   </goal>
   <goal name="traversal&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.41" steps="62392"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.15" expl="postcondition" proved="true">
  <transf name="destruct_term" proved="true" arg1="top">
   <goal name="traversal&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(sorted o)">
    <goal name="traversal&#39;vc.15.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="17126"/></proof>
    </goal>
    <goal name="traversal&#39;vc.15.0.1" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(sorted (Cons x o1))">
     <goal name="traversal&#39;vc.15.0.1.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="68"/></proof>
     </goal>
     <goal name="traversal&#39;vc.15.0.1.1" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(sorted (Cons x o1))">
      <goal name="traversal&#39;vc.15.0.1.1.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
      </goal>
      <goal name="traversal&#39;vc.15.0.1.1.1" expl="postcondition" proved="true">
      <proof prover="1" timelimit="15"><result status="valid" time="2.20" steps="11401"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="16068"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="in_order&#39;vc" expl="VC for in_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="in_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16292"/></proof>
  </goal>
  <goal name="in_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17212"/></proof>
  </goal>
  <goal name="in_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="18486"/></proof>
  </goal>
  <goal name="in_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19794"/></proof>
  </goal>
  <goal name="in_order&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="18938"/></proof>
  </goal>
  <goal name="in_order&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="in_order&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="18503"/></proof>
   </goal>
   <goal name="in_order&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="19064"/></proof>
   </goal>
   <goal name="in_order&#39;vc.5.2" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="143"/></proof>
   </goal>
   <goal name="in_order&#39;vc.5.3" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="17009"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="in_order&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19364"/></proof>
  </goal>
  <goal name="in_order&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16280"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
