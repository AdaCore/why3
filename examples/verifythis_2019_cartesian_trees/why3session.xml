<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.7.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_2019_cartesian_trees.mlw"/>
<theory name="Top" proved="true">
 <goal name="Decr.Transitive.Trans" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="8164"/></proof>
 </goal>
 <goal name="destruct&#39;vc" expl="VC for destruct" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="10877"/></proof>
 </goal>
 <goal name="peek&#39;vc" expl="VC for peek" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
 <goal name="tail&#39;vc" expl="VC for tail" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="9419"/></proof>
 </goal>
 <goal name="destruct_peek_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="33713"/></proof>
 </goal>
 <goal name="smaller_left&#39;vc" expl="VC for smaller_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="smaller_left&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="11866"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="11901"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10318"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13074"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12764"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10837"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="10941"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13949"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11282"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="13298"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11355"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12306"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14417"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13104"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13138"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12462"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12841"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15301"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12902"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.19" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="151"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15408"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="26041"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16823"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="1899"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="7012"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="685"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.26" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12752"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.27" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="13482"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.28" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="17561"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13719"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="19330"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="13832"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="316"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="514"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="117"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="246"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.37" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12936"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.38" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="13358"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.39" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="16554"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13528"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="28607"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="25410"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="685"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="1323"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="1854"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="352"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13579"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.04" steps="13377"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14134"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12934"/></proof>
  </goal>
  <goal name="smaller_left&#39;vc.52" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12268"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="construct_dirs&#39;vc" expl="VC for construct_dirs" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="construct_dirs&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14770"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="16965"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15321"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="18779"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15752"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15752"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17149"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17161"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17470"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17470"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = li)">
   <goal name="construct_dirs&#39;vc.10.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="375"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.10.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.16" steps="473"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.36" steps="1539"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = li)">
   <goal name="construct_dirs&#39;vc.12.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="128"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.12.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="401"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17549"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.14" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17549"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = ri)">
   <goal name="construct_dirs&#39;vc.15.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="392"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.15.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="488"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="1613"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.17" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = ri)">
   <goal name="construct_dirs&#39;vc.17.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="130"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.17.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.07" steps="452"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.18" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="17575"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17575"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.20" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = li)">
   <goal name="construct_dirs&#39;vc.20.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="288"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.20.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="417"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="932"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.22" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = li)">
   <goal name="construct_dirs&#39;vc.22.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="102"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.22.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="247"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.23" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17605"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.24" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17605"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.25" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = ri)">
   <goal name="construct_dirs&#39;vc.25.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="255"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.25.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="602"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="563"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = ri)">
   <goal name="construct_dirs&#39;vc.27.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="103"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.27.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="452"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j = ri)">
   <goal name="construct_dirs&#39;vc.28.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="24"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.28.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="161"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="20029"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.30" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(p = ri)">
   <goal name="construct_dirs&#39;vc.30.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="construct_dirs&#39;vc.30.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16224"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="118"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.33" expl="postcondition" proved="true">
  <transf name="revert" proved="true" arg1="p">
   <goal name="construct_dirs&#39;vc.33.0" expl="postcondition" proved="true">
   <transf name="revert" proved="true" arg1="s">
    <goal name="construct_dirs&#39;vc.33.0.0" expl="postcondition" proved="true">
    <transf name="induction_pr" proved="true" >
     <goal name="construct_dirs&#39;vc.33.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="25"/></proof>
     </goal>
     <goal name="construct_dirs&#39;vc.33.0.0.1" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="95"/></proof>
     </goal>
     <goal name="construct_dirs&#39;vc.33.0.0.2" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.04" steps="20052"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.34" expl="postcondition" proved="true">
  <transf name="revert" proved="true" arg1="p2">
   <goal name="construct_dirs&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="revert" proved="true" arg1="s">
    <goal name="construct_dirs&#39;vc.34.0.0" expl="postcondition" proved="true">
    <transf name="induction_pr" proved="true" >
     <goal name="construct_dirs&#39;vc.34.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.02" steps="42"/></proof>
     </goal>
     <goal name="construct_dirs&#39;vc.34.0.0.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="construct_dirs&#39;vc.34.0.0.1.0" expl="VC for construct_dirs" proved="true">
      <proof prover="2"><result status="valid" time="0.08" steps="29605"/></proof>
      </goal>
      <goal name="construct_dirs&#39;vc.34.0.0.1.1" expl="VC for construct_dirs" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="155"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="construct_dirs&#39;vc.34.0.0.2" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.04" steps="138"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.35" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="parent">
   <goal name="construct_dirs&#39;vc.35.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.02" steps="141970"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="construct_dirs&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19721"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="23030"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="21135"/></proof>
  </goal>
  <goal name="construct_dirs&#39;vc.39" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="18458"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="par&#39;vc" expl="VC for par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="par&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12866"/></proof>
  </goal>
  <goal name="par&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13721"/></proof>
  </goal>
  <goal name="par&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14409"/></proof>
  </goal>
  <goal name="par&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="47878"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="13955"/></proof>
  <transf name="split_all_full" proved="true" >
   <goal name="par&#39;vc.3.0" expl="VC for par" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="14821"/></proof>
   </goal>
   <goal name="par&#39;vc.3.1" expl="VC for par" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="53239"/></proof>
   <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.04" steps="15866"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="par&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14109"/></proof>
  </goal>
  <goal name="par&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14102"/></proof>
  </goal>
  <goal name="par&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="par&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14113"/></proof>
  </goal>
  <goal name="par&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="par&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14081"/></proof>
  </goal>
  <goal name="par&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="par&#39;vc.11" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="48204"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="14060"/></proof>
  </goal>
  <goal name="par&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14113"/></proof>
  </goal>
  <goal name="par&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="par&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13176"/></proof>
  </goal>
  <goal name="par&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="134"/></proof>
  </goal>
  <goal name="par&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13153"/></proof>
  </goal>
  <goal name="par&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="121"/></proof>
  </goal>
  <goal name="par&#39;vc.18" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14000"/></proof>
  </goal>
  <goal name="par&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14081"/></proof>
  </goal>
  <goal name="par&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14995"/></proof>
  </goal>
  <goal name="par&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13153"/></proof>
  </goal>
  <goal name="par&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="103"/></proof>
  </goal>
  <goal name="par&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13122"/></proof>
  </goal>
  <goal name="par&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="par&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="20970"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="par&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13007"/></proof>
  </goal>
  <goal name="par&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12478"/></proof>
  </goal>
  <goal name="par&#39;vc.27" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14382"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="all_descendant_root&#39;vc" expl="VC for all_descendant_root" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="all_descendant_root&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13133"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13133"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.2" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(not is_smallest a j)">
   <goal name="all_descendant_root&#39;vc.2.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="14937"/></proof>
   </goal>
   <goal name="all_descendant_root&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="15557"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_descendant_root&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13801"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="177"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19195"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13742"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="175"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="39974"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14101"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13572"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="16791"/></proof>
  </goal>
  <goal name="all_descendant_root&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="15534"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="find_smaller&#39;vc" expl="VC for find_smaller" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="find_smaller&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14093"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.1" expl="index in array bounds" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="find_smaller&#39;vc.1.0" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="15668"/></proof>
   </goal>
   <goal name="find_smaller&#39;vc.1.1" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="15673"/></proof>
   </goal>
   <goal name="find_smaller&#39;vc.1.2" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="15336"/></proof>
   </goal>
   <goal name="find_smaller&#39;vc.1.3" expl="VC for find_smaller" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="15341"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_smaller&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="18707"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.3" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="20306"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.4" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19635"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="19199"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19325"/></proof>
  </goal>
  <goal name="find_smaller&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15729"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="other_descendant" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="other_descendant.0" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16827"/></proof>
  </goal>
  <goal name="other_descendant.1" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15200"/></proof>
  </goal>
  <goal name="other_descendant.2" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15200"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_other_descendant" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="inv_other_descendant.0" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13129"/></proof>
  </goal>
  <goal name="inv_other_descendant.1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inv_other_descendant.1.0" proved="true">
   <transf name="case" proved="true" arg1="(p1 = s1)">
    <goal name="inv_other_descendant.1.0.0" expl="true case" proved="true">
    <transf name="right" proved="true" >
     <goal name="inv_other_descendant.1.0.0.0" expl="right case" proved="true">
     <transf name="exists" proved="true" arg1="s">
      <goal name="inv_other_descendant.1.0.0.0.0" proved="true">
      <proof prover="2"><result status="valid" time="0.03" steps="14009"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="inv_other_descendant.1.0.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.04" steps="15420"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_other_descendant.2" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inv_other_descendant.2.0" proved="true">
   <transf name="case" proved="true" arg1="(p1 = s1)">
    <goal name="inv_other_descendant.2.0.0" expl="true case" proved="true">
    <transf name="right" proved="true" >
     <goal name="inv_other_descendant.2.0.0.0" expl="right case" proved="true">
     <transf name="exists" proved="true" arg1="s">
      <goal name="inv_other_descendant.2.0.0.0.0" proved="true">
      <proof prover="2"><result status="valid" time="0.04" steps="14035"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="inv_other_descendant.2.0.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="15420"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="StrictIncr.Transitive.Trans" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="13883"/></proof>
 </goal>
 <goal name="traversal&#39;vc" expl="VC for traversal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="traversal&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="traversal&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="15440"/></proof>
   </goal>
   <goal name="traversal&#39;vc.0.1" expl="VC for traversal" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="16379"/></proof>
   </goal>
   <goal name="traversal&#39;vc.0.2" expl="VC for traversal" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="16375"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16078"/></proof>
  </goal>
  <goal name="traversal&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14590"/></proof>
  </goal>
  <goal name="traversal&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15601"/></proof>
  </goal>
  <goal name="traversal&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16075"/></proof>
  </goal>
  <goal name="traversal&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="traversal&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17400"/></proof>
  </goal>
  <goal name="traversal&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="traversal&#39;vc.7.0" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.7.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="17325"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.7.1" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.7.1.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.07" steps="24582"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.7.2" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(descendant dirs x1 son)">
    <goal name="traversal&#39;vc.7.2.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="58024"/></proof>
    </goal>
    <goal name="traversal&#39;vc.7.2.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="148"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.7.3" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(x + 1 = e)">
    <goal name="traversal&#39;vc.7.3.0" expl="true case (precondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.04" steps="14988"/></proof>
    </goal>
    <goal name="traversal&#39;vc.7.3.1" expl="false case (precondition)" proved="true">
    <transf name="assert" proved="true" arg1="(descendant dirs x (x+1))">
     <goal name="traversal&#39;vc.7.3.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.05" steps="17110"/></proof>
     </goal>
     <goal name="traversal&#39;vc.7.3.1.1" expl="false case (precondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="73"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14684"/></proof>
  </goal>
  <goal name="traversal&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15706"/></proof>
  </goal>
  <goal name="traversal&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16186"/></proof>
  </goal>
  <goal name="traversal&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="traversal&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17657"/></proof>
  </goal>
  <goal name="traversal&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="traversal&#39;vc.13.0" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.13.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.07" steps="33427"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.13.1" expl="precondition" proved="true">
   <transf name="unfold" proved="true" arg1="parent" arg2="in" arg3="other_descendant">
    <goal name="traversal&#39;vc.13.1.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="17526"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.13.2" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(descendant dirs x1 son)">
    <goal name="traversal&#39;vc.13.2.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.04" steps="17508"/></proof>
    </goal>
    <goal name="traversal&#39;vc.13.2.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="190"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.13.3" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(s = x)">
    <goal name="traversal&#39;vc.13.3.0" expl="true case (precondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="15089"/></proof>
    </goal>
    <goal name="traversal&#39;vc.13.3.1" expl="false case (precondition)" proved="true">
    <transf name="assert" proved="true" arg1="(descendant dirs x s)">
     <goal name="traversal&#39;vc.13.3.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="17296"/></proof>
     </goal>
     <goal name="traversal&#39;vc.13.3.1.1" expl="false case (precondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="86"/></proof>
     <transf name="split_all_full" proved="true" >
      <goal name="traversal&#39;vc.13.3.1.1.0" expl="false case (precondition)" proved="true">
      <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="0.01" steps="86"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.14" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="traversal&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="16065"/></proof>
   </goal>
   <goal name="traversal&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.41" steps="62393"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="traversal&#39;vc.15" expl="postcondition" proved="true">
  <transf name="destruct_term" proved="true" arg1="top">
   <goal name="traversal&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(sorted o)">
    <goal name="traversal&#39;vc.15.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="17127"/></proof>
    </goal>
    <goal name="traversal&#39;vc.15.0.1" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(sorted (Cons x o1))">
     <goal name="traversal&#39;vc.15.0.1.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.01" steps="68"/></proof>
     </goal>
     <goal name="traversal&#39;vc.15.0.1.1" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(sorted (Cons x o1))">
      <goal name="traversal&#39;vc.15.0.1.1.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
      </goal>
      <goal name="traversal&#39;vc.15.0.1.1.1" expl="postcondition" proved="true">
      <proof prover="1" timelimit="15"><result status="valid" time="2.20" steps="11400"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="traversal&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="16069"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="in_order&#39;vc" expl="VC for in_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="in_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16293"/></proof>
  </goal>
  <goal name="in_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17213"/></proof>
  </goal>
  <goal name="in_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="18487"/></proof>
  </goal>
  <goal name="in_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19795"/></proof>
  </goal>
  <goal name="in_order&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="18939"/></proof>
  </goal>
  <goal name="in_order&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="in_order&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="18504"/></proof>
   </goal>
   <goal name="in_order&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="19065"/></proof>
   </goal>
   <goal name="in_order&#39;vc.5.2" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="143"/></proof>
   </goal>
   <goal name="in_order&#39;vc.5.3" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="17010"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="in_order&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19365"/></proof>
  </goal>
  <goal name="in_order&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16281"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
