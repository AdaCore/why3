<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_fm2012_LRS.mlw"/>
<theory name="LCP" proved="true">
 <goal name="not_common_prefix_if_last_char_are_different" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="6333"/></proof>
 </goal>
 <goal name="longest_common_prefix_succ" proved="true">
 <proof prover="3"><result status="valid" time="0.00" steps="28"/></proof>
 </goal>
 <goal name="lcp&#39;vc" expl="VC for lcp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="lcp&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="3749"/></proof>
  </goal>
  <goal name="lcp&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4116"/></proof>
  </goal>
  <goal name="lcp&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4116"/></proof>
  </goal>
  <goal name="lcp&#39;vc.3" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="4160"/></proof>
  </goal>
  <goal name="lcp&#39;vc.4" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="15772"/></proof>
  </goal>
  <goal name="lcp&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="8708"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LCP_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="4611"/></proof>
 </goal>
</theory>
<theory name="SuffixSort" proved="true">
 <goal name="compare&#39;vc" expl="VC for compare" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="compare&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="3829"/></proof>
  </goal>
  <goal name="compare&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="3840"/></proof>
  </goal>
  <goal name="compare&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4602"/></proof>
  </goal>
  <goal name="compare&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4595"/></proof>
  </goal>
  <goal name="compare&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="4962"/></proof>
  </goal>
  <goal name="compare&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4955"/></proof>
  </goal>
  <goal name="compare&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="compare&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="3984"/></proof>
  </goal>
  <goal name="compare&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="5610"/></proof>
  </goal>
  <goal name="compare&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="lcp_same_index" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13308"/></proof>
 </goal>
 <goal name="le_trans" proved="true">
 <proof prover="3"><result status="valid" time="0.08" steps="254"/></proof>
 </goal>
 <goal name="sort&#39;vc" expl="VC for sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13868"/></proof>
  </goal>
  <goal name="sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16688"/></proof>
  </goal>
  <goal name="sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15066"/></proof>
  </goal>
  <goal name="sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15173"/></proof>
  </goal>
  <goal name="sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15180"/></proof>
  </goal>
  <goal name="sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15187"/></proof>
  </goal>
  <goal name="sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15194"/></proof>
  </goal>
  <goal name="sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="20308"/></proof>
  </goal>
  <goal name="sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15275"/></proof>
  </goal>
  <goal name="sort&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17289"/></proof>
  </goal>
  <goal name="sort&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="17310"/></proof>
  </goal>
  <goal name="sort&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="20918"/></proof>
  </goal>
  <goal name="sort&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="21171"/></proof>
  </goal>
  <goal name="sort&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="18060"/></proof>
  </goal>
  <goal name="sort&#39;vc.14" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="18074"/></proof>
  </goal>
  <goal name="sort&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="18060"/></proof>
  </goal>
  <goal name="sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="18431"/></proof>
  </goal>
  <goal name="sort&#39;vc.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="109"/></proof>
  </goal>
  <goal name="sort&#39;vc.18" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16360"/></proof>
  </goal>
  <goal name="sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="18944"/></proof>
  </goal>
  <goal name="sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="177"/></proof>
  </goal>
  <goal name="sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="23584"/></proof>
  </goal>
  <goal name="sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="39871"/></proof>
  </goal>
  <goal name="sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="938"/></proof>
  </goal>
  <goal name="sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="925"/></proof>
  </goal>
  <goal name="sort&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="18086"/></proof>
  </goal>
  <goal name="sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15858"/></proof>
  </goal>
  <goal name="sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.13" steps="345"/></proof>
  </goal>
  <goal name="sort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15909"/></proof>
  </goal>
  <goal name="sort&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15824"/></proof>
  </goal>
  <goal name="sort&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15118"/></proof>
  </goal>
  <goal name="sort&#39;vc.31" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13410"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SuffixSort_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.34" steps="71283"/></proof>
 </goal>
</theory>
<theory name="SuffixArray" proved="true">
 <goal name="suffixArray&#39;vc" expl="VC for suffixArray" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="17491"/></proof>
 </goal>
 <goal name="select&#39;vc" expl="VC for select" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13629"/></proof>
 </goal>
 <goal name="permut_permutation" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="36451"/></proof>
 </goal>
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="create&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12746"/></proof>
  </goal>
  <goal name="create&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12504"/></proof>
  </goal>
  <goal name="create&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13596"/></proof>
  </goal>
  <goal name="create&#39;vc.3" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="create&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13257"/></proof>
  </goal>
  <goal name="create&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19944"/></proof>
  </goal>
  <goal name="create&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="107828"/></proof>
  </goal>
  <goal name="create&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12772"/></proof>
  </goal>
  <goal name="create&#39;vc.8" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17252"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="lcp&#39;vc" expl="VC for lcp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="lcp&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13722"/></proof>
  </goal>
  <goal name="lcp&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13725"/></proof>
  </goal>
  <goal name="lcp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="17114"/></proof>
  </goal>
  <goal name="lcp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="17493"/></proof>
  </goal>
  <goal name="lcp&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SuffixArray_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="19705"/></proof>
 </goal>
</theory>
<theory name="LRS" proved="true">
 <goal name="lcp_sym" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="40"/></proof>
 </goal>
 <goal name="le_le_common_prefix" proved="true">
 <proof prover="3"><result status="valid" time="0.05" steps="155"/></proof>
 </goal>
 <goal name="le_le_longest_common_prefix" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13238"/></proof>
 </goal>
 <goal name="lrs&#39;vc" expl="VC for lrs" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="lrs&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13720"/></proof>
  </goal>
  <goal name="lrs&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13179"/></proof>
  </goal>
  <goal name="lrs&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15610"/></proof>
  </goal>
  <goal name="lrs&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14731"/></proof>
  </goal>
  <goal name="lrs&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15002"/></proof>
  </goal>
  <goal name="lrs&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15439"/></proof>
  </goal>
  <goal name="lrs&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15479"/></proof>
  </goal>
  <goal name="lrs&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="22951"/></proof>
  </goal>
  <goal name="lrs&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="23212"/></proof>
  </goal>
  <goal name="lrs&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="25843"/></proof>
  </goal>
  <goal name="lrs&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.34" steps="67762"/></proof>
  </goal>
  <goal name="lrs&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15336"/></proof>
  </goal>
  <goal name="lrs&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15355"/></proof>
  </goal>
  <goal name="lrs&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15406"/></proof>
  </goal>
  <goal name="lrs&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="81461"/></proof>
  </goal>
  <goal name="lrs&#39;vc.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="22405"/></proof>
  </goal>
  <goal name="lrs&#39;vc.16" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="lrs&#39;vc.16.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(surjective (suffixes sa).elts a.length)">
    <goal name="lrs&#39;vc.16.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="18361"/></proof>
    </goal>
    <goal name="lrs&#39;vc.16.0.1" expl="assertion" proved="true">
    <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h">
     <goal name="lrs&#39;vc.16.0.1.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="h" arg2="x">
      <goal name="lrs&#39;vc.16.0.1.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="h" arg2="y">
       <goal name="lrs&#39;vc.16.0.1.0.0.0" expl="assertion" proved="true">
       <proof prover="2"><result status="valid" time="0.06" steps="17304"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="lrs&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15786"/></proof>
  </goal>
  <goal name="lrs&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15797"/></proof>
  </goal>
  <goal name="lrs&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15840"/></proof>
  </goal>
  <goal name="lrs&#39;vc.20" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="lrs&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Assert" arg2="x,y">
    <goal name="lrs&#39;vc.20.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="14876"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="lrs&#39;vc.21" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15448"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LRS_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="17467"/></proof>
 </goal>
</theory>
</file>
</why3session>
