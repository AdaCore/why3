<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/><path name="verifythis_fm2012_LRS.mlw"/>
<theory name="LCP" proved="true">
 <goal name="not_common_prefix_if_last_char_are_different" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="6333"/></proof>
 </goal>
 <goal name="longest_common_prefix_succ" proved="true">
 <proof prover="3"><result status="valid" time="0.00" steps="28"/></proof>
 </goal>
 <goal name="VC lcp" expl="VC for lcp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC lcp.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="3748"/></proof>
  </goal>
  <goal name="VC lcp.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4115"/></proof>
  </goal>
  <goal name="VC lcp.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4115"/></proof>
  </goal>
  <goal name="VC lcp.3" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="4159"/></proof>
  </goal>
  <goal name="VC lcp.4" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="15772"/></proof>
  </goal>
  <goal name="VC lcp.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="8708"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LCP_test" proved="true">
 <goal name="VC bench" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="4217"/></proof>
 </goal>
</theory>
<theory name="SuffixSort" proved="true">
 <goal name="VC compare" expl="VC for compare" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC compare.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="3828"/></proof>
  </goal>
  <goal name="VC compare.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="3839"/></proof>
  </goal>
  <goal name="VC compare.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4601"/></proof>
  </goal>
  <goal name="VC compare.3" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4594"/></proof>
  </goal>
  <goal name="VC compare.4" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="4961"/></proof>
  </goal>
  <goal name="VC compare.5" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="4954"/></proof>
  </goal>
  <goal name="VC compare.6" expl="unreachable point" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC compare.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="3983"/></proof>
  </goal>
  <goal name="VC compare.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="5609"/></proof>
  </goal>
  <goal name="VC compare.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="lcp_same_index" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="12927"/></proof>
 </goal>
 <goal name="le_trans" proved="true">
 <proof prover="3"><result status="valid" time="0.08" steps="254"/></proof>
 </goal>
 <goal name="VC sort" expl="VC for sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC sort.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13487"/></proof>
  </goal>
  <goal name="VC sort.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16307"/></proof>
  </goal>
  <goal name="VC sort.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14699"/></proof>
  </goal>
  <goal name="VC sort.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14806"/></proof>
  </goal>
  <goal name="VC sort.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14813"/></proof>
  </goal>
  <goal name="VC sort.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14820"/></proof>
  </goal>
  <goal name="VC sort.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14827"/></proof>
  </goal>
  <goal name="VC sort.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="19927"/></proof>
  </goal>
  <goal name="VC sort.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14908"/></proof>
  </goal>
  <goal name="VC sort.9" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="16922"/></proof>
  </goal>
  <goal name="VC sort.10" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="16943"/></proof>
  </goal>
  <goal name="VC sort.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="20537"/></proof>
  </goal>
  <goal name="VC sort.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="20790"/></proof>
  </goal>
  <goal name="VC sort.13" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17693"/></proof>
  </goal>
  <goal name="VC sort.14" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17707"/></proof>
  </goal>
  <goal name="VC sort.15" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17693"/></proof>
  </goal>
  <goal name="VC sort.16" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="18064"/></proof>
  </goal>
  <goal name="VC sort.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="109"/></proof>
  </goal>
  <goal name="VC sort.18" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15993"/></proof>
  </goal>
  <goal name="VC sort.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="18577"/></proof>
  </goal>
  <goal name="VC sort.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="177"/></proof>
  </goal>
  <goal name="VC sort.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="23203"/></proof>
  </goal>
  <goal name="VC sort.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="39490"/></proof>
  </goal>
  <goal name="VC sort.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="938"/></proof>
  </goal>
  <goal name="VC sort.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="925"/></proof>
  </goal>
  <goal name="VC sort.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17719"/></proof>
  </goal>
  <goal name="VC sort.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15491"/></proof>
  </goal>
  <goal name="VC sort.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.13" steps="345"/></proof>
  </goal>
  <goal name="VC sort.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15542"/></proof>
  </goal>
  <goal name="VC sort.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15457"/></proof>
  </goal>
  <goal name="VC sort.30" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14751"/></proof>
  </goal>
  <goal name="VC sort.31" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13029"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SuffixSort_test" proved="true">
 <goal name="VC bench" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.34" steps="68552"/></proof>
 </goal>
</theory>
<theory name="SuffixArray" proved="true">
 <goal name="VC suffixArray" expl="VC for suffixArray" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="16585"/></proof>
 </goal>
 <goal name="VC select" expl="VC for select" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13248"/></proof>
 </goal>
 <goal name="permut_permutation" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="35910"/></proof>
 </goal>
 <goal name="VC create" expl="VC for create" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC create.0" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12379"/></proof>
  </goal>
  <goal name="VC create.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12127"/></proof>
  </goal>
  <goal name="VC create.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13222"/></proof>
  </goal>
  <goal name="VC create.3" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="VC create.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12883"/></proof>
  </goal>
  <goal name="VC create.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19562"/></proof>
  </goal>
  <goal name="VC create.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="40631"/></proof>
  </goal>
  <goal name="VC create.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12395"/></proof>
  </goal>
  <goal name="VC create.8" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16864"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC lcp" expl="VC for lcp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC lcp.0" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13341"/></proof>
  </goal>
  <goal name="VC lcp.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13344"/></proof>
  </goal>
  <goal name="VC lcp.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="16733"/></proof>
  </goal>
  <goal name="VC lcp.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="17112"/></proof>
  </goal>
  <goal name="VC lcp.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SuffixArray_test" proved="true">
 <goal name="VC bench" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="18885"/></proof>
 </goal>
</theory>
<theory name="LRS" proved="true">
 <goal name="lcp_sym" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="40"/></proof>
 </goal>
 <goal name="le_le_common_prefix" proved="true">
 <proof prover="3"><result status="valid" time="0.05" steps="155"/></proof>
 </goal>
 <goal name="le_le_longest_common_prefix" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13048"/></proof>
 </goal>
 <goal name="VC lrs" expl="VC for lrs" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC lrs.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13353"/></proof>
  </goal>
  <goal name="VC lrs.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12812"/></proof>
  </goal>
  <goal name="VC lrs.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15229"/></proof>
  </goal>
  <goal name="VC lrs.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14364"/></proof>
  </goal>
  <goal name="VC lrs.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14635"/></proof>
  </goal>
  <goal name="VC lrs.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15072"/></proof>
  </goal>
  <goal name="VC lrs.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15112"/></proof>
  </goal>
  <goal name="VC lrs.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="22570"/></proof>
  </goal>
  <goal name="VC lrs.8" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="22831"/></proof>
  </goal>
  <goal name="VC lrs.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="25462"/></proof>
  </goal>
  <goal name="VC lrs.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.34" steps="67280"/></proof>
  </goal>
  <goal name="VC lrs.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14969"/></proof>
  </goal>
  <goal name="VC lrs.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14988"/></proof>
  </goal>
  <goal name="VC lrs.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15039"/></proof>
  </goal>
  <goal name="VC lrs.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="80557"/></proof>
  </goal>
  <goal name="VC lrs.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="22024"/></proof>
  </goal>
  <goal name="VC lrs.16" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC lrs.16.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(surjective (suffixes sa).elts a.length)">
    <goal name="VC lrs.16.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="17980"/></proof>
    </goal>
    <goal name="VC lrs.16.0.1" expl="assertion" proved="true">
    <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h">
     <goal name="VC lrs.16.0.1.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="h" arg2="x">
      <goal name="VC lrs.16.0.1.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="h" arg2="y">
       <goal name="VC lrs.16.0.1.0.0.0" expl="assertion" proved="true">
       <proof prover="2"><result status="valid" time="0.06" steps="16923"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC lrs.17" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15419"/></proof>
  </goal>
  <goal name="VC lrs.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15430"/></proof>
  </goal>
  <goal name="VC lrs.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15473"/></proof>
  </goal>
  <goal name="VC lrs.20" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC lrs.20.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Assert" arg2="x,y">
    <goal name="VC lrs.20.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="14685"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC lrs.21" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="15081"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LRS_test" proved="true">
 <goal name="VC bench" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="16863"/></proof>
 </goal>
</theory>
</file>
</why3session>
