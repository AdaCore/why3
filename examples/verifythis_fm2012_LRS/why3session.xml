<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_fm2012_LRS.mlw"/>
<theory name="LCP" proved="true">
 <goal name="not_common_prefix_if_last_char_are_different" proved="true">
 <proof prover="4"><result status="valid" time="0.010000" steps="8708"/></proof>
 </goal>
 <goal name="longest_common_prefix_succ" proved="true">
 <proof prover="1"><result status="valid" time="0.000000" steps="110"/></proof>
 </goal>
 <goal name="lcp&#39;vc" expl="VC for lcp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="lcp&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="3241"/></proof>
  </goal>
  <goal name="lcp&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="3608"/></proof>
  </goal>
  <goal name="lcp&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="3608"/></proof>
  </goal>
  <goal name="lcp&#39;vc.3" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="3761"/></proof>
  </goal>
  <goal name="lcp&#39;vc.4" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.880000" steps="6393216"/></proof>
  </goal>
  <goal name="lcp&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="12590"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LCP_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.020000" steps="4322"/></proof>
 </goal>
</theory>
<theory name="SuffixSort" proved="true">
 <goal name="compare&#39;vc" expl="VC for compare" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="compare&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="3321"/></proof>
  </goal>
  <goal name="compare&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="3332"/></proof>
  </goal>
  <goal name="compare&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="4095"/></proof>
  </goal>
  <goal name="compare&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="4088"/></proof>
  </goal>
  <goal name="compare&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="4594"/></proof>
  </goal>
  <goal name="compare&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="4587"/></proof>
  </goal>
  <goal name="compare&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.010000" steps="1029"/></proof>
  </goal>
  <goal name="compare&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.000000" steps="3674"/></proof>
  </goal>
  <goal name="compare&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="5242"/></proof>
  </goal>
  <goal name="compare&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="176"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="lcp_same_index" proved="true">
 <proof prover="2"><result status="valid" time="0.040000" steps="12932"/></proof>
 </goal>
 <goal name="le_trans" proved="true">
 <proof prover="1"><result status="valid" time="0.080000" steps="1496"/></proof>
 </goal>
 <goal name="sort&#39;vc" expl="VC for sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="13492"/></proof>
  </goal>
  <goal name="sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="16406"/></proof>
  </goal>
  <goal name="sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="14851"/></proof>
  </goal>
  <goal name="sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="14959"/></proof>
  </goal>
  <goal name="sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="14966"/></proof>
  </goal>
  <goal name="sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="14973"/></proof>
  </goal>
  <goal name="sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="14980"/></proof>
  </goal>
  <goal name="sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="20027"/></proof>
  </goal>
  <goal name="sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="15061"/></proof>
  </goal>
  <goal name="sort&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.050000" steps="17007"/></proof>
  </goal>
  <goal name="sort&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="17028"/></proof>
  </goal>
  <goal name="sort&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="20637"/></proof>
  </goal>
  <goal name="sort&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="20890"/></proof>
  </goal>
  <goal name="sort&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="17777"/></proof>
  </goal>
  <goal name="sort&#39;vc.14" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.050000" steps="17791"/></proof>
  </goal>
  <goal name="sort&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="17777"/></proof>
  </goal>
  <goal name="sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.050000" steps="18133"/></proof>
  </goal>
  <goal name="sort&#39;vc.17" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="298"/></proof>
  </goal>
  <goal name="sort&#39;vc.18" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="16130"/></proof>
  </goal>
  <goal name="sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="18647"/></proof>
  </goal>
  <goal name="sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="443"/></proof>
  </goal>
  <goal name="sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="23287"/></proof>
  </goal>
  <goal name="sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.200000" steps="39574"/></proof>
  </goal>
  <goal name="sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.201482" steps="1857"/></proof>
  </goal>
  <goal name="sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.168310" steps="1865"/></proof>
  </goal>
  <goal name="sort&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.050000" steps="17803"/></proof>
  </goal>
  <goal name="sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="15642"/></proof>
  </goal>
  <goal name="sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.130000" steps="236"/></proof>
  </goal>
  <goal name="sort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="15693"/></proof>
  </goal>
  <goal name="sort&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15542"/></proof>
  </goal>
  <goal name="sort&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="14903"/></proof>
  </goal>
  <goal name="sort&#39;vc.31" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="13033"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SuffixSort_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.340000" steps="70987"/></proof>
 </goal>
</theory>
<theory name="SuffixArray" proved="true">
 <goal name="suffixArray&#39;vc" expl="VC for suffixArray" proved="true">
 <proof prover="2"><result status="valid" time="0.040000" steps="17209"/></proof>
 </goal>
 <goal name="select&#39;vc" expl="VC for select" proved="true">
 <proof prover="2"><result status="valid" time="0.040000" steps="13372"/></proof>
 </goal>
 <goal name="permut_permutation" proved="true">
 <proof prover="4"><result status="valid" time="0.030000" steps="135514"/></proof>
 </goal>
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="create&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="12504"/></proof>
  </goal>
  <goal name="create&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="12314"/></proof>
  </goal>
  <goal name="create&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="13339"/></proof>
  </goal>
  <goal name="create&#39;vc.3" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="72"/></proof>
  </goal>
  <goal name="create&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.050000" steps="13000"/></proof>
  </goal>
  <goal name="create&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="19687"/></proof>
  </goal>
  <goal name="create&#39;vc.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="99183"/></proof>
  </goal>
  <goal name="create&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="12582"/></proof>
  </goal>
  <goal name="create&#39;vc.8" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="17089"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="lcp&#39;vc" expl="VC for lcp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="lcp&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.050000" steps="13465"/></proof>
  </goal>
  <goal name="lcp&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="13468"/></proof>
  </goal>
  <goal name="lcp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="16857"/></proof>
  </goal>
  <goal name="lcp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="17236"/></proof>
  </goal>
  <goal name="lcp&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.024780" steps="157"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SuffixArray_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.050000" steps="19528"/></proof>
 </goal>
</theory>
<theory name="LRS" proved="true">
 <goal name="lcp_sym" proved="true">
 <proof prover="3"><result status="valid" time="0.028641" steps="163"/></proof>
 </goal>
 <goal name="le_le_common_prefix" proved="true">
 <proof prover="1"><result status="valid" time="0.166915" steps="1745"/></proof>
 </goal>
 <goal name="le_le_longest_common_prefix" proved="true">
 <proof prover="2"><result status="valid" time="0.040000" steps="13058"/></proof>
 </goal>
 <goal name="lrs&#39;vc" expl="VC for lrs" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="lrs&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="13464"/></proof>
  </goal>
  <goal name="lrs&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="12990"/></proof>
  </goal>
  <goal name="lrs&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15354"/></proof>
  </goal>
  <goal name="lrs&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="14475"/></proof>
  </goal>
  <goal name="lrs&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="14746"/></proof>
  </goal>
  <goal name="lrs&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15183"/></proof>
  </goal>
  <goal name="lrs&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15223"/></proof>
  </goal>
  <goal name="lrs&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="22695"/></proof>
  </goal>
  <goal name="lrs&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="22956"/></proof>
  </goal>
  <goal name="lrs&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="25587"/></proof>
  </goal>
  <goal name="lrs&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.340000" steps="67506"/></proof>
  </goal>
  <goal name="lrs&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="15080"/></proof>
  </goal>
  <goal name="lrs&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="15099"/></proof>
  </goal>
  <goal name="lrs&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15150"/></proof>
  </goal>
  <goal name="lrs&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.360000" steps="81205"/></proof>
  </goal>
  <goal name="lrs&#39;vc.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="22149"/></proof>
  </goal>
  <goal name="lrs&#39;vc.16" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="lrs&#39;vc.16.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(surjective (suffixes sa).elts a.length)">
    <goal name="lrs&#39;vc.16.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.060000" steps="18094"/></proof>
    </goal>
    <goal name="lrs&#39;vc.16.0.1" expl="assertion" proved="true">
    <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h">
     <goal name="lrs&#39;vc.16.0.1.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="h" arg2="x">
      <goal name="lrs&#39;vc.16.0.1.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="h" arg2="y">
       <goal name="lrs&#39;vc.16.0.1.0.0.0" expl="assertion" proved="true">
       <proof prover="2"><result status="valid" time="0.060000" steps="17049"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="lrs&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15530"/></proof>
  </goal>
  <goal name="lrs&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15541"/></proof>
  </goal>
  <goal name="lrs&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="15584"/></proof>
  </goal>
  <goal name="lrs&#39;vc.20" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="lrs&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Assert" arg2="x,y">
    <goal name="lrs&#39;vc.20.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.060000" steps="14470"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="lrs&#39;vc.21" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="15259"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LRS_test" proved="true">
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.040000" steps="17290"/></proof>
 </goal>
</theory>
</file>
</why3session>
