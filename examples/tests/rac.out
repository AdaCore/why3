
* Local
** Local.test1
Assertion cannot be evaluated at examples/tests/rac.mlw, line 8, characters 13-37
Term: forall y:int. y = 1 -> x = y
Variables: _ -> (), _1 -> (), x -> 1
Assertion failed at examples/tests/rac.mlw, line 9, characters 13-18
Term: x = 0
Variables: _ -> (), _1 -> (), _2 -> (), x -> 1
** Local.test2
result: () = ()
globals: 
** Local.test3
Assertion failed at examples/tests/rac.mlw, line 20, characters 13-19
Term: contents x > 10
Variables: _ -> (), _1 -> (), x -> ref'mk 1
** Local.test4
result: () = ()
globals: 
** Local.test5
result: () = ()
globals: 

* Global
** Global.test1
result: () = ()
globals: x -> (ref'mk 1), y -> (ref'mk 0)

* Functions
** Functions.test1
Assertion failed at examples/tests/rac.mlw, line 59, characters 13-35
Term: f1_aux 0 = ((f1_aux' @ 0) @ 1)
Variables: _ -> (), _1 -> (), _2 -> (), x -> ref'mk 0
** Functions.test2
result: () = ()
globals: x -> (ref'mk 0)
** Functions.test3a
Precondition of test3_aux failed at examples/tests/rac.mlw, line 71, characters 4-15
Defined at examples/tests/rac.mlw, line 66, characters 15-20
Term: y > 0
Variables: _ -> (), x -> ref'mk 0, y -> 0
** Functions.test3b
Postcondition of test3_aux failed at examples/tests/rac.mlw, line 75, characters 4-15
Defined at examples/tests/rac.mlw, line 67, characters 14-24
Term: result = 1
Variables: _ -> (), _1 -> 1, result -> 2, x -> ref'mk 0, y -> 2
** Functions.test4
Exceptional postcondition of test4_aux failed at examples/tests/rac.mlw, line 85, characters 8-20
Defined at examples/tests/rac.mlw, line 80, characters 20-25
Term: j = contents x
Variables: _ -> (), _1 -> (), j -> 42, x -> ref'mk 1
** Functions.test5
Postcondition of test5_aux failed at examples/tests/rac.mlw, line 94, characters 4-15
Defined at examples/tests/rac.mlw, line 89, characters 14-27
Term: contents x = (contents x1 + 1)
Variables: _ -> (), _1 -> (), d -> 2, result -> (), x -> ref'mk 3,
  x1 -> ref'mk 1
** Functions.test6
Precondition of test6_aux failed at examples/tests/rac.mlw, line 105, characters 12-26
Defined at examples/tests/rac.mlw, line 97, characters 15-21
Term: not contents x = y
Variables: _ -> (), _1 -> 42, r -> ref'mk 42, x1 -> ref'mk 0, x -> ref'mk 42,
  y -> 42

* Loops
** Loops.test1
result: () = ()
globals: x -> (ref'mk 0)
** Loops.test2
Loop invariant preservation failed at examples/tests/rac.mlw, line 121, characters 18-32
Term: contents x = 0 || contents x = 1
Variables: _ -> (), i -> 1, x -> ref'mk 2
** Loops.test3
Loop invariant preservation failed at examples/tests/rac.mlw, line 128, characters 18-24
Term: 5 >= contents x
Variables: _ -> (), x -> ref'mk 6

* Aliasing
** Aliasing.test1
result: (int, int) = (100, 100)
globals: 
** Aliasing.test2
result: () = ()
globals: 

* RecordMutGhost
** RecordMutGhost.test
result: int = 43
globals: 

* PolyContext
** PolyContext.test1
result: int = 42
globals: 
** PolyContext.test2
result: int = 42
globals: 

* PolyRefContracts
** PolyRefContracts.test1
result: () = ()
globals: myref -> (ref'mk 0)
** PolyRefContracts.test2a
result: int = 1
globals: myref -> (ref'mk 1)
** PolyRefContracts.test2b
Precondition of test2_aux failed at examples/tests/rac.mlw, line 261, characters 4-23
Defined at examples/tests/rac.mlw, line 249, characters 15-29
Term: not contents argref = argx
Variables: _ -> (), argref -> ref'mk 0, argx -> 0, argy -> 1,
  myref -> ref'mk 0
** PolyRefContracts.test2c
Postcondition of test2_aux failed at examples/tests/rac.mlw, line 264, characters 4-23
Defined at examples/tests/rac.mlw, line 251, characters 14-27
Term: result = argy
Variables: _ -> (), argref -> ref'mk 1, argx -> 1, argy -> 2,
  myref -> ref'mk 1, result -> 1

* RecordPoly
** RecordPoly.test1
result: () = ()
globals: 
** RecordPoly.test2
result: () = ()
globals: 
** RecordPoly.test3
Postcondition of update cannot be evaluated at examples/tests/rac.mlw, line 299, characters 4-20
Defined at examples/tests/rac.mlw, line 290, characters 14-77
Term: forall j:int.
       0 < j /\ j < length r -> not j = i -> (elts r @ j) = (elts r1 @ j)
Variables: _ -> (), _1 -> (), i -> 3,
  r2 -> t3'mk
        (fun (j:int) -> if j = 3 then False else (fun (_2:int) -> True) @ j)
        5,
  r -> t3'mk
       (fun (j:int) -> if j = 3 then False else (fun (_2:int) -> True) @ j) 5,
  result -> (), x -> False
Assertion failed at examples/tests/rac.mlw, line 302, characters 13-29
Term: (elts r2 @ 1) = False
Variables: _ -> (), _1 -> (), _2 -> (), _3 -> (), _4 -> (),
  r2 -> t3'mk
        (fun (j:int) -> if j = 3 then False else (fun (_5:int) -> True) @ j)
        5

* PolyFunc
** PolyFunc.test1
result: int -> int = <fun>
globals: 
** PolyFunc.test2
result: (int, int) = (111, 0)
globals: 

* ArrayExec
** ArrayExec.test1
result: (int, int) = (0, 0)
globals: 
** ArrayExec.test2
result: (int, int) = (11, 0)
globals: 
** ArrayExec.test3
result: (int, int) = (10, 0)
globals: 
** ArrayExec.test4
Assertion failed at examples/tests/rac.mlw, line 375, characters 13-19
Term: x = 11
Variables: _ -> (), _1 -> (), _2 -> (), _3 -> (), _4 -> (), _5 -> (),
  a -> array'mk 10
       (fun (j:int) -> if j = 1 then 11 else (fun (_6:int) -> 0) @ j),
  x1 -> 0, x2 -> 0, x3 -> 11, x -> 0
