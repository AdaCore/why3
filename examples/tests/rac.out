
* Local
** Local.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 7, characters 13-19
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 8, characters 13-37
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 9, characters 13-18
Assertion has failed at "examples/tests/rac.mlw", line 9, characters 13-18
- Term: x = 0
- Variables: x -> 1
** Local.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 14, characters 16-18
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 14, characters 16-18
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 14, characters 16-18
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 15, characters 13-20
result: () = ()
globals: 
** Local.test3
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 18, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 18, characters 16-17
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 19, characters 13-19
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 20, characters 13-19
Assertion has failed at "examples/tests/rac.mlw", line 20, characters 13-19
- Term: contents x > 10
- Variables: x -> {contents= 1}
** Local.test4
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 23, characters 13-28
result: () = ()
globals: 
** Local.test5
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of True is ok at "examples/tests/rac.mlw", line 26, characters 12-16
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 27, characters 13-21
result: () = ()
globals: 

* Global
** Global.test1
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 34, characters 12-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 34, characters 12-17
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 41, characters 14-16
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 41, characters 14-16
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 37, characters 13-18
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 38, characters 9-10
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 38, characters 9-14
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 39, characters 13-18
result: () = ()
globals: x -> {contents= 1}, y -> {contents= 42}
** Global.test2
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 34, characters 12-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 34, characters 12-17
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 41, characters 14-16
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 41, characters 14-16
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 44, characters 13-19
result: () = ()
globals: x -> {contents= 0}, y -> {contents= 42}

* Functions
** Functions.test1
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 57, characters 13-27
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 58, characters 13-30
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 59, characters 13-35
Assertion has failed at "examples/tests/rac.mlw", line 59, characters 13-35
- Term: f1_aux 0 = ((f1_aux' @ 0) @ 1)
- Variables: 
** Functions.test2
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 63, characters 13-29
result: () = ()
globals: x -> {contents= 0}
** Functions.test3a
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 7-9
<rac-check-term-result>Precondition of test3_aux has failed at "examples/tests/rac.mlw", line 71, characters 4-15
                       - Defined at "examples/tests/rac.mlw", line 66, characters 15-20
Precondition of test3_aux has failed at "examples/tests/rac.mlw", line 71, characters 4-15
- Defined at "examples/tests/rac.mlw", line 66, characters 15-20
- Term: y > 0
- Variables: y -> 0
** Functions.test3b
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 7-9
<rac-check-term-result>Precondition of test3_aux is ok at "examples/tests/rac.mlw", line 74, characters 12-23
                       - Defined at "examples/tests/rac.mlw", line 66, characters 15-20
<rac-check-term-result>Postcondition of test3_aux is ok at "examples/tests/rac.mlw", line 74, characters 12-23
                       - Defined at "examples/tests/rac.mlw", line 67, characters 14-24
<rac-check-term-result>Precondition of test3_aux is ok at "examples/tests/rac.mlw", line 75, characters 4-15
                       - Defined at "examples/tests/rac.mlw", line 66, characters 15-20
<rac-check-term-result>Postcondition of test3_aux has failed at "examples/tests/rac.mlw", line 75, characters 4-15
                       - Defined at "examples/tests/rac.mlw", line 67, characters 14-24
Postcondition of test3_aux has failed at "examples/tests/rac.mlw", line 75, characters 4-15
- Defined at "examples/tests/rac.mlw", line 67, characters 14-24
- Term: result = 1
- Variables: result -> 2
** Functions.test4
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 85, characters 18-20
<rac-check-term-result>Exceptional postcondition of test4_aux has failed at "examples/tests/rac.mlw", line 85, characters 8-20
                       - Defined at "examples/tests/rac.mlw", line 80, characters 20-25
Exceptional postcondition of test4_aux has failed at "examples/tests/rac.mlw", line 85, characters 8-20
- Defined at "examples/tests/rac.mlw", line 80, characters 20-25
- Term: j = contents x
- Variables: j -> 42, x -> {contents= 1}
** Functions.test5
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 90, characters 9-10
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 90, characters 9-14
<rac-check-term-result>Postcondition of test5_aux is ok at "examples/tests/rac.mlw", line 93, characters 4-15
                       - Defined at "examples/tests/rac.mlw", line 89, characters 14-27
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 90, characters 9-10
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 90, characters 9-14
<rac-check-term-result>Postcondition of test5_aux has failed at "examples/tests/rac.mlw", line 94, characters 4-15
                       - Defined at "examples/tests/rac.mlw", line 89, characters 14-27
Postcondition of test5_aux has failed at "examples/tests/rac.mlw", line 94, characters 4-15
- Defined at "examples/tests/rac.mlw", line 89, characters 14-27
- Term: contents x = (contents x1 + 1)
- Variables: x -> {contents= 3}, x1 -> {contents= 1}
** Functions.test6
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 53, characters 14-15
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 103, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 103, characters 16-17
<rac-check-term-result>Precondition of test6_aux is ok at "examples/tests/rac.mlw", line 104, characters 12-26
                       - Defined at "examples/tests/rac.mlw", line 97, characters 15-21
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 100, characters 4-5
<rac-check-term-result>Postcondition of test6_aux is ok at "examples/tests/rac.mlw", line 104, characters 12-26
                       - Defined at "examples/tests/rac.mlw", line 98, characters 14-24
<rac-check-term-result>Precondition of test6_aux has failed at "examples/tests/rac.mlw", line 105, characters 12-26
                       - Defined at "examples/tests/rac.mlw", line 97, characters 15-21
Precondition of test6_aux has failed at "examples/tests/rac.mlw", line 105, characters 12-26
- Defined at "examples/tests/rac.mlw", line 97, characters 15-21
- Term: not contents x = y
- Variables: x -> {contents= 42}, y -> 42

* Loops
** Loops.test1
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 112, characters 12-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 112, characters 12-17
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Precondition of test1 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 114, characters 26-31
<rac-check-term-result>Loop invariant initialization is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 116, characters 31-31
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 116, characters 18-29
result: () = ()
globals: x -> {contents= 0}
** Loops.test2
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 112, characters 12-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 112, characters 12-17
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Precondition of test2 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 119, characters 26-31
<rac-check-term-result>Loop invariant initialization is ok at "examples/tests/rac.mlw", line 121, characters 18-32
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 122, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 122, characters 11-16
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 121, characters 18-32
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 122, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 122, characters 11-16
<rac-check-term-result>Loop invariant preservation has failed at "examples/tests/rac.mlw", line 121, characters 18-32
Loop invariant preservation has failed at "examples/tests/rac.mlw", line 121, characters 18-32
- Term: contents x = 0 || contents x = 1
- Variables: x -> {contents= 2}
** Loops.test3
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 112, characters 12-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 112, characters 12-17
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Loop invariant initialization is ok at "examples/tests/rac.mlw", line 128, characters 18-24
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 126, characters 10-11
<rac-check-term-result>Postcondition of (<) is ok at "examples/tests/rac.mlw", line 126, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 129, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 129, characters 11-16
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 128, characters 18-24
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 126, characters 4-123
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 126, characters 10-11
<rac-check-term-result>Postcondition of (<) is ok at "examples/tests/rac.mlw", line 126, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 129, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 129, characters 11-16
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 128, characters 18-24
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 126, characters 4-123
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 126, characters 10-11
<rac-check-term-result>Postcondition of (<) is ok at "examples/tests/rac.mlw", line 126, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 129, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 129, characters 11-16
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 128, characters 18-24
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 126, characters 4-123
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 126, characters 10-11
<rac-check-term-result>Postcondition of (<) is ok at "examples/tests/rac.mlw", line 126, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 129, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 129, characters 11-16
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 128, characters 18-24
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 126, characters 4-123
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 126, characters 10-11
<rac-check-term-result>Postcondition of (<) is ok at "examples/tests/rac.mlw", line 126, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 129, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 129, characters 11-16
<rac-check-term-result>Loop invariant preservation is ok at "examples/tests/rac.mlw", line 128, characters 18-24
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 126, characters 4-123
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 126, characters 10-11
<rac-check-term-result>Postcondition of (<) is ok at "examples/tests/rac.mlw", line 126, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 129, characters 11-12
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 129, characters 11-16
<rac-check-term-result>Loop invariant preservation has failed at "examples/tests/rac.mlw", line 128, characters 18-24
Loop invariant preservation has failed at "examples/tests/rac.mlw", line 128, characters 18-24
- Term: 5 >= contents x
- Variables: x -> {contents= 6}

* Aliasing
** Aliasing.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of r'mk is ok at "examples/tests/rac.mlw", line 140, characters 12-22
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 143, characters 13-44
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 144, characters 13-20
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 144, characters 4-11
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 144, characters 4-20
result: (int, int) = (100, 100)
globals: 
** Aliasing.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of True is ok at "examples/tests/rac.mlw", line 157, characters 25-29
<rac-check-term-result>Postcondition of r'mk is ok at "examples/tests/rac.mlw", line 147, characters 12-22
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 153, characters 13-27
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 154, characters 13-20
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 154, characters 4-11
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 154, characters 4-20
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 158, characters 13-32
<rac-check-term-result>Postcondition of False is ok at "examples/tests/rac.mlw", line 159, characters 25-30
<rac-check-term-result>Postcondition of r'mk is ok at "examples/tests/rac.mlw", line 147, characters 12-22
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 153, characters 13-27
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 154, characters 13-20
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 154, characters 4-11
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 154, characters 4-20
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 160, characters 13-32
result: () = ()
globals: 

* Labels
** Labels.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of r'mk is ok at "examples/tests/rac.mlw", line 169, characters 12-22
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 171, characters 15-22
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 171, characters 15-26
<rac-check-term-result>Postcondition of value is ok at "examples/tests/rac.mlw", line 173, characters 15-22
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 173, characters 15-26
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 174, characters 13-58
result: () = ()
globals: 

* RecordMutGhost
** RecordMutGhost.test
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 5-7
<rac-check-term-result>Postcondition of t'mk is ok at "examples/tests/rac.mlw", line 212, characters 12-43
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 213, characters 13-20
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 214, characters 13-22
<rac-check-term-result>Postcondition of f is ok at "examples/tests/rac.mlw", line 215, characters 20-23
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 216, characters 13-23
<rac-check-term-result>Postcondition of f is ok at "examples/tests/rac.mlw", line 217, characters 20-23
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 215, characters 47-52
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 217, characters 20-25
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 217, characters 4-25
result: int = 43
globals: 

* PolyContext
** PolyContext.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of poly is ok at "examples/tests/rac.mlw", line 227, characters 4-10
                       - Defined at "examples/tests/rac.mlw", line 222, characters 26-27
<rac-check-term-result>Postcondition of test1 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 226, characters 12-14
result: int = 42
globals: 
** PolyContext.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of poly is ok at "examples/tests/rac.mlw", line 231, characters 4-10
                       - Defined at "examples/tests/rac.mlw", line 222, characters 26-27
<rac-check-term-result>Postcondition of poly' is ok at "examples/tests/rac.mlw", line 235, characters 4-11
                       - Defined at "examples/tests/rac.mlw", line 222, characters 26-27
<rac-check-term-result>Postcondition of test2 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 234, characters 12-14
result: int = 42
globals: 

* PolyRefContracts
** PolyRefContracts.test1
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 243, characters 12-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 243, characters 12-17
<rac-check-term-result>Postcondition of contents is ok at "WHY3DATA/stdlib/ref.mlw", line 18, characters 33-43
<rac-check-term-result>Postcondition of (!) is ok at "examples/tests/rac.mlw", line 244, characters 9-11
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 244, characters 9-15
<rac-check-term-result>Postcondition of (:=) is ok at "examples/tests/rac.mlw", line 244, characters 4-15
                       - Defined at "WHY3DATA/stdlib/ref.mlw", line 20, characters 39-44
result: () = ()
globals: myref -> {contents= 0}
** PolyRefContracts.test2a
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 7-9
<rac-check-term-result>Precondition of test2_aux is ok at "examples/tests/rac.mlw", line 256, characters 4-23
                       - Defined at "examples/tests/rac.mlw", line 247, characters 15-29
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 251, characters 4-10
<rac-check-term-result>Postcondition of test2_aux is ok at "examples/tests/rac.mlw", line 256, characters 4-23
                       - Defined at "examples/tests/rac.mlw", line 248, characters 14-27
<rac-check-term-result>Postcondition of test2_aux is ok at "examples/tests/rac.mlw", line 256, characters 4-23
                       - Defined at "examples/tests/rac.mlw", line 249, characters 14-27
result: int = 1
globals: myref -> {contents= 1}
** PolyRefContracts.test2b
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 7-9
<rac-check-term-result>Precondition of test2_aux has failed at "examples/tests/rac.mlw", line 259, characters 4-23
                       - Defined at "examples/tests/rac.mlw", line 247, characters 15-29
Precondition of test2_aux has failed at "examples/tests/rac.mlw", line 259, characters 4-23
- Defined at "examples/tests/rac.mlw", line 247, characters 15-29
- Term: not contents argref = argx
- Variables: argref -> {contents= 0}, argx -> 0
** PolyRefContracts.test2c
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 253, characters 18-19
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 7-9
<rac-check-term-result>Precondition of test2_aux is ok at "examples/tests/rac.mlw", line 262, characters 4-23
                       - Defined at "examples/tests/rac.mlw", line 247, characters 15-29
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 251, characters 4-10
<rac-check-term-result>Postcondition of test2_aux is ok at "examples/tests/rac.mlw", line 262, characters 4-23
                       - Defined at "examples/tests/rac.mlw", line 248, characters 14-27
<rac-check-term-result>Postcondition of test2_aux has failed at "examples/tests/rac.mlw", line 262, characters 4-23
                       - Defined at "examples/tests/rac.mlw", line 249, characters 14-27
Postcondition of test2_aux has failed at "examples/tests/rac.mlw", line 262, characters 4-23
- Defined at "examples/tests/rac.mlw", line 249, characters 14-27
- Term: result = argy
- Variables: argy -> 2, result -> 1

* RecordPoly
** RecordPoly.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of t1'mk is ok at "examples/tests/rac.mlw", line 270, characters 12-18
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 271, characters 13-20
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 273, characters 13-22
result: () = ()
globals: 
** RecordPoly.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of t2'mk is ok at "examples/tests/rac.mlw", line 277, characters 12-39
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 278, characters 13-25
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 279, characters 13-25
<rac-check-term-result>Postcondition of f is ok at "examples/tests/rac.mlw", line 280, characters 20-23
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 281, characters 13-26
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 282, characters 13-25
result: () = ()
globals: 
** RecordPoly.test3
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of t3'mk is ok at "examples/tests/rac.mlw", line 295, characters 12-52
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 296, characters 13-28
<rac-check-term-result>Postcondition of False is ok at "examples/tests/rac.mlw", line 297, characters 15-20
<rac-check-term-result>Precondition of update is ok at "examples/tests/rac.mlw", line 297, characters 4-20
                       - Defined at "examples/tests/rac.mlw", line 287, characters 15-31
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 290, characters 22-28
<rac-check-term-result>Postcondition of update is ok at "examples/tests/rac.mlw", line 297, characters 4-20
                       - Defined at "examples/tests/rac.mlw", line 288, characters 14-77
<rac-check-term-result>Postcondition of update is ok at "examples/tests/rac.mlw", line 297, characters 4-20
                       - Defined at "examples/tests/rac.mlw", line 289, characters 14-26
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 298, characters 13-29
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 299, characters 13-28
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 300, characters 13-29
Assertion has failed at "examples/tests/rac.mlw", line 300, characters 13-29
- Term: (elts r @ 1) = False
- Variables: r -> {elts=
                   ({i -> 3;
                      x -> false;
                      f -> (fun _ -> true)} fun j -> if j =' i then x
                      else f j);
                   length= 5}

* PolyFunc
** PolyFunc.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of mk is ok at "examples/tests/rac.mlw", line 309, characters 6-10
<rac-check-term-result>Postcondition of test1 is ok at "command line expression to execute", line 1, characters 0-8
result: int -> int = ({v -> 0} fun _ -> v)
globals: 
** PolyFunc.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of t'mk is ok at "examples/tests/rac.mlw", line 320, characters 12-27
<rac-check-term-result>Postcondition of f is ok at "examples/tests/rac.mlw", line 317, characters 22-25
<rac-check-term-result>Postcondition of map_update is ok at "examples/tests/rac.mlw", line 317, characters 11-29
<rac-check-term-result>Postcondition of f is ok at "examples/tests/rac.mlw", line 323, characters 11-14
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 314, characters 23-28
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 314, characters 41-44
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 323, characters 11-16
<rac-check-term-result>Postcondition of f is ok at "examples/tests/rac.mlw", line 323, characters 4-7
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 314, characters 23-28
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 323, characters 4-9
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 323, characters 4-16
result: (int, int) = (111, 0)
globals: 

* ArrayExec
** ArrayExec.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of array'mk is ok at "examples/tests/rac.mlw", line 349, characters 12-48
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 350, characters 14-20
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 350, characters 14-22
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 350, characters 4-10
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 350, characters 4-12
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 350, characters 4-22
<rac-check-term-result>Postcondition of test1 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 349, characters 4-74
result: (int, int) = (0, 0)
globals: 
** ArrayExec.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of array'mk is ok at "examples/tests/rac.mlw", line 353, characters 12-48
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 354, characters 23-29
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 355, characters 14-20
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 354, characters 53-58
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 354, characters 72-75
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 355, characters 14-22
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 355, characters 4-10
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 354, characters 53-58
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 355, characters 4-12
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 355, characters 4-22
result: (int, int) = (11, 0)
globals: 
** ArrayExec.test3
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of array'mk is ok at "examples/tests/rac.mlw", line 336, characters 4-33
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 358, characters 12-21
                       - Defined at "examples/tests/rac.mlw", line 334, characters 14-31
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 358, characters 12-21
                       - Defined at "examples/tests/rac.mlw", line 335, characters 14-55
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 346, characters 27-33
<rac-check-term-result>Postcondition of map_update is ok at "examples/tests/rac.mlw", line 346, characters 16-37
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 341, characters 41-47
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 339, characters 23-28
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 339, characters 41-44
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 360, characters 10-14
                       - Defined at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 341, characters 41-47
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 339, characters 23-28
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 360, characters 4-8
                       - Defined at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 360, characters 4-14
result: (int, int) = (10, 0)
globals: 
** ArrayExec.test4
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of array'mk is ok at "examples/tests/rac.mlw", line 336, characters 4-33
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 363, characters 12-21
                       - Defined at "examples/tests/rac.mlw", line 334, characters 14-31
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 363, characters 12-21
                       - Defined at "examples/tests/rac.mlw", line 335, characters 14-55
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 364, characters 13-26
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 341, characters 41-47
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 365, characters 12-16
                       - Defined at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 366, characters 13-18
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 346, characters 27-33
<rac-check-term-result>Postcondition of map_update is ok at "examples/tests/rac.mlw", line 346, characters 16-37
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 341, characters 41-47
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 339, characters 23-28
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 339, characters 41-44
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 368, characters 12-16
                       - Defined at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 369, characters 13-18
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 341, characters 41-47
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 339, characters 23-28
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 370, characters 12-16
                       - Defined at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 371, characters 13-19
<rac-check-term-result>Postcondition of elts is ok at "examples/tests/rac.mlw", line 341, characters 41-47
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 339, characters 23-28
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 339, characters 41-44
<rac-check-term-result>Postcondition of (@) is ok at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 372, characters 12-16
                       - Defined at "examples/tests/rac.mlw", line 341, characters 41-49
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 373, characters 13-19
Assertion has failed at "examples/tests/rac.mlw", line 373, characters 13-19
- Term: x = 11
- Variables: x -> 0

* Ghost
** Ghost.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of t'mk is ok at "examples/tests/rac.mlw", line 423, characters 12-30
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 424, characters 13-37
<rac-check-term-result>Postcondition of i2 is ok at "examples/tests/rac.mlw", line 425, characters 11-15
<rac-check-term-result>Postcondition of i1 is ok at "examples/tests/rac.mlw", line 425, characters 5-9
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 425, characters 4-16
<rac-check-term-result>Postcondition of test1 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 423, characters 4-91
result: (int, int) = (123, 456)
globals: 
** Ghost.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of (=) is ok at "examples/tests/rac.mlw", line 428, characters 7-12
                       - Defined at "WHY3DATA/stdlib/int.mlw", line 16, characters 39-55
<rac-check-term-result>Postcondition of f1 is ok at "examples/tests/rac.mlw", line 431, characters 18-24
                       - Defined at "examples/tests/rac.mlw", line 428, characters 4-30
<rac-check-term-result>Postcondition of (+) is ok at "examples/tests/rac.mlw", line 432, characters 4-9
<rac-check-term-result>Postcondition of test2 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 432, characters 4-9
result: int = 457
globals: 

* Predicates
** Predicates.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 442, characters 13-19
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 444, characters 13-15
<rac-check-term-result>Postcondition of True is ok
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 446, characters 13-15
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 448, characters 13-19
result: () = ()
globals: 
** Predicates.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 452, characters 13-15
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 454, characters 13-18
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 456, characters 13-15
<rac-check-term-result>Postcondition of Tuple3 is ok at "examples/tests/rac.mlw", line 457, characters 4-15
<rac-check-term-result>Postcondition of test2 is ok at "command line expression to execute", line 1, characters 0-8
                       - Defined at "examples/tests/rac.mlw", line 451, characters 4-163
result: (bool, int, bool) = (True, 0, True)
globals: 

* Arrays
** Arrays.test0
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Precondition of make is ok at "examples/tests/rac.mlw", line 389, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 60, characters 43-49
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 389, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 61, characters 14-55
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 389, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 62, characters 14-31
<rac-check-term-result>Precondition of ([]<-) is ok at "examples/tests/rac.mlw", line 390, characters 4-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 31, characters 45-62
<rac-check-term-result>Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 390, characters 4-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 32, characters 15-48
warning: Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 390, characters 4-14
- Defined at "WHY3DATA/stdlib/array.mlw", line 32, characters 15-48

<rac-check-term-result>Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 390, characters 4-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 33, characters 15-34
warning: Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 390, characters 4-14
- Defined at "WHY3DATA/stdlib/array.mlw", line 33, characters 15-34

<rac-check-term-result>Precondition of ([]) is ok at "examples/tests/rac.mlw", line 391, characters 10-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 23, characters 45-62
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 391, characters 10-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 24, characters 15-28
<rac-check-term-result>Precondition of ([]) is ok at "examples/tests/rac.mlw", line 391, characters 4-8
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 23, characters 45-62
<rac-check-term-result>Postcondition of ([]) is ok at "examples/tests/rac.mlw", line 391, characters 4-8
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 24, characters 15-28
<rac-check-term-result>Postcondition of Tuple2 is ok at "examples/tests/rac.mlw", line 391, characters 4-14
result: (int, int) = (10, 0)
globals: 
** Arrays.test1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Precondition of make is ok at "examples/tests/rac.mlw", line 394, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 60, characters 43-49
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 394, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 61, characters 14-55
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 394, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 62, characters 14-31
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 395, characters 13-26
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 396, characters 13-21
<rac-check-term-result>Precondition of ([]<-) is ok at "examples/tests/rac.mlw", line 397, characters 4-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 31, characters 45-62
<rac-check-term-result>Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 397, characters 4-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 32, characters 15-48
warning: Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 397, characters 4-14
- Defined at "WHY3DATA/stdlib/array.mlw", line 32, characters 15-48

<rac-check-term-result>Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 397, characters 4-14
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 33, characters 15-34
warning: Postcondition of ([]<-) cannot be evaluated at "examples/tests/rac.mlw", line 397, characters 4-14
- Defined at "WHY3DATA/stdlib/array.mlw", line 33, characters 15-34

<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 398, characters 13-21
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 399, characters 13-22
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 400, characters 13-22
Assertion has failed at "examples/tests/rac.mlw", line 400, characters 13-22
- Term: a[2] = 11
- Variables: a -> [0; 11; 0; 0; 0; 0; 0; 0; 0; 0]
** Arrays.test2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Precondition of make is ok at "examples/tests/rac.mlw", line 406, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 60, characters 43-49
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 406, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 61, characters 14-55
<rac-check-term-result>Postcondition of make is ok at "examples/tests/rac.mlw", line 406, characters 12-21
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 62, characters 14-31
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 407, characters 13-26
Assertion has failed at "examples/tests/rac.mlw", line 407, characters 13-26
- Term: length a = 42
- Variables: a -> [11]
** Arrays.test3
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 6-8
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 410, characters 19-21
<rac-check-term-result>Postcondition of empty is ok at "examples/tests/rac.mlw", line 410, characters 12-34
                       - Defined at "WHY3DATA/stdlib/array.mlw", line 65, characters 14-31
<rac-check-term-result>Assertion has failed at "examples/tests/rac.mlw", line 411, characters 13-26
Assertion has failed at "examples/tests/rac.mlw", line 411, characters 13-26
- Term: length a = 42
- Variables: a -> []

* Variants
** Variants.loop_var_ok1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 13-15
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 463, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 463, characters 16-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 464, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 464, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 466, characters 11-12
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 466, characters 11-16
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 464, characters 4-65
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 464, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 464, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 466, characters 11-12
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 466, characters 11-16
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 464, characters 4-65
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 464, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 464, characters 10-16
result: () = ()
globals: 
** Variants.loop_var_ok2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 13-15
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 469, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 469, characters 16-17
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 470, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 470, characters 16-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 471, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 471, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 473, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 473, characters 9-14
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 474, characters 13-14
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 474, characters 13-18
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 471, characters 4-120
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 471, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 471, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 473, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 473, characters 9-14
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 476, characters 13-14
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 476, characters 13-18
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 471, characters 4-120
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 471, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 471, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 473, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 473, characters 9-14
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 476, characters 13-14
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 476, characters 13-18
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 471, characters 4-120
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 471, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 471, characters 10-16
result: () = ()
globals: 
** Variants.loop_var_fail1
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 15-17
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 479, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 479, characters 16-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 480, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 480, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 482, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 482, characters 9-14
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 483, characters 13-14
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 483, characters 13-18
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 480, characters 4-87
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 480, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 480, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 482, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 482, characters 9-14
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 482, characters 6-38
<rac-check-term-result>Loop variant decrease has failed at "examples/tests/rac.mlw", line 480, characters 4-87
Loop variant decrease has failed at "examples/tests/rac.mlw", line 480, characters 4-87
- Term: 0 <= contents i /\ contents i1 < contents i \/
        contents i = contents i1 /\ false
- Variables: i1 -> {contents= 1}, i -> {contents= 1}
** Variants.loop_var_fail2
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 15-17
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 486, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 486, characters 16-17
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 487, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 487, characters 16-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 488, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 488, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 490, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 490, characters 9-14
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 491, characters 13-14
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 491, characters 13-18
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 488, characters 4-134
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 488, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 488, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 490, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 490, characters 9-14
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 492, characters 14-15
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 492, characters 14-19
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 493, characters 13-14
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 493, characters 13-18
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 488, characters 4-134
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 488, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 488, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 490, characters 9-10
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 490, characters 9-14
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 492, characters 14-15
<rac-check-term-result>Postcondition of (>) is ok at "examples/tests/rac.mlw", line 492, characters 14-19
<rac-check-term-result>Postcondition of Tuple0 is ok at "examples/tests/rac.mlw", line 492, characters 11-43
<rac-check-term-result>Loop variant decrease has failed at "examples/tests/rac.mlw", line 488, characters 4-134
Loop variant decrease has failed at "examples/tests/rac.mlw", line 488, characters 4-134
- Term: 0 <= contents i /\ contents i1 < contents i \/
        contents i = contents i1 /\
        (0 <= contents j /\ contents j1 < contents j \/
         contents j = contents j1 /\ false)
- Variables: i1 -> {contents= 0},
  i -> {contents= 0},
  j1 -> {contents= 1},
  j -> {contents= 1}
** Variants.loop_custom_variant
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 20-22
<rac-check-term-result>Postcondition of ref'mk is ok at "examples/tests/rac.mlw", line 500, characters 16-17
<rac-check-term-result>Postcondition of ref is ok at "examples/tests/rac.mlw", line 500, characters 16-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 501, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 501, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 503, characters 11-12
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 503, characters 11-16
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 501, characters 4-76
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 501, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 501, characters 10-16
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 503, characters 11-12
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 503, characters 11-16
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 501, characters 4-76
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 501, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 501, characters 10-16
<rac-check-term-result>Assertion is ok at "examples/tests/rac.mlw", line 505, characters 13-19
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 507, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 507, characters 10-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 509, characters 11-12
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 509, characters 11-16
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 507, characters 4-77
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 507, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 507, characters 10-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 509, characters 11-12
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 509, characters 11-16
<rac-check-term-result>Loop variant decrease is ok at "examples/tests/rac.mlw", line 507, characters 4-77
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 507, characters 10-11
<rac-check-term-result>Postcondition of (>=) is ok at "examples/tests/rac.mlw", line 507, characters 10-17
<rac-check-term-result>Postcondition of contents is ok at "examples/tests/rac.mlw", line 509, characters 11-12
<rac-check-term-result>Postcondition of (-_) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 39-41
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/int.mlw", line 23, characters 35-41
<rac-check-term-result>Postcondition of (-) is ok at "examples/tests/rac.mlw", line 509, characters 11-16
<rac-check-term-result>Loop variant decrease has failed at "examples/tests/rac.mlw", line 507, characters 4-77
Loop variant decrease has failed at "examples/tests/rac.mlw", line 507, characters 4-77
- Term: p (2 - contents i) (2 - contents i1) \/
        (2 - contents i1) = (2 - contents i) /\ false
- Variables: i -> {contents= (-2)}, i1 -> {contents= (-1)}

* TestUInt64
** TestUInt64.test
<rac-check-term-result>Postcondition of (+) is ok at "WHY3DATA/stdlib/mach/int.mlw", line 567, characters 29-43
<rac-check-term-result>Postcondition of Tuple0 is ok at "command line expression to execute", line 1, characters 5-7
<rac-check-term-result>Precondition of (-) has failed at "examples/tests/rac.mlw", line 515, characters 16-21
                       - Defined at "WHY3DATA/stdlib/mach/int.mlw", line 67, characters 40-57
Precondition of (-) has failed at "examples/tests/rac.mlw", line 515, characters 16-21
- Defined at "WHY3DATA/stdlib/mach/int.mlw", line 67, characters 40-57
- Term: in_bounds (a - b)
- Variables: a -> 0, b -> 1
