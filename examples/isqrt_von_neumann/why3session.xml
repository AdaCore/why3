<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="isqrt_von_neumann.mlw"/>
<theory name="VonNeumann16" proved="true">
 <goal name="sqr_add2" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.010000" steps="1148"/></proof>
 </goal>
 <goal name="isqrt16&#39;vc" expl="VC for isqrt16" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="isqrt16&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4190"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4238"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="4615"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="4662"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4280"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4300"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4321"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="4785"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4375"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5877"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="7552"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4541"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4594"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4697"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="22636"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="26169"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.16" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="22542"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="30471"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="23806"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.19" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="33778"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="23879"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="25288"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.190000" steps="62212"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="56561"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="26144"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5312"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="33281"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.180000" steps="78568"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="28432"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="35440"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.30" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="32949"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="22673"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="23915"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="58904"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="48029"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5382"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5061"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5426"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5447"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="24896"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.420000" steps="81023"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="31421"/></proof>
  </goal>
  <goal name="isqrt16&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="28497"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="VonNeumann32" proved="true">
 <goal name="sqr_add2" proved="true">
 <transf name="unfold" proved="true" arg1="sqr">
  <goal name="sqr_add2.0" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.010000" steps="1148"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="isqrt32&#39;vc" expl="VC for isqrt32" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="isqrt32&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="4190"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4238"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="4615"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4662"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4280"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4300"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4321"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="4785"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="4375"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="6805"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="9839"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4541"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4594"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4697"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.140000" steps="66538"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.230000" steps="83666"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.16" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.180000" steps="69854"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.190000" steps="96537"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.210000" steps="71402"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.19" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.383333" steps="104484"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.130000" steps="67895"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.140000" steps="70374"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.614570" steps="201479"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.500000" steps="175624"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.130000" steps="71789"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5312"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.290051" steps="88525"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="isqrt32&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <transf name="replace" proved="true" arg1="res_g" arg2="(add res_g1 bits_g1)">
    <goal name="isqrt32&#39;vc.27.0.0" expl="loop invariant preservation" proved="true">
    <transf name="rewrite" proved="true" arg1="sqr_add2">
     <goal name="isqrt32&#39;vc.27.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="3"><result status="valid" time="0.770000" steps="141299"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="isqrt32&#39;vc.27.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="0.010000" steps="4892"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="isqrt32&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.130000" steps="75788"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.190000" steps="89649"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.30" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.230000" steps="106161"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.110000" steps="66330"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.140000" steps="68118"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.730000" steps="194358"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.300000" steps="147049"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="5382"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="5061"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5426"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5447"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.120000" steps="69677"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="120"><result status="valid" time="86.220000" steps="485446"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.160000" steps="102287"/></proof>
  </goal>
  <goal name="isqrt32&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.150000" steps="86161"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="VonNeumann64" proved="true">
 <goal name="sqr_add2" proved="true">
 <transf name="unfold" proved="true" arg1="sqr">
  <goal name="sqr_add2.0" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.010000" steps="1148"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="isqrt64&#39;vc" expl="VC for isqrt64" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="isqrt64&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4190"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4238"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4615"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4662"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4280"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4300"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4321"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4785"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4375"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="8661"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="14525"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4541"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4594"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4697"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.740000" steps="235879"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.15" expl="assertion" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="1.309545" steps="303408"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.16" expl="assertion" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="1.685720" steps="270174"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.17" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.264693" steps="358773"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.18" expl="assertion" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.351444" steps="278519"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.19" expl="loop variant decrease" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.920000" steps="376838"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.500000" steps="235802"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.480000" steps="240482"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.827910" steps="729017"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="60"><result status="valid" time="2.356394" steps="622368"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.490000" steps="242932"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5312"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.913049" steps="285206"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="isqrt64&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <transf name="replace" proved="true" arg1="res_g" arg2="(add res_g1 bits_g1)">
    <goal name="isqrt64&#39;vc.27.0.0" expl="loop invariant preservation" proved="true">
    <transf name="rewrite" proved="true" arg1="sqr_add2">
     <goal name="isqrt64&#39;vc.27.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="3" timelimit="30"><result status="valid" time="7.788297" steps="550475"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="isqrt64&#39;vc.27.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="0.010000" steps="4892"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="isqrt64&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.510000" steps="250647"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.675419" steps="279666"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.30" expl="loop variant decrease" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.528492" steps="396093"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.450000" steps="234667"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.510000" steps="236390"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.870000" steps="711100"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="1.495005" steps="524978"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5382"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5061"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5426"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="5447"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.550131" steps="239204"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.40" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="isqrt64&#39;vc.40.0" expl="loop invariant preservation" proved="true">
   <transf name="unfold" proved="true" arg1="ule">
    <goal name="isqrt64&#39;vc.40.0.0" expl="VC for isqrt64" proved="true">
    <transf name="rewrite" proved="true" arg1="sqr_add2">
     <goal name="isqrt64&#39;vc.40.0.0.0" expl="VC for isqrt64" proved="true">
     <transf name="assert" proved="true" arg1="(x = add (sqr res_g) num)">
      <goal name="isqrt64&#39;vc.40.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="3" timelimit="5"><result status="valid" time="0.580000" steps="285552"/></proof>
      </goal>
      <goal name="isqrt64&#39;vc.40.0.0.0.1" expl="VC for isqrt64" proved="true">
      <transf name="unfold" proved="true" arg1="sqr">
       <goal name="isqrt64&#39;vc.40.0.0.0.1.0" expl="VC for isqrt64" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0" expl="VC for isqrt64" proved="true">
        <transf name="assert" proved="true" arg1="(ule num (pred (mul bits_g1 (add (mul (2:t) res_g) bits_g1))))">
         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(ult num b)">
          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="0.010000" steps="1264"/></proof>
          </goal>
          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b. mul a b = mul b a)">
           <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
           <proof prover="3"><result status="valid" time="0.010000" steps="4846"/></proof>
           </goal>
           <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.0.1.1" expl="asserted formula" proved="true">
           <proof prover="4"><result status="valid" time="0.140000" steps="142"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1" expl="VC for isqrt64" proved="true">
         <transf name="replace" proved="true" arg1="(pow2 m)" arg2="bits_g1">
          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0" expl="VC for isqrt64" proved="true">
          <transf name="assert" proved="true" arg1="(ule (add res_g (pow2 m1)) (0x100000000:t))">
           <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.010000" steps="1856"/></proof>
           </goal>
           <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1" expl="VC for isqrt64" proved="true">
           <transf name="assert" proved="true" arg1="(ule (add res_g bits_g1) (0x100000000:t))">
            <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
            <proof prover="3" timelimit="5"><result status="valid" time="0.700000" steps="404857"/></proof>
            </goal>
            <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1" expl="VC for isqrt64" proved="true">
            <transf name="unfold" proved="true" arg1="pred">
             <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0" expl="VC for isqrt64" proved="true">
             <transf name="unfold" proved="true" arg1="pred" arg2="in" arg3="h2">
              <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0" expl="VC for isqrt64" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b c. t&#39;int b + t&#39;int c &lt; two_power_size -&gt; ule a b -&gt; ule (add a c) (add b c))">
               <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.0" expl="asserted formula" proved="true">
               <proof prover="5"><result status="valid" time="0.160856" steps="620"/></proof>
               </goal>
               <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1" expl="VC for isqrt64" proved="true">
               <transf name="case" proved="true" arg1="(add (sqr res_g) (mul bits_g1 (add (mul (2:t) res_g) bits_g1)) = (0:t))">
                <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.0" expl="true case" proved="true">
                <transf name="unfold" proved="true" arg1="sqr" arg2="in" arg3="h">
                 <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.0.0" expl="true case" proved="true">
                 <proof prover="3" timelimit="5"><result status="valid" time="3.277349" steps="508151"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1" expl="false case" proved="true">
                <transf name="case" proved="true" arg1="(res_g = (0:t))">
                 <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.0" expl="false case (true case)" proved="true">
                 <proof prover="3" timelimit="5"><result status="valid" time="3.607718" steps="592821"/></proof>
                 </goal>
                 <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1" expl="false case" proved="true">
                 <transf name="rewrite" proved="true" arg1="to_uint_sub_bounded">
                  <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0" expl="false case" proved="true">
                  <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                   <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0" expl="false case" proved="true">
                   <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                    <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0" expl="false case" proved="true">
                    <transf name="unfold" proved="true" arg1="sqr">
                     <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0" expl="false case" proved="true">
                     <transf name="assert" proved="true" arg1="(forall a b c. b &lt;= c -&gt; a + b &lt;= a + c)">
                      <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                      <proof prover="0"><result status="valid" time="0.010000" steps="1460"/></proof>
                      </goal>
                      <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1" expl="false case" proved="true">
                      <transf name="unfold" proved="true" arg1="ule" arg2="in" arg3="h6">
                       <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0" expl="false case" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_sub_bounded" arg2="in" arg3="h6">
                        <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.0" expl="false case" proved="true">
                        <proof prover="0"><result status="valid" time="0.010000" steps="1513"/></proof>
                        </goal>
                        <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                        <transf name="assert" proved="true" arg1="(0 &lt;= t&#39;int b - t&#39;int (1:t))">
                         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
                         <proof prover="5"><result status="valid" time="0.095791" steps="219"/></proof>
                         </goal>
                         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                         <proof prover="0" timelimit="1"><result status="valid" time="0.491190" steps="1599592"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                     <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                      <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                       <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                        <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="assert" proved="true" arg1="(forall a b. a * a + b * ((2 * a) + b) = (a + b) * (a + b))">
                         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                         <proof prover="0"><result status="valid" time="0.010000" steps="5332"/></proof>
                         </goal>
                         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(t&#39;int (2:t))" arg2="2">
                          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="h">
                           <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="replace" proved="true" arg1="two_power_size" arg2="(0x100000000 * 0x100000000)">
                            <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="&lt;-" arg2="to_uint_add_bounded">
                             <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                             <proof prover="1"><result status="valid" time="0.325152" steps="3492"/></proof>
                             </goal>
                             <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                             <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="3.140000" steps="598362"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                            <proof prover="3" timelimit="5"><result status="valid" time="0.010000" steps="5118"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                          <proof prover="3"><result status="valid" time="0.010000" steps="5881"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="5" timelimit="1"><result status="valid" time="0.020000" steps="219"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.890000" steps="598149"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                       <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                        <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                        <transf name="assert" proved="true" arg1="(forall a b. a * ((2 * b) + a) = (a + b) * (a + b) - b * b)">
                         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
                         <proof prover="5"><result status="valid" time="0.020000" steps="215"/></proof>
                         </goal>
                         <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(t&#39;int (2:t))" arg2="2">
                          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="h">
                           <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="assert" proved="true" arg1="(((t&#39;int bits_g1 + t&#39;int res_g) * (t&#39;int bits_g1 + t&#39;int res_g)) &lt;= two_power_size)">
                            <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
                            <transf name="replace" proved="true" arg1="two_power_size" arg2="(0x100000000 * 0x100000000)">
                             <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                             <transf name="rewrite" proved="true" arg1="&lt;-" arg2="to_uint_add_bounded">
                              <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                              <transf name="assert" proved="true" arg1="(forall a b. add a b = add b a)">
                               <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                               <proof prover="0"><result status="valid" time="0.010000" steps="1517"/></proof>
                               </goal>
                               <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0.1" expl="asserted formula" proved="true">
                               <transf name="rewrite" proved="true" arg1="h1">
                                <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                                <proof prover="4"><result status="valid" time="0.020000" steps="135"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                              <proof prover="3" timelimit="5"><result status="valid" time="3.040000" steps="598376"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                             <proof prover="3" timelimit="5"><result status="valid" time="0.010000" steps="5122"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="0.180000" steps="221"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
                          <proof prover="3" timelimit="5"><result status="valid" time="0.010000" steps="5885"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                        <proof prover="3" timelimit="5"><result status="valid" time="1.721112" steps="562733"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                       <proof prover="3" timelimit="5"><result status="valid" time="2.301000" steps="598149"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="0.130843" steps="219"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="0.114149" steps="219"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.1" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.118514" steps="1358"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="isqrt64&#39;vc.40.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="3"><result status="valid" time="0.010000" steps="4859"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="isqrt64&#39;vc.41" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.350000" steps="178406"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.42" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="4463"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="25748"/></proof>
  </goal>
  <goal name="isqrt64&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="4855"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
