<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.01" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.0.0" timelimit="10" steplimit="0" memlimit="4000"/>
<file name="../isqrt_von_neumann.mlw" proved="true">
<theory name="VonNeumann16" proved="true" sum="59b5b24b57ef952abc97fb1234c3c694">
 <goal name="sqr_add2" proved="true">
 <proof prover="2" timelimit="1"><result status="valid" time="0.16"/></proof>
 </goal>
 <goal name="VC isqrt16" expl="VC for isqrt16" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC isqrt16.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt16.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt16.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.7" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt16.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt16.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt16.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC isqrt16.16" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC isqrt16.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt16.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt16.19" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC isqrt16.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt16.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt16.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC isqrt16.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt16.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt16.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt16.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC isqrt16.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC isqrt16.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC isqrt16.30" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC isqrt16.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt16.32" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt16.33" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC isqrt16.34" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt16.35" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.36" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.37" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.38" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt16.39" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt16.40" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC isqrt16.41" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt16.42" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="VonNeumann32" proved="true" sum="a57d47d5f425cff2844cab527ccbb700">
 <goal name="sqr_add2" proved="true">
 <transf name="unfold" proved="true" arg1="sqr">
  <goal name="sqr_add2.0" proved="true">
  <proof prover="2" timelimit="20"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isqrt32" expl="VC for isqrt32" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC isqrt32.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt32.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt32.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.7" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt32.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt32.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt32.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt32.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC isqrt32.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC isqrt32.16" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC isqrt32.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC isqrt32.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC isqrt32.19" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC isqrt32.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC isqrt32.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC isqrt32.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.75"/></proof>
  </goal>
  <goal name="VC isqrt32.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="VC isqrt32.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC isqrt32.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC isqrt32.27" expl="loop invariant preservation" proved="true">
  <transf name="replace" proved="true" arg1="res_g" arg2="(add res_g1 bits_g1)">
   <goal name="VC isqrt32.27.0" expl="loop invariant preservation" proved="true">
   <transf name="rewrite" proved="true" arg1="sqr_add2">
    <goal name="VC isqrt32.27.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="3"><result status="valid" time="0.56"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC isqrt32.27.1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt32.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC isqrt32.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC isqrt32.30" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC isqrt32.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC isqrt32.32" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC isqrt32.33" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="VC isqrt32.34" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC isqrt32.35" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt32.36" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC isqrt32.37" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.38" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt32.39" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC isqrt32.40" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="120"><result status="valid" time="113.76"/></proof>
  </goal>
  <goal name="VC isqrt32.41" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC isqrt32.42" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.15"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="VonNeumann64" proved="true" sum="e768ce68a4c3f5b339012f1e62fce00d">
 <goal name="sqr_add2" proved="true">
 <transf name="unfold" proved="true" arg1="sqr">
  <goal name="sqr_add2.0" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isqrt64" expl="VC for isqrt64" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC isqrt64.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.7" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC isqrt64.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt64.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.68"/></proof>
  </goal>
  <goal name="VC isqrt64.15" expl="assertion" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="1.46"/></proof>
  </goal>
  <goal name="VC isqrt64.16" expl="assertion" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="1.96"/></proof>
  </goal>
  <goal name="VC isqrt64.17" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.33"/></proof>
  </goal>
  <goal name="VC isqrt64.18" expl="assertion" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.47"/></proof>
  </goal>
  <goal name="VC isqrt64.19" expl="loop variant decrease" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC isqrt64.19.0" expl="VC for isqrt64" proved="true">
   <proof prover="3"><result status="valid" time="0.43"/></proof>
   </goal>
   <goal name="VC isqrt64.19.1" expl="VC for isqrt64" proved="true">
   <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="1.69"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt64.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.55"/></proof>
  </goal>
  <goal name="VC isqrt64.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="VC isqrt64.22" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.54"/></proof>
  </goal>
  <goal name="VC isqrt64.23" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="60"><result status="valid" time="2.15"/></proof>
  </goal>
  <goal name="VC isqrt64.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="VC isqrt64.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="1.08"/></proof>
  </goal>
  <goal name="VC isqrt64.27" expl="loop invariant preservation" proved="true">
  <transf name="replace" proved="true" arg1="res_g" arg2="(add res_g1 bits_g1)">
   <goal name="VC isqrt64.27.0" expl="loop invariant preservation" proved="true">
   <transf name="rewrite" proved="true" arg1="sqr_add2">
    <goal name="VC isqrt64.27.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="3" timelimit="30"><result status="valid" time="7.43"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC isqrt64.27.1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt64.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.51"/></proof>
  </goal>
  <goal name="VC isqrt64.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="VC isqrt64.30" expl="loop variant decrease" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC isqrt64.30.0" expl="VC for isqrt64" proved="true">
   <proof prover="3"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC isqrt64.30.1" expl="VC for isqrt64" proved="true">
   <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="1.55"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt64.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="VC isqrt64.32" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.64"/></proof>
  </goal>
  <goal name="VC isqrt64.33" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.61"/></proof>
  </goal>
  <goal name="VC isqrt64.34" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="1.38"/></proof>
  </goal>
  <goal name="VC isqrt64.35" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.36" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.37" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.38" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC isqrt64.39" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.66"/></proof>
  </goal>
  <goal name="VC isqrt64.40" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC isqrt64.40.0" expl="loop invariant preservation" proved="true">
   <transf name="unfold" proved="true" arg1="ule">
    <goal name="VC isqrt64.40.0.0" expl="VC for isqrt64" proved="true">
    <transf name="rewrite" proved="true" arg1="sqr_add2">
     <goal name="VC isqrt64.40.0.0.0" expl="VC for isqrt64" proved="true">
     <transf name="assert" proved="true" arg1="(x = add (sqr res_g) num)">
      <goal name="VC isqrt64.40.0.0.0.0" proved="true">
      <proof prover="3" timelimit="5"><result status="valid" time="0.58"/></proof>
      </goal>
      <goal name="VC isqrt64.40.0.0.0.1" expl="VC for isqrt64" proved="true">
      <transf name="unfold" proved="true" arg1="sqr">
       <goal name="VC isqrt64.40.0.0.0.1.0" expl="VC for isqrt64" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="VC isqrt64.40.0.0.0.1.0.0" expl="VC for isqrt64" proved="true">
        <transf name="assert" proved="true" arg1="(ule num (pred (mul bits_g1 (add (mul (2:t) res_g) bits_g1))))">
         <goal name="VC isqrt64.40.0.0.0.1.0.0.0" proved="true">
         <transf name="assert" proved="true" arg1="(ult num b)">
          <goal name="VC isqrt64.40.0.0.0.1.0.0.0.0" proved="true">
          <proof prover="2"><result status="valid" time="0.01"/></proof>
          </goal>
          <goal name="VC isqrt64.40.0.0.0.1.0.0.0.1" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b. mul a b = mul b a)">
           <goal name="VC isqrt64.40.0.0.0.1.0.0.0.1.0" proved="true">
           <proof prover="3"><result status="valid" time="0.01"/></proof>
           </goal>
           <goal name="VC isqrt64.40.0.0.0.1.0.0.0.1.1" proved="true">
           <proof prover="4" timelimit="1" memlimit="1000"><result status="valid" time="0.14" steps="267"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC isqrt64.40.0.0.0.1.0.0.1" expl="VC for isqrt64" proved="true">
         <transf name="replace" proved="true" arg1="(pow2 m)" arg2="bits_g1">
          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0" expl="VC for isqrt64" proved="true">
          <transf name="assert" proved="true" arg1="(ule (add res_g (pow2 m1)) (0x100000000:t))">
           <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.0" proved="true">
           <proof prover="2"><result status="valid" time="0.02"/></proof>
           </goal>
           <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1" expl="VC for isqrt64" proved="true">
           <transf name="assert" proved="true" arg1="(ule (add res_g bits_g1) (0x100000000:t))">
            <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.0" proved="true">
            <proof prover="3" timelimit="5"><result status="valid" time="0.70"/></proof>
            </goal>
            <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1" expl="VC for isqrt64" proved="true">
            <transf name="unfold" proved="true" arg1="pred">
             <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0" expl="VC for isqrt64" proved="true">
             <transf name="unfold" proved="true" arg1="pred" arg2="in" arg3="h2">
              <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0" expl="VC for isqrt64" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b c. t&#39;int b + t&#39;int c &lt; two_power_size -&gt; ule a b -&gt; ule (add a c) (add b c))">
               <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.0" proved="true">
               <proof prover="1"><result status="valid" time="0.04" steps="128"/></proof>
               </goal>
               <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1" expl="VC for isqrt64" proved="true">
               <transf name="case" proved="true" arg1="(add (sqr res_g) (mul bits_g1 (add (mul (2:t) res_g) bits_g1)) = (0:t))">
                <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.0" expl="true case" proved="true">
                <transf name="unfold" proved="true" arg1="sqr" arg2="in" arg3="h">
                 <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.0.0" expl="true case" proved="true">
                 <proof prover="3" timelimit="5"><result status="valid" time="3.14"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1" expl="false case" proved="true">
                <transf name="case" proved="true" arg1="(res_g = (0:t))">
                 <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.0" expl="false case (true case)" proved="true">
                 <proof prover="3" timelimit="5"><result status="valid" time="3.69"/></proof>
                 </goal>
                 <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1" expl="false case" proved="true">
                 <transf name="rewrite" proved="true" arg1="to_uint_sub_bounded">
                  <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0" expl="false case" proved="true">
                  <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                   <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0" expl="false case" proved="true">
                   <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                    <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0" expl="false case" proved="true">
                    <transf name="unfold" proved="true" arg1="sqr">
                     <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0" expl="false case" proved="true">
                     <transf name="assert" proved="true" arg1="(forall a b c. b &lt;= c -&gt; a + b &lt;= a + c)">
                      <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.0" proved="true">
                      <proof prover="2"><result status="valid" time="0.01"/></proof>
                      </goal>
                      <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1" expl="false case" proved="true">
                      <transf name="unfold" proved="true" arg1="ule" arg2="in" arg3="h6">
                       <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0" expl="false case" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_sub_bounded" arg2="in" arg3="h6">
                        <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.0" expl="false case" proved="true">
                        <proof prover="2"><result status="valid" time="0.01"/></proof>
                        </goal>
                        <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1" proved="true">
                        <transf name="split_all_wp" proved="true" >
                         <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1.0" proved="true">
                         <transf name="assert" proved="true" arg1="(0 &lt;= t&#39;int b - t&#39;int (1:t))">
                          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1.0.0" proved="true">
                          <proof prover="1"><result status="valid" time="0.06" steps="137"/></proof>
                          </goal>
                          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1.0.1" proved="true">
                          <proof prover="0"><result status="valid" time="0.01"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.0.0.1.0.1.1" proved="true">
                         <proof prover="1" timelimit="1"><result status="valid" time="0.02" steps="118"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1" proved="true">
                    <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                     <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0" proved="true">
                     <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                      <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0" proved="true">
                      <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                       <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                        <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0" proved="true">
                        <transf name="assert" proved="true" arg1="(forall a b. a * a + b * ((2 * a) + b) = (a + b) * (a + b))">
                         <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.0" proved="true">
                         <proof prover="2"><result status="valid" time="0.02"/></proof>
                         </goal>
                         <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1" proved="true">
                         <transf name="replace" proved="true" arg1="(t&#39;int (2:t))" arg2="2">
                          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0" proved="true">
                          <transf name="rewrite" proved="true" arg1="h">
                           <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0" proved="true">
                           <transf name="replace" proved="true" arg1="two_power_size" arg2="(0x100000000 * 0x100000000)">
                            <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.0" proved="true">
                            <transf name="rewrite" proved="true" arg1="&lt;-" arg2="to_uint_add_bounded">
                             <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.0.0" proved="true">
                             <proof prover="4"><result status="valid" time="2.80" steps="571"/></proof>
                             </goal>
                             <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.0.1" proved="true">
                             <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.78"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.0.0.1" proved="true">
                            <proof prover="3" timelimit="5"><result status="valid" time="0.01"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.0.1.1" proved="true">
                          <proof prover="3"><result status="valid" time="0.01"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.0.1" proved="true">
                        <proof prover="1" timelimit="1"><result status="valid" time="0.02" steps="107"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.0.1" proved="true">
                       <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="2.44"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1" proved="true">
                      <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                       <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                        <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0" proved="true">
                        <transf name="assert" proved="true" arg1="(forall a b. a * ((2 * b) + a) = (a + b) * (a + b) - b * b)">
                         <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.0" proved="true">
                         <proof prover="1"><result status="valid" time="0.02" steps="106"/></proof>
                         </goal>
                         <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1" proved="true">
                         <transf name="replace" proved="true" arg1="(t&#39;int (2:t))" arg2="2">
                          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0" proved="true">
                          <transf name="rewrite" proved="true" arg1="h">
                           <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0" proved="true">
                           <transf name="assert" proved="true" arg1="(((t&#39;int bits_g1 + t&#39;int res_g) * (t&#39;int bits_g1 + t&#39;int res_g)) &lt;= two_power_size)">
                            <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0" proved="true">
                            <transf name="replace" proved="true" arg1="two_power_size" arg2="(0x100000000 * 0x100000000)">
                             <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0" proved="true">
                             <transf name="rewrite" proved="true" arg1="&lt;-" arg2="to_uint_add_bounded">
                              <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0" proved="true">
                              <transf name="assert" proved="true" arg1="(forall a b. add a b = add b a)">
                               <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0.0" proved="true">
                               <proof prover="2"><result status="valid" time="0.01"/></proof>
                               </goal>
                               <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0.1" proved="true">
                               <transf name="rewrite" proved="true" arg1="h">
                                <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0" proved="true">
                                <proof prover="1"><result status="valid" time="0.02" steps="119"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.0.1" proved="true">
                              <proof prover="3" timelimit="5"><result status="valid" time="2.76"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.0.1" proved="true">
                             <proof prover="3" timelimit="5"><result status="valid" time="0.01"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.0.0.1" proved="true">
                            <proof prover="1"><result status="valid" time="0.18" steps="208"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.0.1.1" proved="true">
                          <proof prover="3" timelimit="5"><result status="valid" time="0.01"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.0.1" proved="true">
                        <proof prover="3" timelimit="5"><result status="valid" time="1.74"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.0.1.1" proved="true">
                       <proof prover="3" timelimit="5"><result status="valid" time="2.68"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.0.1.1" proved="true">
                     <proof prover="1"><result status="valid" time="0.02" steps="119"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.0.1" proved="true">
                   <proof prover="1"><result status="valid" time="0.28" steps="239"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.1" proved="true">
                  <transf name="split_all_wp" proved="true" >
                   <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.1.0" proved="true">
                   <proof prover="1"><result status="valid" time="0.02" steps="124"/></proof>
                   </goal>
                   <goal name="VC isqrt64.40.0.0.0.1.0.0.1.0.1.1.0.0.1.1.1.1.1" proved="true">
                   <proof prover="3" timelimit="5"><result status="valid" time="0.64"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC isqrt64.40.0.0.0.1.0.0.1.1" proved="true">
          <proof prover="3"><result status="valid" time="0.01"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt64.41" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="VC isqrt64.42" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC isqrt64.43" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt64.44" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
