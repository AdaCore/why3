<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.5.2" alternative="FPA" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="addition.mlw"/>
<theory name="AdditionSingle" proved="true">
 <goal name="addition_errors_basic&#39;vc" expl="VC for addition_errors_basic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors_basic&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="abs (to_real result -. ((to_real a +. to_real b) +. to_real c))
&lt;=. ((((eps +. 0.0) +. eps)
      *. (abs (to_real a +. to_real b) +. abs (to_real c)))
     +. ((((1.0 +. eps) +. 0.0) *. 0.0) +. (((1.0 +. eps) +. eps) *. 0.0)))">
   <goal name="addition_errors_basic&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="apply" proved="true" arg1="uadd_single_error_propagation" arg2="with" arg3="a ++. b,c">
    <goal name="addition_errors_basic&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="abs (to_real (a ++. b) -. (to_real a +. to_real b))
&lt;=. (eps *. abs (to_real a +. to_real b))">
     <goal name="addition_errors_basic&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.108665" steps="740"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.053663" steps="121"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.043326" steps="95"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.052718" steps="98"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.037246" steps="98"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.042254" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.5" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.028255" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.6" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.035243" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.7" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.061922" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.8" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.051828" steps="90"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="addition_errors_basic&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.061521" steps="293"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="addition_errors&#39;vc" expl="VC for addition_errors" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="abs
(to_real result
 -. (((to_real a +. to_real b) +. to_real c)
     +. (to_real d +. (to_real e +. to_real f))))
&lt;=. (((((eps +. eps) +. (eps +. eps)) +. eps)
      *. ((abs (to_real a +. to_real b) +. abs (to_real c))
          +. (abs (to_real d) +. abs (to_real e +. to_real f))))
     +. ((((1.0 +. eps) +. (eps +. eps)) *. 0.0)
         +. (((1.0 +. eps) +. (eps +. eps)) *. 0.0)))">
   <goal name="addition_errors&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="apply" proved="true" arg1="uadd_single_error_propagation" arg2="with" arg3="(a ++. b) ++. c,d ++. (e ++. f)">
    <goal name="addition_errors&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="abs (to_real ((a ++. b) ++. c) -. ((to_real a +. to_real b) +. to_real c))
&lt;=. ((((eps +. 0.0) +. eps)
      *. (abs (to_real a +. to_real b) +. abs (to_real c)))
     +. ((((1.0 +. eps) +. 0.0) *. 0.0) +. (((1.0 +. eps) +. eps) *. 0.0)))">
     <goal name="addition_errors&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="uadd_single_error_propagation" arg2="with" arg3="a ++. b,c">
      <goal name="addition_errors&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="abs (to_real (a ++. b) -. (to_real a +. to_real b))
&lt;=. (eps *. abs (to_real a +. to_real b))">
       <goal name="addition_errors&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.133640" steps="751"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.059997" steps="121"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.050754" steps="95"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.063867" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.052315" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.4" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.042436" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.5" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.074594" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.6" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.063763" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.7" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.049515" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.8" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.062940" steps="90"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.054902" steps="157"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="abs (to_real (d ++. (e ++. f)) -. (to_real d +. (to_real e +. to_real f)))
&lt;=. ((((0.0 +. eps) +. eps)
      *. (abs (to_real d) +. abs (to_real e +. to_real f)))
     +. ((((1.0 +. eps) +. eps) *. 0.0) +. (((1.0 +. eps) +. 0.0) *. 0.0)))">
     <goal name="addition_errors&#39;vc.0.0.1.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="uadd_single_error_propagation" arg2="with" arg3="d,e ++. f">
      <goal name="addition_errors&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.054289" steps="95"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="abs (to_real (e ++. f) -. (to_real e +. to_real f))
&lt;=. (eps *. abs (to_real e +. to_real f))">
       <goal name="addition_errors&#39;vc.0.0.1.0.1.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.111723" steps="750"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.049533" steps="121"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.041289" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.069664" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.4" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.048098" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.5" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.039829" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.6" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.042010" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.7" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.036892" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.8" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.044277" steps="90"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.052087" steps="157"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.044572" steps="122"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.050188" steps="122"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.033095" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.5" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.047657" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.6" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.049456" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.7" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.046330" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.8" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.037060" steps="90"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="addition_errors&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.714111" steps="3308"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="AdditionDouble" proved="true">
 <goal name="addition_errors_basic&#39;vc" expl="VC for addition_errors_basic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors_basic&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="abs (to_real result -. ((to_real a +. to_real b) +. to_real c))
&lt;=. ((((eps +. 0.0) +. eps)
      *. (abs (to_real a +. to_real b) +. abs (to_real c)))
     +. ((((1.0 +. eps) +. 0.0) *. 0.0) +. (((1.0 +. eps) +. eps) *. 0.0)))">
   <goal name="addition_errors_basic&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="apply" proved="true" arg1="uadd_double_error_propagation" arg2="with" arg3="a ++. b,c">
    <goal name="addition_errors_basic&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="abs (to_real (a ++. b) -. (to_real a +. to_real b))
&lt;=. (eps *. abs (to_real a +. to_real b))">
     <goal name="addition_errors_basic&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.113818" steps="744"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.049607" steps="121"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.039733" steps="95"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.064092" steps="98"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.037468" steps="98"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.040280" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.5" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.039277" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.6" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.047031" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.7" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.061288" steps="90"/></proof>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.8" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.049747" steps="90"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="addition_errors_basic&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.067793" steps="290"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="addition_errors&#39;vc" expl="VC for addition_errors" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="abs
(to_real result
 -. (((to_real a +. to_real b) +. to_real c)
     +. (to_real d +. (to_real e +. to_real f))))
&lt;=. (((((eps +. eps) +. (eps +. eps)) +. eps)
      *. ((abs (to_real a +. to_real b) +. abs (to_real c))
          +. (abs (to_real d) +. abs (to_real e +. to_real f))))
     +. ((((1.0 +. eps) +. (eps +. eps)) *. 0.0)
         +. (((1.0 +. eps) +. (eps +. eps)) *. 0.0)))">
   <goal name="addition_errors&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="apply" proved="true" arg1="uadd_double_error_propagation" arg2="with" arg3="(a ++. b) ++. c,d ++. (e ++. f)">
    <goal name="addition_errors&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="abs (to_real ((a ++. b) ++. c) -. ((to_real a +. to_real b) +. to_real c))
&lt;=. ((((eps +. 0.0) +. eps)
      *. (abs (to_real a +. to_real b) +. abs (to_real c)))
     +. ((((1.0 +. eps) +. 0.0) *. 0.0) +. (((1.0 +. eps) +. eps) *. 0.0)))">
     <goal name="addition_errors&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="uadd_double_error_propagation" arg2="with" arg3="a ++. b,c">
      <goal name="addition_errors&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="abs (to_real (a ++. b) -. (to_real a +. to_real b))
&lt;=. (eps *. abs (to_real a +. to_real b))">
       <goal name="addition_errors&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.107385" steps="740"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.063876" steps="121"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.046367" steps="95"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.056982" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.048116" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.4" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.058795" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.5" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.036740" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.6" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.045326" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.7" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.045748" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.8" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.042332" steps="90"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.057767" steps="157"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="abs (to_real (d ++. (e ++. f)) -. (to_real d +. (to_real e +. to_real f)))
&lt;=. ((((0.0 +. eps) +. eps)
      *. (abs (to_real d) +. abs (to_real e +. to_real f)))
     +. ((((1.0 +. eps) +. eps) *. 0.0) +. (((1.0 +. eps) +. 0.0) *. 0.0)))">
     <goal name="addition_errors&#39;vc.0.0.1.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="uadd_double_error_propagation" arg2="with" arg3="d,e ++. f">
      <goal name="addition_errors&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.043666" steps="95"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="abs (to_real (e ++. f) -. (to_real e +. to_real f))
&lt;=. (eps *. abs (to_real e +. to_real f))">
       <goal name="addition_errors&#39;vc.0.0.1.0.1.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.107934" steps="740"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.053303" steps="121"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.075273" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.061791" steps="98"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.4" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.055886" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.5" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.061401" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.6" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.056244" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.7" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.043782" steps="90"/></proof>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.1.0.8" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.053841" steps="90"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.068878" steps="157"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.044091" steps="122"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.052911" steps="122"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.034676" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.5" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.049696" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.6" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.045015" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.7" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.046300" steps="90"/></proof>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.8" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.039696" steps="90"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="addition_errors&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.727810" steps="3271"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
