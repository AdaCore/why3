<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.5.2" alternative="FPA" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="addition.mlw"/>
<theory name="AdditionSingle" proved="true">
 <goal name="addition_errors_basic&#39;vc" expl="VC for addition_errors_basic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors_basic&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="addition_errors_basic&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs (to_real (uadd (uadd a b) c) -&#39; ((to_real a +&#39; to_real b) +&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a +&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
    <goal name="addition_errors_basic&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="uadd_single_error_propagation">
     <goal name="addition_errors_basic&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (uadd a b) -&#39; (to_real a +&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a +&#39; to_real b))">
      <goal name="addition_errors_basic&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.060411" steps="169"/></proof>
      </goal>
      <goal name="addition_errors_basic&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.050153" steps="100"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.054111" steps="75"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.040994" steps="79"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.062165" steps="77"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.038262" steps="70"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.041005" steps="70"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.046481" steps="70"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.037007" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.058319" steps="268"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="addition_errors&#39;vc" expl="VC for addition_errors" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="addition_errors&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs
(to_real (uadd (uadd (uadd a b) c) (uadd d (uadd e f)))
 -&#39; (((to_real a +&#39; to_real b) +&#39; to_real c)
     +&#39; (to_real d +&#39; (to_real e +&#39; to_real f))))
&lt;=&#39; (((((eps +&#39; eps) +&#39; (eps +&#39; eps)) +&#39; eps)
      *&#39; ((abs (to_real a +&#39; to_real b) +&#39; abs (to_real c))
          +&#39; (abs (to_real d) +&#39; abs (to_real e +&#39; to_real f))))
     +&#39; ((((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)
         +&#39; (((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)))">
    <goal name="addition_errors&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="uadd_single_error_propagation">
     <goal name="addition_errors&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (uadd (uadd a b) c) -&#39; ((to_real a +&#39; to_real b) +&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a +&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
      <goal name="addition_errors&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="uadd_single_error_propagation">
       <goal name="addition_errors&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (uadd a b) -&#39; (to_real a +&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a +&#39; to_real b))">
        <goal name="addition_errors&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.051836" steps="169"/></proof>
        </goal>
        <goal name="addition_errors&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.033549" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.056002" steps="75"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.051313" steps="79"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.036805" steps="77"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.035376" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.040486" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.052391" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.058467" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.044088" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (uadd d (uadd e f)) -&#39; (to_real d +&#39; (to_real e +&#39; to_real f)))
&lt;=&#39; ((((0.0 +&#39; eps) +&#39; eps)
      *&#39; (abs (to_real d) +&#39; abs (to_real e +&#39; to_real f)))
     +&#39; ((((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0)))">
      <goal name="addition_errors&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="uadd_single_error_propagation">
       <goal name="addition_errors&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.049293" steps="75"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (uadd e f) -&#39; (to_real e +&#39; to_real f))
&lt;=&#39; (eps *&#39; abs (to_real e +&#39; to_real f))">
        <goal name="addition_errors&#39;vc.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.063358" steps="169"/></proof>
        </goal>
        <goal name="addition_errors&#39;vc.0.0.0.1.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.052474" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.032151" steps="77"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.049898" steps="79"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.062763" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.044367" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.052402" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.047240" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.055468" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.043796" steps="102"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.055716" steps="102"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.052231" steps="70"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.036939" steps="70"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.039085" steps="70"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.036979" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.636917" steps="2699"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="AdditionDouble" proved="true">
 <goal name="addition_errors_basic&#39;vc" expl="VC for addition_errors_basic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors_basic&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="addition_errors_basic&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs (to_real (uadd (uadd a b) c) -&#39; ((to_real a +&#39; to_real b) +&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a +&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
    <goal name="addition_errors_basic&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="uadd_double_error_propagation">
     <goal name="addition_errors_basic&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (uadd a b) -&#39; (to_real a +&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a +&#39; to_real b))">
      <goal name="addition_errors_basic&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.074253" steps="169"/></proof>
      </goal>
      <goal name="addition_errors_basic&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.039675" steps="100"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.036249" steps="75"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.052739" steps="79"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.039588" steps="77"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.057876" steps="70"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.049465" steps="70"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.033114" steps="70"/></proof>
     </goal>
     <goal name="addition_errors_basic&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.040449" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors_basic&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.071539" steps="271"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="addition_errors&#39;vc" expl="VC for addition_errors" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="addition_errors&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="addition_errors&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs
(to_real (uadd (uadd (uadd a b) c) (uadd d (uadd e f)))
 -&#39; (((to_real a +&#39; to_real b) +&#39; to_real c)
     +&#39; (to_real d +&#39; (to_real e +&#39; to_real f))))
&lt;=&#39; (((((eps +&#39; eps) +&#39; (eps +&#39; eps)) +&#39; eps)
      *&#39; ((abs (to_real a +&#39; to_real b) +&#39; abs (to_real c))
          +&#39; (abs (to_real d) +&#39; abs (to_real e +&#39; to_real f))))
     +&#39; ((((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)
         +&#39; (((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)))">
    <goal name="addition_errors&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="uadd_double_error_propagation">
     <goal name="addition_errors&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (uadd (uadd a b) c) -&#39; ((to_real a +&#39; to_real b) +&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a +&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
      <goal name="addition_errors&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="uadd_double_error_propagation">
       <goal name="addition_errors&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (uadd a b) -&#39; (to_real a +&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a +&#39; to_real b))">
        <goal name="addition_errors&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.053050" steps="169"/></proof>
        </goal>
        <goal name="addition_errors&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.051030" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.047623" steps="75"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.058183" steps="79"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.035772" steps="77"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.028737" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.032023" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.036757" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.0.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.056274" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.059245" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (uadd d (uadd e f)) -&#39; (to_real d +&#39; (to_real e +&#39; to_real f)))
&lt;=&#39; ((((0.0 +&#39; eps) +&#39; eps)
      *&#39; (abs (to_real d) +&#39; abs (to_real e +&#39; to_real f)))
     +&#39; ((((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0)))">
      <goal name="addition_errors&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="uadd_double_error_propagation">
       <goal name="addition_errors&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.023750" steps="75"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (uadd e f) -&#39; (to_real e +&#39; to_real f))
&lt;=&#39; (eps *&#39; abs (to_real e +&#39; to_real f))">
        <goal name="addition_errors&#39;vc.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.074945" steps="169"/></proof>
        </goal>
        <goal name="addition_errors&#39;vc.0.0.0.1.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.059726" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.037185" steps="77"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.061874" steps="79"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.036983" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.049897" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.047719" steps="70"/></proof>
       </goal>
       <goal name="addition_errors&#39;vc.0.0.0.1.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.048453" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="addition_errors&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.043913" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.063215" steps="102"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.051442" steps="102"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.049341" steps="70"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.043668" steps="70"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.050178" steps="70"/></proof>
     </goal>
     <goal name="addition_errors&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.032766" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="addition_errors&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.703924" steps="2696"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
