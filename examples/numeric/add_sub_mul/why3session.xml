<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.2" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="add_sub_mul.mlw"/>
<theory name="AddSubMulSingle" proved="true">
 <goal name="mix&#39;vc" expl="VC for mix" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mix&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="mix&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="((abs1 ((to_real (umul (usub (uadd a b) c) d)) -&#39; ((((to_real a) +&#39; (to_real
b)) -&#39; (to_real c)) *&#39; (to_real
d)))) &lt;=&#39; (((eps +&#39; ((((eps +&#39; eps) +&#39; 0.0) +&#39; ((eps +&#39; eps) *&#39; 0.0)) *&#39; (1.0 +&#39; eps))) *&#39; (((abs1
((to_real a) +&#39; (to_real b))) +&#39; (abs1 (to_real c))) *&#39; (abs1 (to_real
d)))) +&#39; ((((((0.0 +&#39; (0.0 *&#39; (eps +&#39; eps))) *&#39; ((abs1 ((to_real
a) +&#39; (to_real b))) +&#39; (abs1 (to_real
c)))) +&#39; ((0.0 +&#39; (0.0 *&#39; 0.0)) *&#39; (abs1 (to_real
d)))) +&#39; (0.0 *&#39; 0.0)) *&#39; (1.0 +&#39; eps)) +&#39; eta)))">
    <goal name="mix&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="umul_single_error_propagation">
     <goal name="mix&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="((abs1 ((to_real (usub (uadd a b) c)) -&#39; (((to_real a) +&#39; (to_real
b)) -&#39; (to_real c)))) &lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps) *&#39; ((abs1 ((to_real
a) +&#39; (to_real b))) +&#39; (abs1 (to_real
c)))) +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0))))">
      <goal name="mix&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="usub_single_error_propagation">
       <goal name="mix&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="((abs1 ((to_real (uadd a b)) -&#39; ((to_real a) +&#39; (to_real
b)))) &lt;=&#39; (eps *&#39; (abs1 ((to_real a) +&#39; (to_real
b)))))">
        <goal name="mix&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.057253" steps="393"/></proof>
        </goal>
        <goal name="mix&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.035358" steps="232"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.067423" steps="522"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.037012" steps="231"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.035823" steps="231"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.042316" steps="231"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.037654" steps="231"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.035108" steps="231"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.7" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.043394" steps="231"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mix&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.036584" steps="233"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="mix&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.076049" steps="522"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.085731" steps="631"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.051340" steps="231"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.041333" steps="231"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.041339" steps="231"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.035722" steps="231"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.039562" steps="231"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mix&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.450953" steps="7529"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
