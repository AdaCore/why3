<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.4" alternative="FPA" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="add_sub_mul.mlw"/>
<theory name="AddSubMulSingle" proved="true">
 <goal name="mix&#39;vc" expl="VC for mix" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mix&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="let t = to_real d in
let t1 = to_real c in
let t2 = abs t in
let t3 = 0.0 *. 0.0 in
let t4 = eps +. eps in
let t5 = 1.0 +. eps in
let t6 = to_real a +. to_real b in
let t7 = abs t6 +. abs t1 in
abs (to_real result -. ((t6 -. t1) *. t))
&lt;=. (((eps +. (((t4 +. 0.0) +. (t4 *. 0.0)) *. t5)) *. (t7 *. t2))
     +. ((((((0.0 +. (0.0 *. t4)) *. t7) +. ((0.0 +. t3) *. t2)) +. t3) *. t5)
         +. eta))">
   <goal name="mix&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="abs
(to_real result -. (((to_real a +. to_real b) -. to_real c) *. to_real d))
&lt;=. (((eps
       +. ((((eps +. eps) +. 0.0) +. ((eps +. eps) *. 0.0)) *. (1.0 +. eps)))
      *. ((abs (to_real a +. to_real b) +. abs (to_real c))
          *. abs (to_real d)))
     +. ((((((0.0 +. (0.0 *. (eps +. eps)))
             *. (abs (to_real a +. to_real b) +. abs (to_real c)))
            +. ((0.0 +. (0.0 *. 0.0)) *. abs (to_real d)))
           +. (0.0 *. 0.0))
          *. (1.0 +. eps))
         +. eta))">
    <goal name="mix&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="umul_single_error_propagation" arg2="with" arg3="(a ++. b) --. c,d">
     <goal name="mix&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real ((a ++. b) --. c) -. ((to_real a +. to_real b) -. to_real c))
&lt;=. ((((eps +. 0.0) +. eps)
      *. (abs (to_real a +. to_real b) +. abs (to_real c)))
     +. ((((1.0 +. eps) +. 0.0) *. 0.0) +. (((1.0 +. eps) +. eps) *. 0.0)))">
      <goal name="mix&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="usub_single_error_propagation" arg2="with" arg3="a ++. b,c">
       <goal name="mix&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (a ++. b) -. (to_real a +. to_real b))
&lt;=. (eps *. abs (to_real a +. to_real b))">
        <goal name="mix&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.096582" steps="739"/></proof>
        </goal>
        <goal name="mix&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.051130" steps="109"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.044124" steps="82"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.068521" steps="86"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.035291" steps="86"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.033268" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.031234" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.038153" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.7" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.063135" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.8" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.057554" steps="78"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mix&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.061509" steps="148"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="mix&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.043852" steps="82"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.062369" steps="112"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.049050" steps="86"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.066733" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.065989" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.053754" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.048525" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.8" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.043867" steps="78"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mix&#39;vc.0.0.1" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.186345" steps="619"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mix&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.262955" steps="1342"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="AddSubMulDouble" proved="true">
 <goal name="mix&#39;vc" expl="VC for mix" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mix&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="let t = to_real d in
let t1 = to_real c in
let t2 = abs t in
let t3 = 0.0 *. 0.0 in
let t4 = eps +. eps in
let t5 = 1.0 +. eps in
let t6 = to_real a +. to_real b in
let t7 = abs t6 +. abs t1 in
abs (to_real result -. ((t6 -. t1) *. t))
&lt;=. (((eps +. (((t4 +. 0.0) +. (t4 *. 0.0)) *. t5)) *. (t7 *. t2))
     +. ((((((0.0 +. (0.0 *. t4)) *. t7) +. ((0.0 +. t3) *. t2)) +. t3) *. t5)
         +. eta))">
   <goal name="mix&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="abs
(to_real result -. (((to_real a +. to_real b) -. to_real c) *. to_real d))
&lt;=. (((eps
       +. ((((eps +. eps) +. 0.0) +. ((eps +. eps) *. 0.0)) *. (1.0 +. eps)))
      *. ((abs (to_real a +. to_real b) +. abs (to_real c))
          *. abs (to_real d)))
     +. ((((((0.0 +. (0.0 *. (eps +. eps)))
             *. (abs (to_real a +. to_real b) +. abs (to_real c)))
            +. ((0.0 +. (0.0 *. 0.0)) *. abs (to_real d)))
           +. (0.0 *. 0.0))
          *. (1.0 +. eps))
         +. eta))">
    <goal name="mix&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="umul_double_error_propagation" arg2="with" arg3="(a ++. b) --. c,d">
     <goal name="mix&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real ((a ++. b) --. c) -. ((to_real a +. to_real b) -. to_real c))
&lt;=. ((((eps +. 0.0) +. eps)
      *. (abs (to_real a +. to_real b) +. abs (to_real c)))
     +. ((((1.0 +. eps) +. 0.0) *. 0.0) +. (((1.0 +. eps) +. eps) *. 0.0)))">
      <goal name="mix&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="usub_double_error_propagation" arg2="with" arg3="a ++. b,c">
       <goal name="mix&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (a ++. b) -. (to_real a +. to_real b))
&lt;=. (eps *. abs (to_real a +. to_real b))">
        <goal name="mix&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.099338" steps="737"/></proof>
        </goal>
        <goal name="mix&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.044111" steps="109"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.039709" steps="82"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.052334" steps="86"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.040767" steps="86"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.044826" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.046250" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.050161" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.7" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.039429" steps="78"/></proof>
       </goal>
       <goal name="mix&#39;vc.0.0.0.0.0.8" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.038337" steps="78"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mix&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.057962" steps="148"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="mix&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.039300" steps="82"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.048197" steps="112"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.045211" steps="86"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.037370" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.038349" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.047850" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.040803" steps="78"/></proof>
     </goal>
     <goal name="mix&#39;vc.0.0.0.8" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.036098" steps="78"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mix&#39;vc.0.0.1" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.203975" steps="619"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mix&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.280374" steps="1528"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
