<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.5.2" alternative="FPA" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="substraction.mlw"/>
<theory name="SubstractionSingle" proved="true">
 <goal name="substraction_errors_basic&#39;vc" expl="VC for substraction_errors_basic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="substraction_errors_basic&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="substraction_errors_basic&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs (to_real (usub (usub a b) c) -&#39; ((to_real a -&#39; to_real b) -&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a -&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
    <goal name="substraction_errors_basic&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="usub_single_error_propagation">
     <goal name="substraction_errors_basic&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (usub a b) -&#39; (to_real a -&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a -&#39; to_real b))">
      <goal name="substraction_errors_basic&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.054029" steps="169"/></proof>
      </goal>
      <goal name="substraction_errors_basic&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.053769" steps="100"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.035808" steps="75"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.051652" steps="79"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.052559" steps="77"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.032033" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.041510" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.035618" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.032360" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="substraction_errors_basic&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.049322" steps="258"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="substraction_errors&#39;vc" expl="VC for substraction_errors" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="substraction_errors&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="substraction_errors&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs
(to_real (usub (usub (usub a b) c) (usub d (usub e f)))
 -&#39; (((to_real a -&#39; to_real b) -&#39; to_real c)
     -&#39; (to_real d -&#39; (to_real e -&#39; to_real f))))
&lt;=&#39; (((((eps +&#39; eps) +&#39; (eps +&#39; eps)) +&#39; eps)
      *&#39; ((abs (to_real a -&#39; to_real b) +&#39; abs (to_real c))
          +&#39; (abs (to_real d) +&#39; abs (to_real e -&#39; to_real f))))
     +&#39; ((((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)
         +&#39; (((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)))">
    <goal name="substraction_errors&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="usub_single_error_propagation">
     <goal name="substraction_errors&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (usub (usub a b) c) -&#39; ((to_real a -&#39; to_real b) -&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a -&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
      <goal name="substraction_errors&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="usub_single_error_propagation">
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (usub a b) -&#39; (to_real a -&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a -&#39; to_real b))">
        <goal name="substraction_errors&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.053373" steps="169"/></proof>
        </goal>
        <goal name="substraction_errors&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.033122" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.036974" steps="75"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.056117" steps="79"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.036575" steps="77"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.029996" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.036203" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.047445" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.031421" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="substraction_errors&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.048343" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (usub d (usub e f)) -&#39; (to_real d -&#39; (to_real e -&#39; to_real f)))
&lt;=&#39; ((((0.0 +&#39; eps) +&#39; eps)
      *&#39; (abs (to_real d) +&#39; abs (to_real e -&#39; to_real f)))
     +&#39; ((((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0)))">
      <goal name="substraction_errors&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="usub_single_error_propagation">
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.039522" steps="75"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (usub e f) -&#39; (to_real e -&#39; to_real f))
&lt;=&#39; (eps *&#39; abs (to_real e -&#39; to_real f))">
        <goal name="substraction_errors&#39;vc.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.053763" steps="169"/></proof>
        </goal>
        <goal name="substraction_errors&#39;vc.0.0.0.1.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.033470" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.046433" steps="77"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.040516" steps="79"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.045274" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.040672" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.037019" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.037799" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="substraction_errors&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.048051" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.057753" steps="107"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.053770" steps="103"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.034331" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.037747" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.037014" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.035757" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="substraction_errors&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.606119" steps="2565"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SubstractionDouble" proved="true">
 <goal name="substraction_errors_basic&#39;vc" expl="VC for substraction_errors_basic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="substraction_errors_basic&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="substraction_errors_basic&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs (to_real (usub (usub a b) c) -&#39; ((to_real a -&#39; to_real b) -&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a -&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
    <goal name="substraction_errors_basic&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="usub_double_error_propagation">
     <goal name="substraction_errors_basic&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (usub a b) -&#39; (to_real a -&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a -&#39; to_real b))">
      <goal name="substraction_errors_basic&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.056025" steps="169"/></proof>
      </goal>
      <goal name="substraction_errors_basic&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.032469" steps="100"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.057227" steps="75"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.053978" steps="79"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.050735" steps="77"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.038536" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.039944" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.038329" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors_basic&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.019845" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="substraction_errors_basic&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.062573" steps="258"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="substraction_errors&#39;vc" expl="VC for substraction_errors" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="substraction_errors&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inline_trivial" proved="true" >
   <goal name="substraction_errors&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="abs
(to_real (usub (usub (usub a b) c) (usub d (usub e f)))
 -&#39; (((to_real a -&#39; to_real b) -&#39; to_real c)
     -&#39; (to_real d -&#39; (to_real e -&#39; to_real f))))
&lt;=&#39; (((((eps +&#39; eps) +&#39; (eps +&#39; eps)) +&#39; eps)
      *&#39; ((abs (to_real a -&#39; to_real b) +&#39; abs (to_real c))
          +&#39; (abs (to_real d) +&#39; abs (to_real e -&#39; to_real f))))
     +&#39; ((((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)
         +&#39; (((1.0 +&#39; eps) +&#39; (eps +&#39; eps)) *&#39; 0.0)))">
    <goal name="substraction_errors&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="usub_double_error_propagation">
     <goal name="substraction_errors&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (usub (usub a b) c) -&#39; ((to_real a -&#39; to_real b) -&#39; to_real c))
&lt;=&#39; ((((eps +&#39; 0.0) +&#39; eps)
      *&#39; (abs (to_real a -&#39; to_real b) +&#39; abs (to_real c)))
     +&#39; ((((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0)))">
      <goal name="substraction_errors&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="usub_double_error_propagation">
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (usub a b) -&#39; (to_real a -&#39; to_real b))
&lt;=&#39; (eps *&#39; abs (to_real a -&#39; to_real b))">
        <goal name="substraction_errors&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.051500" steps="169"/></proof>
        </goal>
        <goal name="substraction_errors&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.040310" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.037314" steps="75"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.048165" steps="79"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.028490" steps="77"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.029347" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.039724" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.057636" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.0.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.061956" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="substraction_errors&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.059630" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="abs (to_real (usub d (usub e f)) -&#39; (to_real d -&#39; (to_real e -&#39; to_real f)))
&lt;=&#39; ((((0.0 +&#39; eps) +&#39; eps)
      *&#39; (abs (to_real d) +&#39; abs (to_real e -&#39; to_real f)))
     +&#39; ((((1.0 +&#39; eps) +&#39; eps) *&#39; 0.0) +&#39; (((1.0 +&#39; eps) +&#39; 0.0) *&#39; 0.0)))">
      <goal name="substraction_errors&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="usub_double_error_propagation">
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.061678" steps="75"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="abs (to_real (usub e f) -&#39; (to_real e -&#39; to_real f))
&lt;=&#39; (eps *&#39; abs (to_real e -&#39; to_real f))">
        <goal name="substraction_errors&#39;vc.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.064514" steps="169"/></proof>
        </goal>
        <goal name="substraction_errors&#39;vc.0.0.0.1.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.057959" steps="100"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.049416" steps="77"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.059413" steps="79"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.042489" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.052645" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.6" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.032488" steps="70"/></proof>
       </goal>
       <goal name="substraction_errors&#39;vc.0.0.0.1.0.7" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.054084" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="substraction_errors&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.076966" steps="136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.052308" steps="107"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.039868" steps="103"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.049891" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.053131" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.042433" steps="70"/></proof>
     </goal>
     <goal name="substraction_errors&#39;vc.0.0.0.7" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.039206" steps="70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="substraction_errors&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.555875" steps="2578"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
