<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.30" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../sumrange.mlw" proved="true">
<theory name="ArraySum" proved="true" sum="9c589f5858612dacf098c9434ffb74c2">
 <goal name="sum_right" proved="true">
 <transf name="assert" proved="true" arg1="(forall x. 0 &lt; x &lt; j -&gt; sum a (j-x) j = sum a (j-x) (j-1) + a[j-1])">
  <goal name="sum_right.0" proved="true">
  <transf name="induction" proved="true" arg1="x">
   <goal name="sum_right.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="sum_right.0.1" proved="true">
   <transf name="instantiate" proved="true" arg1="Hrec" arg2="(x - 1)">
    <goal name="sum_right.0.1.0" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sum_right.1" proved="true">
  <transf name="instantiate" proved="true" arg1="h" arg2="(j-i)">
   <goal name="sum_right.1.0" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Simple" proved="true" sum="4c20541d262bc9deec1ea3531579a715">
 <goal name="WP_parameter query" expl="VC for query" proved="true">
 <proof prover="0"><result status="valid" time="0.03"/></proof>
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter query.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter query.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter query.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter query.3" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter query.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ExtraLemmas" proved="true" sum="19e80bf42f3115702df43c625a5b4d12">
 <goal name="sum_concat" proved="true">
 <transf name="induction" proved="true" arg1="k">
  <goal name="sum_concat.0" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="sum_concat.1" proved="true">
  <transf name="instantiate" proved="true" arg1="Hrec" arg2="k">
   <goal name="sum_concat.1.0" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_frame" proved="true">
 <transf name="assert" proved="true" arg1="(forall x. 0 &lt;= x &lt;= j-i -&gt; sum a1 (j-x) j = sum a2 (j-x) j)">
  <goal name="sum_frame.0" proved="true">
  <transf name="induction" proved="true" arg1="x">
   <goal name="sum_frame.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="sum_frame.0.1" proved="true">
   <transf name="instantiate" proved="true" arg1="Hrec" arg2="(x - 1)">
    <goal name="sum_frame.0.1.0" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sum_frame.1" proved="true">
  <transf name="instantiate" proved="true" arg1="h" arg2="(j-i)">
   <goal name="sum_frame.1.0" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_update" proved="true">
 <transf name="induction" proved="true" arg1="h" arg2="from" arg3="i+1">
  <goal name="sum_update.0" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="sum_update.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_update.1" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="sum_update.1.0" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CumulativeArray" proved="true" sum="462693090fd40153eca8b90a6a1c267f">
 <goal name="WP_parameter create" expl="VC for create" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter query" expl="VC for query" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter update" expl="VC for update" proved="true">
 <proof prover="2"><result status="valid" time="0.05"/></proof>
 </goal>
</theory>
<theory name="CumulativeTree" proved="true" sum="27793b09427965c733ab65af79f4722e">
 <goal name="WP_parameter tree_of_array" expl="VC for tree_of_array" proved="true">
 <proof prover="3"><result status="valid" time="0.43"/></proof>
 </goal>
 <goal name="WP_parameter create" expl="VC for create" proved="true">
 <proof prover="3"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter query_aux" expl="VC for query_aux" proved="true">
 <proof prover="3"><result status="valid" time="0.25"/></proof>
 </goal>
 <goal name="WP_parameter query" expl="VC for query" proved="true">
 <proof prover="3"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="is_tree_for_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="is_tree_for_frame.0" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="363"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter update_aux" expl="VC for update_aux" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter update_aux.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.2" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.5" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.8" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter update" expl="VC for update" proved="true">
 <proof prover="3"><result status="valid" time="0.08"/></proof>
 </goal>
 <goal name="depth_min" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="depth_min.0" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter depth_is_log" expl="VC for depth_is_log" proved="true">
 <proof prover="1"><result status="valid" time="0.32" steps="437"/></proof>
 </goal>
 <goal name="WP_parameter update_aux_complexity" expl="VC for update_aux_complexity" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter update_aux_complexity.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="74"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.3" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.7" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.63"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.10" steps="123"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.10" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.79"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter update_aux_complexity.16" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.47"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter query_aux_complexity" expl="VC for query_aux_complexity" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter query_aux_complexity.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.8" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.46" steps="342"/></proof>
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.12" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.13" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.15" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.17" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.18" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.82" steps="666"/></proof>
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter query_aux_complexity.19" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
