<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Spass" version="3.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Coq" version="8.7.1" timelimit="0" steplimit="0" memlimit="0"/>
<file name="../vstte12_bfs.mlw" proved="true">
<theory name="Graph" proved="true">
 <goal name="path_nonneg" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="path_nonneg.0" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="path_nonneg.1" proved="true">
  <proof prover="0"><result status="valid" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_inversion" proved="true">
 <transf name="inversion_pr" proved="true" >
  <goal name="path_inversion.0" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="path_inversion.1" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_closure" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="path_closure.0" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="path_closure.1" proved="true">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BFS" proved="true">
 <goal name="VC fill_next" expl="VC for fill_next" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC fill_next.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="VC fill_next.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC fill_next.2" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="49"/></proof>
  </goal>
  <goal name="VC fill_next.3" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC fill_next.3.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC fill_next.3.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_goal_right" proved="true" >
     <goal name="VC fill_next.3.0.0.0" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.03" steps="116"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.1" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.01" steps="28"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.2" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.03" steps="115"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.3" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.04" steps="150"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.4" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.01" steps="46"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.5" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.58" steps="2031"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.6" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.01" steps="52"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.7" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.02" steps="72"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.8" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.01" steps="52"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.9" expl="VC for fill_next" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="372"/></proof>
     </goal>
     <goal name="VC fill_next.3.0.0.10" expl="VC for fill_next" proved="true">
     <proof prover="3"><result status="valid" time="0.33"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC fill_next.4" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="48"/></proof>
  </goal>
  <goal name="VC fill_next.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="694"/></proof>
  </goal>
  <goal name="VC fill_next.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="759"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC bfs" expl="VC for bfs" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC bfs.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="971"/></proof>
  </goal>
  <goal name="VC bfs.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC bfs.2" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC bfs.3" expl="precondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="VC bfs.3.0" expl="VC for bfs" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="98"/></proof>
   </goal>
   <goal name="VC bfs.3.1" expl="VC for bfs" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC bfs.3.2" expl="VC for bfs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC bfs.3.2.0" expl="VC for bfs" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC bfs.3.2.0.0" expl="VC for bfs" proved="true">
     <proof prover="3"><result status="valid" time="0.26"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC bfs.4" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="VC bfs.4.0" expl="VC for bfs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC bfs.4.0.0" expl="VC for bfs" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC bfs.4.0.0.0" expl="VC for bfs" proved="true">
     <transf name="split_goal_right" proved="true" >
      <goal name="VC bfs.4.0.0.0.0" expl="VC for bfs" proved="true">
      <proof prover="2"><result status="valid" time="0.01" steps="23"/></proof>
      </goal>
      <goal name="VC bfs.4.0.0.0.1" expl="VC for bfs" proved="true">
      <proof prover="2"><result status="valid" time="0.01" steps="34"/></proof>
      </goal>
      <goal name="VC bfs.4.0.0.0.2" expl="VC for bfs" proved="true">
      <proof prover="2"><result status="valid" time="0.02" steps="89"/></proof>
      </goal>
      <goal name="VC bfs.4.0.0.0.3" expl="VC for bfs" proved="true">
      <proof prover="2"><result status="valid" time="0.02" steps="70"/></proof>
      </goal>
      <goal name="VC bfs.4.0.0.0.4" expl="VC for bfs" proved="true">
      <transf name="inline_all" proved="true" >
       <goal name="VC bfs.4.0.0.0.4.0" expl="VC for bfs" proved="true">
       <transf name="remove" proved="true" arg1="real,bool,tuple0,unit,ref,( * ),empty,add,remove,union,inter,diff,choose,cardinal1,eq,contents,mem,cardinal,o,o1,visited1,visited2,current2,visited3,Assoc,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm,Assoc1,Mul_distr_l,Mul_distr_r,Comm1,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,extensionality,subset_spec,subset_refl,subset_trans,empty_def,add_spec,remove_spec,add_remove,remove_add,subset_remove,union_spec,inter_spec,diff_spec,subset_diff,choose_spec,cardinal_nonneg,cardinal_empty,cardinal_add,cardinal_remove,cardinal_subset,subset_eq,cardinal1,eq_spec,path_nonneg,path_inversion,path_closure,mem_spec,cardinal_spec,H1,H2,H3,H5,H7,H9,H10,H11,H12,H13,H14,H16,H17,H18,H19,H20,H21,H22,H23">
        <goal name="VC bfs.4.0.0.0.4.0.0" expl="VC for bfs" proved="true">
        <proof prover="2"><result status="valid" time="0.12" steps="442"/></proof>
        <proof prover="5"><result status="valid" time="0.04"/></proof>
        <proof prover="6"><result status="valid" time="0.02"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC bfs.4.0.0.0.5" expl="VC for bfs" proved="true">
      <proof prover="2"><result status="valid" time="0.02" steps="98"/></proof>
      </goal>
      <goal name="VC bfs.4.0.0.0.6" expl="VC for bfs" proved="true">
      <proof prover="2"><result status="valid" time="0.00" steps="38"/></proof>
      </goal>
      <goal name="VC bfs.4.0.0.0.7" expl="VC for bfs" proved="true">
      <proof prover="2"><result status="valid" time="0.02" steps="80"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC bfs.4.1" expl="VC for bfs" proved="true">
   <proof prover="2"><result status="valid" time="0.00" steps="23"/></proof>
   </goal>
   <goal name="VC bfs.4.2" expl="VC for bfs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC bfs.4.2.0" expl="VC for bfs" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC bfs.4.2.0.0" expl="VC for bfs" proved="true">
     <proof prover="1"><result status="valid" time="0.05"/></proof>
     <proof prover="3"><result status="valid" time="0.29"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC bfs.4.3" expl="VC for bfs" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC bfs.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="VC bfs.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="83"/></proof>
  </goal>
  <goal name="VC bfs.7" expl="postcondition" proved="true">
  <proof prover="7" edited="vstte12_bfs_BFS_VC_bfs_1.v"><result status="valid" time="0.54"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
