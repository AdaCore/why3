<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="3" name="CVC3" version="2.4.1" timelimit="11" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="11" name="Alt-Ergo" version="1.30" timelimit="11" steplimit="0" memlimit="1000"/>
<file name="../mergesort_array.mlw">
<theory name="Elt" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Merge" sum="b88b3bdf998288646ea0fff7ce4638fc">
 <goal name="VC merge" expl="VC for merge">
 <transf name="split_goal_wp">
  <goal name="VC merge.1" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC merge.2" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC merge.3" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC merge.4" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC merge.5" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC merge.6" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC merge.7" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC merge.8" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC merge.9" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC merge.10" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC merge.11" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC merge.12" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC merge.13" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC merge.14" expl="loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC merge.15" expl="loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC merge.16" expl="loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC merge.17" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="5.40" steps="5603"/></proof>
  </goal>
  <goal name="VC merge.18" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC merge.19" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC merge.20" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC merge.21" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC merge.22" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC merge.23" expl="loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC merge.24" expl="loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC merge.25" expl="loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC merge.26" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="3.67" steps="4070"/></proof>
  </goal>
  <goal name="VC merge.27" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="VC merge.28" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC merge.29" expl="postcondition">
  <transf name="inline_goal">
   <goal name="VC merge.29.1" expl="postcondition">
   <transf name="split_goal_wp">
    <goal name="VC merge.29.1.1" expl="VC for merge">
    <proof prover="11"><result status="valid" time="0.01" steps="4"/></proof>
    </goal>
    <goal name="VC merge.29.1.2" expl="VC for merge">
    <proof prover="11"><result status="valid" time="0.01" steps="5"/></proof>
    </goal>
    <goal name="VC merge.29.1.3" expl="VC for merge">
    <proof prover="11"><result status="valid" time="0.02" steps="14"/></proof>
    </goal>
    <goal name="VC merge.29.1.4" expl="VC for merge">
    <proof prover="11"><result status="valid" time="0.01" steps="7"/></proof>
    </goal>
    <goal name="VC merge.29.1.5" expl="VC for merge">
    <proof prover="11"><result status="valid" time="0.01" steps="5"/></proof>
    </goal>
    <goal name="VC merge.29.1.6" expl="VC for merge">
    <proof prover="4" timelimit="11"><result status="valid" time="0.35"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge.30" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC merge.31" expl="out of loop bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC merge_using" expl="VC for merge_using">
 <transf name="split_goal_wp">
  <goal name="VC merge_using.1" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC merge_using.2" expl="index in array bounds">
  <proof prover="11"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC merge_using.3" expl="assertion">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC merge_using.4" expl="postcondition">
  <proof prover="4" timelimit="11"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC merge_using.5" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC merge_using.6" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC merge_using.7" expl="precondition">
  <proof prover="11"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC merge_using.8" expl="precondition">
  <proof prover="11"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC merge_using.9" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC merge_using.10" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC merge_using.11" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="VC merge_using.12" expl="assertion">
  <transf name="inline_goal">
   <goal name="VC merge_using.12.1" expl="assertion">
   <proof prover="4" timelimit="11"><result status="valid" time="0.62"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge_using.13" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="VC merge_using.14" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC merge_using.15" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="VC merge_using.16" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC merge_using.17" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC merge_using.18" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="TopDownMergesort" sum="814f5716e1d1790163ddb43664bc5dd1">
 <goal name="VC mergesort_rec" expl="VC for mergesort_rec">
 <proof prover="11"><result status="valid" time="0.33" steps="694"/></proof>
 </goal>
 <goal name="VC mergesort" expl="VC for mergesort">
 <proof prover="11"><result status="valid" time="0.01" steps="36"/></proof>
 </goal>
</theory>
<theory name="BottomUpMergesort" sum="ee7a05975a4ef9427a90152eca9df89f">
 <goal name="VC bottom_up_mergesort" expl="VC for bottom_up_mergesort">
 <transf name="split_goal_wp">
  <goal name="VC bottom_up_mergesort.1" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="2"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.2" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.3" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.4" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.5" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.6" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.7" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.8" expl="assertion">
  <proof prover="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.9" expl="assertion">
  <proof prover="11"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.10" expl="assertion">
  <proof prover="11"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.11" expl="precondition">
  <proof prover="11"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.12" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.13" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.14" expl="assertion">
  <proof prover="11"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.15" expl="assertion">
  <transf name="inline_goal">
   <goal name="VC bottom_up_mergesort.15.1" expl="assertion">
   <proof prover="4" timelimit="11"><result status="valid" time="0.35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC bottom_up_mergesort.16" expl="assertion">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.17" expl="assertion">
  <proof prover="11"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.18" expl="assertion">
  <proof prover="11"><result status="valid" time="0.75" steps="478"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.19" expl="assertion">
  <transf name="split_goal_wp">
   <goal name="VC bottom_up_mergesort.19.1" expl="assertion">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.19.2" expl="assertion">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.19.3" expl="assertion">
   <proof prover="11"><result status="valid" time="0.03" steps="66"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.19.4" expl="assertion">
   <proof prover="11"><result status="valid" time="0.03" steps="82"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.19.5" expl="assertion">
   <proof prover="11"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.19.6" expl="assertion">
   <proof prover="11"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC bottom_up_mergesort.20" expl="loop variant decrease">
  <proof prover="11"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.21" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.22" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.23" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.03" steps="63"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.24" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.25" expl="assertion">
  <proof prover="11"><result status="valid" time="0.11" steps="180"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.26" expl="loop variant decrease">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.27" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.28" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.29" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.30" expl="assertion">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.31" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.32" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NaturalMergesort" sum="17e6b42d167f74e2da0c6f1df078a035">
 <goal name="VC find_run" expl="VC for find_run">
 <proof prover="11"><result status="valid" time="0.02" steps="47"/></proof>
 </goal>
 <goal name="VC natural_mergesort" expl="VC for natural_mergesort">
 <transf name="split_goal_wp">
  <goal name="VC natural_mergesort.1" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC natural_mergesort.2" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC natural_mergesort.3" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
  <goal name="VC natural_mergesort.4" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC natural_mergesort.5" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC natural_mergesort.6" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC natural_mergesort.7" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC natural_mergesort.8" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC natural_mergesort.9" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="VC natural_mergesort.10" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC natural_mergesort.11" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC natural_mergesort.12" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC natural_mergesort.13" expl="loop variant decrease">
  <proof prover="11"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC natural_mergesort.14" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC natural_mergesort.15" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC natural_mergesort.16" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC natural_mergesort.17" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC natural_mergesort.18" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC natural_mergesort.19" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC natural_mergesort.20" expl="assertion">
  <proof prover="11"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="VC natural_mergesort.21" expl="assertion">
  <transf name="inline_goal">
   <goal name="VC natural_mergesort.21.1" expl="assertion">
   <transf name="split_goal_wp">
    <goal name="VC natural_mergesort.21.1.1" expl="VC for natural_mergesort">
    <proof prover="11"><result status="valid" time="0.01" steps="25"/></proof>
    </goal>
    <goal name="VC natural_mergesort.21.1.2" expl="VC for natural_mergesort">
    <proof prover="4" timelimit="11"><result status="valid" time="0.10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC natural_mergesort.22" expl="loop variant decrease">
  <proof prover="11"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="VC natural_mergesort.23" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="VC natural_mergesort.24" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="VC natural_mergesort.25" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="VC natural_mergesort.26" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="70"/></proof>
  </goal>
  <goal name="VC natural_mergesort.27" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="49"/></proof>
  </goal>
  <goal name="VC natural_mergesort.28" expl="loop variant decrease">
  <proof prover="11"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="VC natural_mergesort.29" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="VC natural_mergesort.30" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="VC natural_mergesort.31" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="VC natural_mergesort.32" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="VC natural_mergesort.33" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="48"/></proof>
  </goal>
  <goal name="VC natural_mergesort.34" expl="loop variant decrease">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC natural_mergesort.35" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC natural_mergesort.36" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC natural_mergesort.37" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC natural_mergesort.38" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC naturalrec" expl="VC for naturalrec">
 <transf name="split_goal_wp">
  <goal name="VC naturalrec.1" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.2" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC naturalrec.3" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC naturalrec.4" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.5" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC naturalrec.6" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.7" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC naturalrec.8" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC naturalrec.9" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.10" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC naturalrec.11" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC naturalrec.12" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC naturalrec.13" expl="loop invariant init">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.14" expl="variant decrease">
  <proof prover="11"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC naturalrec.15" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC naturalrec.16" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC naturalrec.17" expl="assertion">
  <transf name="inline_goal">
   <goal name="VC naturalrec.17.1" expl="assertion">
   <proof prover="4" timelimit="11"><result status="valid" time="1.49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC naturalrec.18" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="VC naturalrec.19" expl="precondition">
  <proof prover="11"><result status="valid" time="0.02" steps="82"/></proof>
  </goal>
  <goal name="VC naturalrec.20" expl="precondition">
  <proof prover="11"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC naturalrec.21" expl="assertion">
  <proof prover="11"><result status="valid" time="0.04" steps="134"/></proof>
  </goal>
  <goal name="VC naturalrec.22" expl="assertion">
  <proof prover="11"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="VC naturalrec.23" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC naturalrec.24" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC naturalrec.25" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.04" steps="124"/></proof>
  </goal>
  <goal name="VC naturalrec.26" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="VC naturalrec.27" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="VC naturalrec.28" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC naturalrec.29" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.03" steps="127"/></proof>
  </goal>
  <goal name="VC naturalrec.30" expl="loop invariant preservation">
  <proof prover="11"><result status="valid" time="0.02" steps="90"/></proof>
  </goal>
  <goal name="VC naturalrec.31" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC naturalrec.32" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="VC naturalrec.33" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC naturalrec.34" expl="postcondition">
  <proof prover="11"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC naturalrec.35" expl="out of loop bounds">
  <proof prover="11"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC natural_mergesort2" expl="VC for natural_mergesort2">
 <proof prover="11"><result status="valid" time="0.01" steps="37"/></proof>
 </goal>
</theory>
</file>
</why3session>
