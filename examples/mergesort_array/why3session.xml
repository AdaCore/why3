<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.0.0" timelimit="11" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="11" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC3" version="2.4.1" timelimit="11" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="mergesort_array.mlw"/>
<theory name="Merge" proved="true">
 <goal name="merge&#39;vc" expl="VC for merge" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="merge&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="9"/></proof>
  </goal>
  <goal name="merge&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="11"/></proof>
  </goal>
  <goal name="merge&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="merge&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="13"/></proof>
  </goal>
  <goal name="merge&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="13"/></proof>
  </goal>
  <goal name="merge&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="14"/></proof>
  </goal>
  <goal name="merge&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="1"/></proof>
  </goal>
  <goal name="merge&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="merge&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="merge&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="merge&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="merge&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="merge&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="merge&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.050000"/></proof>
  </goal>
  <goal name="merge&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.050000"/></proof>
  </goal>
  <goal name="merge&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.060000"/></proof>
  </goal>
  <goal name="merge&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="4.680000" steps="5814"/></proof>
  </goal>
  <goal name="merge&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="58"/></proof>
  </goal>
  <goal name="merge&#39;vc.18" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="21"/></proof>
  </goal>
  <goal name="merge&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="merge&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="merge&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="merge&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.050000"/></proof>
  </goal>
  <goal name="merge&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.070000"/></proof>
  </goal>
  <goal name="merge&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.060000"/></proof>
  </goal>
  <goal name="merge&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="3.360000" steps="4056"/></proof>
  </goal>
  <goal name="merge&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="65"/></proof>
  </goal>
  <goal name="merge&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="merge&#39;vc.28" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="merge&#39;vc.28.0" expl="postcondition" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="merge&#39;vc.28.0.0" expl="VC for merge" proved="true">
    <proof prover="0"><result status="valid" time="0.010000" steps="4"/></proof>
    </goal>
    <goal name="merge&#39;vc.28.0.1" expl="VC for merge" proved="true">
    <proof prover="0"><result status="valid" time="0.010000" steps="5"/></proof>
    </goal>
    <goal name="merge&#39;vc.28.0.2" expl="VC for merge" proved="true">
    <proof prover="0"><result status="valid" time="0.020000" steps="14"/></proof>
    </goal>
    <goal name="merge&#39;vc.28.0.3" expl="VC for merge" proved="true">
    <proof prover="0"><result status="valid" time="0.010000" steps="7"/></proof>
    </goal>
    <goal name="merge&#39;vc.28.0.4" expl="VC for merge" proved="true">
    <proof prover="0"><result status="valid" time="0.010000" steps="5"/></proof>
    </goal>
    <goal name="merge&#39;vc.28.0.5" expl="VC for merge" proved="true">
    <proof prover="4" timelimit="11"><result status="valid" time="0.350000"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="29"/></proof>
  </goal>
  <goal name="merge&#39;vc.30" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="merge_using&#39;vc" expl="VC for merge_using" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="merge_using&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="11"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="10"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.040000"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="1"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="10"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="12"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="11"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="41"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="42"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.11" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="merge_using&#39;vc.11.0" expl="assertion" proved="true">
   <proof prover="4" timelimit="11"><result status="valid" time="0.650000"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="merge_using&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="15"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="39"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="merge_using&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="1"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="TopDownMergesort" proved="true">
 <goal name="mergesort_rec&#39;vc" expl="VC for mergesort_rec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mergesort_rec&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="7"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.2" expl="check division by zero" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="9"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.000000" steps="8"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.000000" steps="8"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="38"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.9" expl="assertion" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="44"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.270000" steps="308"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="22"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="21"/></proof>
  </goal>
  <goal name="mergesort_rec&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.140000" steps="234"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mergesort&#39;vc" expl="VC for mergesort" proved="true">
 <proof prover="0"><result status="valid" time="0.010000" steps="36"/></proof>
 </goal>
</theory>
<theory name="BottomUpMergesort" proved="true">
 <goal name="bottom_up_mergesort&#39;vc" expl="VC for bottom_up_mergesort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="bottom_up_mergesort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="2"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="5"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="7"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="10"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.7" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="32"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="53"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="59"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="21"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.13" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="146"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.14" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="bottom_up_mergesort&#39;vc.14.0" expl="assertion" proved="true">
   <proof prover="4" timelimit="11"><result status="valid" time="0.490000"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.15" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="21"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="22"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.17" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.750000" steps="506"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.18" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="bottom_up_mergesort&#39;vc.18.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.040000"/></proof>
   </goal>
   <goal name="bottom_up_mergesort&#39;vc.18.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.060000"/></proof>
   </goal>
   <goal name="bottom_up_mergesort&#39;vc.18.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.030000" steps="42"/></proof>
   </goal>
   <goal name="bottom_up_mergesort&#39;vc.18.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.030000" steps="143"/></proof>
   </goal>
   <goal name="bottom_up_mergesort&#39;vc.18.4" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.010000" steps="27"/></proof>
   </goal>
   <goal name="bottom_up_mergesort&#39;vc.18.5" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.010000" steps="27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.19" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="57"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="72"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="71"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.24" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="181"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.25" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="14"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="14"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="46"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.29" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="23"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="bottom_up_mergesort&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NaturalMergesort" proved="true">
 <goal name="find_run&#39;vc" expl="VC for find_run" proved="true">
 <proof prover="0"><result status="valid" time="0.130000" steps="177"/></proof>
 </goal>
 <goal name="natural_mergesort&#39;vc" expl="VC for natural_mergesort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="natural_mergesort&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="3"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="5"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="4"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="8"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.000000" steps="13"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.000000" steps="0"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.000000" steps="39"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="27"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="80"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="76"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.12" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="84"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="54"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="62"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="56"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="56"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="422"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.20" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="natural_mergesort&#39;vc.20.0" expl="assertion" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="natural_mergesort&#39;vc.20.0.0" expl="VC for natural_mergesort" proved="true">
    <proof prover="2"><result status="valid" time="0.010000" steps="52"/></proof>
    </goal>
    <goal name="natural_mergesort&#39;vc.20.0.1" expl="VC for natural_mergesort" proved="true">
    <proof prover="1"><result status="valid" time="0.070000" steps="34916"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="natural_mergesort&#39;vc.21" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="64"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="64"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="138"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="64"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="134"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="136"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.27" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="64"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="64"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="64"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="186"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="64"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="137"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.33" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="46"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="natural_mergesort&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="66"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="naturalrec&#39;vc" expl="VC for naturalrec" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="naturalrec&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="1"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="7"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="1"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="1"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="10"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="17"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="1"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="14"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="1"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.13" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="23"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.16" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="naturalrec&#39;vc.16.0" expl="assertion" proved="true">
   <proof prover="4" timelimit="11"><result status="valid" time="0.060000"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="naturalrec&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="47"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="136"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="30"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.20" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="168"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.21" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="72"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="82"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="106"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="34"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="36"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="86"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="110"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="18"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="29"/></proof>
  </goal>
  <goal name="naturalrec&#39;vc.34" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="natural_mergesort2&#39;vc" expl="VC for natural_mergesort2" proved="true">
 <proof prover="0"><result status="valid" time="0.010000" steps="42"/></proof>
 </goal>
</theory>
</file>
</why3session>
