<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="queue_two_lists.mlw"/>
<theory name="Queue" proved="true">
 <goal name="t&#39;vc" expl="VC for t" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="15257"/></proof>
 </goal>
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="15743"/></proof>
 </goal>
 <goal name="push&#39;vc" expl="VC for push" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="push&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="17355"/></proof>
  </goal>
  <goal name="push&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="34782"/></proof>
  </goal>
  <goal name="push&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10508"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_append&#39;vc" expl="VC for nth_append" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="nth_append&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="13140"/></proof>
  </goal>
  <goal name="nth_append&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11918"/></proof>
  </goal>
  <goal name="nth_append&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="nth_append&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="11817"/></proof>
   </goal>
   <goal name="nth_append&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="14764"/></proof>
   </goal>
   <goal name="nth_append&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="18377"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="nth_rev&#39;vc" expl="VC for nth_rev" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="134"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="nth_rev&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="9756"/></proof>
  </goal>
  <goal name="nth_rev&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13053"/></proof>
  </goal>
  <goal name="nth_rev&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12289"/></proof>
  </goal>
  <goal name="nth_rev&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="nth_rev&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.08" steps="19800"/></proof>
   </goal>
   <goal name="nth_rev&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="90"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="handle_empty_rear&#39;vc" expl="VC for handle_empty_rear" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="handle_empty_rear&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="17947"/></proof>
  </goal>
  <goal name="handle_empty_rear&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="22439"/></proof>
  </goal>
  <goal name="handle_empty_rear&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="11260"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pop&#39;vc" expl="VC for pop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pop&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="11170"/></proof>
  </goal>
  <goal name="pop&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="pop&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="pop&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="pop&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="34393"/></proof>
  </goal>
  <goal name="pop&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="29"/></proof>
  </goal>
  <goal name="pop&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="76"/></proof>
  </goal>
  <goal name="pop&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="11079"/></proof>
  </goal>
  <goal name="pop&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="pop&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="pop&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="pop&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="pop&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="69"/></proof>
  </goal>
  <goal name="pop&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10440"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek&#39;vc" expl="VC for peek" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="peek&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="11170"/></proof>
  </goal>
  <goal name="peek&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="peek&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="peek&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="peek&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="peek&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="57"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="safe_pop&#39;vc" expl="VC for safe_pop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="safe_pop&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13106"/></proof>
  </goal>
  <goal name="safe_pop&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10439"/></proof>
  </goal>
  <goal name="safe_pop&#39;vc.2" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10347"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="safe_peek&#39;vc" expl="VC for safe_peek" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="safe_peek&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13088"/></proof>
  </goal>
  <goal name="safe_peek&#39;vc.1" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10314"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="clear&#39;vc" expl="VC for clear" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="clear&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15265"/></proof>
  </goal>
  <goal name="clear&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="15605"/></proof>
  </goal>
  <goal name="clear&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10265"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="copy&#39;vc" expl="VC for copy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="copy&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="16039"/></proof>
  </goal>
  <goal name="copy&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="16354"/></proof>
  </goal>
  <goal name="copy&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12362"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="is_empty&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="is_empty&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="is_empty&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="length&#39;vc" expl="VC for length" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="length&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13620"/></proof>
  </goal>
  <goal name="length&#39;vc.1" expl="postcondition" proved="true">
  <transf name="destruct_term" proved="true" arg1="l">
   <goal name="length&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="12892"/></proof>
   </goal>
   <goal name="length&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="11062"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="length&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15796"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="transfer&#39;vc" expl="VC for transfer" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="transfer&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="18088"/></proof>
  </goal>
  <goal name="transfer&#39;vc.1" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="transfer&#39;vc.1.0" expl="type invariant" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="transfer&#39;vc.1.0.0" expl="type invariant" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="transfer&#39;vc.1.0.0.0" expl="type invariant" proved="true">
     <proof prover="2"><result status="valid" time="1.12" steps="118021"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="transfer&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10743"/></proof>
  </goal>
  <goal name="transfer&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="11328"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Correct" proved="true">
 <goal name="Queue.create&#39;vc" expl="VC for create" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="10047"/></proof>
 </goal>
 <goal name="Queue.push&#39;vc" expl="VC for push" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="9231"/></proof>
 </goal>
 <goal name="Queue.pop&#39;vc" expl="VC for pop" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="9231"/></proof>
 </goal>
 <goal name="Queue.peek&#39;vc" expl="VC for peek" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="9231"/></proof>
 </goal>
 <goal name="Queue.safe_pop&#39;vc" expl="VC for safe_pop" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="10051"/></proof>
 </goal>
 <goal name="Queue.safe_peek&#39;vc" expl="VC for safe_peek" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="10051"/></proof>
 </goal>
 <goal name="Queue.clear&#39;vc" expl="VC for clear" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="9231"/></proof>
 </goal>
 <goal name="Queue.copy&#39;vc" expl="VC for copy" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="10333"/></proof>
 </goal>
 <goal name="Queue.is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="11807"/></proof>
 </goal>
 <goal name="Queue.length&#39;vc" expl="VC for length" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="9231"/></proof>
 </goal>
 <goal name="Queue.transfer&#39;vc" expl="VC for transfer" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="9231"/></proof>
 </goal>
</theory>
</file>
</why3session>
