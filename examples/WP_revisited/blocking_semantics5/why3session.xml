<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Coq" version="8.6.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Spass" version="3.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="10" name="CVC4" version="1.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../blocking_semantics5.mlw">
<theory name="Syntax" proved="true" sum="f8631ff5fea3e441ce3926d3fc152994">
 <goal name="mident_decide" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="ident_decide" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="decide_is_skip" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="3"/></proof>
 </goal>
</theory>
<theory name="SemOp" proved="true" sum="f7a97b7f231b37a2a57637e636739b1c">
 <goal name="get_stack_eq" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="4"/></proof>
 </goal>
 <goal name="get_stack_neq" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
 <goal name="steps_non_neg" proved="true">
 <proof prover="4" edited="blocking_semantics5_SemOp_steps_non_neg_1.v"><result status="valid" time="0.31"/></proof>
 </goal>
</theory>
<theory name="TestSemantics" proved="true" sum="dd8bb0c0f827d977f4ca0784ddce1af8">
 <goal name="Test13" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
 </goal>
 <goal name="Test42" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="4"/></proof>
 </goal>
 <goal name="Test0" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="Test55" proved="true">
 <proof prover="10"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="Ass42" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="124"/></proof>
 </goal>
 <goal name="If42" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="If42.0" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="If42.1" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="If42.2" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="11"/></proof>
  </goal>
  <goal name="If42.3" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="199"/></proof>
  </goal>
  <goal name="If42.4" proved="true">
  <proof prover="10"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="If42.5" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="If42.6" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="If42.7" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Typing" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="TypingAndSemantics" proved="true" sum="d45ed180e506869389dd721e8e25fda2">
 <goal name="type_inversion" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="type_inversion.0" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="68"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eval_type_term" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eval_type_term.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="eval_type_term.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="281"/></proof>
   </goal>
   <goal name="eval_type_term.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="69"/></proof>
   </goal>
   <goal name="eval_type_term.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="205"/></proof>
   </goal>
   <goal name="eval_type_term.0.3" proved="true">
   <proof prover="4" edited="blocking_semantics5_TypingAndSemantics_eval_type_term_1.v"><result status="valid" time="0.38"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="type_preservation" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="type_preservation.0" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="420"/></proof>
  </goal>
  <goal name="type_preservation.1" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="562"/></proof>
  </goal>
  <goal name="type_preservation.2" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="61"/></proof>
  </goal>
  <goal name="type_preservation.3" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="72"/></proof>
  </goal>
  <goal name="type_preservation.4" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="type_preservation.5" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="type_preservation.6" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="118"/></proof>
  </goal>
  <goal name="type_preservation.7" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FreshVariables" proved="true" sum="e7f7543c27ed349d5e97d84ce41664a5">
 <goal name="Cons_append" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="4"/></proof>
 </goal>
 <goal name="Append_nil_l" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
 </goal>
 <goal name="eval_msubst_term" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eval_msubst_term.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="eval_msubst_term.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="eval_msubst_term.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="eval_msubst_term.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="eval_msubst_term.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_msubst" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eval_msubst.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="eval_msubst.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
   <goal name="eval_msubst.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
   <goal name="eval_msubst.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="90"/></proof>
   </goal>
   <goal name="eval_msubst.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="92"/></proof>
   </goal>
   <goal name="eval_msubst.0.4" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
   <goal name="eval_msubst.0.5" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="eval_msubst.0.6" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="57"/></proof>
   </goal>
   <goal name="eval_msubst.0.7" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="90"/></proof>
   </goal>
   <goal name="eval_msubst.0.8" proved="true">
   <proof prover="0"><result status="valid" time="0.11" steps="480"/></proof>
   </goal>
   <goal name="eval_msubst.0.9" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="114"/></proof>
   </goal>
   <goal name="eval_msubst.0.10" proved="true">
   <proof prover="0"><result status="valid" time="0.38" steps="1531"/></proof>
   </goal>
   <goal name="eval_msubst.0.11" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="271"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_swap_term" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eval_swap_term.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="eval_swap_term.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="eval_swap_term.0.1" proved="true">
   <proof prover="4" edited="blocking_semantics5_FreshVariables_eval_swap_term_1.v"><result status="valid" time="0.93"/></proof>
   </goal>
   <goal name="eval_swap_term.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="6"/></proof>
   </goal>
   <goal name="eval_swap_term.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="66"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_swap_gen" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eval_swap_gen.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="eval_swap_gen.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="131"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="131"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.4" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.5" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.6" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="63"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.7" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="63"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.8" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="170"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.9" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="170"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.10" proved="true">
   <proof prover="0"><result status="valid" time="4.64" steps="2510"/></proof>
   </goal>
   <goal name="eval_swap_gen.0.11" proved="true">
   <proof prover="0"><result status="valid" time="4.54" steps="2510"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_swap" proved="true">
 <proof prover="10"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="eval_term_change_free" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eval_term_change_free.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="eval_term_change_free.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="6"/></proof>
   </goal>
   <goal name="eval_term_change_free.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="27"/></proof>
   </goal>
   <goal name="eval_term_change_free.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="6"/></proof>
   </goal>
   <goal name="eval_term_change_free.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_change_free" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eval_change_free.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="eval_change_free.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="eval_change_free.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
   <goal name="eval_change_free.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="116"/></proof>
   </goal>
   <goal name="eval_change_free.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="78"/></proof>
   </goal>
   <goal name="eval_change_free.0.4" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
   </goal>
   <goal name="eval_change_free.0.5" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
   <goal name="eval_change_free.0.6" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="114"/></proof>
   </goal>
   <goal name="eval_change_free.0.7" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="36"/></proof>
   </goal>
   <goal name="eval_change_free.0.8" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="176"/></proof>
   </goal>
   <goal name="eval_change_free.0.9" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="110"/></proof>
   </goal>
   <goal name="eval_change_free.0.10" proved="true">
   <transf name="subst" proved="true" arg1="f">
    <goal name="eval_change_free.0.10.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="eval_change_free.0.10.0.0" proved="true">
     <transf name="destruct_alg" proved="true" arg1="x1">
      <goal name="eval_change_free.0.10.0.0.0" proved="true">
      <proof prover="7"><result status="valid" time="0.08"/></proof>
      </goal>
      <goal name="eval_change_free.0.10.0.0.1" proved="true">
      <proof prover="7"><result status="valid" time="0.13"/></proof>
      </goal>
      <goal name="eval_change_free.0.10.0.0.2" proved="true">
      <proof prover="7"><result status="valid" time="0.14"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="eval_change_free.0.11" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="431"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HoareLogic" sum="4f2e9f924653db3767358ba8ddc2752e">
 <goal name="many_steps_seq">
 <proof prover="4" edited="blocking_semantics5_HoareLogic_many_steps_seq_1.v"><result status="unknown" time="0.91"/></proof>
 <transf name="induction" arg1="n">
  <goal name="many_steps_seq.0" expl="base case" proved="true">
  <proof prover="7"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="many_steps_seq.1" expl="recursive case">
  </goal>
 </transf>
 </goal>
 <goal name="consequence_rule" proved="true">
 <proof prover="3" timelimit="30"><result status="valid" time="0.24"/></proof>
 </goal>
 <goal name="skip_rule" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="306"/></proof>
 </goal>
 <goal name="assign_rule" proved="true">
 <proof prover="0"><result status="valid" time="0.53" steps="1865"/></proof>
 </goal>
 <goal name="seq_rule" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="488"/></proof>
 </goal>
 <goal name="if_rule" proved="true">
 <transf name="inline_all" proved="true" >
  <goal name="if_rule.0" proved="true">
  <transf name="induction_pr" proved="true" >
   <goal name="if_rule.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="13"/></proof>
   </goal>
   <goal name="if_rule.0.1" proved="true">
   <proof prover="10" timelimit="10" memlimit="4000"><result status="valid" time="2.87"/></proof>
   <transf name="inversion_pr" proved="true" >
    <goal name="if_rule.0.1.0" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
    </goal>
    <goal name="if_rule.0.1.1" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="21"/></proof>
    </goal>
    <goal name="if_rule.0.1.2" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
    </goal>
    <goal name="if_rule.0.1.3" proved="true">
    <proof prover="10"><result status="valid" time="0.06"/></proof>
    </goal>
    <goal name="if_rule.0.1.4" proved="true">
    <proof prover="10"><result status="valid" time="0.08"/></proof>
    </goal>
    <goal name="if_rule.0.1.5" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="21"/></proof>
    </goal>
    <goal name="if_rule.0.1.6" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
    </goal>
    <goal name="if_rule.0.1.7" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="assert_rule" proved="true">
 <proof prover="0"><result status="valid" time="0.15" steps="628"/></proof>
 </goal>
 <goal name="assert_rule_ext" proved="true">
 <proof prover="0"><result status="valid" time="0.34" steps="1384"/></proof>
 </goal>
 <goal name="while_rule" proved="true">
 <proof prover="4" edited="blocking_semantics5_HoareLogic_while_rule_1.v"><result status="valid" time="0.46"/></proof>
 </goal>
</theory>
<theory name="WP" sum="6d31ca24f5b34970df8292d003018d4a">
 <goal name="monotonicity" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="monotonicity.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="monotonicity.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="11"/></proof>
   </goal>
   <goal name="monotonicity.0.1" proved="true">
   <transf name="subst" proved="true" arg1="s">
    <goal name="monotonicity.0.1.0" proved="true">
    <transf name="unfold" proved="true" arg1="wp">
     <goal name="monotonicity.0.1.0.0" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="monotonicity.0.1.0.0.0" proved="true">
      <transf name="unfold" proved="true" arg1="valid_fmla">
       <goal name="monotonicity.0.1.0.0.0.0" proved="true">
       <transf name="unfold" proved="true" arg1="valid_fmla" arg2="in" arg3="H">
        <goal name="monotonicity.0.1.0.0.0.0.0" proved="true">
        <transf name="unfold" proved="true" arg1="eval_fmla" arg2="in" arg3="H">
         <goal name="monotonicity.0.1.0.0.0.0.0.0" proved="true">
         <transf name="unfold" proved="true" arg1="eval_fmla">
          <goal name="monotonicity.0.1.0.0.0.0.0.0.0" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="monotonicity.0.1.0.0.0.0.0.0.0.0" proved="true">
           <proof prover="7"><result status="valid" time="0.14"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotonicity.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
   <goal name="monotonicity.0.3" proved="true">
   <proof prover="3"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="monotonicity.0.4" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="monotonicity.0.5" proved="true">
   <proof prover="4" edited="blocking_semantics5_WP_monotonicity_3.v"><result status="valid" time="0.40"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="distrib_conj">
 <transf name="induction_ty_lex" >
  <goal name="distrib_conj.0">
  <transf name="split_goal_wp" >
   <goal name="distrib_conj.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="28"/></proof>
   </goal>
   <goal name="distrib_conj.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.41" steps="1727"/></proof>
   </goal>
   <goal name="distrib_conj.0.2">
   <proof prover="4" edited="blocking_semantics5_WP_distrib_conj_2.v"><result status="unknown" time="0.64"/></proof>
   </goal>
   <goal name="distrib_conj.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="277"/></proof>
   </goal>
   <goal name="distrib_conj.0.4" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="175"/></proof>
   </goal>
   <goal name="distrib_conj.0.5" proved="true">
   <proof prover="4" edited="blocking_semantics5_WP_distrib_conj_3.v"><result status="valid" time="0.63"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="wp_preserved_by_reduction">
 <proof prover="4" memlimit="4000" edited="blocking_semantics5_WP_wp_preserved_by_reduction_4.v"><result status="unknown" time="0.57"/></proof>
 </goal>
 <goal name="progress">
 <transf name="induction_ty_lex" >
  <goal name="progress.0">
  <transf name="split_goal_wp" >
   <goal name="progress.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="11"/></proof>
   </goal>
   <goal name="progress.0.1" proved="true">
   <proof prover="4" edited="blocking_semantics5_WP_progress_1.v"><result status="valid" time="0.39"/></proof>
   <proof prover="10"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="progress.0.2">
   <proof prover="4" edited="blocking_semantics5_WP_progress_2.v"><result status="unknown" time="0.67"/></proof>
   <transf name="case" arg1="(x1 = Sskip)">
    <goal name="progress.0.2.0" expl="true case" proved="true">
    <proof prover="6"><result status="valid" time="0.28"/></proof>
    </goal>
    <goal name="progress.0.2.1" expl="false case">
    </goal>
   </transf>
   </goal>
   <goal name="progress.0.3" proved="true">
   <proof prover="4" edited="blocking_semantics5_WP_progress_3.v"><result status="valid" time="0.35"/></proof>
   <proof prover="10" timelimit="10" memlimit="4000"><result status="valid" time="3.91"/></proof>
   </goal>
   <goal name="progress.0.4" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="179"/></proof>
   </goal>
   <goal name="progress.0.5" proved="true">
   <proof prover="4" edited="blocking_semantics5_WP_progress_5.v"><result status="valid" time="0.39"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="wp_soundness" proved="true">
 <proof prover="4" timelimit="30" edited="blocking_semantics5_WP_wp_soundness_1.v"><result status="valid" time="0.44"/></proof>
 </goal>
</theory>
</file>
</why3session>
