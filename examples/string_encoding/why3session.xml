<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="string_encoding.mlw"/>
<theory name="Hex1">
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="4017"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="94"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="79"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="139"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="142"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.10" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="3.84" steps="4312"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="4459"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="144"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="159"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="139"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="45"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="2.91" steps="2490"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="4801"/></proof>
 </goal>
 <goal name="test2&#39;vc" expl="VC for test2">
 <proof prover="0"><result status="timeout" time="5.00" steps="10577606"/></proof>
 <proof prover="1"><result status="timeout" time="5.00" steps="815639"/></proof>
 <proof prover="2"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="test3&#39;vc" expl="VC for test3">
 </goal>
 <goal name="test4&#39;vc" expl="VC for test4">
 <proof prover="1" obsolete="true"><path
                                    name="string_encoding-Hex1-test4qtvc_1.smt2"/><result status="unknown" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="test5&#39;vc" expl="VC for test5">
 </goal>
 <goal name="decode_encode">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00" steps="9820615"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="802329"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
</theory>
<theory name="Hex2" proved="true">
 <goal name="hex&#39;vc" expl="VC for hex" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="101"/></proof>
 </goal>
 <goal name="xeh&#39;vc" expl="VC for xeh" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="94"/></proof>
 </goal>
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="525"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="94"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="90"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="139"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="126"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="731"/></proof>
  </goal>
  <goal name="encode&#39;vc.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.96" steps="2656"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.15.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="2.47" steps="2696"/></proof>
   </goal>
   <goal name="encode&#39;vc.15.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="1.67" steps="1745"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.17.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="27"/></proof>
   </goal>
   <goal name="encode&#39;vc.17.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="29"/></proof>
   </goal>
   <goal name="encode&#39;vc.17.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="366"/></proof>
   </goal>
   <goal name="encode&#39;vc.17.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="381"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="5195"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="102"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="246"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="186"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="212"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(0 &lt;= v_i &lt; 16 &amp;&amp; 0 &lt;= v_ii &lt; 16)">
   <goal name="decode&#39;vc.9.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="343"/></proof>
   </goal>
   <goal name="decode&#39;vc.9.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="44"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="46"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="49"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="2.20" steps="1924"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode_encode&#39;vc.0" expl="assertion" proved="true">
  <transf name="inst_rem" proved="true" arg1="Ensures" arg2="(div i 2)">
   <goal name="decode_encode&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="766"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="71"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="60317"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="726650"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00" steps="10533113"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="730065"/></proof>
  <proof prover="2"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="5762"/></proof>
 </goal>
 <goal name="test2&#39;vc" expl="VC for test2" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="test3&#39;vc" expl="VC for test3" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="test4&#39;vc" expl="VC for test4" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="test5&#39;vc" expl="VC for test5" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="test6&#39;vc" expl="VC for test6" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
 <goal name="test7&#39;vc" expl="VC for test7" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
</theory>
<theory name="Base64" proved="true">
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="53"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="21702"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="29"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="41"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="384"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="683"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="1.18" steps="539"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="1.02" steps="846"/></proof>
  </goal>
  <goal name="encode&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="1.05" steps="846"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="encode&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.36" steps="1289"/></proof>
  </goal>
  <goal name="encode&#39;vc.19" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="58"/></proof>
  </goal>
  <goal name="encode&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.29" steps="910"/></proof>
  </goal>
  <goal name="encode&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="4.74" steps="1432"/></proof>
  </goal>
  <goal name="encode&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.68" steps="600"/></proof>
  </goal>
  <goal name="encode&#39;vc.23" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="66"/></proof>
  </goal>
  <goal name="encode&#39;vc.24" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="55274"/></proof>
  </goal>
  <goal name="encode&#39;vc.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.56" steps="371"/></proof>
  </goal>
  <goal name="encode&#39;vc.26" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="3.45" steps="1129"/></proof>
  </goal>
  <goal name="encode&#39;vc.27" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="4.22" steps="1482"/></proof>
  </goal>
  <goal name="encode&#39;vc.28" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="404"/></proof>
  </goal>
  <goal name="encode&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="4.27" steps="1269"/></proof>
  </goal>
  <goal name="encode&#39;vc.30" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="2.11" steps="640"/></proof>
  </goal>
  <goal name="encode&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.65" steps="450"/></proof>
  </goal>
  <goal name="encode&#39;vc.32" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="6.06" steps="2896"/></proof>
  </goal>
  <goal name="encode&#39;vc.33" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="2.48" steps="665"/></proof>
  </goal>
  <goal name="encode&#39;vc.34" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="301"/></proof>
  </goal>
  <goal name="encode&#39;vc.35" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="4.84" steps="2399"/></proof>
  </goal>
  <goal name="encode&#39;vc.36" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="3.33" steps="715"/></proof>
  </goal>
  <goal name="encode&#39;vc.37" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.37.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="encode&#39;vc.37.0.0" expl="assertion" proved="true">
    <proof prover="2" timelimit="40"><result status="valid" time="26.30" steps="6345"/></proof>
    </goal>
    <goal name="encode&#39;vc.37.0.1" expl="assertion" proved="true">
    <proof prover="2" timelimit="60"><result status="valid" time="22.67" steps="8179"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="encode&#39;vc.37.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="4.69" steps="1809"/></proof>
   </goal>
   <goal name="encode&#39;vc.37.2" expl="assertion" proved="true">
   <proof prover="2" timelimit="15"><result status="valid" time="7.81" steps="2572"/></proof>
   </goal>
   <goal name="encode&#39;vc.37.3" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.38" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="97"/></proof>
  </goal>
  <goal name="encode&#39;vc.39" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.39.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="101"/></proof>
   </goal>
   <goal name="encode&#39;vc.39.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="103"/></proof>
   </goal>
   <goal name="encode&#39;vc.39.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="105"/></proof>
   </goal>
   <goal name="encode&#39;vc.39.3" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="107"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.40" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="111"/></proof>
  </goal>
  <goal name="encode&#39;vc.41" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="100"/></proof>
  </goal>
  <goal name="encode&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="107"/></proof>
  </goal>
  <goal name="encode&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="2.98" steps="909"/></proof>
  </goal>
  <goal name="encode&#39;vc.44" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.44.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="104"/></proof>
   </goal>
   <goal name="encode&#39;vc.44.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="encode&#39;vc.44.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="0" timelimit="10"><result status="valid" time="4.71" steps="49400796"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.1.1" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.11" steps="788148"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.45" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.45.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.05" steps="102076"/></proof>
   </goal>
   <goal name="encode&#39;vc.45.1" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.05" steps="109758"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.07" steps="152656"/></proof>
  </goal>
  <goal name="encode&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="75109"/></proof>
  </goal>
  <goal name="encode&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="34"/></proof>
  </goal>
  <goal name="encode&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.35" steps="294"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
