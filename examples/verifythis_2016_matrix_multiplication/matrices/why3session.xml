<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="matrices.mlw"/>
<theory name="Matrix" proved="true">
 <goal name="set_def1" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="10"/></proof>
 </goal>
 <goal name="set_def2" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
 </goal>
 <goal name="set_def3" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="set_def4" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
 </goal>
</theory>
<theory name="MatrixArithmetic" proved="true">
 <goal name="zero_neutral" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="zero_neutral.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="zero_neutral.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_commutative" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="add_commutative.0" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="add_commutative.1" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_associative" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="add_associative.0" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="262"/></proof>
  </goal>
  <goal name="add_associative.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_opposite" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="add_opposite.0" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="169"/></proof>
  </goal>
  <goal name="add_opposite.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="opp_involutive" proved="true">
 <proof prover="3"><result status="valid" time="0.04" steps="10544"/></proof>
 </goal>
 <goal name="opposite_add" proved="true">
 <proof prover="3"><result status="valid" time="0.16" steps="29868"/></proof>
 </goal>
 <goal name="mul_assoc_get&#39;vc" expl="VC for mul_assoc_get" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_assoc_get&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.2" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="57"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="36"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_assoc" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_assoc.0" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="102"/></proof>
  </goal>
  <goal name="mul_assoc.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_right_get&#39;vc" expl="VC for mul_distr_right_get" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_right_get&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="285"/></proof>
  </goal>
  <goal name="mul_distr_right_get&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="mul_distr_right_get&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="114"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_right" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_right.0" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="199"/></proof>
  </goal>
  <goal name="mul_distr_right.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_left_get&#39;vc" expl="VC for mul_distr_left_get" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_left_get&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="295"/></proof>
  </goal>
  <goal name="mul_distr_left_get&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="mul_distr_left_get&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_left" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_left.0" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="192"/></proof>
  </goal>
  <goal name="mul_distr_left.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_zero_right" proved="true">
 <proof prover="1"><result status="valid" time="0.08" steps="301"/></proof>
 </goal>
 <goal name="mul_zero_left" proved="true">
 <proof prover="1"><result status="valid" time="0.08" steps="301"/></proof>
 </goal>
 <goal name="mul_opp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_opp.0" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="414"/></proof>
  </goal>
  <goal name="mul_opp.1" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="904"/></proof>
  </goal>
  <goal name="mul_opp.2" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="496"/></proof>
  </goal>
  <goal name="mul_opp.3" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="652"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BlockMul" proved="true">
 <goal name="block_mul_ij&#39;vc" expl="VC for block_mul_ij" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="block_mul_ij&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="87"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="162"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.31" steps="67524"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_split&#39;vc" expl="VC for mul_split" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_split&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="315"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_block_cell&#39;vc" expl="VC for mul_block_cell" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_block_cell&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="mul_block_cell&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="136"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_block" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_block.0" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="108"/></proof>
  </goal>
  <goal name="mul_block.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
