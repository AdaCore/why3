<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.01" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../matrices.mlw" expanded="true">
<theory name="MatrixGen" sum="d41d8cd98f00b204e9800998ecf8427e" expanded="true">
</theory>
<theory name="FloatMatrix" sum="d41d8cd98f00b204e9800998ecf8427e" expanded="true">
</theory>
<theory name="FixedMatrix" sum="81d1f6ecddc981db1f906002ad2c6515">
 <goal name="rows_and_cols_nonnegative">
 <proof prover="1"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="SquareFixedMatrix" sum="8866fe956f3cb17788b7229e8763a520">
 <goal name="r_and_c_nonnegative">
 <proof prover="1"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="MatrixArithmetic" sum="95c5ea5a8476dec9b6807e6463fa7c50">
 <goal name="zero_neutral">
 <transf name="split_goal_wp">
  <goal name="zero_neutral.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="zero_neutral.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_commutative">
 <transf name="split_goal_wp">
  <goal name="add_commutative.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="add_commutative.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_associative">
 <transf name="split_goal_wp">
  <goal name="add_associative.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.14" steps="301"/></proof>
  </goal>
  <goal name="add_associative.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_opposite">
 <transf name="split_goal_wp">
  <goal name="add_opposite.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.12" steps="153"/></proof>
  </goal>
  <goal name="add_opposite.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="opp_involutive">
 <proof prover="0"><result status="valid" time="0.07"/></proof>
 </goal>
 <goal name="opposite_add">
 <proof prover="0"><result status="valid" time="0.25"/></proof>
 </goal>
 <goal name="WP_parameter mul_assoc_get" expl="VC for mul_assoc_get">
 <transf name="split_goal_wp">
  <goal name="WP_parameter mul_assoc_get.1" expl="1. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="WP_parameter mul_assoc_get.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="2.40" steps="94"/></proof>
  </goal>
  <goal name="WP_parameter mul_assoc_get.3" expl="3. assertion">
  <proof prover="1"><result status="valid" time="0.06" steps="37"/></proof>
  </goal>
  <goal name="WP_parameter mul_assoc_get.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.05" steps="35"/></proof>
  </goal>
  <goal name="WP_parameter mul_assoc_get.5" expl="5. assertion">
  <proof prover="1"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="WP_parameter mul_assoc_get.6" expl="6. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_assoc">
 <transf name="split_goal_wp">
  <goal name="mul_assoc.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="mul_assoc.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter mul_distr_right_get" expl="VC for mul_distr_right_get">
 <transf name="split_goal_wp">
  <goal name="WP_parameter mul_distr_right_get.1" expl="1. assertion">
  <proof prover="1"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="WP_parameter mul_distr_right_get.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="0.10" steps="53"/></proof>
  </goal>
  <goal name="WP_parameter mul_distr_right_get.3" expl="3. postcondition">
  <proof prover="1"><result status="valid" time="0.06" steps="61"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_right">
 <transf name="split_goal_wp">
  <goal name="mul_distr_right.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.05" steps="146"/></proof>
  </goal>
  <goal name="mul_distr_right.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter mul_distr_left_get" expl="VC for mul_distr_left_get">
 <transf name="split_goal_wp">
  <goal name="WP_parameter mul_distr_left_get.1" expl="1. assertion">
  <proof prover="1"><result status="valid" time="0.06" steps="110"/></proof>
  </goal>
  <goal name="WP_parameter mul_distr_left_get.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="0.05" steps="40"/></proof>
  </goal>
  <goal name="WP_parameter mul_distr_left_get.3" expl="3. postcondition">
  <proof prover="1"><result status="valid" time="0.05" steps="45"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_left">
 <transf name="split_goal_wp">
  <goal name="mul_distr_left.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.04" steps="144"/></proof>
  </goal>
  <goal name="mul_distr_left.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_zero_right">
 <proof prover="1"><result status="valid" time="1.91" steps="404"/></proof>
 </goal>
 <goal name="mul_zero_left">
 <proof prover="1"><result status="valid" time="1.65" steps="396"/></proof>
 </goal>
 <goal name="mul_opp">
 <transf name="split_goal_wp">
  <goal name="mul_opp.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.36" steps="394"/></proof>
  </goal>
  <goal name="mul_opp.2" expl="2.">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="mul_opp.3" expl="3.">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="mul_opp.4" expl="4.">
  <proof prover="1"><result status="valid" time="3.92" steps="2401"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BlockMul" sum="08ae5cbffa4e68e45d31bc65f734c776">
 <goal name="WP_parameter block_mul_ij" expl="VC for block_mul_ij">
 <proof prover="1"><result status="valid" time="2.31" steps="880"/></proof>
 </goal>
 <goal name="WP_parameter mul_split" expl="VC for mul_split">
 <proof prover="1"><result status="valid" time="0.29" steps="218"/></proof>
 </goal>
 <goal name="WP_parameter mul_block_cell" expl="VC for mul_block_cell">
 <transf name="split_goal_wp">
  <goal name="WP_parameter mul_block_cell.1" expl="1. precondition">
  <proof prover="1"><result status="valid" time="0.03" steps="27"/></proof>
  </goal>
  <goal name="WP_parameter mul_block_cell.2" expl="2. postcondition">
  <proof prover="1"><result status="valid" time="0.12" steps="120"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_block">
 <transf name="split_goal_wp">
  <goal name="mul_block.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.04" steps="65"/></proof>
  </goal>
  <goal name="mul_block.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
