<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="matrices.mlw"/>
<theory name="Matrix" proved="true">
 <goal name="set_def1" proved="true">
 <proof prover="2"><result status="valid" time="0.000000" steps="18"/></proof>
 </goal>
 <goal name="set_def2" proved="true">
 <proof prover="2"><result status="valid" time="0.000000" steps="20"/></proof>
 </goal>
 <goal name="set_def3" proved="true">
 <proof prover="2"><result status="valid" time="0.010000" steps="27"/></proof>
 </goal>
 <goal name="set_def4" proved="true">
 <proof prover="2"><result status="valid" time="0.000000" steps="41"/></proof>
 </goal>
</theory>
<theory name="MatrixArithmetic" proved="true">
 <goal name="zero_neutral" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="zero_neutral.0" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="68"/></proof>
  </goal>
  <goal name="zero_neutral.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_commutative" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="add_commutative.0" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="93"/></proof>
  </goal>
  <goal name="add_commutative.1" proved="true">
  <proof prover="2"><result status="valid" time="0.000000" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_associative" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="add_associative.0" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="501"/></proof>
  </goal>
  <goal name="add_associative.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_opposite" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="add_opposite.0" proved="true">
  <proof prover="2"><result status="valid" time="0.050000" steps="1456"/></proof>
  </goal>
  <goal name="add_opposite.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="opp_involutive" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="7661"/></proof>
 </goal>
 <goal name="opposite_add" proved="true">
 <proof prover="0"><result status="valid" time="0.160000" steps="27665"/></proof>
 </goal>
 <goal name="mul_assoc_get&#39;vc" expl="VC for mul_assoc_get" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_assoc_get&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="135"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="2.671253" steps="39155"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="2.569527" steps="92065"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018069" steps="36"/></proof>
  <proof prover="2" timelimit="5"><result status="valid" time="5.672972" steps="143861"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="1308"/></proof>
  </goal>
  <goal name="mul_assoc_get&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_assoc" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_assoc.0" proved="true">
  <proof prover="2"><result status="valid" time="0.020000" steps="147"/></proof>
  </goal>
  <goal name="mul_assoc.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_right_get&#39;vc" expl="VC for mul_distr_right_get" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_right_get&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.045966" steps="258"/></proof>
  </goal>
  <goal name="mul_distr_right_get&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.906978" steps="25270"/></proof>
  </goal>
  <goal name="mul_distr_right_get&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.984122" steps="61804"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_right" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_right.0" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="320"/></proof>
  </goal>
  <goal name="mul_distr_right.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_left_get&#39;vc" expl="VC for mul_distr_left_get" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_left_get&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.140000" steps="267"/></proof>
  </goal>
  <goal name="mul_distr_left_get&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.880145" steps="24160"/></proof>
  </goal>
  <goal name="mul_distr_left_get&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="709"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_distr_left" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_distr_left.0" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="319"/></proof>
  </goal>
  <goal name="mul_distr_left.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_zero_right" proved="true">
 <proof prover="2"><result status="valid" time="0.080000" steps="1987"/></proof>
 </goal>
 <goal name="mul_zero_left" proved="true">
 <proof prover="2"><result status="valid" time="0.080000" steps="1860"/></proof>
 </goal>
 <goal name="mul_opp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_opp.0" proved="true">
  <proof prover="2"><result status="valid" time="0.051033" steps="971"/></proof>
  </goal>
  <goal name="mul_opp.1" proved="true">
  <proof prover="2"><result status="valid" time="0.187328" steps="3233"/></proof>
  </goal>
  <goal name="mul_opp.2" proved="true">
  <proof prover="2"><result status="valid" time="0.180000" steps="1882"/></proof>
  </goal>
  <goal name="mul_opp.3" proved="true">
  <proof prover="2"><result status="valid" time="0.160000" steps="1882"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BlockMul" proved="true">
 <goal name="block_mul_ij&#39;vc" expl="VC for block_mul_ij" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="block_mul_ij&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="1284"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="10"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="4"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="5"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.060590" steps="525"/></proof>
  </goal>
  <goal name="block_mul_ij&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.410450" steps="61049"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_split&#39;vc" expl="VC for mul_split" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_split&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="2"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="3"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="975"/></proof>
  </goal>
  <goal name="mul_split&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_block_cell&#39;vc" expl="VC for mul_block_cell" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_block_cell&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="298"/></proof>
  </goal>
  <goal name="mul_block_cell&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.173998" steps="60841"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mul_block" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mul_block.0" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="161"/></proof>
  </goal>
  <goal name="mul_block.1" proved="true">
  <proof prover="2"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
