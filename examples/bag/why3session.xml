<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.11.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="bag.mlw"/>
<theory name="Bag" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <proof prover="3"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
 <goal name="remove&#39;vc" expl="VC for remove" proved="true">
 <proof prover="3"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
</theory>
<theory name="BagSpec" proved="true">
 <goal name="t&#39;vc" expl="VC for t" proved="true">
 <proof prover="1"><result status="valid" time="0.000000" steps="1"/></proof>
 </goal>
</theory>
<theory name="ResizableArraySpec" proved="true">
 <goal name="rarray&#39;vc" expl="VC for rarray" proved="true">
 <proof prover="1"><result status="valid" time="0.000000" steps="1"/></proof>
 </goal>
</theory>
<theory name="BagImpl" proved="true">
 <goal name="t&#39;vc" expl="VC for t" proved="true">
 <proof prover="1"><result status="valid" time="0.000000" steps="10"/></proof>
 </goal>
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="21"/></proof>
 </goal>
 <goal name="clear&#39;vc" expl="VC for clear" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="48"/></proof>
 </goal>
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.000000" steps="8"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="add&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.010000" steps="28"/></proof>
   </goal>
   <goal name="add&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.010000" steps="22"/></proof>
   </goal>
   <goal name="add&#39;vc.1.2" expl="VC for add" proved="true">
   <proof prover="4"><result status="valid" time="0.020000" steps="50511"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.000000" steps="12"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.240000" steps="401"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="19"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="47"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.190000" steps="242"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.000000" steps="21"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="16"/></proof>
 </goal>
 <goal name="remove&#39;vc" expl="VC for remove" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="remove&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="8"/></proof>
  </goal>
  <goal name="remove&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="7"/></proof>
  </goal>
  <goal name="remove&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="13"/></proof>
  </goal>
  <goal name="remove&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.000000" steps="13"/></proof>
  </goal>
  <goal name="remove&#39;vc.4" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="remove&#39;vc.4.0" expl="assertion" proved="true">
   <proof prover="1" timelimit="15"><result status="valid" time="10.200000" steps="3605"/></proof>
   </goal>
   <goal name="remove&#39;vc.4.1" expl="VC for remove" proved="true">
   <proof prover="1"><result status="valid" time="0.500000" steps="542"/></proof>
   </goal>
   <goal name="remove&#39;vc.4.2" expl="VC for remove" proved="true">
   <proof prover="1"><result status="valid" time="1.310000" steps="580"/></proof>
   </goal>
   <goal name="remove&#39;vc.4.3" expl="VC for remove" proved="true">
   <proof prover="1"><result status="valid" time="0.070000" steps="163"/></proof>
   </goal>
   <goal name="remove&#39;vc.4.4" expl="VC for remove" proved="true">
   <proof prover="4"><result status="valid" time="0.050000" steps="280713"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="15"/></proof>
  </goal>
  <goal name="remove&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="21"/></proof>
  </goal>
  <goal name="remove&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="87"/></proof>
  </goal>
  <goal name="remove&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="2.540000" steps="5696540"/></proof>
  </goal>
  <goal name="remove&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="remove&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="remove&#39;vc.11" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.270000" steps="283"/></proof>
  </goal>
  <goal name="remove&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="11"/></proof>
  </goal>
  <goal name="remove&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.000000" steps="17"/></proof>
  </goal>
  <goal name="remove&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="49"/></proof>
  </goal>
  <goal name="remove&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="169911"/></proof>
  </goal>
  <goal name="remove&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="remove&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="BagSpec.t&#39;refn&#39;vc" expl="VC for t" proved="true">
 <proof prover="1"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
 <goal name="BagSpec.create&#39;refn&#39;vc" expl="VC for create&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="12"/></proof>
 </goal>
 <goal name="BagSpec.clear&#39;refn&#39;vc" expl="VC for clear&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="1"/></proof>
 </goal>
 <goal name="BagSpec.add&#39;refn&#39;vc" expl="VC for add&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="1"/></proof>
 </goal>
</theory>
<theory name="Harness" proved="true">
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="test1&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.150000" steps="244"/></proof>
  </goal>
  <goal name="test1&#39;vc.1" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.900000" steps="484"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
