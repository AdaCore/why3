<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="wrap_lines.mlw"/>
<theory name="WrapLines" proved="true">
 <goal name="index_of&#39;vc" expl="VC for index_of" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="index_of&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="index_of&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="index_of&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="index_of&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="index_of&#39;vc.4" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="index_of&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="index_of&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="index_of&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wrap_lines&#39;vc" expl="VC for wrap_lines" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wrap_lines&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="2"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="26"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.9" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="28"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="106"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="184"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="79"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="381"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.17" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="28"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
  <goal name="wrap_lines&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wrap_lines_plus&#39;vc" expl="VC for wrap_lines_plus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wrap_lines_plus&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="65"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="39"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="42"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="186"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="97"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="450"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="LoopInvariant15,LoopInvariant14,LoopInvariant9,LoopInvariant7,LoopInvariant6,LoopInvariant5,LoopInvariant4,LoopInvariant3,LoopInvariant2,LoopInvariant">
   <goal name="wrap_lines_plus&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.56" steps="1051"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="26"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="26"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="29"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="29"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="48"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="143"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="386"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.29" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.30" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="26"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="36"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="66"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="45"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="167"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="106"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="385"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.45" steps="1400"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="29"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="27"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="28"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="45"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="125"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="370"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="25"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.51" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="25"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.52" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.53" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.54" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.55" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.56" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="78"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.57" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="256"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.58" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.59" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="118"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.60" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="463"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.61" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.58" steps="1533"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="93"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="240"/></proof>
  </goal>
  <goal name="wrap_lines_plus&#39;vc.65" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="WrapLinesOCaml" proved="true">
 <goal name="space&#39;vc" expl="VC for space" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="space&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="newline&#39;vc" expl="VC for newline" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="newline&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="infix =&#39;refn&#39;vc" expl="VC for infix =&#39;refn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="infix =&#39;refn&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
