(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import ZArith.
Require Import Rbase.
Require Import ZOdiv.
Axiom Abs_le : forall (x:Z) (y:Z), ((Zabs x) <= y)%Z <-> (((-y)%Z <= x)%Z /\
  (x <= y)%Z).

Axiom mod_div_unique : forall (x:Z) (y:Z) (q:Z) (r:Z), ((0%Z <  y)%Z /\
  ((x = ((q * y)%Z + r)%Z) /\ ((0%Z <= r)%Z /\ (r <  y)%Z))) ->
  ((r = (ZOmod x y)) /\ (q = (ZOdiv x y))).

(* YOU MAY EDIT THE CONTEXT BELOW *)
Open Scope Z_scope.
(* DO NOT EDIT BELOW *)

Theorem mod_succ_1 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z <  y)%Z) ->
  ((~ ((ZOmod (x + 1%Z)%Z y) = 0%Z)) ->
  ((ZOmod (x + 1%Z)%Z y) = ((ZOmod x y) + 1%Z)%Z)).
(* YOU MAY EDIT THE PROOF BELOW *)
intros x y (Hx,Hy) H.
assert (h: y>0) by omega.
generalize (ZO_div_mod_eq x y); intro h1.
generalize (ZO_div_mod_eq (x+1) y); intro h2.
assert (h3:x = y * ((x + 1) / y) + ((x + 1) mod y - 1)) by omega.
generalize (mod_div_unique x y ((x + 1) / y) ((x + 1) mod y - 1)).
intuition.
destruct H1; auto with zarith.
rewrite h3 at 1.
ring.
assert (0 <= (x + 1) mod y < y).
  apply ZOmod_lt_pos_pos; omega.
omega.
Qed.
(* DO NOT EDIT BELOW *)


