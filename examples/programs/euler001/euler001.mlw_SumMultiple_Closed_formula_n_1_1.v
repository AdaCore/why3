(* Beware! Only edit allowed sections below    *)
(* This file is generated by Why3's Coq driver *)
Require Import ZArith.
Require Import Rbase.
Require Import Zdiv.
Parameter ghost : forall (a:Type), Type.

Definition unit  := unit.

Parameter ignore: forall (a:Type), a  -> unit.

Implicit Arguments ignore.

Parameter label_ : Type.

Parameter at1: forall (a:Type), a -> label_  -> a.

Implicit Arguments at1.

Parameter old: forall (a:Type), a  -> a.

Implicit Arguments old.

Axiom Abs_pos : forall (x:Z), (0%Z <= (Zabs x))%Z.

Axiom Div_mod : forall (x:Z) (y:Z), (~ (y = 0%Z)) ->
  (x = ((y * (Zdiv x y))%Z + (Zmod x y))%Z).

Axiom Div_bound : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z <  y)%Z) ->
  ((0%Z <= (Zdiv x y))%Z /\ ((Zdiv x y) <= x)%Z).

Axiom Mod_bound : forall (x:Z) (y:Z), (~ (y = 0%Z)) ->
  ((0%Z <= (Zmod x y))%Z /\ ((Zmod x y) <  (Zabs y))%Z).

Axiom Mod_1 : forall (x:Z), ((Zmod x 1%Z) = 0%Z).

Axiom Div_1 : forall (x:Z), ((Zdiv x 1%Z) = x).

Parameter sum_multiple_3_5_lt: Z  -> Z.


Axiom SumEmpty : ((sum_multiple_3_5_lt 0%Z) = 0%Z).

Axiom SumNo : forall (n:Z), (0%Z <= n)%Z -> (((~ ((Zmod n 3%Z) = 0%Z)) /\
  ~ ((Zmod n 5%Z) = 0%Z)) ->
  ((sum_multiple_3_5_lt (n + 1%Z)%Z) = (sum_multiple_3_5_lt n))).

Axiom SumYes : forall (n:Z), (0%Z <= n)%Z -> ((((Zmod n 3%Z) = 0%Z) \/
  ((Zmod n 5%Z) = 0%Z)) ->
  ((sum_multiple_3_5_lt (n + 1%Z)%Z) = ((sum_multiple_3_5_lt n) + n)%Z)).

Axiom div_minus1_1 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z <  y)%Z) ->
  (((Zmod (x + 1%Z)%Z y) = 0%Z) ->
  ((Zdiv (x + 1%Z)%Z y) = ((Zdiv x y) + 1%Z)%Z)).

Axiom div_minus1_2 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z <  y)%Z) ->
  ((~ ((Zmod (x + 1%Z)%Z y) = 0%Z)) -> ((Zdiv (x + 1%Z)%Z y) = (Zdiv x y))).

Definition closed_formula(n:Z): Z := let n3 := (Zdiv n 3%Z) in let n5 :=
  (Zdiv n 5%Z) in let n15 := (Zdiv n 15%Z) in
  (Zdiv ((((3%Z * n3)%Z * (n3 + 1%Z)%Z)%Z + ((5%Z * n5)%Z * (n5 + 1%Z)%Z)%Z)%Z - ((15%Z * n15)%Z * (n15 + 1%Z)%Z)%Z)%Z 2%Z).

Axiom mod_15 : forall (n:Z), (0%Z <= n)%Z -> (((Zmod n 15%Z) = 0%Z) <->
  (((Zmod n 3%Z) = 0%Z) /\ ((Zmod n 5%Z) = 0%Z))).

Axiom Closed_formula_0 : ((closed_formula 0%Z) = (sum_multiple_3_5_lt 0%Z)).

Theorem Closed_formula_n_1 : forall (n:Z), (0%Z <= n)%Z ->
  (((closed_formula n) = (sum_multiple_3_5_lt n)) ->
  (((~ ((Zmod n 3%Z) = 0%Z)) /\ ~ ((Zmod n 5%Z) = 0%Z)) ->
  ((closed_formula (n + 1%Z)%Z) = (sum_multiple_3_5_lt (n + 1%Z)%Z)))).
(* YOU MAY EDIT THE PROOF BELOW *)
unfold closed_formula.
intros n Hnpos Hind (H3,H5).
rewrite div_minus1_2; auto with zarith.

Qed.
(* DO NOT EDIT BELOW *)


