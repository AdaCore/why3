(* Beware! Only edit allowed sections below    *)
(* This file is generated by Why3's Coq driver *)
Require Import ZArith.
Require Import Rbase.
Require Import Zdiv.
Parameter ghost : forall (a:Type), Type.

Definition unit  := unit.

Parameter ignore: forall (a:Type), a  -> unit.

Implicit Arguments ignore.

Parameter label_ : Type.

Parameter at1: forall (a:Type), a -> label_  -> a.

Implicit Arguments at1.

Parameter old: forall (a:Type), a  -> a.

Implicit Arguments old.

Parameter fib: Z  -> Z.


Axiom fib0 : ((fib 0%Z) = 1%Z).

Axiom fib1 : ((fib 1%Z) = 2%Z).

Axiom fibn : forall (n:Z), (2%Z <= n)%Z ->
  ((fib n) = ((fib (n - 1%Z)%Z) + (fib (n - 2%Z)%Z))%Z).

Axiom Abs_pos : forall (x:Z), (0%Z <= (Zabs x))%Z.

Axiom Div_mod : forall (x:Z) (y:Z), (~ (y = 0%Z)) ->
  (x = ((y * (Zdiv x y))%Z + (Zmod x y))%Z).

Axiom Div_bound : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z <  y)%Z) ->
  ((0%Z <= (Zdiv x y))%Z /\ ((Zdiv x y) <= x)%Z).

Axiom Mod_bound : forall (x:Z) (y:Z), (~ (y = 0%Z)) ->
  ((0%Z <= (Zmod x y))%Z /\ ((Zmod x y) <  (Zabs y))%Z).

Axiom Mod_1 : forall (x:Z), ((Zmod x 1%Z) = 0%Z).

Axiom Div_1 : forall (x:Z), ((Zdiv x 1%Z) = x).

Theorem fib_even : forall (n:Z), (0%Z <= n)%Z ->
  (((Zmod (fib n) 2%Z) = 0%Z) <-> ((Zmod n 3%Z) = 1%Z)).
(* YOU MAY EDIT THE PROOF BELOW *)
apply Zlt_lower_bound_ind.
intros n Hind Hnpos.
assert (h: (n=0 \/ n=1 \/ n >= 2)%Z) by omega; clear Hnpos.
destruct h as [h0|[h1|hn]].
subst n; rewrite fib0; intuition.
subst n; rewrite fib1; intuition.
rewrite fibn; auto with zarith.
rewrite Zplus_mod.
assert (h: (0 <= (n mod 3) < 3)%Z).
  apply Z_mod_lt; auto with zarith.
assert (h':( n mod 3 = 0 \/ n mod 3 = 1 \/ n mod 3 = 2)%Z)
  by omega.
clear h.
destruct h' as [h0|[h1|h2]].
split; auto with zarith.

SearchAbout Zmod.
assert
Qed.
(* DO NOT EDIT BELOW *)


