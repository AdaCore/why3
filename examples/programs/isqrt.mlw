
(* Integer square root *)

module M

  use import int.Int
  use import module ref.Ref

  function sqr (x:int) : int = x * x

  let isqrt (x:int) : int =
    { x >= 0 }
    let count = ref 0 in
    let sum = ref 1 in
    while !sum <= x do
      invariant { !count >= 0 /\ x >= sqr !count /\ !sum = sqr (!count+1) }
      variant   { x - !count }
      count := !count + 1;
      sum := !sum + 2 * !count + 1
    done;
    !count
    { result >= 0 /\ sqr result <= x /\ x < sqr (result + 1) }

  let main () =
    { }
    isqrt 17
    { result = 4 }

end

(*
Local Variables:
compile-command: "unset LANG; make -C ../.. examples/programs/isqrt.gui"
End:
*)
