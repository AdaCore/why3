<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Eprover" version="1.9.1-001" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../mp2.mlw" proved="true">
<theory name="N" proved="true">
 <goal name="VC map_eq_shift" expl="VC for map_eq_shift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC map_eq_shift.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC map_eq_shift_zero" expl="VC for map_eq_shift_zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC map_eq_shift_zero.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="6"/></proof>
  </goal>
  <goal name="VC map_eq_shift_zero.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="VC map_eq_shift_zero.2" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="3"/></proof>
  </goal>
  <goal name="VC map_eq_shift_zero.3" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC map_eq_shift_zero.3.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC map_eq_shift_zero.3.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.00" steps="10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC map_eq_shift_zero.4" expl="postcondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC map_eq_shift_zero.4.0" expl="postcondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="limb_max_bound" proved="true">
 <proof prover="9"><result status="valid" time="0.02" steps="2"/></proof>
 </goal>
 <goal name="VC prod_compat_strict_r" expl="VC for prod_compat_strict_r" proved="true">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC prod_compat_r" expl="VC for prod_compat_r" proved="true">
 <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="7"/></proof>
 </goal>
 <goal name="VC value_sub" expl="VC for value_sub" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_frame" expl="VC for value_sub_frame" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_frame.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_frame.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="10"/></proof>
  </goal>
  <goal name="VC value_sub_frame.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_frame_shift" expl="VC for value_sub_frame_shift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_frame_shift.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.2" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="9"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.3" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.4" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC value_sub_frame_shift.4.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC value_sub_frame_shift.4.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.17"/></proof>
    <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC value_sub_frame_shift.5" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_tail" expl="VC for value_sub_tail" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_tail.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_tail.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_tail.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_concat" expl="VC for value_sub_concat" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_concat.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
  <goal name="VC value_sub_concat.1" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="6"/></proof>
  </goal>
  <goal name="VC value_sub_concat.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="6"/></proof>
  </goal>
  <goal name="VC value_sub_concat.3" expl="postcondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_head" expl="VC for value_sub_head" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_head.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="4"/></proof>
  </goal>
  <goal name="VC value_sub_head.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_update" expl="VC for value_sub_update" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_update.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="9"/></proof>
  </goal>
  <goal name="VC value_sub_update.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="10"/></proof>
  </goal>
  <goal name="VC value_sub_update.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="7"/></proof>
  </goal>
  <goal name="VC value_sub_update.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="VC value_sub_update.4" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="VC value_sub_update.5" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="VC value_sub_update.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_zero" expl="VC for value_zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_zero.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="5"/></proof>
  </goal>
  <goal name="VC value_zero.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="11"/></proof>
  </goal>
  <goal name="VC value_zero.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_update_no_change" expl="VC for value_sub_update_no_change" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_update_no_change.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
  <goal name="VC value_sub_update_no_change.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_shift_no_change" expl="VC for value_sub_shift_no_change" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_shift_no_change.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="15"/></proof>
  </goal>
  <goal name="VC value_sub_shift_no_change.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_lower_bound" expl="VC for value_sub_lower_bound" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_lower_bound.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="4"/></proof>
  </goal>
  <goal name="VC value_sub_lower_bound.1" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_lower_bound.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_upper_bound" expl="VC for value_sub_upper_bound" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_upper_bound.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.1" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.2" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="7"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="7"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="48"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_lower_bound_tight" expl="VC for value_sub_lower_bound_tight" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_lower_bound_tight.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="10"/></proof>
  </goal>
  <goal name="VC value_sub_lower_bound_tight.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="6"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_upper_bound_tight" expl="VC for value_sub_upper_bound_tight" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_upper_bound_tight.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="4"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound_tight.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_tail" expl="VC for value_tail" proved="true">
 <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
 <goal name="VC value_concat" expl="VC for value_concat" proved="true">
 <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="26"/></proof>
 </goal>
 <goal name="VC copy" expl="VC for copy" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC copy.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="VC copy.2" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="VC copy.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC copy.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC copy.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.8" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.10" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.11" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.12" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.13" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC copy.13.0" expl="loop invariant init" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC copy.14" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.15" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="51"/></proof>
  </goal>
  <goal name="VC copy.16" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC copy.16.0" expl="VC for copy" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC copy.16.1" expl="VC for copy" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC copy.17" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="63"/></proof>
  </goal>
  <goal name="VC copy.18" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="71"/></proof>
  </goal>
  <goal name="VC copy.19" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.20" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.21" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.12" steps="71"/></proof>
  </goal>
  <goal name="VC copy.22" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="198"/></proof>
  </goal>
  <goal name="VC copy.23" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.24" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.25" expl="loop invariant preservation" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="76"/></proof>
  </goal>
  <goal name="VC copy.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.27" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.29" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="VC copy.30" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="VC copy.31" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="VC copy.32" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.33" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compare_same_size" expl="VC for compare_same_size" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC compare_same_size.0" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="9"/></proof>
  </goal>
  <goal name="VC compare_same_size.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="VC compare_same_size.2" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="21"/></proof>
  </goal>
  <goal name="VC compare_same_size.3" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
  <goal name="VC compare_same_size.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="VC compare_same_size.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="VC compare_same_size.6" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="27"/></proof>
  </goal>
  <goal name="VC compare_same_size.7" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="VC compare_same_size.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="VC compare_same_size.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="28"/></proof>
  </goal>
  <goal name="VC compare_same_size.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="20"/></proof>
  </goal>
  <goal name="VC compare_same_size.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="21"/></proof>
  </goal>
  <goal name="VC compare_same_size.12" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="41"/></proof>
  </goal>
  <goal name="VC compare_same_size.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="23"/></proof>
  </goal>
  <goal name="VC compare_same_size.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="24"/></proof>
  </goal>
  <goal name="VC compare_same_size.15" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC compare_same_size.16" expl="assertion" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC compare_same_size.16.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compare_same_size.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC compare_same_size.17.0" expl="VC for compare_same_size" proved="true">
   <proof prover="1"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC compare_same_size.17.1" expl="VC for compare_same_size" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compare_same_size.18" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC compare_same_size.19" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC compare_same_size.20" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="26"/></proof>
  </goal>
  <goal name="VC compare_same_size.21" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC compare_same_size.22" expl="assertion" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC compare_same_size.22.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compare_same_size.23" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC compare_same_size.23.0" expl="VC for compare_same_size" proved="true">
   <proof prover="1"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC compare_same_size.23.1" expl="VC for compare_same_size" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compare_same_size.24" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.23" steps="43"/></proof>
  </goal>
  <goal name="VC compare_same_size.25" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC compare_same_size.26" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC compare_same_size.27" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="VC compare_same_size.28" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="VC compare_same_size.29" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="VC compare_same_size.30" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="VC compare_same_size.31" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC compare_same_size.32" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.10" steps="27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC is_zero" expl="VC for is_zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC is_zero.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="VC is_zero.1" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="9"/></proof>
  </goal>
  <goal name="VC is_zero.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="VC is_zero.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="VC is_zero.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="VC is_zero.5" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC is_zero.6" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="16"/></proof>
  </goal>
  <goal name="VC is_zero.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="VC is_zero.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="21"/></proof>
  </goal>
  <goal name="VC is_zero.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="22"/></proof>
  </goal>
  <goal name="VC is_zero.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="31"/></proof>
  </goal>
  <goal name="VC is_zero.11" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.12" steps="25"/></proof>
  </goal>
  <goal name="VC is_zero.12" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="78"/></proof>
  </goal>
  <goal name="VC is_zero.13" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="21"/></proof>
  </goal>
  <goal name="VC is_zero.14" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="VC is_zero.15" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="22"/></proof>
  </goal>
  <goal name="VC is_zero.16" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="VC is_zero.17" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="VC is_zero.18" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC is_zero.19" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC zero" expl="VC for zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC zero.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="VC zero.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="15"/></proof>
  </goal>
  <goal name="VC zero.2" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="10"/></proof>
  </goal>
  <goal name="VC zero.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="39"/></proof>
  </goal>
  <goal name="VC zero.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC zero.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="VC zero.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="25"/></proof>
  </goal>
  <goal name="VC zero.7" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="33"/></proof>
  </goal>
  <goal name="VC zero.8" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="35"/></proof>
  </goal>
  <goal name="VC zero.9" expl="loop variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="29"/></proof>
  </goal>
  <goal name="VC zero.10" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="VC zero.11" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.36" steps="104"/></proof>
  </goal>
  <goal name="VC zero.12" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="45"/></proof>
  </goal>
  <goal name="VC zero.13" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="VC zero.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_limb" expl="VC for add_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="VC add_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="21"/></proof>
  </goal>
  <goal name="VC add_limb.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="11"/></proof>
  </goal>
  <goal name="VC add_limb.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC add_limb.4" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="60"/></proof>
  </goal>
  <goal name="VC add_limb.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_limb.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="1.09"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="34"/></proof>
  </goal>
  <goal name="VC add_limb.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="21"/></proof>
  </goal>
  <goal name="VC add_limb.8" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limb.8.0" expl="VC for add_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.10"/></proof>
   <proof prover="1"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC add_limb.8.1" expl="VC for add_limb" proved="true">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limb.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC add_limb.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_limb.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_limb.12" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
   <goal name="VC add_limb.12.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC add_limb.12.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add_limb.12.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.23"/></proof>
     </goal>
     <goal name="VC add_limb.12.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.27"/></proof>
     </goal>
     <goal name="VC add_limb.12.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.27"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limb.13" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_limb.14" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_limb.15" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_limb.16" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_limb.17" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_limb.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_limb.19" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC add_limb.20" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limb.20.0" expl="postcondition" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC add_limb.20.0.0" expl="postcondition" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="17"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC add_limb.20.1" expl="postcondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="25"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limb.21" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="25"/></proof>
  </goal>
  <goal name="VC add_limb.22" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_limb.23" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="35"/></proof>
  </goal>
  <goal name="VC add_limb.24" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="9"><result status="valid" time="0.08" steps="23"/></proof>
  </goal>
  <goal name="VC add_limb.25" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="23"/></proof>
  </goal>
  <goal name="VC add_limb.26" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_limb.27" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="VC add_limb.28" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="43"/></proof>
  </goal>
  <goal name="VC add_limb.29" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="113"/></proof>
  </goal>
  <goal name="VC add_limb.30" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="52"/></proof>
  </goal>
  <goal name="VC add_limb.31" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="58"/></proof>
  </goal>
  <goal name="VC add_limb.32" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="44"/></proof>
  </goal>
  <goal name="VC add_limb.33" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_limb.34" expl="loop variant decrease" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add_limb.35" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="VC add_limb.36" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="46"/></proof>
  </goal>
  <goal name="VC add_limb.37" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="77"/></proof>
  </goal>
  <goal name="VC add_limb.38" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="69"/></proof>
  </goal>
  <goal name="VC add_limb.39" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="VC add_limb.40" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="33"/></proof>
  </goal>
  <goal name="VC add_limb.41" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_limbs" expl="VC for add_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_limbs.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="24"/></proof>
  </goal>
  <goal name="VC add_limbs.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="25"/></proof>
  </goal>
  <goal name="VC add_limbs.2" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limbs.2.0" expl="VC for add_limbs" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="11"/></proof>
   </goal>
   <goal name="VC add_limbs.2.1" expl="VC for add_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limbs.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="63"/></proof>
  </goal>
  <goal name="VC add_limbs.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.10" steps="14"/></proof>
  </goal>
  <goal name="VC add_limbs.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_limbs.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="36"/></proof>
  </goal>
  <goal name="VC add_limbs.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="37"/></proof>
  </goal>
  <goal name="VC add_limbs.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.08" steps="24"/></proof>
  </goal>
  <goal name="VC add_limbs.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="41"/></proof>
  </goal>
  <goal name="VC add_limbs.10" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.93"/></proof>
  </goal>
  <goal name="VC add_limbs.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="9"><result status="valid" time="0.10" steps="36"/></proof>
  </goal>
  <goal name="VC add_limbs.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.12" steps="37"/></proof>
  </goal>
  <goal name="VC add_limbs.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="VC add_limbs.14" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add_limbs.14.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC add_limbs.14.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add_limbs.14.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.21"/></proof>
     </goal>
     <goal name="VC add_limbs.14.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.23"/></proof>
     </goal>
     <goal name="VC add_limbs.14.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limbs.15" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_limbs.16" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limbs.16.0" expl="integer overflow" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limbs.17" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_limbs.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_limbs.19" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_limbs.20" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_limbs.21" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC add_limbs.22" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="22"/></proof>
  </goal>
  <goal name="VC add_limbs.23" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="VC add_limbs.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add" expl="VC for add" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="28"/></proof>
  </goal>
  <goal name="VC add.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.3" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="69"/></proof>
  </goal>
  <goal name="VC add.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC add.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="39"/></proof>
  </goal>
  <goal name="VC add.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.9" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.9.0" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add.9.1" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.10" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.86"/></proof>
  </goal>
  <goal name="VC add.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.14" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add.14.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC add.14.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add.14.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.24"/></proof>
     </goal>
     <goal name="VC add.14.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.14"/></proof>
     </goal>
     <goal name="VC add.14.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.19"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.15" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add.16" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.17" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.18" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.19" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.20" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add.21" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC add.22" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="VC add.23" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC add.24" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="27"/></proof>
  </goal>
  <goal name="VC add.25" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add.26" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="51"/></proof>
  </goal>
  <goal name="VC add.27" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.28" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.29" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.30" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="39"/></proof>
  </goal>
  <goal name="VC add.31" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.32.0" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="48"/></proof>
   </goal>
   <goal name="VC add.32.1" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.33" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="63"/></proof>
  </goal>
  <goal name="VC add.34" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="64"/></proof>
  </goal>
  <goal name="VC add.35" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.36" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.37" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="1.05"/></proof>
  </goal>
  <goal name="VC add.38" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add.38.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC add.38.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add.38.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.22"/></proof>
     </goal>
     <goal name="VC add.38.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC add.38.0.0.2" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.20" steps="158"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.39" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="76"/></proof>
  </goal>
  <goal name="VC add.40" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="78"/></proof>
  </goal>
  <goal name="VC add.41" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.42" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="63"/></proof>
  </goal>
  <goal name="VC add.43" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="65"/></proof>
  </goal>
  <goal name="VC add.44" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="VC add.45" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="91"/></proof>
  </goal>
  <goal name="VC add.46" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="VC add.47" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.48" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add.49" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.50" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="39"/></proof>
  </goal>
  <goal name="VC add.51" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.51.0" expl="VC for add" proved="true">
   <proof prover="0"><result status="valid" time="5.13"/></proof>
   </goal>
   <goal name="VC add.51.1" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.52" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.21" steps="141"/></proof>
  </goal>
  <goal name="VC add.53" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.54" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.55" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add.55.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC add.55.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add.55.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.21"/></proof>
     </goal>
     <goal name="VC add.55.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.19"/></proof>
     </goal>
     <goal name="VC add.55.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.56" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC add.57" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.25" steps="72"/></proof>
  </goal>
  <goal name="VC add.58" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.59" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add.60" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.61" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.62" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC add.63" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.64" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add.65" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="36"/></proof>
  </goal>
  <goal name="VC add.66" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.67" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.68" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.68.0" expl="VC for add" proved="true">
   <proof prover="9"><result status="valid" time="0.10" steps="45"/></proof>
   </goal>
   <goal name="VC add.68.1" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.69" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="61"/></proof>
  </goal>
  <goal name="VC add.70" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="62"/></proof>
  </goal>
  <goal name="VC add.71" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.72" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.73" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.82"/></proof>
  </goal>
  <goal name="VC add.74" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add.74.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC add.74.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add.74.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC add.74.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.16"/></proof>
     </goal>
     <goal name="VC add.74.0.0.2" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.18" steps="156"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.75" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="74"/></proof>
  </goal>
  <goal name="VC add.76" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.77" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.78" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add.79" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.79.0" expl="loop invariant preservation" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="63"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.80" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.81" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.12" steps="89"/></proof>
  </goal>
  <goal name="VC add.82" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="45"/></proof>
  </goal>
  <goal name="VC add.83" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.84" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_in_place" expl="VC for add_in_place" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_in_place.0" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="22"/></proof>
  </goal>
  <goal name="VC add_in_place.1" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="23"/></proof>
  </goal>
  <goal name="VC add_in_place.2" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="12"/></proof>
  </goal>
  <goal name="VC add_in_place.3" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="59"/></proof>
  </goal>
  <goal name="VC add_in_place.4" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC add_in_place.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_in_place.6" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="6"/></proof>
  </goal>
  <goal name="VC add_in_place.7" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="VC add_in_place.8" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="VC add_in_place.9" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="36"/></proof>
  </goal>
  <goal name="VC add_in_place.10" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC add_in_place.11" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.11.0" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
   <goal name="VC add_in_place.11.1" expl="VC for add_in_place" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.12" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="51"/></proof>
  </goal>
  <goal name="VC add_in_place.13" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.78"/></proof>
  </goal>
  <goal name="VC add_in_place.14" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="38"/></proof>
  </goal>
  <goal name="VC add_in_place.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_in_place.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_in_place.17" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add_in_place.17.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC add_in_place.17.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add_in_place.17.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.21"/></proof>
     </goal>
     <goal name="VC add_in_place.17.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.15"/></proof>
     </goal>
     <goal name="VC add_in_place.17.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.22"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.18" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_in_place.19" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_in_place.20" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_in_place.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_in_place.22" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_in_place.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_in_place.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="VC add_in_place.25" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.25.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.26" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add_in_place.27" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="25"/></proof>
  </goal>
  <goal name="VC add_in_place.28" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC add_in_place.29" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="VC add_in_place.30" expl="loop invariant init" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add_in_place.30.0" expl="loop invariant init" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC add_in_place.30.0.0" expl="loop invariant init" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="40"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.31" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="VC add_in_place.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.32.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add_in_place.32.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add_in_place.32.2" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="55"/></proof>
   </goal>
   <goal name="VC add_in_place.32.3" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.33" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="VC add_in_place.34" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_in_place.35" expl="precondition" proved="true">
  <proof prover="9" timelimit="50" memlimit="2000"><result status="valid" time="0.04" steps="39"/></proof>
  </goal>
  <goal name="VC add_in_place.36" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="VC add_in_place.37" expl="postcondition" proved="true">
  <proof prover="9" timelimit="50" memlimit="2000"><result status="valid" time="0.03" steps="41"/></proof>
  </goal>
  <goal name="VC add_in_place.38" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="VC add_in_place.39" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.39.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.40" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC add_in_place.41" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="VC add_in_place.42" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="38"/></proof>
  </goal>
  <goal name="VC add_in_place.43" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="41"/></proof>
  </goal>
  <goal name="VC add_in_place.44" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="VC add_in_place.45" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="VC add_in_place.46" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.46.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.25" steps="138"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.47" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.47.0" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="70"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.48" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_in_place.49" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="VC add_in_place.50" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add_in_place.50.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC add_in_place.50.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC add_in_place.50.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC add_in_place.50.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.36"/></proof>
     </goal>
     <goal name="VC add_in_place.50.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.31"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.51" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.13" steps="66"/></proof>
  </goal>
  <goal name="VC add_in_place.52" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC add_in_place.53" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_in_place.54" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add_in_place.55" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.26" steps="59"/></proof>
  </goal>
  <goal name="VC add_in_place.56" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_in_place.57" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.69"/></proof>
  </goal>
  <goal name="VC add_in_place.58" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC add_in_place.59" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="VC add_in_place.60" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="35"/></proof>
  </goal>
  <goal name="VC add_in_place.61" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="36"/></proof>
  </goal>
  <goal name="VC add_in_place.62" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="50"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC incr" expl="VC for incr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC incr.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC incr.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC incr.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr.3" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC incr.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr.6" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="87"/></proof>
  </goal>
  <goal name="VC incr.7" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC incr.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr.9" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC incr.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC incr.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr.12" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="118"/></proof>
  </goal>
  <goal name="VC incr.13" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="45"/></proof>
  </goal>
  <goal name="VC incr.14" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.58"/></proof>
  </goal>
  <goal name="VC incr.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr.17" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC incr.17.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC incr.17.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC incr.17.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.21"/></proof>
     </goal>
     <goal name="VC incr.17.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.27"/></proof>
     </goal>
     <goal name="VC incr.17.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.24"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC incr.18" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="VC incr.19" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC incr.19.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC incr.19.1" expl="VC for incr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC incr.19.2" expl="VC for incr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC incr.19.3" expl="VC for incr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC incr.19.4" expl="VC for incr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC incr.20" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr.21" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC incr.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr.25" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC incr.25.0" expl="loop invariant preservation" proved="true">
   <transf name="apply" proved="true" arg1="H14">
    <goal name="VC incr.25.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC incr.26" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC incr.27" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr.28" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr.29" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC incr.29.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC incr.29.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC incr.29.2" expl="VC for incr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="33"/></proof>
   </goal>
   <goal name="VC incr.29.3" expl="VC for incr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC incr.30" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC incr.30.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC incr.30.0.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC incr.31" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC incr.32" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC incr_1" expl="VC for incr_1" proved="true">
 <transf name="split_intros_goal_wp" proved="true" >
  <goal name="VC incr_1.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC incr_1.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC incr_1.5" expl="VC for incr_1" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.6" expl="VC for incr_1" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr_1.7" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="81"/></proof>
  </goal>
  <goal name="VC incr_1.8" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC incr_1.9" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC incr_1.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC incr_1.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr_1.12" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="VC incr_1.13" expl="VC for incr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="VC incr_1.14" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="103"/></proof>
  </goal>
  <goal name="VC incr_1.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr_1.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.17" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="VC incr_1.18" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC incr_1.19" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC incr_1.20" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC incr_1.21" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="VC incr_1.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.25" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="VC incr_1.26" expl="VC for incr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="57"/></proof>
  </goal>
  <goal name="VC incr_1.27" expl="VC for incr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="60"/></proof>
  </goal>
  <goal name="VC incr_1.28" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC incr_1.29" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.30" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr_1.31" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="114"/></proof>
  </goal>
  <goal name="VC incr_1.32" expl="VC for incr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="VC incr_1.33" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="101"/></proof>
  </goal>
  <goal name="VC incr_1.34" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr_1.35" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr_1.36" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="VC incr_1.37" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="VC incr_1.38" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC incr_1.39" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC incr_1.40" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="106"/></proof>
  </goal>
  <goal name="VC incr_1.41" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.42" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC incr_1.43" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.44" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="47"/></proof>
  </goal>
  <goal name="VC incr_1.45" expl="VC for incr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="57"/></proof>
  </goal>
  <goal name="VC incr_1.46" expl="VC for incr_1" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC incr_1.47" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC incr_1.48" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC incr_1.49" expl="VC for incr_1" proved="true">
  <transf name="split_intros_goal_wp" proved="true" >
   <goal name="VC incr_1.49.0" expl="VC for incr_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC incr_1.49.1" expl="VC for incr_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC incr_1.49.2" expl="VC for incr_1" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
   <goal name="VC incr_1.49.3" expl="VC for incr_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC incr_1.50" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC incr_1.51" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC incr_1.52" expl="VC for incr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="34"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub_limb" expl="VC for sub_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub_limb.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="20"/></proof>
  </goal>
  <goal name="VC sub_limb.1" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC sub_limb.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.4" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="60"/></proof>
  </goal>
  <goal name="VC sub_limb.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_limb.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="1.07"/></proof>
  </goal>
  <goal name="VC sub_limb.7" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_limb.7.0" expl="VC for sub_limb" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC sub_limb.7.1" expl="VC for sub_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limb.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="38"/></proof>
  </goal>
  <goal name="VC sub_limb.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC sub_limb.10" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC sub_limb.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sub_limb.12" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub_limb.12.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub_limb.12.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub_limb.12.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.17"/></proof>
     </goal>
     <goal name="VC sub_limb.12.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.15"/></proof>
     </goal>
     <goal name="VC sub_limb.12.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limb.13" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.14" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limb.15" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.16" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.17" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limb.18" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.19" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC sub_limb.20" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_limb.20.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="22"/></proof>
   </goal>
   <goal name="VC sub_limb.20.1" expl="postcondition" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC sub_limb.20.1.0" expl="postcondition" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="19"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limb.21" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.22" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="25"/></proof>
  </goal>
  <goal name="VC sub_limb.23" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.24" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.25" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.26" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.27" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="VC sub_limb.28" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="43"/></proof>
  </goal>
  <goal name="VC sub_limb.29" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="113"/></proof>
  </goal>
  <goal name="VC sub_limb.30" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="52"/></proof>
  </goal>
  <goal name="VC sub_limb.31" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="VC sub_limb.32" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.33" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.34" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sub_limb.35" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.36" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limb.37" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="77"/></proof>
  </goal>
  <goal name="VC sub_limb.38" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="69"/></proof>
  </goal>
  <goal name="VC sub_limb.39" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="VC sub_limb.40" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.41" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub_limbs" expl="VC for sub_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub_limbs.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="25"/></proof>
  </goal>
  <goal name="VC sub_limbs.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.3" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="63"/></proof>
  </goal>
  <goal name="VC sub_limbs.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_limbs.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.9" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_limbs.9.0" expl="VC for sub_limbs" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC sub_limbs.9.1" expl="VC for sub_limbs" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limbs.10" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.43"/></proof>
  </goal>
  <goal name="VC sub_limbs.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_limbs.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.14" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub_limbs.14.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub_limbs.14.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub_limbs.14.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.19"/></proof>
     </goal>
     <goal name="VC sub_limbs.14.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC sub_limbs.14.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.22"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limbs.15" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sub_limbs.16" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limbs.17" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limbs.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limbs.20" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC sub_limbs.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.22" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.23" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC sub_limbs.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub" expl="VC for sub" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.2" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="29"/></proof>
  </goal>
  <goal name="VC sub.3" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.3.0" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub.3.1" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.4" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC sub.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub.6" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="17"/></proof>
  </goal>
  <goal name="VC sub.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC sub.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.10" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="45"/></proof>
  </goal>
  <goal name="VC sub.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="VC sub.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="39"/></proof>
  </goal>
  <goal name="VC sub.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.14" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="41"/></proof>
  </goal>
  <goal name="VC sub.15" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub.15.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub.15.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub.15.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC sub.15.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.22"/></proof>
     </goal>
     <goal name="VC sub.15.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.23"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.16" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.17" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.18" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.20" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC sub.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.22" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="25"/></proof>
  </goal>
  <goal name="VC sub.23" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="27"/></proof>
  </goal>
  <goal name="VC sub.24" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.25" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="28"/></proof>
  </goal>
  <goal name="VC sub.26" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="VC sub.27" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="39"/></proof>
  </goal>
  <goal name="VC sub.28" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="40"/></proof>
  </goal>
  <goal name="VC sub.29" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="40"/></proof>
  </goal>
  <goal name="VC sub.30" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="VC sub.31" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.32.0" expl="VC for sub" proved="true">
   <proof prover="0" timelimit="20" memlimit="3000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC sub.32.1" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.33" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="64"/></proof>
  </goal>
  <goal name="VC sub.34" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="65"/></proof>
  </goal>
  <goal name="VC sub.35" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="57"/></proof>
  </goal>
  <goal name="VC sub.36" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.37" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC sub.38" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub.38.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub.38.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub.38.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.23"/></proof>
     </goal>
     <goal name="VC sub.38.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.28"/></proof>
     </goal>
     <goal name="VC sub.38.0.0.2" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.26" steps="160"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.39" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="VC sub.40" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="79"/></proof>
  </goal>
  <goal name="VC sub.41" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.42" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="64"/></proof>
  </goal>
  <goal name="VC sub.43" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.43.0" expl="loop invariant preservation" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="66"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.44" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.45" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="92"/></proof>
  </goal>
  <goal name="VC sub.46" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="49"/></proof>
  </goal>
  <goal name="VC sub.47" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.48" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="50"/></proof>
  </goal>
  <goal name="VC sub.49" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub.50" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.50.0" expl="VC for sub" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC sub.50.1" expl="VC for sub" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.51" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="58"/></proof>
  </goal>
  <goal name="VC sub.52" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.24" steps="145"/></proof>
  </goal>
  <goal name="VC sub.53" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="52"/></proof>
  </goal>
  <goal name="VC sub.54" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="53"/></proof>
  </goal>
  <goal name="VC sub.55" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub.55.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub.55.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub.55.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.22"/></proof>
     </goal>
     <goal name="VC sub.55.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.25"/></proof>
     </goal>
     <goal name="VC sub.55.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.19"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.56" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.26" steps="72"/></proof>
  </goal>
  <goal name="VC sub.57" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.58" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.59" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.60" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC sub.61" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.62" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="98"/></proof>
  </goal>
  <goal name="VC sub.63" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="37"/></proof>
  </goal>
  <goal name="VC sub.64" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="37"/></proof>
  </goal>
  <goal name="VC sub.65" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="37"/></proof>
  </goal>
  <goal name="VC sub.66" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.67" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.67.0" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="46"/></proof>
   </goal>
   <goal name="VC sub.67.1" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.68" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="62"/></proof>
  </goal>
  <goal name="VC sub.69" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="63"/></proof>
  </goal>
  <goal name="VC sub.70" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="55"/></proof>
  </goal>
  <goal name="VC sub.71" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="56"/></proof>
  </goal>
  <goal name="VC sub.72" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.54"/></proof>
  </goal>
  <goal name="VC sub.73" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub.73.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub.73.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub.73.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.33"/></proof>
     </goal>
     <goal name="VC sub.73.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.19"/></proof>
     </goal>
     <goal name="VC sub.73.0.0.2" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.21" steps="158"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.74" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="VC sub.75" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="77"/></proof>
  </goal>
  <goal name="VC sub.76" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.77" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.78" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.79" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.80" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="90"/></proof>
  </goal>
  <goal name="VC sub.81" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="VC sub.82" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.83" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub_in_place" expl="VC for sub_in_place" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub_in_place.0" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC sub_in_place.1" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="23"/></proof>
  </goal>
  <goal name="VC sub_in_place.2" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="VC sub_in_place.3" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
  <goal name="VC sub_in_place.4" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="63"/></proof>
  </goal>
  <goal name="VC sub_in_place.5" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="16"/></proof>
  </goal>
  <goal name="VC sub_in_place.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_in_place.7" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="6"/></proof>
  </goal>
  <goal name="VC sub_in_place.8" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="35"/></proof>
  </goal>
  <goal name="VC sub_in_place.9" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="VC sub_in_place.10" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="37"/></proof>
  </goal>
  <goal name="VC sub_in_place.11" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.11.0" expl="VC for sub_in_place" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC sub_in_place.11.1" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.12" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC sub_in_place.13" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="VC sub_in_place.14" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="VC sub_in_place.15" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="39"/></proof>
  </goal>
  <goal name="VC sub_in_place.16" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC sub_in_place.17" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sub_in_place.18" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub_in_place.18.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub_in_place.18.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub_in_place.18.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC sub_in_place.18.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.24"/></proof>
     </goal>
     <goal name="VC sub_in_place.18.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.19"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.19" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_in_place.20" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.65"/></proof>
  </goal>
  <goal name="VC sub_in_place.25" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.25.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.26" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC sub_in_place.27" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC sub_in_place.28" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.29" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="43"/></proof>
  </goal>
  <goal name="VC sub_in_place.30" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="41"/></proof>
  </goal>
  <goal name="VC sub_in_place.31" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="37"/></proof>
  </goal>
  <goal name="VC sub_in_place.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.32.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC sub_in_place.32.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC sub_in_place.32.2" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="56"/></proof>
   </goal>
   <goal name="VC sub_in_place.32.3" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.33" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC sub_in_place.34" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sub_in_place.35" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="VC sub_in_place.36" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="59"/></proof>
  </goal>
  <goal name="VC sub_in_place.37" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="VC sub_in_place.38" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="43"/></proof>
  </goal>
  <goal name="VC sub_in_place.39" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.39.0" expl="postcondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.40" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="48"/></proof>
  </goal>
  <goal name="VC sub_in_place.41" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="VC sub_in_place.42" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="39"/></proof>
  </goal>
  <goal name="VC sub_in_place.43" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="VC sub_in_place.44" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="43"/></proof>
  </goal>
  <goal name="VC sub_in_place.45" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.45.0" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="44"/></proof>
   </goal>
   <goal name="VC sub_in_place.45.1" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.46" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.27" steps="142"/></proof>
  </goal>
  <goal name="VC sub_in_place.47" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="71"/></proof>
  </goal>
  <goal name="VC sub_in_place.48" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_in_place.49" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="VC sub_in_place.50" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC sub_in_place.50.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC sub_in_place.50.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC sub_in_place.50.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.24"/></proof>
     </goal>
     <goal name="VC sub_in_place.50.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.23"/></proof>
     </goal>
     <goal name="VC sub_in_place.50.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.36"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.51" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.17" steps="68"/></proof>
  </goal>
  <goal name="VC sub_in_place.52" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.53" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_in_place.54" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.55" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_in_place.56" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.73"/></proof>
  </goal>
  <goal name="VC sub_in_place.57" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC sub_in_place.58" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.58.0" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="92"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.59" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="36"/></proof>
  </goal>
  <goal name="VC sub_in_place.60" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="VC sub_in_place.61" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="51"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC decr" expl="VC for decr" proved="true">
 <transf name="split_intros_goal_wp" proved="true" >
  <goal name="VC decr.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.3" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC decr.4" expl="VC for decr" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.5" expl="VC for decr" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.6" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
  <goal name="VC decr.7" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="VC decr.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.9" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC decr.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.12" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="117"/></proof>
  </goal>
  <goal name="VC decr.13" expl="VC for decr" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="VC decr.14" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="1.06" steps="227"/></proof>
  </goal>
  <goal name="VC decr.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.17" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
   <goal name="VC decr.17.0" expl="assertion" proved="true">
   <transf name="reflection_f" proved="true" arg1="mp_decision">
    <goal name="VC decr.17.0.0" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.36"/></proof>
    </goal>
    <goal name="VC decr.17.0.1" proved="true">
    <proof prover="3"><result status="valid" time="0.28"/></proof>
    </goal>
    <goal name="VC decr.17.0.2" proved="true">
    <proof prover="3"><result status="valid" time="0.23"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC decr.18" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC decr.19" expl="assertion" proved="true">
  <transf name="split_intros_goal_wp" proved="true" >
   <goal name="VC decr.19.0" expl="VC for decr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC decr.19.1" expl="VC for decr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC decr.19.2" expl="VC for decr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC decr.19.3" expl="VC for decr" proved="true">
   <proof prover="3"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC decr.19.4" expl="VC for decr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC decr.19.5" expl="VC for decr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC decr.20" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.21" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC decr.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr.25" expl="VC for decr" proved="true">
  <proof prover="0"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="VC decr.26" expl="VC for decr" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC decr.27" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.28" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr.29" expl="VC for decr" proved="true">
  <transf name="split_intros_goal_wp" proved="true" >
   <goal name="VC decr.29.0" expl="VC for decr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC decr.29.1" expl="VC for decr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC decr.29.2" expl="VC for decr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="34"/></proof>
   </goal>
   <goal name="VC decr.29.3" expl="VC for decr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC decr.30" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr.31" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC decr.32" expl="VC for decr" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC decr_1" expl="VC for decr_1" proved="true">
 <transf name="split_intros_goal_wp" proved="true" >
  <goal name="VC decr_1.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC decr_1.5" expl="VC for decr_1" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.6" expl="VC for decr_1" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.7" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="81"/></proof>
  </goal>
  <goal name="VC decr_1.8" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC decr_1.9" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="VC decr_1.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC decr_1.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr_1.12" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="VC decr_1.13" expl="VC for decr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="VC decr_1.14" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="101"/></proof>
  </goal>
  <goal name="VC decr_1.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr_1.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr_1.17" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="VC decr_1.18" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC decr_1.19" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="1.15" steps="267"/></proof>
  </goal>
  <goal name="VC decr_1.20" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC decr_1.21" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="VC decr_1.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr_1.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr_1.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.25" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="VC decr_1.26" expl="VC for decr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="57"/></proof>
  </goal>
  <goal name="VC decr_1.27" expl="VC for decr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="60"/></proof>
  </goal>
  <goal name="VC decr_1.28" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC decr_1.29" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr_1.30" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr_1.31" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="114"/></proof>
  </goal>
  <goal name="VC decr_1.32" expl="VC for decr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="VC decr_1.33" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="99"/></proof>
  </goal>
  <goal name="VC decr_1.34" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr_1.35" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.36" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="VC decr_1.37" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC decr_1.38" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC decr_1.39" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr_1.40" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="106"/></proof>
  </goal>
  <goal name="VC decr_1.41" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr_1.42" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr_1.43" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.44" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="VC decr_1.45" expl="VC for decr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="57"/></proof>
  </goal>
  <goal name="VC decr_1.46" expl="VC for decr_1" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="VC decr_1.47" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.48" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC decr_1.49" expl="VC for decr_1" proved="true">
  <transf name="split_intros_goal_wp" proved="true" >
   <goal name="VC decr_1.49.0" expl="VC for decr_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC decr_1.49.1" expl="VC for decr_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC decr_1.49.2" expl="VC for decr_1" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
   <goal name="VC decr_1.49.3" expl="VC for decr_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC decr_1.50" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decr_1.51" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="VC decr_1.52" expl="VC for decr_1" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul_limb" expl="VC for mul_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mul_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limb.1" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.1.0" expl="integer overflow" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.2" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="11"/></proof>
  </goal>
  <goal name="VC mul_limb.3" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="VC mul_limb.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC mul_limb.5" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.5.0" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC mul_limb.5.1" expl="VC for mul_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.7" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.7.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.9" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.9.0" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limb.9.1" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.10" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="46"/></proof>
  </goal>
  <goal name="VC mul_limb.11" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="46"/></proof>
  </goal>
  <goal name="VC mul_limb.12" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="36"/></proof>
  </goal>
  <goal name="VC mul_limb.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.15" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.28" steps="38"/></proof>
  </goal>
  <goal name="VC mul_limb.16" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limb.16.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC mul_limb.16.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC mul_limb.16.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.34"/></proof>
     </goal>
     <goal name="VC mul_limb.16.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.32"/></proof>
     </goal>
     <goal name="VC mul_limb.16.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.17" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.18" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC mul_limb.19" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC mul_limb.20" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.21" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limb.22" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC mul_limb.23" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC mul_limb.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC addmul_limb" expl="VC for addmul_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC addmul_limb.0" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.0.0" expl="integer overflow" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.2" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.3" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="59"/></proof>
  </goal>
  <goal name="VC addmul_limb.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.7" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.7.0" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.7.1" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.8" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.8.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.10" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.10.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.11" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="6.40"/></proof>
  </goal>
  <goal name="VC addmul_limb.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC addmul_limb.13" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.13.0" expl="VC for addmul_limb" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limb.13.0.0" expl="VC for addmul_limb" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC addmul_limb.13.0.0.0" expl="VC for addmul_limb" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.14"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limb.13.1" expl="VC for addmul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.14" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.14.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC addmul_limb.14.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.65"/></proof>
   </goal>
   <goal name="VC addmul_limb.14.2" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.15" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="4.05"/></proof>
  </goal>
  <goal name="VC addmul_limb.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.16.0" expl="VC for addmul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.16.1" expl="VC for addmul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC addmul_limb.16.2" expl="VC for addmul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.16.3" expl="VC for addmul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.16.4" expl="VC for addmul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC addmul_limb.16.5" expl="VC for addmul_limb" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limb.16.5.0" expl="VC for addmul_limb" proved="true">
    <transf name="apply" proved="true" arg1="prod_compat_r">
     <goal name="VC addmul_limb.16.5.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC addmul_limb.16.5.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limb.16.6" expl="VC for addmul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.16.7" expl="VC for addmul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limb.19" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.20" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limb.21" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.22" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limb.22.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC addmul_limb.22.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC addmul_limb.22.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.33"/></proof>
     </goal>
     <goal name="VC addmul_limb.22.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.27"/></proof>
     </goal>
     <goal name="VC addmul_limb.22.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.37"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.23" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC addmul_limb.24" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limb.25" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC addmul_limb.27" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.76"/></proof>
  </goal>
  <goal name="VC addmul_limb.29" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC addmul_limb.30" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC addmul_limb.31" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul_limbs" expl="VC for mul_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mul_limbs.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="27"/></proof>
  </goal>
  <goal name="VC mul_limbs.1" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="33"/></proof>
  </goal>
  <goal name="VC mul_limbs.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.3" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="VC mul_limbs.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.6" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.6.0" expl="VC for mul_limbs" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC mul_limbs.6.1" expl="VC for mul_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.7" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="91"/></proof>
  </goal>
  <goal name="VC mul_limbs.8" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="VC mul_limbs.9" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.10" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.11" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.12" expl="loop invariant init" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.12.0" expl="loop invariant init" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC mul_limbs.12.0.0" expl="loop invariant init" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC mul_limbs.12.0.0.0" expl="loop invariant init" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.13" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.14" expl="integer overflow" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.14.0" expl="integer overflow" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.16" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="VC mul_limbs.17" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.17.0" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.06" steps="45"/></proof>
   </goal>
   <goal name="VC mul_limbs.17.1" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.19" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.19.0" expl="precondition" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC mul_limbs.19.0.0" expl="precondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC mul_limbs.19.0.0.0" expl="precondition" proved="true">
     <proof prover="9" timelimit="20" memlimit="3000"><result status="valid" time="0.04" steps="69"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.20" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="57"/></proof>
  </goal>
  <goal name="VC mul_limbs.21" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="4.10"/></proof>
  </goal>
  <goal name="VC mul_limbs.22" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="58"/></proof>
  </goal>
  <goal name="VC mul_limbs.23" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.24" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="VC mul_limbs.25" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="94"/></proof>
  </goal>
  <goal name="VC mul_limbs.26" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.26.0" expl="VC for mul_limbs" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="96"/></proof>
   </goal>
   <goal name="VC mul_limbs.26.1" expl="VC for mul_limbs" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.27" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC mul_limbs.28" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.29" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC mul_limbs.31" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.32" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.10" steps="80"/></proof>
  </goal>
  <goal name="VC mul_limbs.33" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.33.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC mul_limbs.33.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.34" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.34.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="5.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.35" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.35.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="83"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.36" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.12" steps="84"/></proof>
  </goal>
  <goal name="VC mul_limbs.37" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="85"/></proof>
  </goal>
  <goal name="VC mul_limbs.38" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.38.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H6" arg2="in" arg3="H5">
    <goal name="VC mul_limbs.38.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="H10" arg2="in" arg3="H9">
     <goal name="VC mul_limbs.38.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="H57" arg2="in" arg3="H56">
      <goal name="VC mul_limbs.38.0.0.0.0" expl="assertion" proved="true">
      <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
       <goal name="VC mul_limbs.38.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="reflection_f" proved="true" arg1="mp_decision">
        <goal name="VC mul_limbs.38.0.0.0.0.0.0" expl="assertion" proved="true">
        <proof prover="3"><result status="valid" time="0.37"/></proof>
        </goal>
        <goal name="VC mul_limbs.38.0.0.0.0.0.1" proved="true">
        <proof prover="3"><result status="valid" time="1.43"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.39" expl="integer overflow" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.39.0" expl="integer overflow" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC mul_limbs.39.0.0" expl="integer overflow" proved="true">
    <proof prover="0" memlimit="1000"><result status="valid" time="4.85"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.40" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC mul_limbs.41" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.42" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.43" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.43.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.44" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC mul_limbs.45" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.46" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.47" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.48" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.48.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.49" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC mul_limbs.50" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="VC mul_limbs.51" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC addmul_limbs" expl="VC for addmul_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC addmul_limbs.0" expl="integer overflow" proved="true">
  <proof prover="4" timelimit="10"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC addmul_limbs.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="VC addmul_limbs.2" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="VC addmul_limbs.3" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.12" steps="29"/></proof>
  </goal>
  <goal name="VC addmul_limbs.4" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.04" steps="37"/></proof>
  </goal>
  <goal name="VC addmul_limbs.5" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limbs.5.0" expl="VC for addmul_limbs" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.5.0.0" expl="VC for addmul_limbs" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC addmul_limbs.5.0.0.0" expl="VC for addmul_limbs" proved="true">
     <proof prover="0" timelimit="20" memlimit="1000"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limbs.5.1" expl="VC for addmul_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.6" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="90"/></proof>
  </goal>
  <goal name="VC addmul_limbs.7" expl="loop invariant init" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.7.0" expl="loop invariant init" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC addmul_limbs.7.0.0" expl="loop invariant init" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC addmul_limbs.7.0.0.0" expl="loop invariant init" proved="true">
     <proof prover="9" memlimit="2000"><result status="valid" time="0.01" steps="24"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limbs.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limbs.10" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limbs.11" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.06" steps="25"/></proof>
  </goal>
  <goal name="VC addmul_limbs.12" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.05" steps="6"/></proof>
  </goal>
  <goal name="VC addmul_limbs.13" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limbs.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="VC addmul_limbs.15" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="70"/></proof>
  </goal>
  <goal name="VC addmul_limbs.16" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="55"/></proof>
  </goal>
  <goal name="VC addmul_limbs.17" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.06" steps="40"/></proof>
  </goal>
  <goal name="VC addmul_limbs.18" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="VC addmul_limbs.19" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.19.0" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.05"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.01"/></proof>
   <transf name="split_intros_goal_wp" proved="true" >
    <goal name="VC addmul_limbs.19.0.0" expl="VC for addmul_limbs" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC addmul_limbs.19.0.1" expl="VC for addmul_limbs" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.04"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="VC addmul_limbs.19.0.2" expl="VC for addmul_limbs" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.04"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
    </goal>
    <goal name="VC addmul_limbs.19.0.3" expl="VC for addmul_limbs" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.20" expl="assertion" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="VC addmul_limbs.21" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC addmul_limbs.22" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="69"/></proof>
  </goal>
  <goal name="VC addmul_limbs.23" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.23.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC addmul_limbs.23.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.24" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="55"/></proof>
  </goal>
  <goal name="VC addmul_limbs.25" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limbs.25.0" expl="precondition" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.25.0.0" expl="precondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC addmul_limbs.25.0.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="0.04" steps="58"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.26" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.08" steps="59"/></proof>
  </goal>
  <goal name="VC addmul_limbs.27" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="75"/></proof>
  </goal>
  <goal name="VC addmul_limbs.28" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.60"/></proof>
  </goal>
  <goal name="VC addmul_limbs.29" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC addmul_limbs.30" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limbs.31" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.05" steps="77"/></proof>
  </goal>
  <goal name="VC addmul_limbs.32" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.06" steps="78"/></proof>
  </goal>
  <goal name="VC addmul_limbs.33" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="3.04"/></proof>
  </goal>
  <goal name="VC addmul_limbs.34" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.32" steps="101"/></proof>
  </goal>
  <goal name="VC addmul_limbs.35" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC addmul_limbs.36" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.32" steps="82"/></proof>
  </goal>
  <goal name="VC addmul_limbs.37" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.37.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC addmul_limbs.37.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.38" expl="assertion" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.45" steps="84"/></proof>
  </goal>
  <goal name="VC addmul_limbs.39" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.39.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H3" arg2="in" arg3="H2">
    <goal name="VC addmul_limbs.39.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="H8" arg2="in" arg3="H7">
     <goal name="VC addmul_limbs.39.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="H60" arg2="in" arg3="H59">
      <goal name="VC addmul_limbs.39.0.0.0.0" expl="assertion" proved="true">
      <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
       <goal name="VC addmul_limbs.39.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="reflection_f" proved="true" arg1="mp_decision">
        <goal name="VC addmul_limbs.39.0.0.0.0.0.0" expl="assertion" proved="true">
        <proof prover="3"><result status="valid" time="0.24"/></proof>
        </goal>
        <goal name="VC addmul_limbs.39.0.0.0.0.0.1" proved="true">
        <proof prover="3"><result status="valid" time="0.28"/></proof>
        </goal>
        <goal name="VC addmul_limbs.39.0.0.0.0.0.2" proved="true">
        <proof prover="2" memlimit="2000"><result status="valid" time="0.31"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.40" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC addmul_limbs.41" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC addmul_limbs.42" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC addmul_limbs.43" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limbs.44" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC addmul_limbs.45" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.45.0" expl="loop invariant preservation" proved="true">
   <transf name="cut" proved="true" arg1="(i=i1+1)">
    <goal name="VC addmul_limbs.45.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.12"/></proof>
    </goal>
    <goal name="VC addmul_limbs.45.0.1" proved="true">
    <proof prover="3"><result status="valid" time="0.06"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.46" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC addmul_limbs.47" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limbs.48" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limbs.49" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limbs.50" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limbs.50.0" expl="VC for addmul_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limbs.50.1" expl="VC for addmul_limbs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.50.1.0" expl="VC for addmul_limbs" proved="true">
    <proof prover="3"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.51" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.13"/></proof>
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.51.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="11.05"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.52" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul" expl="VC for mul" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mul.0" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.0.0" expl="VC for mul" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul.0.1" expl="VC for mul" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.1" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC mul.2" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="VC mul.3" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC mul.4" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="18"/></proof>
  </goal>
  <goal name="VC mul.5" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="VC mul.6" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="25"/></proof>
  </goal>
  <goal name="VC mul.7" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.7.0" expl="VC for mul" proved="true">
   <proof prover="3"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC mul.7.1" expl="VC for mul" proved="true">
   <proof prover="0"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC mul.7.2" expl="VC for mul" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.8" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="VC mul.9" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="VC mul.10" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="VC mul.11" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="55"/></proof>
  </goal>
  <goal name="VC mul.12" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="37"/></proof>
  </goal>
  <goal name="VC mul.13" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="39"/></proof>
  </goal>
  <goal name="VC mul.14" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="40"/></proof>
  </goal>
  <goal name="VC mul.15" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.15.0" expl="loop invariant init" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="41"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.16" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul.17" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul.18" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="41"/></proof>
  </goal>
  <goal name="VC mul.19" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="68"/></proof>
  </goal>
  <goal name="VC mul.20" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul.21" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="VC mul.22" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="72"/></proof>
  </goal>
  <goal name="VC mul.23" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="72"/></proof>
  </goal>
  <goal name="VC mul.24" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="55"/></proof>
  </goal>
  <goal name="VC mul.25" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.14" steps="84"/></proof>
  </goal>
  <goal name="VC mul.26" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.14" steps="67"/></proof>
  </goal>
  <goal name="VC mul.27" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.84" steps="104"/></proof>
  </goal>
  <goal name="VC mul.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.99"/></proof>
  </goal>
  <goal name="VC mul.29" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.29.0" expl="precondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.13" steps="69"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.30" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.30.0" expl="VC for mul" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul.30.1" expl="VC for mul" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.31" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.86"/></proof>
  </goal>
  <goal name="VC mul.32" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC mul.33" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC mul.34" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.30" steps="86"/></proof>
  </goal>
  <goal name="VC mul.35" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.22" steps="87"/></proof>
  </goal>
  <goal name="VC mul.36" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC mul.38" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul.38.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC mul.38.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.39" expl="assertion" proved="true">
  <proof prover="9" timelimit="10" memlimit="2000"><result status="valid" time="5.77" steps="116"/></proof>
  </goal>
  <goal name="VC mul.40" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="5.07" steps="92"/></proof>
  </goal>
  <goal name="VC mul.41" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul.41.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H4" arg2="in" arg3="H3">
    <goal name="VC mul.41.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="H7" arg2="in" arg3="H6">
     <goal name="VC mul.41.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="H54" arg2="in" arg3="H53">
      <goal name="VC mul.41.0.0.0.0" expl="assertion" proved="true">
      <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
       <goal name="VC mul.41.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="reflection_f" proved="true" arg1="mp_decision">
        <goal name="VC mul.41.0.0.0.0.0.0" expl="assertion" proved="true">
        <proof prover="3"><result status="valid" time="0.39"/></proof>
        </goal>
        <goal name="VC mul.41.0.0.0.0.0.1" proved="true">
        <proof prover="3"><result status="valid" time="0.31"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.42" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC mul.43" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC mul.44" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul.45" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC mul.46" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="5.88"/></proof>
  </goal>
  <goal name="VC mul.47" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC mul.48" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul.49" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul.50" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul.51" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul.52" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC mul.53" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="51"/></proof>
  </goal>
  <goal name="VC mul.54" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC pow2_64" expl="VC for pow2_64" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC pow2_64.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="VC pow2_64.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="VC pow2_64.2" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="11"/></proof>
  </goal>
  <goal name="VC pow2_64.3" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
  <goal name="VC pow2_64.4" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
  <goal name="VC pow2_64.5" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="VC pow2_64.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mod_mult" expl="VC for mod_mult" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="9"/></proof>
 </goal>
 <goal name="VC lsld_ext" expl="VC for lsld_ext" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC lsld_ext.0" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.0.0" expl="integer overflow" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.1" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="9"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC lsld_ext.2" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.2.0" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lsld_ext.2.1" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.3" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC lsld_ext.4" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.4.0" expl="VC for lsld_ext" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lsld_ext.4.1" expl="VC for lsld_ext" proved="true">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC lsld_ext.4.2" expl="VC for lsld_ext" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lsld_ext.4.3" expl="VC for lsld_ext" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.5" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.5.0" expl="assertion" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.23"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.6" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.6.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="19"/></proof>
  </goal>
  <goal name="VC lsld_ext.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC lsld_ext.9" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.9.0" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="22"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.1" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.2" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.3" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.4" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.5" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.6" expl="VC for lsld_ext" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.7" expl="VC for lsld_ext" proved="true">
   <proof prover="0"><result status="valid" time="0.67"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.8" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.9" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.10" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.10" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.10.0" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.1" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.2" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.3" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.4" expl="VC for lsld_ext" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="29"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.5" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.6" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.7" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.11" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.11.0" expl="postcondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC lsld_ext.11.1" expl="postcondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.12" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC lsld_ext.13" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.36" steps="50"/></proof>
  </goal>
  <goal name="VC lsld_ext.14" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.14.0" expl="postcondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lsld_ext.14.1" expl="postcondition" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC lsld_ext.14.1.0" expl="postcondition" proved="true">
    <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC clz_ext" expl="VC for clz_ext" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC clz_ext.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC clz_ext.1" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC clz_ext.1.0" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="15"/></proof>
   </goal>
   <goal name="VC clz_ext.1.1" expl="VC for clz_ext" proved="true">
   <proof prover="1" timelimit="20"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC clz_ext.1.2" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="14"/></proof>
   </goal>
   <goal name="VC clz_ext.1.3" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="15"/></proof>
   </goal>
   <goal name="VC clz_ext.1.4" expl="VC for clz_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC clz_ext.1.5" expl="VC for clz_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC clz_ext.1.6" expl="VC for clz_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC clz_ext.1.7" expl="VC for clz_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC clz_ext.1.8" expl="VC for clz_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC clz_ext.1.9" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="20"/></proof>
   </goal>
   <goal name="VC clz_ext.1.10" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="21"/></proof>
   </goal>
   <goal name="VC clz_ext.1.11" expl="VC for clz_ext" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC clz_ext.1.12" expl="VC for clz_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC clz_ext.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC clz_ext.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC clz_ext.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC clz_ext.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC lshift" expl="VC for lshift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC lshift.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
  <goal name="VC lshift.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="VC lshift.2" expl="integer overflow" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.06"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="25"/></proof>
  </goal>
  <goal name="VC lshift.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="VC lshift.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="33"/></proof>
  </goal>
  <goal name="VC lshift.6" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="VC lshift.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="VC lshift.8" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.9" expl="loop invariant init" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC lshift.9.0" expl="loop invariant init" proved="true">
   <transf name="replace" proved="true" arg1="(sz - msb)" arg2="1">
    <goal name="VC lshift.9.0.0" expl="loop invariant init" proved="true">
    <transf name="cut" proved="true" arg1="(value o3 1 = get (pelts o3) (offset o3))">
     <goal name="VC lshift.9.0.0.0" expl="loop invariant init" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="54"/></proof>
     </goal>
     <goal name="VC lshift.9.0.0.1" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC lshift.9.0.1" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.10" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.10" steps="38"/></proof>
  </goal>
  <goal name="VC lshift.11" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="38"/></proof>
  </goal>
  <goal name="VC lshift.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC lshift.13" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.14" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC lshift.16" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="38"/></proof>
  </goal>
  <goal name="VC lshift.17" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.18" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.19" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lshift.19.0" expl="loop invariant init" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="38"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.20" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.21" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC lshift.22" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="74"/></proof>
  </goal>
  <goal name="VC lshift.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC lshift.24" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC lshift.25" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC lshift.26" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lshift.26.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.27" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.28" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.29" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC lshift.30" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="VC lshift.31" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.32" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC lshift.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC lshift.34" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lshift.34.0" expl="VC for lshift" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lshift.34.1" expl="VC for lshift" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC lshift.34.2" expl="VC for lshift" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC lshift.34.3" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lshift.34.4" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lshift.34.5" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lshift.34.6" expl="VC for lshift" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lshift.34.7" expl="VC for lshift" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lshift.34.8" expl="VC for lshift" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC lshift.34.9" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lshift.34.10" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lshift.34.11" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lshift.34.12" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lshift.34.13" expl="VC for lshift" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC lshift.34.13.0" expl="VC for lshift" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="VC lshift.34.13.0.0" expl="VC for lshift" proved="true">
     <proof prover="3"><result status="valid" time="0.01"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC lshift.34.14" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC lshift.34.15" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lshift.34.16" expl="VC for lshift" proved="true">
   <proof prover="1"><result status="valid" time="0.70"/></proof>
   </goal>
   <goal name="VC lshift.34.17" expl="VC for lshift" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lshift.34.18" expl="VC for lshift" proved="true">
   <proof prover="0"><result status="valid" time="1.77"/></proof>
   </goal>
   <goal name="VC lshift.34.19" expl="VC for lshift" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.35" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.36" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC lshift.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="4.40"/></proof>
  </goal>
  <goal name="VC lshift.38" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC lshift.39" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC lshift.40" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.41" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.42" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.43" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lshift.43.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.44" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.45" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.46" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.47" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.48" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.49" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="3000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC lshift.50" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC lshift.51" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.52" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC lshift.53" expl="precondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC lshift.53.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.54" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC rshift" expl="VC for rshift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC rshift.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC rshift.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.3" expl="integer overflow" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC rshift.3.0" expl="integer overflow" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.7" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="VC rshift.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.9" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.10" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="110"/></proof>
  </goal>
  <goal name="VC rshift.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.12" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.13" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.14" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.15" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.16" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.17" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.18" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.19" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.20" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.21" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.22" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC rshift.23" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC rshift.24" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.24.0" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC rshift.24.1" expl="VC for rshift" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.24.1.0" expl="VC for rshift" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC rshift.24.1.0.0" expl="VC for rshift" proved="true">
     <proof prover="0"><result status="valid" time="5.14"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.26" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC rshift.27" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.28" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.29" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC rshift.31" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC rshift.32" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.33" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC rshift.34" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC rshift.35" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC rshift.36" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.36.0" expl="VC for rshift" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC rshift.36.1" expl="VC for rshift" proved="true">
   <proof prover="1" timelimit="10"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC rshift.36.2" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC rshift.36.3" expl="VC for rshift" proved="true">
   <proof prover="1" timelimit="10"><result status="valid" time="0.90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.37" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC rshift.37.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC rshift.37.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC rshift.37.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC rshift.37.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.28"/></proof>
     </goal>
     <goal name="VC rshift.37.0.0.2" proved="true">
     <proof prover="3"><result status="valid" time="0.27"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.38" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.39" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="VC rshift.40" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.41" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.41.0" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.69"/></proof>
   </goal>
   <goal name="VC rshift.41.1" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.42" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC rshift.42.0" expl="loop invariant preservation" proved="true">
   <transf name="cut" proved="true" arg1="(i = i1+1)">
    <goal name="VC rshift.42.0.0" expl="loop invariant preservation" proved="true">
    <transf name="rewrite" proved="true" arg1="h">
     <goal name="VC rshift.42.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC rshift.42.0.1" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.43" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="4.48"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC rshift.44" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC rshift.45" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.46" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.47" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.48" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.49" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.50" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.51" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC rshift.52" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC rshift.53" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.54" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.54.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.54.0.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC rshift.54.0.0.0" expl="assertion" proved="true">
     <proof prover="0"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.55" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.56" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.57" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC rshift.58" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC rshift.59" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC rshift.60" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.60.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.61" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="3.10"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.62" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.62.0" expl="VC for rshift" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.62.0.0" expl="VC for rshift" proved="true">
    <transf name="cut" proved="true" arg1="(sz = msb + 1)">
     <goal name="VC rshift.62.0.0.0" expl="VC for rshift" proved="true">
     <transf name="rewrite" proved="true" arg1="h">
      <goal name="VC rshift.62.0.0.0.0" expl="VC for rshift" proved="true">
      <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC rshift.62.0.0.1" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rshift.62.1" expl="VC for rshift" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.53"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.63" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.63.0" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.61"/></proof>
   </goal>
   <goal name="VC rshift.63.1" expl="VC for rshift" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.63.1.0" expl="VC for rshift" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC rshift.63.1.0.0" expl="VC for rshift" proved="true">
     <proof prover="0"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.64" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC fact_div" expl="VC for fact_div" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC fact_div.0" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC fact_div.0.0" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="9"/></proof>
   </goal>
   <goal name="VC fact_div.0.1" expl="VC for fact_div" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC fact_div.0.2" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="10"/></proof>
   </goal>
   <goal name="VC fact_div.0.3" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="11"/></proof>
   </goal>
   <goal name="VC fact_div.0.4" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="13"/></proof>
   </goal>
   <goal name="VC fact_div.0.5" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="13"/></proof>
   </goal>
   <goal name="VC fact_div.0.6" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="14"/></proof>
   </goal>
   <goal name="VC fact_div.0.7" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="15"/></proof>
   </goal>
   <goal name="VC fact_div.0.8" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="15"/></proof>
   </goal>
   <goal name="VC fact_div.0.9" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="17"/></proof>
   </goal>
   <goal name="VC fact_div.0.10" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC fact_div.1" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC invert_limb" expl="VC for invert_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC invert_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC invert_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC invert_limb.2" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="11"/></proof>
  </goal>
  <goal name="VC invert_limb.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC invert_limb.4" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC invert_limb.4.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.05"/></proof>
   <proof prover="9"><result status="valid" time="0.03" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC invert_limb.5" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC invert_limb.6" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC div2by1_inv" expl="VC for div2by1_inv" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div2by1_inv.0" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.1" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div2by1_inv.2" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div2by1_inv.3" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.3.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.3.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div2by1_inv.5" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="21"/></proof>
  </goal>
  <goal name="VC div2by1_inv.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.7" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div2by1_inv.8" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div2by1_inv.9" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="29"/></proof>
  </goal>
  <goal name="VC div2by1_inv.10" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.10.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="32"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="32"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.13" expl="VC for div2by1_inv" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.21" steps="42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.11" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.11.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.12" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.12.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.12.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div2by1_inv.15" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div2by1_inv.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.16.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.13" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.14" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.15" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.16" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.17" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.18" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.19" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.20" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.21" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.22" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.23" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.24" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.25" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.26" expl="VC for div2by1_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div2by1_inv.16.26.0" expl="VC for div2by1_inv" proved="true">
    <transf name="apply" proved="true" arg1="prod_compat_strict_r">
     <goal name="VC div2by1_inv.16.26.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div2by1_inv.16.26.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div2by1_inv.16.27" expl="VC for div2by1_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.28" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.29" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.30" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.31" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.32" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.33" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.34" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.35" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.36" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.37" expl="VC for div2by1_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.38" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.39" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.40" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.41" expl="VC for div2by1_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.42" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.43" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.44" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.45" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.46" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.47" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.48" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.17.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.18.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.19" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.19.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div2by1_inv.19.1" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.19.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.19.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.19.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.19.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.19.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.19.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.20" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.20.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.20.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.21" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.21.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.21.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div2by1_inv.21.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div2by1_inv.21.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.22" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div2by1_inv.23" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="3.61"/></proof>
  </goal>
  <goal name="VC div2by1_inv.24" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.24.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.25" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.26" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="2.83"/></proof>
  </goal>
  <goal name="VC div2by1_inv.27" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.27.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.28" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.28.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.7" expl="VC for div2by1_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div2by1_inv.28.7.0" expl="VC for div2by1_inv" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div2by1_inv.28.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.11" expl="VC for div2by1_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div2by1_inv.28.11.0" expl="VC for div2by1_inv" proved="true">
    <proof prover="0" timelimit="55"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div2by1_inv.28.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.13" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.14" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.56"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.15" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.16" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.17" expl="VC for div2by1_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.18" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div2by1_inv.30" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.30.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.31" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div2by1_inv.32" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC div2by1_inv.33" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.33.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div2by1_inv.33.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.34" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.34.0" expl="integer overflow" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.35" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC div2by1_inv.36" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.37" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div2by1_inv.38" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.39" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.40" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.41" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.41.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.41.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.42" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.42.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.42.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.43" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC div2by1_inv.44" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.45" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.46" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.46.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.47" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.48" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div2by1_inv.49" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.49.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.50.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.51" expl="integer overflow" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div2by1_inv.52" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.53" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.54" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div2by1_inv.55" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.55.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.55.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.56" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.56.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.57" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.57.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.58" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div2by1_inv.59" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.60" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div2by1_inv.61" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.61.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.62" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.62.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.62.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC divmod_1" expl="VC for divmod_1" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC divmod_1.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="22"/></proof>
  </goal>
  <goal name="VC divmod_1.1" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.1.0" expl="integer overflow" proved="true">
   <proof prover="9"><result status="valid" time="0.08" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.2" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC divmod_1.3" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="26"/></proof>
  </goal>
  <goal name="VC divmod_1.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.7" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="23"/></proof>
  </goal>
  <goal name="VC divmod_1.8" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="22"/></proof>
  </goal>
  <goal name="VC divmod_1.9" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_1.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.11" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.12" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="27"/></proof>
  </goal>
  <goal name="VC divmod_1.13" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="44"/></proof>
  </goal>
  <goal name="VC divmod_1.14" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.15" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="42"/></proof>
  </goal>
  <goal name="VC divmod_1.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC divmod_1.17" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC divmod_1.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.19" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.20" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.20.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.21" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.21.0" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.21.1" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC divmod_1.21.2" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.21.3" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.21.4" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.21.5" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.60"/></proof>
   </goal>
   <goal name="VC divmod_1.21.6" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.21.7" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.21.8" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC divmod_1.21.9" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.21.10" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.21.11" expl="VC for divmod_1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_1.21.11.0" expl="VC for divmod_1" proved="true">
    <proof prover="1"><result status="valid" time="0.26"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_1.21.12" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.21.13" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.21.14" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.21.15" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.21.16" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.21.17" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.21.18" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.21.19" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.22.0" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.22.1" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.22.2" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.23" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.24" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_1.25" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.25.0" expl="precondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.26" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.27" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.27.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.28" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC divmod_1.29" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.29.0" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC divmod_1.29.1" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.29.2" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.29.3" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.29.4" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.29.5" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC divmod_1.29.6" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.29.7" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.30" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.31" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.31.0" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.31.1" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC divmod_1.31.2" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.31.3" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.31.4" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.31.5" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.31.6" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.31.7" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC divmod_1.31.8" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.31.9" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.31.10" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC divmod_1.31.11" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.31.12" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.32" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.33" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC divmod_1.34" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.35" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC divmod_1.36" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_1.37" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.38" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC divmod_1.39" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.40" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.40.0" expl="VC for divmod_1" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.40.1" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC divmod_1.40.2" expl="VC for divmod_1" proved="true">
   <proof prover="1" timelimit="10"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.41" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.41.0" expl="VC for divmod_1" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.41.1" expl="VC for divmod_1" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.41.2" expl="VC for divmod_1" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.42" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.43" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC divmod_1.44" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.45" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_1.46" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.47" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="6.83"/></proof>
  </goal>
  <goal name="VC divmod_1.48" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.48.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.49" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_1.50" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.51" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.08"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.52" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.53" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC divmod_1.54" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.55" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.56" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.57" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC divmod_1.57.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="result" arg2="res">
    <goal name="VC divmod_1.57.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC divmod_1.57.0.1" proved="true">
    <proof prover="1"><result status="valid" time="0.14"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.58" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.59" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="36"/></proof>
  </goal>
  <goal name="VC divmod_1.60" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="21"/></proof>
  </goal>
  <goal name="VC divmod_1.61" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_1.62" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="VC divmod_1.63" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_1.64" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC divmod_1.65" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="VC divmod_1.66" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.66.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.67" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.68" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.69" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.70" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC divmod_1.71" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC divmod_1.72" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC divmod_1.73" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.74" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.74.0" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.74.1" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.74.2" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="4.90"/></proof>
   </goal>
   <goal name="VC divmod_1.74.3" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC divmod_1.74.4" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC divmod_1.74.5" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC divmod_1.74.6" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC divmod_1.74.7" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.74.8" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="4.38"/></proof>
   </goal>
   <goal name="VC divmod_1.74.9" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.75" expl="loop variant decrease" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.76" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.77" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC divmod_1.78" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.79" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.80" expl="postcondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC div3by2_inv" expl="VC for div3by2_inv" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div3by2_inv.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
  <goal name="VC div3by2_inv.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
  <goal name="VC div3by2_inv.2" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.2.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.2.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.3" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.3.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.3.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.4" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div3by2_inv.5" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.5.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.4" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.5.4.0" expl="VC for div3by2_inv" proved="true">
    <transf name="cut" proved="true" arg1="(v * (radix * uh) &lt;= v * d)">
     <goal name="VC div3by2_inv.5.4.0.0" expl="VC for div3by2_inv" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div3by2_inv.5.4.0.1" proved="true">
     <transf name="apply" proved="true" arg1="prod_compat_r">
      <goal name="VC div3by2_inv.5.4.0.1.0" proved="true">
      <proof prover="3"><result status="valid" time="0.04"/></proof>
      </goal>
      <goal name="VC div3by2_inv.5.4.0.1.1" proved="true">
      <proof prover="3"><result status="valid" time="0.04"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.5.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.6" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC div3by2_inv.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div3by2_inv.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div3by2_inv.9" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div3by2_inv.10" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.10.0" expl="assertion" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.11" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div3by2_inv.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div3by2_inv.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div3by2_inv.14" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div3by2_inv.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="4.10"/></proof>
  </goal>
  <goal name="VC div3by2_inv.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.16.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.13" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.14" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.15" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.16" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.17" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.17.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.98"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.13" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.14" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.15" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.16" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.17" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.18" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.19" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.20" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.21" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.22" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.23" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.24" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.25" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.26" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.27" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.28" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.29" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.30" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.31" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.32" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.33" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.34" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.35" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.36" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.37" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.38" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="6.19"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.39" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.40" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.41" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.42" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.43" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.44" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.45" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.46" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.47" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.48" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.49" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.17.49.0" expl="VC for div3by2_inv" proved="true">
    <transf name="apply" proved="true" arg1="prod_compat_strict_r">
     <goal name="VC div3by2_inv.17.49.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div3by2_inv.17.49.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.50" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.17.50.0" expl="VC for div3by2_inv" proved="true">
    <transf name="apply" proved="true" arg1="prod_compat_r">
     <goal name="VC div3by2_inv.17.50.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div3by2_inv.17.50.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.51" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.52" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.53" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.17.53.0" expl="VC for div3by2_inv" proved="true">
    <transf name="apply" proved="true" arg1="prod_compat_strict_r">
     <goal name="VC div3by2_inv.17.53.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div3by2_inv.17.53.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.54" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="2.64"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.55" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.56" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.57" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="1.78"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.58" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.59" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.60" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.61" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="1.34"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.62" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="1.31"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.63" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.64" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="2.50"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.65" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.66" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.67" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.68" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.69" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.70" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.71" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.72" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.73" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.74" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.75" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.76" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.77" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.78" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.79" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.80" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.81" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.82" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.83" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.84" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.85" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.86" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.87" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.88" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.89" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.90" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.91" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.92" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="1.23"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.93" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.94" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.17.94.0" expl="VC for div3by2_inv" proved="true">
    <transf name="cut" proved="true" arg1="(k*dh &lt;= d*dh)">
     <goal name="VC div3by2_inv.17.94.0.0" expl="VC for div3by2_inv" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div3by2_inv.17.94.0.1" proved="true">
     <proof prover="0"><result status="valid" time="1.83"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.95" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.96" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.97" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.98" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.99" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.100" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.101" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.102" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.103" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.104" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.105" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.106" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.107" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.108" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.109" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.110" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.111" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.112" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.113" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.114" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.115" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.116" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.117" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.118" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.119" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.120" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.121" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.122" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.123" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.124" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.125" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.126" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.127" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.128" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.129" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.130" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.131" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.132" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.133" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.134" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.135" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.136" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.137" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.138" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.139" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.140" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.141" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.142" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.143" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.144" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.145" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.56"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.146" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.147" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.148" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.149" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.150" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.151" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.152" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.153" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.154" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.155" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.156" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.157" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.158" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.159" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.160" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.161" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.162" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.163" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.164" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.165" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.166" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.167" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.168" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.169" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.170" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.171" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.172" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.173" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.174" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.18.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.86"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.19" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.19.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.34"/></proof>
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="2.25"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.20" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.20.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.13" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.20.13.0" expl="VC for div3by2_inv" proved="true">
    <transf name="cut" proved="true" arg1="(v* (radix*uh) &lt;= v*d)">
     <goal name="VC div3by2_inv.20.13.0.0" expl="VC for div3by2_inv" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div3by2_inv.20.13.0.1" proved="true">
     <transf name="apply" proved="true" arg1="prod_compat_r">
      <goal name="VC div3by2_inv.20.13.0.1.0" proved="true">
      <proof prover="3"><result status="valid" time="0.05"/></proof>
      </goal>
      <goal name="VC div3by2_inv.20.13.0.1.1" proved="true">
      <proof prover="3"><result status="valid" time="0.04"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.21" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div3by2_inv.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.22.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.70"/></proof>
   </goal>
   <goal name="VC div3by2_inv.22.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.23" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.23.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.24" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="5.10"/></proof>
  </goal>
  <goal name="VC div3by2_inv.25" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div3by2_inv.26" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.26.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.26.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.27" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.27.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.27.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.27.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.27.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="3.43"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.28" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.18"/></proof>
  </goal>
  <goal name="VC div3by2_inv.29" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div3by2_inv.30" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.30.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div3by2_inv.32" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.32.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div3by2_inv.32.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.33" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.33.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.33.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.45"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.34" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.34.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div3by2_inv.34.1" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.35" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div3by2_inv.36" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
  <proof prover="2"><result status="valid" time="1.78"/></proof>
  </goal>
  <goal name="VC div3by2_inv.37" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC div3by2_inv.38" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.38.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.57"/></proof>
   </goal>
   <goal name="VC div3by2_inv.38.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.39" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div3by2_inv.40" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC div3by2_inv.41" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.41.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.41.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.42" expl="postcondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div3by2_inv.43" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.43.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.43.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.44" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.44.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="1.35"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.45" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.45.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.46" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.46.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.46.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div3by2_inv.48" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC div3by2_inv.49" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div3by2_inv.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.50.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.51" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.82"/></proof>
  </goal>
  <goal name="VC div3by2_inv.52" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.52.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.70"/></proof>
   </goal>
   <goal name="VC div3by2_inv.52.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.52.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.53" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="6.82"/></proof>
  </goal>
  <goal name="VC div3by2_inv.54" expl="postcondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div3by2_inv.55" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div3by2_inv.56" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC div3by2_inv.57" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div3by2_inv.58" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.58.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.58.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC bounds_imply_rec3by2" expl="VC for bounds_imply_rec3by2" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="11"/></proof>
 </goal>
 <goal name="VC reciprocal_word_3by2" expl="VC for reciprocal_word_3by2" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC reciprocal_word_3by2.0" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.0.0" expl="integer overflow" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.1" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.1.0" expl="precondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="9"><result status="valid" time="0.04" steps="9"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.2" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.64" steps="280"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.3" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.3.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   <proof prover="9"><result status="valid" time="0.06" steps="13"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="72"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="13"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="19"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="16"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.4" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="17"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.5" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="1.28"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.6" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.7" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.08"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.9" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.10" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.11" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.13.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="1.72"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.14" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.14.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.14.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.15.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.15.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.16.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.17.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.32" steps="42"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.26" steps="43"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.35" steps="44"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.40" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.18.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.18.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.18.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.19" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.19.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.19.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.20" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.21" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.21.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.93" steps="47"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.7" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.22" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.23" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.23.0" expl="integer overflow" proved="true">
   <proof prover="1"><result status="valid" time="0.89"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.23.1" expl="integer overflow" proved="true">
   <proof prover="1"><result status="valid" time="0.91"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.24" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.25" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.26" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.55"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.27" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.96"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.28" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.29" expl="postcondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.07"/></proof>
  <proof prover="9"><result status="valid" time="1.11" steps="49"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.11"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.31" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.31.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.18" steps="41"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.32" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.33" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.34" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.34.0" expl="assertion" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.50"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.35" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.36" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.37" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.37.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.38" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.38.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="37"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.13" steps="38"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="39"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="41"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.39" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.39.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.39.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.39.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.40" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.40.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.40.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.41" expl="integer overflow" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.71"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.47"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.42" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.42.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.22" steps="42"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.7" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.43" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.44" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.45" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.46" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.47" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.47.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.47.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.48" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.84"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.49" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.49.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.49.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.50" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.50.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.12" steps="40"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.50.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.51" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.52" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.52.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.53" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.35"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.54" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="21"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.55" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="24"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.56" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.56.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="26"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="27"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="28"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="28"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.57" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.58" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.58.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.58.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.59" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.59.0" expl="integer overflow" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   <proof prover="9"><result status="valid" time="0.10" steps="32"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.59.1" expl="integer overflow" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.60" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.60.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="31"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.7" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.61" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="2.22" steps="37"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.62" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.62.0" expl="integer overflow" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC reciprocal_word_3by2.62.0.0" expl="integer overflow" proved="true">
    <proof prover="1"><result status="valid" time="0.51"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC reciprocal_word_3by2.62.1" expl="integer overflow" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC reciprocal_word_3by2.62.1.0" expl="integer overflow" proved="true">
    <proof prover="1"><result status="valid" time="0.47"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.63" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.63.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.63.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.64" expl="postcondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.07"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.65" expl="assertion" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.66" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.67" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.68" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.69" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.70" expl="postcondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub3" expl="VC for sub3" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub3.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC sub3.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC sub3.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="11"/></proof>
  </goal>
  <goal name="VC sub3.3" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="15"/></proof>
  </goal>
  <goal name="VC sub3.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC submul_limb" expl="VC for submul_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC submul_limb.0" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.0.0" expl="integer overflow" proved="true">
   <proof prover="9"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="21"/></proof>
  </goal>
  <goal name="VC submul_limb.2" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="12"/></proof>
  </goal>
  <goal name="VC submul_limb.3" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="VC submul_limb.4" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
  </transf>
  </goal>
  <goal name="VC submul_limb.5" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
  </transf>
  </goal>
  <goal name="VC submul_limb.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="VC submul_limb.7" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.7.0" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.7.1" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.8" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="VC submul_limb.9" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.9.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.10" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.55"/></proof>
  </goal>
  <goal name="VC submul_limb.11" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.11.0" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.11.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.12" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC submul_limb.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.13.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.13.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.43"/></proof>
   </goal>
   <goal name="VC submul_limb.13.2" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.14" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="2.13"/></proof>
  </goal>
  <goal name="VC submul_limb.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.15.0" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.15.1" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.15.2" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.15.3" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.15.4" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC submul_limb.15.5" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.15.6" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.15.7" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.16" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC submul_limb.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.17.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.17.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC submul_limb.19" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.19.0" expl="integer overflow" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.20" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC submul_limb.21" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.21.0" expl="integer overflow" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.22.0" expl="VC for submul_limb" proved="true">
   <proof prover="0" timelimit="10"><result status="valid" time="5.49"/></proof>
   </goal>
   <goal name="VC submul_limb.22.1" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC submul_limb.22.2" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.22.3" expl="VC for submul_limb" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC submul_limb.22.4" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.22.5" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.22.6" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.22.7" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC submul_limb.22.8" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.22.9" expl="VC for submul_limb" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC submul_limb.22.9.0" expl="VC for submul_limb" proved="true">
    <transf name="cut" proved="true" arg1="(value r1 i = value r1 k + power radix k * lr)">
     <goal name="VC submul_limb.22.9.0.0" expl="VC for submul_limb" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC submul_limb.22.9.0.1" proved="true">
     <proof prover="0"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC submul_limb.22.10" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC submul_limb.22.11" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.22.12" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.22.13" expl="VC for submul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.22.14" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.52"/></proof>
   </goal>
   <goal name="VC submul_limb.22.15" expl="VC for submul_limb" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.23" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC submul_limb.24" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.24.0" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC submul_limb.24.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.25" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.25.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.53"/></proof>
  </goal>
  <goal name="VC submul_limb.27" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC submul_limb.28" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.28.0" expl="postcondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.29" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.29.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC div_sb_qr" expl="VC for div_sb_qr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div_sb_qr.0" expl="integer overflow" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.2" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.2.0" expl="integer overflow" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.3" expl="integer overflow" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.3.0" expl="integer overflow" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.3.0.0" expl="integer overflow" proved="true">
    <proof prover="2"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.4" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.4.0" expl="integer overflow" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.4.0.0" expl="integer overflow" proved="true">
    <proof prover="1"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.5" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC div_sb_qr.6" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.7" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="46"/></proof>
  </goal>
  <goal name="VC div_sb_qr.9" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="56"/></proof>
  </goal>
  <goal name="VC div_sb_qr.10" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div_sb_qr.11" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="VC div_sb_qr.12" expl="integer overflow" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.12.0" expl="integer overflow" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.12.0.0" expl="integer overflow" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.12.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="VC div_sb_qr.12.0.0.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.15" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.16" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.16.0" expl="integer overflow" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.16.0.0" expl="integer overflow" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.16.0.0.0" expl="integer overflow" proved="true">
     <proof prover="1"><result status="valid" time="0.05"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.17" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.18" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.18.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.18.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.18.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_sb_qr.18.0.0.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_sb_qr.18.0.0.2" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_sb_qr.18.0.0.3" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_sb_qr.18.0.0.4" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_sb_qr.18.0.0.5" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.19" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.20" expl="assertion" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC div_sb_qr.20.0" expl="assertion" proved="true">
   <proof prover="1" timelimit="55"><result status="valid" time="0.29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.21" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.22" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.23" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="VC div_sb_qr.24" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.25" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.25.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.25.0.0" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.27"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.26" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.26.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="74"/></proof>
   </goal>
   <goal name="VC div_sb_qr.26.1" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="51"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.27" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="74"/></proof>
  </goal>
  <goal name="VC div_sb_qr.28" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.29" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="VC div_sb_qr.30" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.30.0" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.30.0.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.30.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.30.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="107"/></proof>
   </goal>
   <goal name="VC div_sb_qr.30.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="100"/></proof>
   </goal>
   <goal name="VC div_sb_qr.30.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="79"/></proof>
   </goal>
   <goal name="VC div_sb_qr.30.5" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.30.5.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.30.5.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.30.6" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.30.6.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.30.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.30.8" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.30.8.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.30.8.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="100"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.30.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.50" steps="85"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.31" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.31.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.31.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.32.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="79"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="100"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div_sb_qr.34" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.34.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.62"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.38" steps="130"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.34.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.35" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC div_sb_qr.36" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.37" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.37.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.37.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.38" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.38.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.38.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.38.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="169"/></proof>
   </goal>
   <goal name="VC div_sb_qr.38.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.39" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.39.0" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.39.0.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.39.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="77"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.39.1" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.39.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.06"/></proof>
    </goal>
    <goal name="VC div_sb_qr.39.1.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.40" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.40.0" expl="precondition" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.40.1" expl="precondition" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.40.1.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.13"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.41" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.42" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.43" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_sb_qr.44" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.44.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="86"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.92"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="75"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.70"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.44.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.45" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.46" expl="precondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC div_sb_qr.46.0" expl="precondition" proved="true">
   <proof prover="1" timelimit="20"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC div_sb_qr.48" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.48.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.48.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_sb_qr.48.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="57"/></proof>
   </goal>
   <goal name="VC div_sb_qr.48.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.48.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.20" steps="88"/></proof>
   </goal>
   <goal name="VC div_sb_qr.48.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.49" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.49.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="82"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.94"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.20" steps="62"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.12" steps="64"/></proof>
   </goal>
   <goal name="VC div_sb_qr.49.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.13" steps="65"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.50" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.51" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="VC div_sb_qr.52" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.53" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.54" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="64"/></proof>
  </goal>
  <goal name="VC div_sb_qr.55" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.55.0" expl="loop invariant init" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="67"/></proof>
   </goal>
   <goal name="VC div_sb_qr.55.1" expl="loop invariant init" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.56" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.56.0" expl="loop invariant init" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.56.1" expl="loop invariant init" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.57" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.58" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.59" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_sb_qr.60" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.61" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.62" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.63" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC div_sb_qr.64" expl="loop invariant init" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.65" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.65.0" expl="loop invariant init" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.65.1" expl="loop invariant init" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="72"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.66" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.66.0" expl="loop invariant init" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   <proof prover="9"><result status="valid" time="0.03" steps="72"/></proof>
   </goal>
   <goal name="VC div_sb_qr.66.1" expl="loop invariant init" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.67" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.67.0" expl="integer overflow" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.67.1" expl="integer overflow" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.68" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC div_sb_qr.69" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC div_sb_qr.70" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_sb_qr.71" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC div_sb_qr.72" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.73" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.29" steps="110"/></proof>
  </goal>
  <goal name="VC div_sb_qr.74" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.76"/></proof>
  </goal>
  <goal name="VC div_sb_qr.75" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.75.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.75.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.76" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_sb_qr.77" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.77.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="4.66"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.76"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.98"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.78" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div_sb_qr.79" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.79.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="1.18" steps="122"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.79.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.80" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.80.0" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.48" steps="120"/></proof>
   </goal>
   <goal name="VC div_sb_qr.80.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.81" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_sb_qr.82" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.82.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.82.0.0" expl="precondition" proved="true">
    <transf name="introduce_premises" proved="true" >
     <goal name="VC div_sb_qr.82.0.0.0" expl="precondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="VC div_sb_qr.82.0.0.0.0" expl="precondition" proved="true">
      <transf name="cut" proved="true" arg1="(0 &lt;= i /\ i &lt; length2 xc)">
       <goal name="VC div_sb_qr.82.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="cut" proved="true" arg1="(get o1 i = get o i)">
        <goal name="VC div_sb_qr.82.0.0.0.0.0.0" expl="precondition" proved="true">
        <proof prover="0"><result status="valid" time="0.02"/></proof>
        <proof prover="2" timelimit="1"><result status="valid" time="0.04"/></proof>
        <proof prover="3"><result status="valid" time="0.03"/></proof>
        <proof prover="9" timelimit="1"><result status="valid" time="0.80" steps="125"/></proof>
        </goal>
        <goal name="VC div_sb_qr.82.0.0.0.0.0.1" proved="true">
        <proof prover="0"><result status="valid" time="0.05"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC div_sb_qr.82.0.0.0.0.1" proved="true">
       <proof prover="2" timelimit="1"><result status="valid" time="0.31"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.83" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.83.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.83.0.0" expl="precondition" proved="true">
    <proof prover="0" memlimit="1000"><result status="valid" time="0.25"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.84" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.84.0" expl="precondition" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.84.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.85" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.85.0" expl="assertion" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div_sb_qr.85.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.85.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.85.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC div_sb_qr.85.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.86" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.87" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="2.15" steps="158"/></proof>
  </goal>
  <goal name="VC div_sb_qr.88" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.89" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.89.0" expl="precondition" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.89.0.0" expl="precondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.89.0.0.0" expl="precondition" proved="true">
     <proof prover="3"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.89.1" expl="precondition" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.89.1.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="VC div_sb_qr.89.1.1" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.90" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.90.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.90.0.0" expl="assertion" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.90.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     <proof prover="2" timelimit="1"><result status="unknown" time="1.26"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.20"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.2" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.22"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.3" expl="VC for div_sb_qr" proved="true">
     <proof prover="4" timelimit="30" memlimit="2000"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.4" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.5" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.6" expl="VC for div_sb_qr" proved="true">
     <transf name="cut" proved="true" arg1="(plength xd = plength x)">
      <goal name="VC div_sb_qr.90.0.0.6.0" expl="VC for div_sb_qr" proved="true">
      <proof prover="0"><result status="valid" time="0.02"/></proof>
      </goal>
      <goal name="VC div_sb_qr.90.0.0.6.1" proved="true">
      <proof prover="0" timelimit="10"><result status="valid" time="0.02"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.7" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.8" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.06"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.9" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_sb_qr.90.0.0.10" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.05"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.91" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.91.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.76"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.32" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.91.33" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.92" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div_sb_qr.93" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="VC div_sb_qr.94" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.94.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.94.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.95" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.95.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.95.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.96" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_sb_qr.97" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.97.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.97.1" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.97.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="1000"><result status="valid" time="1.21"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.98" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.98.0" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.98.0.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.98.1" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.98.1.0" expl="VC for div_sb_qr" proved="true">
    <transf name="introduce_premises" proved="true" >
     <goal name="VC div_sb_qr.98.1.0.0" expl="VC for div_sb_qr" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="VC div_sb_qr.98.1.0.0.0" expl="VC for div_sb_qr" proved="true">
      <proof prover="0"><result status="valid" time="0.60"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC div_sb_qr.98.1.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="1"><result status="valid" time="0.15"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.98.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.99" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC div_sb_qr.100" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.100.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.101" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.101.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.52"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.102" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.102.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.46"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.6" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.102.6.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.102.6.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.102.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="2.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.32" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.33" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.34" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="1.16"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="2.95"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.35" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.44"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="2.73"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.36" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.45"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.37" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.38" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.59"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.39" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.40" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.41" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.42" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.43" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.44" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.45" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.46" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.47" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.48" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.102.49" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.103" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.103.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.103.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.104" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.104.0" expl="precondition" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.104.0.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="VC div_sb_qr.104.0.1" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.104.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.105" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.34"/></proof>
  </goal>
  <goal name="VC div_sb_qr.106" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.106.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.80"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.74"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.4" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.106.4.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" timelimit="15"><result status="valid" time="0.42"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.106.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.6" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.106.6.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.106.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.88"/></proof>
   </goal>
   <goal name="VC div_sb_qr.106.18" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.106.18.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.107" expl="loop variant decrease" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.107.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.107.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.108" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC div_sb_qr.109" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC div_sb_qr.110" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="VC div_sb_qr.111" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.49"/></proof>
  </goal>
  <goal name="VC div_sb_qr.112" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.113" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.114" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="VC div_sb_qr.115" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.116" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.117" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.117.0" expl="loop invariant preservation" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.117.0.0" expl="loop invariant preservation" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.117.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="3"><result status="valid" time="0.05"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.117.1" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.118" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.65"/></proof>
  </goal>
  <goal name="VC div_sb_qr.119" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.120" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.35"/></proof>
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.121" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC div_sb_qr.122" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.122.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.28" steps="107"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.39" steps="132"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.41" steps="138"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.123" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="2.37"/></proof>
  </goal>
  <goal name="VC div_sb_qr.124" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  <proof prover="4"><result status="valid" time="1.17"/></proof>
  </goal>
  <goal name="VC div_sb_qr.125" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.126" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.126.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.126.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.127" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.127.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.127.1" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.128" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.128.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.37" steps="112"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.40" steps="113"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.45" steps="135"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.64" steps="135"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.38" steps="114"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.70" steps="142"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.128.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.15"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.129" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC div_sb_qr.130" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.130.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.130.1" expl="precondition" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.131" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_sb_qr.132" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.41" steps="109"/></proof>
  </goal>
  <goal name="VC div_sb_qr.133" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.133.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.133.0.0" expl="precondition" proved="true">
    <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.134" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.134.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.134.0.0" expl="precondition" proved="true">
    <transf name="introduce_premises" proved="true" >
     <goal name="VC div_sb_qr.134.0.0.0" expl="precondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="VC div_sb_qr.134.0.0.0.0" expl="precondition" proved="true">
      <transf name="cut" proved="true" arg1="(0 &lt;= i /\ i &lt; length2 xc)">
       <goal name="VC div_sb_qr.134.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0"><result status="valid" time="0.05"/></proof>
       </goal>
       <goal name="VC div_sb_qr.134.0.0.0.0.1" proved="true">
       <proof prover="2" timelimit="1"><result status="valid" time="0.34"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.135" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC div_sb_qr.136" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.136.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.136.0.0" expl="precondition" proved="true">
    <proof prover="2" timelimit="1"><result status="valid" time="0.26"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.137" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.65"/></proof>
  </goal>
  <goal name="VC div_sb_qr.138" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.138.0" expl="assertion" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.78"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.138.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.138.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.53"/></proof>
   </goal>
   <goal name="VC div_sb_qr.138.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div_sb_qr.138.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.139" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="1.72"/></proof>
  </goal>
  <goal name="VC div_sb_qr.140" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.141" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_sb_qr.142" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC div_sb_qr.143" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC div_sb_qr.144" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_sb_qr.145" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.146" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.146.0" expl="precondition" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.146.1" expl="precondition" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.147" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.67"/></proof>
  </goal>
  <goal name="VC div_sb_qr.148" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.148.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.148.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.148.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.149" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.39"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.150" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.151" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC div_sb_qr.152" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.152.0" expl="precondition" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.152.0.0" expl="precondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.152.0.0.0" expl="precondition" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.152.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.153" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.153.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.153.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.153.2" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.153.2.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.06"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.153.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="2.57"/></proof>
   </goal>
   <goal name="VC div_sb_qr.153.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.153.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.154" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.154.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.155" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.87"/></proof>
  </goal>
  <goal name="VC div_sb_qr.156" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC div_sb_qr.157" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.157.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.EqPropMP">
    <goal name="VC div_sb_qr.157.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC div_sb_qr.157.0.0.0" expl="assertion" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="2.28"/></proof>
     </goal>
     <goal name="VC div_sb_qr.157.0.0.1" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.54"/></proof>
     </goal>
     <goal name="VC div_sb_qr.157.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.46"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.158" expl="assertion" proved="true">
  <proof prover="1" timelimit="10"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC div_sb_qr.159" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.159.0" expl="postcondition" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC div_sb_qr.159.0.0" expl="postcondition" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC div_sb_qr.159.0.0.0" expl="postcondition" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="2.35"/></proof>
     </goal>
     <goal name="VC div_sb_qr.159.0.0.1" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.43"/></proof>
     </goal>
     <goal name="VC div_sb_qr.159.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.39"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.160" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.36"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.161" expl="assertion" proved="true">
  <proof prover="1" timelimit="10"><result status="valid" time="10.74"/></proof>
  </goal>
  <goal name="VC div_sb_qr.162" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.162.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="3.53"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.43"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC div_sb_qr.162.13" expl="VC for div_sb_qr" proved="true">
   <transf name="replace" proved="true" arg1="(power radix 2)" arg2="(radix * radix)">
    <goal name="VC div_sb_qr.162.13.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="2" memlimit="2000"><result status="valid" time="3.06"/></proof>
    </goal>
    <goal name="VC div_sb_qr.162.13.1" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.163" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.163.0" expl="postcondition" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.LinearDecisionIntMP">
    <goal name="VC div_sb_qr.163.0.0" expl="postcondition" proved="true">
    <transf name="reflection_f" proved="true" arg1="mp_decision">
     <goal name="VC div_sb_qr.163.0.0.0" expl="postcondition" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="3.13"/></proof>
     </goal>
     <goal name="VC div_sb_qr.163.0.0.1" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.46"/></proof>
     </goal>
     <goal name="VC div_sb_qr.163.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.47"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.164" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.165" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.165.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.1" expl="assertion" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.165.1.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    <proof prover="1"><result status="valid" time="0.21"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.166" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.167" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC div_sb_qr.168" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.168.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.4" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.168.4.0" expl="VC for div_sb_qr" proved="true">
    <transf name="apply" proved="true" arg1="prod_compat_r">
     <goal name="VC div_sb_qr.168.4.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="VC div_sb_qr.168.4.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.168.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.10" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.168.10.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.168.10.0.0" expl="VC for div_sb_qr" proved="true">
     <transf name="unfold" proved="true" arg1="value">
      <goal name="VC div_sb_qr.168.10.0.0.0" expl="VC for div_sb_qr" proved="true">
      <transf name="apply" proved="true" arg1="value_sub_lower_bound">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.168.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.12" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.168.12.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.168.12.0.0" expl="VC for div_sb_qr" proved="true">
     <transf name="cut" proved="true" arg1="(0 &lt;= x12 /\ 0 &lt;= power radix sy)">
      <goal name="VC div_sb_qr.168.12.0.0.0" expl="VC for div_sb_qr" proved="true">
      <proof prover="1"><result status="valid" time="0.73"/></proof>
      </goal>
      <goal name="VC div_sb_qr.168.12.0.0.1" proved="true">
      <proof prover="3"><result status="valid" time="0.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.168.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="4.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.74"/></proof>
   </goal>
   <goal name="VC div_sb_qr.168.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.58"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.169" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.169.0" expl="postcondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.169.1" expl="postcondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.170" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.171" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.172" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.172.0" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.172.0.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1"><result status="valid" time="0.32"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.172.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.172.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="2.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.172.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="2.52"/></proof>
   </goal>
   <goal name="VC div_sb_qr.172.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.173" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC div_sb_qr.174" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.174.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="9.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="3.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.175" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC div_sb_qr.176" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.176.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.176.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.176.2" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.176.3" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_sb_qr.176.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.176.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.176.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.177" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="3.30"/></proof>
  </goal>
  <goal name="VC div_sb_qr.178" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC div_sb_qr.179" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="VC div_sb_qr.180" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.180.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.180.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.181" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="4.83"/></proof>
  </goal>
  <goal name="VC div_sb_qr.182" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.182.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.182.0.0" expl="precondition" proved="true">
    <proof prover="2" timelimit="20" memlimit="1500"><result status="valid" time="0.43"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.183" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.183.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.183.0.0" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.26"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.184" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="3.41"/></proof>
  </goal>
  <goal name="VC div_sb_qr.185" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.186" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.187" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.188" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.188.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.188.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="5.76"/></proof>
   </goal>
   <goal name="VC div_sb_qr.188.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.188.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.68"/></proof>
   </goal>
   <goal name="VC div_sb_qr.188.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC div_sb_qr.188.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div_sb_qr.188.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.188.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.38"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.189" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.51"/></proof>
  </goal>
  <goal name="VC div_sb_qr.190" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_sb_qr.191" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.191.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.1" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.191.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.191.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.6" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.191.6.0" expl="VC for div_sb_qr" proved="true">
    <transf name="cut" proved="true" arg1="((power radix (int32&#39;int sy - 1) * (uint64&#39;int x1 + radix * c&#39;))=(power radix (int32&#39;int sy - 1) * uint64&#39;int x1) + (power radix (int32&#39;int sy) * c&#39;))">
     <goal name="VC div_sb_qr.191.6.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_sb_qr.191.6.0.1" proved="true">
     <proof prover="1"><result status="valid" time="0.52"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.191.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="4.85"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="1.77"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.191.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.192" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.192.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div_sb_qr.192.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.30"/></proof>
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.193" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.193.0" expl="integer overflow" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.193.0.0" expl="integer overflow" proved="true">
    <proof prover="3"><result status="valid" time="0.34"/></proof>
    </goal>
    <goal name="VC div_sb_qr.193.0.1" expl="integer overflow" proved="true">
    <proof prover="3"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.1" expl="integer overflow" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.52"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.194" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.194.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.2" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.194.2.0" expl="VC for div_sb_qr" proved="true">
    <transf name="replace" proved="true" arg1="(uint64&#39;int ql1)" arg2="(uint64&#39;int ql+1)">
     <goal name="VC div_sb_qr.194.2.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.01"/></proof>
     </goal>
     <goal name="VC div_sb_qr.194.2.0.1" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.194.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.195" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.195.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.91"/></proof>
   <proof prover="4"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.70"/></proof>
   <proof prover="4"><result status="valid" time="0.33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.196" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC div_sb_qr.197" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.197.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.197.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.198" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.199" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.199.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.199.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.200" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.200.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.200.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.50"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.201" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.60"/></proof>
  </goal>
  <goal name="VC div_sb_qr.202" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.202.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.86"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="1.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="1.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.202.3.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.202.3.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.64"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.202.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.49"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="4.88"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.61"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.68"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.68"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.52"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="2.44"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.66"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.32" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.202.32.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.202.32.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.45"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.202.33" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.34" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.57"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.35" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.36" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.37" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.38" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.58"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.39" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.40" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.41" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.42" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.43" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.44" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.66"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.45" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="1.67"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="6.83"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.46" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.43"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="7.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.47" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.48" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.49" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.50" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.48"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.51" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.52" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.53" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.54" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.202.55" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.76"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.203" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.203.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.96"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.203.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.204" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.204.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="1.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.204.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.205" expl="loop variant decrease" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.206" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="VC div_sb_qr.207" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.67"/></proof>
  </goal>
  <goal name="VC div_sb_qr.208" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="1.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.209" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.209.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.209.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.11"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.210" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_sb_qr.211" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_sb_qr.212" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="1.26"/></proof>
  </goal>
  <goal name="VC div_sb_qr.213" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_sb_qr.214" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.215" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="1.20"/></proof>
  </goal>
  <goal name="VC div_sb_qr.216" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="1.20"/></proof>
  </goal>
  <goal name="VC div_sb_qr.217" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC div_sb_qr.218" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.218.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.59"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.66"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.219" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.219.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.219.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.220" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.220.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.220.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.221" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.222" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.222.0" expl="precondition" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.222.0.0" expl="precondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.222.0.0.0" expl="precondition" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.222.1" expl="precondition" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.223" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="VC div_sb_qr.224" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.225" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.225.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.225.0.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(value qp ((int32&#39;int sx - int32&#39;int sy) - int32&#39;int i))" arg2="(uint64&#39;int ql+ radix*value_sub (pelts q) (offset qp + 1) (((offset qp + int32&#39;int sx) - int32&#39;int sy) - int32&#39;int i))">
     <goal name="VC div_sb_qr.225.0.0.0" expl="assertion" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_sb_qr.225.0.0.1" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.225.1" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.225.1.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="1.06"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.226" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.226.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(value_sub (pelts q) (offset qp + 1) (((offset qp + int32&#39;int sx) - int32&#39;int sy) - int32&#39;int i))" arg2="(value qp2 ((int32&#39;int sx - int32&#39;int sy) - int32&#39;int i1))">
    <goal name="VC div_sb_qr.226.0.0" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC div_sb_qr.226.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.63"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.227" expl="integer overflow" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.68"/></proof>
  </goal>
  <goal name="VC div_sb_qr.228" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.229" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.229.0" expl="precondition" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.48"/></proof>
   </goal>
   <goal name="VC div_sb_qr.229.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.230" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.230.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.34"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_sb_qr.230.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.231" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.232" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.233" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.233.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="2.00"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.55"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.234" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.234.0" expl="assertion" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.234.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.92"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.235" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.235.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.235.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.236" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.237" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.237.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.237.1" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.237.1.0" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.58"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.238" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.238.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.238.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.238.1" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.238.1.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="2.36"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.239" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.239.0" expl="assertion" proved="true">
   <transf name="use_th" proved="true" arg1="lineardecision.EqPropMP">
    <goal name="VC div_sb_qr.239.0.0" expl="assertion" proved="true">
    <transf name="reflection_f" proved="true" arg1="prop_mp_decision">
     <goal name="VC div_sb_qr.239.0.0.0" expl="assertion" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="2.79"/></proof>
     </goal>
     <goal name="VC div_sb_qr.239.0.0.1" proved="true">
     <proof prover="3"><result status="valid" time="0.39"/></proof>
     </goal>
     <goal name="VC div_sb_qr.239.0.0.2" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.58"/></proof>
     </goal>
     <goal name="VC div_sb_qr.239.0.0.3" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.56"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.240" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="VC div_sb_qr.241" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC div_sb_qr.242" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.242.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.242.0.0" expl="assertion" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.242.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_sb_qr.242.0.0.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_sb_qr.242.0.0.2" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.10"/></proof>
     <proof prover="2" timelimit="1"><result status="unknown" time="1.12"/></proof>
     </goal>
     <goal name="VC div_sb_qr.242.0.0.3" expl="VC for div_sb_qr" proved="true">
     <transf name="cut" proved="true" arg1="(value y (sy - 1) = vly + (power radix (sy-2) * dl))">
      <goal name="VC div_sb_qr.242.0.0.3.0" expl="VC for div_sb_qr" proved="true">
      <proof prover="3"><result status="valid" time="0.01"/></proof>
      </goal>
      <goal name="VC div_sb_qr.242.0.0.3.1" proved="true">
      <transf name="replace" proved="true" arg1="(sy - 1)" arg2="((sy - 2) + 1)">
       <goal name="VC div_sb_qr.242.0.0.3.1.0" proved="true">
       <transf name="unfold" proved="true" arg1="vly">
        <goal name="VC div_sb_qr.242.0.0.3.1.0.0" proved="true">
        <transf name="unfold" proved="true" arg1="value">
         <goal name="VC div_sb_qr.242.0.0.3.1.0.0.0" proved="true">
         <proof prover="0"><result status="valid" time="0.06"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC div_sb_qr.242.0.0.3.1.1" proved="true">
       <proof prover="3"><result status="valid" time="0.01"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC div_sb_qr.242.0.0.4" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.10"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.243" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.243.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.37"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.47"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.54"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.67"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.37"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="5.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.32" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.33" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.34" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.35" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.243.36" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.244" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div_sb_qr.245" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.56"/></proof>
  </goal>
  <goal name="VC div_sb_qr.246" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.246.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.77"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.47"/></proof>
   </goal>
   <goal name="VC div_sb_qr.246.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.247" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div_sb_qr.248" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.51"/></proof>
  </goal>
  <goal name="VC div_sb_qr.249" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.56"/></proof>
  </goal>
  <goal name="VC div_sb_qr.250" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.250.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.76"/></proof>
   </goal>
   <goal name="VC div_sb_qr.250.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="1.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.251" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="1.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.252" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.253" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.254" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.96"/></proof>
  </goal>
  <goal name="VC div_sb_qr.255" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.256" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_sb_qr.257" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.257.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.60"/></proof>
   </goal>
   <goal name="VC div_sb_qr.257.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.258" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.258.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.50"/></proof>
   </goal>
   <goal name="VC div_sb_qr.258.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.259" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.259.0" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.259.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.58"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.260" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.261" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.261.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.261.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.262" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div_sb_qr.263" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_sb_qr.264" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC div_sb_qr.265" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.266" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC div_sb_qr.267" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.267.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="1.09" steps="137"/></proof>
   </goal>
   <goal name="VC div_sb_qr.267.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="6.74"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.268" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.268.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.268.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.269" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.269.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.76" steps="137"/></proof>
   </goal>
   <goal name="VC div_sb_qr.269.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.269.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.56" steps="108"/></proof>
   </goal>
   <goal name="VC div_sb_qr.269.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.269.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="1.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.269.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.270" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.270.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.270.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.271" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.271.0" expl="postcondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.48" steps="137"/></proof>
   </goal>
   <goal name="VC div_sb_qr.271.1" expl="postcondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.22" steps="137"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.272" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.13"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC divmod_2" expl="VC for divmod_2" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC divmod_2.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="31"/></proof>
  </goal>
  <goal name="VC divmod_2.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="32"/></proof>
  </goal>
  <goal name="VC divmod_2.2" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.2.0" expl="integer overflow" proved="true">
   <proof prover="1"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC divmod_2.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="43"/></proof>
  </goal>
  <goal name="VC divmod_2.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.10" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.10.0" expl="VC for divmod_2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.13"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_2.10.1" expl="VC for divmod_2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.11" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC divmod_2.12" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC divmod_2.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.16" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.16" steps="273"/></proof>
  </goal>
  <goal name="VC divmod_2.17" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_2.20" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.20.0" expl="VC for divmod_2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_2.20.1" expl="VC for divmod_2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.18" steps="63"/></proof>
   </goal>
   <goal name="VC divmod_2.20.2" expl="VC for divmod_2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="43"/></proof>
   </goal>
   <goal name="VC divmod_2.20.3" expl="VC for divmod_2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="43"/></proof>
   </goal>
   <goal name="VC divmod_2.20.4" expl="VC for divmod_2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.26" steps="64"/></proof>
   </goal>
   <goal name="VC divmod_2.20.5" expl="VC for divmod_2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.23" steps="63"/></proof>
   </goal>
   <goal name="VC divmod_2.20.6" expl="VC for divmod_2" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.21" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.22" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC divmod_2.23" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.24" expl="precondition" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC divmod_2.25" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.26" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="62"/></proof>
  </goal>
  <goal name="VC divmod_2.27" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_2.28" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.29" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="VC divmod_2.30" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC divmod_2.31" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.31.0" expl="loop invariant init" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_2.31.1" expl="loop invariant init" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.32" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.33" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.34" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.34.0" expl="loop invariant init" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_2.34.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.35" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.44" steps="116"/></proof>
  </goal>
  <goal name="VC divmod_2.36" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.37" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC divmod_2.38" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="71"/></proof>
  </goal>
  <goal name="VC divmod_2.39" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.40" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.40.0" expl="precondition" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC divmod_2.40.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
    <goal name="VC divmod_2.40.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.40.1" expl="precondition" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.40.1.0" expl="precondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC divmod_2.40.1.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="1.48"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.41" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.42" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC divmod_2.43" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC divmod_2.44" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.45" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.46" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.47" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.47.0" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="2.48"/></proof>
   </goal>
   <goal name="VC divmod_2.47.1" expl="VC for divmod_2" proved="true">
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC divmod_2.47.2" expl="VC for divmod_2" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.58"/></proof>
   </goal>
   <goal name="VC divmod_2.47.3" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="4.57"/></proof>
   </goal>
   <goal name="VC divmod_2.47.4" expl="VC for divmod_2" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC divmod_2.47.5" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_2.47.6" expl="VC for divmod_2" proved="true">
   <proof prover="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC divmod_2.47.7" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC divmod_2.47.8" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_2.47.9" expl="VC for divmod_2" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.47.9.0" expl="VC for divmod_2" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC divmod_2.47.9.0.0" expl="VC for divmod_2" proved="true">
     <proof prover="1"><result status="valid" time="0.20"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.10" expl="VC for divmod_2" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_2.47.11" expl="VC for divmod_2" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.47.11.0" expl="VC for divmod_2" proved="true">
    <transf name="revert" proved="true" arg1="H26">
     <goal name="VC divmod_2.47.11.0.0" expl="VC for divmod_2" proved="true">
     <proof prover="1" timelimit="10"><result status="valid" time="0.13"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.12" expl="VC for divmod_2" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_2.47.13" expl="VC for divmod_2" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_2.47.14" expl="VC for divmod_2" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.47.14.0" expl="VC for divmod_2" proved="true">
    <transf name="introduce_premises" proved="true" >
     <goal name="VC divmod_2.47.14.0.0" expl="VC for divmod_2" proved="true">
     <proof prover="0"><result status="valid" time="0.16"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.15" expl="VC for divmod_2" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.47.15.0" expl="VC for divmod_2" proved="true">
    <transf name="replace" proved="true" arg1="(value_sub (pelts q) (offset q + k) ((offset q + int32&#39;int sx) - 2) + (uint64&#39;int qh * power radix ((int32&#39;int sx - 2) - k)))" arg2="(value_sub (pelts q1) (offset q1 + k)
           ((offset q1 + int32&#39;int sx) - 2) + (uint64&#39;int qh * power radix ((int32&#39;int sx - 2) - k)))">
     <goal name="VC divmod_2.47.15.0.0" expl="VC for divmod_2" proved="true">
     <proof prover="0"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC divmod_2.47.15.0.1" proved="true">
     <proof prover="1"><result status="valid" time="0.26"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.16" expl="VC for divmod_2" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.48" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.49" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.49.0" expl="VC for divmod_2" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_2.49.1" expl="VC for divmod_2" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.50" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_2.51" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.52" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.53" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.54" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.54.0" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_2.54.1" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.55" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.56" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC divmod_2.57" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC divmod_2.58" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC divmod_2.59" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.60" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC divmod_2.61" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.61.0" expl="VC for divmod_2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.20" steps="58"/></proof>
   </goal>
   <goal name="VC divmod_2.61.1" expl="VC for divmod_2" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.22" steps="58"/></proof>
   </goal>
   <goal name="VC divmod_2.61.2" expl="VC for divmod_2" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.62" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.17" steps="79"/></proof>
  </goal>
  <goal name="VC divmod_2.63" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.64" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC div_qr" expl="VC for div_qr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div_qr.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.1" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="51"/></proof>
  </goal>
  <goal name="VC div_qr.2" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_qr.3" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_qr.4" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.4.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_qr.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.7" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="26"/></proof>
  </goal>
  <goal name="VC div_qr.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.9" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.9.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.9.0.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.10" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="28"/></proof>
  </goal>
  <goal name="VC div_qr.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.12" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.15" steps="139"/></proof>
  </goal>
  <goal name="VC div_qr.13" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.14" expl="integer overflow" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.14.0" expl="integer overflow" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.15" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="61"/></proof>
  </goal>
  <goal name="VC div_qr.16" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.16.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.18" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.06" steps="69"/></proof>
  </goal>
  <goal name="VC div_qr.19" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="VC div_qr.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.21" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="75"/></proof>
  </goal>
  <goal name="VC div_qr.22" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.22.0" expl="precondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.23" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.30"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="84"/></proof>
  </goal>
  <goal name="VC div_qr.24" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.24.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.24.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.24.0.0.0" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.25" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.25.0" expl="precondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="97"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.26" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.26.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.27" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.27.0" expl="precondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="55"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.28" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="123"/></proof>
  </goal>
  <goal name="VC div_qr.29" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="111"/></proof>
  </goal>
  <goal name="VC div_qr.30" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.30.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.30.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.30.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.30.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="VC div_qr.30.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.30.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.05"/></proof>
     </goal>
     <goal name="VC div_qr.30.0.0.4" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.08"/></proof>
     </goal>
     <goal name="VC div_qr.30.0.0.5" expl="VC for div_qr" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.31" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.31.0" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.33" steps="195"/></proof>
   </goal>
   <goal name="VC div_qr.31.1" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.44" steps="205"/></proof>
   </goal>
   <goal name="VC div_qr.31.2" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.36" steps="195"/></proof>
   </goal>
   <goal name="VC div_qr.31.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.31.4" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="75"/></proof>
   </goal>
   <goal name="VC div_qr.31.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_qr.31.6" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_qr.31.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC div_qr.31.8" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.31.9" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_qr.31.10" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.31.11" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="114"/></proof>
   </goal>
   <goal name="VC div_qr.31.12" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.31.13" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.37" steps="208"/></proof>
   </goal>
   <goal name="VC div_qr.31.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.31.15" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.31.16" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.31.17" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="77"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.32" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.33" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.97"/></proof>
  </goal>
  <goal name="VC div_qr.34" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.34.0" expl="precondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.35" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.35.0" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="37"/></proof>
   </goal>
   <goal name="VC div_qr.35.1" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.36" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.37" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div_qr.39" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="91"/></proof>
  </goal>
  <goal name="VC div_qr.40" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.41" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div_qr.42" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_qr.43" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.43.0" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.43.1" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="VC div_qr.43.2" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="VC div_qr.43.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="50"/></proof>
   </goal>
   <goal name="VC div_qr.43.4" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="51"/></proof>
   </goal>
   <goal name="VC div_qr.43.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC div_qr.43.6" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="86"/></proof>
   </goal>
   <goal name="VC div_qr.43.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.43.8" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.43.9" expl="VC for div_qr" proved="true">
   <proof prover="1" timelimit="20"><result status="valid" time="0.46"/></proof>
   </goal>
   <goal name="VC div_qr.43.10" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.43.11" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.43.12" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="100"/></proof>
   </goal>
   <goal name="VC div_qr.43.13" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="104"/></proof>
   </goal>
   <goal name="VC div_qr.43.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.43.15" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.43.16" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.43.17" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.16" steps="106"/></proof>
   </goal>
   <goal name="VC div_qr.43.18" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.43.19" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="66"/></proof>
   </goal>
   <goal name="VC div_qr.43.20" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.43.21" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.43.22" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.76" steps="232"/></proof>
   </goal>
   <goal name="VC div_qr.43.23" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.44" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.45" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.46" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.46.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.47" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.47.0" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.13" steps="46"/></proof>
   </goal>
   <goal name="VC div_qr.47.1" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.48" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="83"/></proof>
  </goal>
  <goal name="VC div_qr.49" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.50" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="49"/></proof>
  </goal>
  <goal name="VC div_qr.51" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="86"/></proof>
  </goal>
  <goal name="VC div_qr.52" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.52.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.53" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="VC div_qr.54" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_qr.55" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="95"/></proof>
  </goal>
  <goal name="VC div_qr.56" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.57" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.57.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.57.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.57.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.10"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.06"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.4" expl="VC for div_qr" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.5" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.58" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.59" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="VC div_qr.60" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="VC div_qr.61" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.61.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.62" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.62.0" expl="precondition" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.63" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.64" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="77"/></proof>
  </goal>
  <goal name="VC div_qr.65" expl="precondition" proved="true">
  <proof prover="4" timelimit="10"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_qr.66" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.66.0" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="82"/></proof>
   </goal>
   <goal name="VC div_qr.66.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.66.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.66.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.4" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.53"/></proof>
   </goal>
   <goal name="VC div_qr.66.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.66.6" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.66.7" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_qr.66.8" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.66.9" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_qr.66.10" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.66.11" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.12" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_qr.66.13" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.66.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.66.15" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="83"/></proof>
   </goal>
   <goal name="VC div_qr.66.16" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.42"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="1.25"/></proof>
   </goal>
   <goal name="VC div_qr.66.17" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.66.18" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.66.19" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.20" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.66.21" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.22" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.66.23" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.24" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.25" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.66.26" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.66.27" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.67" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.67.0" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="83"/></proof>
   </goal>
   <goal name="VC div_qr.67.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.67.2" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="85"/></proof>
   </goal>
   <goal name="VC div_qr.67.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="85"/></proof>
   </goal>
   <goal name="VC div_qr.67.4" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="87"/></proof>
   </goal>
   <goal name="VC div_qr.67.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.68" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.69" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.69.0" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.69.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.69.2" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.69.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="1.00"/></proof>
   </goal>
   <goal name="VC div_qr.69.4" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.69.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.69.6" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_qr.69.7" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_qr.69.8" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_qr.69.9" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.69.10" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC div_qr.69.11" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_qr.69.12" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.69.13" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_qr.69.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.69.15" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.54"/></proof>
   </goal>
   <goal name="VC div_qr.69.16" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.69.17" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC div_qr.69.18" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.69.19" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.70" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.71" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC div_qr.72" expl="integer overflow" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.72.0" expl="integer overflow" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.72.0.0" expl="integer overflow" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.72.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_qr.72.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.73" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="61"/></proof>
  </goal>
  <goal name="VC div_qr.74" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_qr.75" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="62"/></proof>
  </goal>
  <goal name="VC div_qr.76" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.77" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="VC div_qr.78" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.78.0" expl="precondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="33"/></proof>
   </goal>
   <goal name="VC div_qr.78.1" expl="precondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.79" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.79.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.79.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.79.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_qr.79.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.11"/></proof>
     </goal>
     <goal name="VC div_qr.79.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.11"/></proof>
     </goal>
     <goal name="VC div_qr.79.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.79.0.0.4" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.79.0.0.5" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.80" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.81" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.81.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.81.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.81.0.0.0" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.82" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.82.0" expl="precondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="46"/></proof>
   </goal>
   <goal name="VC div_qr.82.1" expl="precondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.83" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="77"/></proof>
  </goal>
  <goal name="VC div_qr.84" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="89"/></proof>
  </goal>
  <goal name="VC div_qr.85" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.85.0" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.85.1" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="181"/></proof>
   </goal>
   <goal name="VC div_qr.85.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.85.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="90"/></proof>
   </goal>
   <goal name="VC div_qr.85.4" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.85.5" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="97"/></proof>
   </goal>
   <goal name="VC div_qr.85.6" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="96"/></proof>
   </goal>
   <goal name="VC div_qr.85.7" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="58"/></proof>
   </goal>
   <goal name="VC div_qr.85.8" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="107"/></proof>
   </goal>
   <goal name="VC div_qr.85.9" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.85.10" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.63"/></proof>
   </goal>
   <goal name="VC div_qr.85.11" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.85.12" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="91"/></proof>
   </goal>
   <goal name="VC div_qr.85.13" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.46" steps="306"/></proof>
   </goal>
   <goal name="VC div_qr.85.14" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="60"/></proof>
   </goal>
   <goal name="VC div_qr.85.15" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="96"/></proof>
   </goal>
   <goal name="VC div_qr.85.16" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.62"/></proof>
   </goal>
   <goal name="VC div_qr.85.17" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.85.18" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.86" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="90"/></proof>
  </goal>
  <goal name="VC div_qr.87" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.87.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.87.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.87.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.06"/></proof>
     </goal>
     <goal name="VC div_qr.87.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="94"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.88" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.88.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.54"/></proof>
   </goal>
   <goal name="VC div_qr.88.1" expl="precondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="103"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.89" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.89.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.89.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.90" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.90.0" expl="precondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="60"/></proof>
   </goal>
   <goal name="VC div_qr.90.1" expl="precondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="120"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.91" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="119"/></proof>
  </goal>
  <goal name="VC div_qr.92" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_qr.93" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.94" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.94.0" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.25" steps="211"/></proof>
   </goal>
   <goal name="VC div_qr.94.1" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC div_qr.94.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.94.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.94.4" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="79"/></proof>
   </goal>
   <goal name="VC div_qr.94.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div_qr.94.6" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_qr.94.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.94.8" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="83"/></proof>
   </goal>
   <goal name="VC div_qr.94.9" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.94.10" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="83"/></proof>
   </goal>
   <goal name="VC div_qr.94.11" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="85"/></proof>
   </goal>
   <goal name="VC div_qr.94.12" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.94.13" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.94.14" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.95" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.95.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.95.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.95.0.0.0" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.96" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.96.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.96.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.96.0.0.0" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.97" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.15" steps="111"/></proof>
  </goal>
  <goal name="VC div_qr.98" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.17" steps="111"/></proof>
  </goal>
  <goal name="VC div_qr.99" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.99.0" expl="precondition" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.08" steps="79"/></proof>
   </goal>
   <goal name="VC div_qr.99.1" expl="precondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="87"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.100" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="4.57"/></proof>
  </goal>
  <goal name="VC div_qr.101" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="112"/></proof>
  </goal>
  <goal name="VC div_qr.102" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="82"/></proof>
  </goal>
  <goal name="VC div_qr.103" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_qr.104" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.104.0" expl="precondition" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="40"/></proof>
   </goal>
   <goal name="VC div_qr.104.1" expl="precondition" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.07" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.105" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.05" steps="39"/></proof>
  </goal>
  <goal name="VC div_qr.106" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.107" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.108" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.108.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.108.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.108.0.0.0" expl="precondition" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.109" expl="assertion" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="95"/></proof>
  </goal>
  <goal name="VC div_qr.110" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_qr.111" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_qr.112" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.112.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.112.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.112.0.0.0" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.113" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.113.0" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.1" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="50"/></proof>
   </goal>
   <goal name="VC div_qr.113.2" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="50"/></proof>
   </goal>
   <goal name="VC div_qr.113.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="52"/></proof>
   </goal>
   <goal name="VC div_qr.113.4" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="53"/></proof>
   </goal>
   <goal name="VC div_qr.113.5" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC div_qr.113.6" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="88"/></proof>
   </goal>
   <goal name="VC div_qr.113.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.113.8" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.9" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.113.10" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.11" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.12" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.13" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_qr.113.14" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="54"/></proof>
   </goal>
   <goal name="VC div_qr.113.15" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.16" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.113.17" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="103"/></proof>
   </goal>
   <goal name="VC div_qr.113.18" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.19" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.113.20" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.113.21" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_qr.113.22" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.113.23" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="63"/></proof>
   </goal>
   <goal name="VC div_qr.113.24" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.113.25" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.113.26" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_qr.113.27" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.114" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_qr.115" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.116" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.116.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.116.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.117" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="48"/></proof>
  </goal>
  <goal name="VC div_qr.118" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.118.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.118.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.07" steps="86"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.119" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.119.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.119.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.120" expl="precondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC div_qr.120.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.121" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_qr.122" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.123" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC div_qr.124" expl="assertion" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC div_qr.125" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.125.0" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="64"/></proof>
   </goal>
   <goal name="VC div_qr.125.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.125.2" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.16" steps="113"/></proof>
   </goal>
   <goal name="VC div_qr.125.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="102"/></proof>
   </goal>
   <goal name="VC div_qr.125.4" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.125.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.125.6" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.125.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.125.8" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="113"/></proof>
   </goal>
   <goal name="VC div_qr.125.9" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.125.10" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.125.11" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.125.12" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_qr.125.13" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_qr.125.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.125.15" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.125.16" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.125.17" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="110"/></proof>
   </goal>
   <goal name="VC div_qr.125.18" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.125.19" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="74"/></proof>
   </goal>
   <goal name="VC div_qr.125.20" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.79"/></proof>
   </goal>
   <goal name="VC div_qr.125.21" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.125.22" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_qr.125.23" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.126" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99"/></proof>
  </goal>
  <goal name="VC div_qr.127" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.127.0" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_qr.127.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.127.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.127.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="100"/></proof>
   </goal>
   <goal name="VC div_qr.127.4" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.72"/></proof>
   </goal>
   <goal name="VC div_qr.127.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.57"/></proof>
   </goal>
   <goal name="VC div_qr.127.6" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="108"/></proof>
   </goal>
   <goal name="VC div_qr.127.7" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="107"/></proof>
   </goal>
   <goal name="VC div_qr.127.8" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="67"/></proof>
   </goal>
   <goal name="VC div_qr.127.9" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.127.10" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="3.07"/></proof>
   </goal>
   <goal name="VC div_qr.127.11" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_qr.127.12" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="101"/></proof>
   </goal>
   <goal name="VC div_qr.127.13" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.70"/></proof>
   </goal>
   <goal name="VC div_qr.127.14" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC div_qr.127.15" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="69"/></proof>
   </goal>
   <goal name="VC div_qr.127.16" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.12" steps="107"/></proof>
   </goal>
   <goal name="VC div_qr.127.17" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_qr.127.18" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.127.19" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.128" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="2.19"/></proof>
  <proof prover="1"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC div_qr.129" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="99"/></proof>
  </goal>
  <goal name="VC div_qr.130" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_qr.131" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="68"/></proof>
  </goal>
  <goal name="VC div_qr.132" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="137"/></proof>
  </goal>
  <goal name="VC div_qr.133" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.134" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.134.0" expl="precondition" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.134.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.135" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.18" steps="132"/></proof>
  </goal>
  <goal name="VC div_qr.136" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.136.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.136.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.136.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.136.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
     </goal>
     <goal name="VC div_qr.136.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.136.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.136.0.0.4" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.136.0.0.5" expl="VC for div_qr" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.137" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.06" steps="80"/></proof>
  </goal>
  <goal name="VC div_qr.138" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.138.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.138.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.22" steps="82"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.139" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.139.0" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="85"/></proof>
   </goal>
   <goal name="VC div_qr.139.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.139.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.139.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.4" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.92"/></proof>
   </goal>
   <goal name="VC div_qr.139.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.6" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.139.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.74"/></proof>
   </goal>
   <goal name="VC div_qr.139.8" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.139.9" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_qr.139.10" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_qr.139.11" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.139.12" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div_qr.139.13" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.139.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.139.15" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="86"/></proof>
   </goal>
   <goal name="VC div_qr.139.16" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.59"/></proof>
   </goal>
   <goal name="VC div_qr.139.17" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.139.18" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.19" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.139.20" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.21" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.139.22" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.23" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.24" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.25" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.139.26" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.139.27" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.140" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.140.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.140.0.0" expl="assertion" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.140.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.23" steps="86"/></proof>
     </goal>
     <goal name="VC div_qr.140.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.06"/></proof>
     </goal>
     <goal name="VC div_qr.140.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.29" steps="88"/></proof>
     </goal>
     <goal name="VC div_qr.140.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.26" steps="88"/></proof>
     </goal>
     <goal name="VC div_qr.140.0.0.4" expl="VC for div_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.60" steps="154"/></proof>
     </goal>
     <goal name="VC div_qr.140.0.0.5" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.07"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.141" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_qr.142" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.142.0" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.142.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.142.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.142.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.142.4" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.142.5" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC div_qr.142.6" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_qr.142.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.142.8" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.58"/></proof>
   </goal>
   <goal name="VC div_qr.142.9" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.142.10" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.142.11" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.142.12" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.142.13" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.142.14" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.74"/></proof>
   </goal>
   <goal name="VC div_qr.142.15" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.142.16" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.143" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.143.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.143.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.144" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.145" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.146" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC div_qr.147" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.147.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.147.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="3.94"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.148" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="3.89"/></proof>
  </goal>
  <goal name="VC div_qr.149" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.150" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.151" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.152" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.152.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.53"/></proof>
   </goal>
   <goal name="VC div_qr.152.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.60"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC tdiv_qr" expl="VC for tdiv_qr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC tdiv_qr.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="38"/></proof>
  </goal>
  <goal name="VC tdiv_qr.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="16"/></proof>
  </goal>
  <goal name="VC tdiv_qr.2" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="VC tdiv_qr.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC tdiv_qr.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="24"/></proof>
  </goal>
  <goal name="VC tdiv_qr.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC tdiv_qr.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="VC tdiv_qr.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="VC tdiv_qr.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="VC tdiv_qr.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="VC tdiv_qr.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="VC tdiv_qr.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="VC tdiv_qr.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="61"/></proof>
  </goal>
  <goal name="VC tdiv_qr.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="33"/></proof>
  </goal>
  <goal name="VC tdiv_qr.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="VC tdiv_qr.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="VC tdiv_qr.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC tdiv_qr.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="VC tdiv_qr.18" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="VC tdiv_qr.19" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC tdiv_qr.20" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="VC tdiv_qr.21" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="53"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
