<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Eprover" version="1.9.1-001" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../mp2.mlw" proved="true">
<theory name="N" proved="true" sum="538ca4eeeda7630d0eb7c786da56a253">
 <goal name="VC map_eq_shift" expl="VC for map_eq_shift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC map_eq_shift.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC map_eq_shift_zero" expl="VC for map_eq_shift_zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC map_eq_shift_zero.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="6"/></proof>
  </goal>
  <goal name="VC map_eq_shift_zero.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="VC map_eq_shift_zero.2" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="3"/></proof>
  </goal>
  <goal name="VC map_eq_shift_zero.3" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC map_eq_shift_zero.3.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC map_eq_shift_zero.3.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.00" steps="10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC map_eq_shift_zero.4" expl="postcondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC map_eq_shift_zero.4.0" expl="postcondition" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="limb_max_bound" proved="true">
 <proof prover="9"><result status="valid" time="0.02" steps="71"/></proof>
 </goal>
 <goal name="VC prod_compat_strict_r" expl="VC for prod_compat_strict_r" proved="true">
 <proof prover="1"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC prod_compat_r" expl="VC for prod_compat_r" proved="true">
 <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="76"/></proof>
 </goal>
 <goal name="VC value_sub" expl="VC for value_sub" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_frame" expl="VC for value_sub_frame" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_frame.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_frame.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC value_sub_frame.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="108"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_frame_shift" expl="VC for value_sub_frame_shift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_frame_shift.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.2" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.3" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.4" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC value_sub_frame_shift.4.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC value_sub_frame_shift.4.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.17"/></proof>
    <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC value_sub_frame_shift.5" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_frame_shift.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="78"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_tail" expl="VC for value_sub_tail" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_tail.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_tail.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_tail.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="108"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_concat" expl="VC for value_sub_concat" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_concat.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="VC value_sub_concat.1" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="75"/></proof>
  </goal>
  <goal name="VC value_sub_concat.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="75"/></proof>
  </goal>
  <goal name="VC value_sub_concat.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_head" expl="VC for value_sub_head" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_head.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC value_sub_head.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="98"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_update" expl="VC for value_sub_update" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_update.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="VC value_sub_update.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC value_sub_update.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="76"/></proof>
  </goal>
  <goal name="VC value_sub_update.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="VC value_sub_update.4" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.02" steps="78"/></proof>
  </goal>
  <goal name="VC value_sub_update.5" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.02" steps="79"/></proof>
  </goal>
  <goal name="VC value_sub_update.6" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_zero" expl="VC for value_zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_zero.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="74"/></proof>
  </goal>
  <goal name="VC value_zero.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="80"/></proof>
  </goal>
  <goal name="VC value_zero.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_update_no_change" expl="VC for value_sub_update_no_change" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_update_no_change.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="VC value_sub_update_no_change.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_shift_no_change" expl="VC for value_sub_shift_no_change" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_shift_no_change.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="VC value_sub_shift_no_change.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_lower_bound" expl="VC for value_sub_lower_bound" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_lower_bound.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC value_sub_lower_bound.1" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_lower_bound.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_upper_bound" expl="VC for value_sub_upper_bound" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_upper_bound.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.1" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.2" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="76"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="76"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="130"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_lower_bound_tight" expl="VC for value_sub_lower_bound_tight" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_lower_bound_tight.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC value_sub_lower_bound_tight.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="75"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC value_sub_upper_bound_tight" expl="VC for value_sub_upper_bound_tight" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC value_sub_upper_bound_tight.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="73"/></proof>
  </goal>
  <goal name="VC value_sub_upper_bound_tight.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC copy" expl="VC for copy" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC copy.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC copy.3" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="VC copy.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC copy.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC copy.8" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.9" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.10" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC copy.12" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC copy.12.0" expl="VC for copy" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC copy.12.1" expl="VC for copy" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC copy.13" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC copy.13.0" expl="VC for copy" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC copy.13.1" expl="VC for copy" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC copy.14" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="111"/></proof>
  </goal>
  <goal name="VC copy.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="103"/></proof>
  </goal>
  <goal name="VC copy.16" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC copy.17" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC copy.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.19" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.12" steps="245"/></proof>
  </goal>
  <goal name="VC copy.20" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.22" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.23" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC copy.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="114"/></proof>
  </goal>
  <goal name="VC copy.25" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="115"/></proof>
  </goal>
  <goal name="VC copy.26" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compare_same_size" expl="VC for compare_same_size" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC compare_same_size.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="VC compare_same_size.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="78"/></proof>
  </goal>
  <goal name="VC compare_same_size.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="85"/></proof>
  </goal>
  <goal name="VC compare_same_size.3" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="93"/></proof>
  </goal>
  <goal name="VC compare_same_size.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="95"/></proof>
  </goal>
  <goal name="VC compare_same_size.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="VC compare_same_size.6" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="91"/></proof>
  </goal>
  <goal name="VC compare_same_size.7" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="84"/></proof>
  </goal>
  <goal name="VC compare_same_size.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="VC compare_same_size.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="VC compare_same_size.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="88"/></proof>
  </goal>
  <goal name="VC compare_same_size.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="89"/></proof>
  </goal>
  <goal name="VC compare_same_size.12" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="105"/></proof>
  </goal>
  <goal name="VC compare_same_size.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="91"/></proof>
  </goal>
  <goal name="VC compare_same_size.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="92"/></proof>
  </goal>
  <goal name="VC compare_same_size.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="94"/></proof>
  </goal>
  <goal name="VC compare_same_size.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC compare_same_size.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC compare_same_size.17.0" expl="VC for compare_same_size" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC compare_same_size.17.1" expl="VC for compare_same_size" proved="true">
   <proof prover="9"><result status="valid" time="0.18" steps="107"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compare_same_size.18" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.10" steps="106"/></proof>
  </goal>
  <goal name="VC compare_same_size.19" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC compare_same_size.20" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="94"/></proof>
  </goal>
  <goal name="VC compare_same_size.21" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="95"/></proof>
  </goal>
  <goal name="VC compare_same_size.22" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC compare_same_size.23" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC compare_same_size.23.0" expl="VC for compare_same_size" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC compare_same_size.23.1" expl="VC for compare_same_size" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   <proof prover="9"><result status="valid" time="0.19" steps="108"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compare_same_size.24" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.10" steps="107"/></proof>
  </goal>
  <goal name="VC compare_same_size.25" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.11" steps="108"/></proof>
  </goal>
  <goal name="VC compare_same_size.26" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC compare_same_size.27" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="VC compare_same_size.28" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="VC compare_same_size.29" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="VC compare_same_size.30" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="VC compare_same_size.31" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="VC compare_same_size.32" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC is_zero" expl="VC for is_zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC is_zero.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="80"/></proof>
  </goal>
  <goal name="VC is_zero.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="VC is_zero.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="VC is_zero.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="VC is_zero.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="VC is_zero.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="89"/></proof>
  </goal>
  <goal name="VC is_zero.6" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="VC is_zero.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="VC is_zero.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="89"/></proof>
  </goal>
  <goal name="VC is_zero.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="90"/></proof>
  </goal>
  <goal name="VC is_zero.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="97"/></proof>
  </goal>
  <goal name="VC is_zero.11" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="VC is_zero.12" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.12" steps="157"/></proof>
  </goal>
  <goal name="VC is_zero.13" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="89"/></proof>
  </goal>
  <goal name="VC is_zero.14" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="VC is_zero.15" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="90"/></proof>
  </goal>
  <goal name="VC is_zero.16" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="108"/></proof>
  </goal>
  <goal name="VC is_zero.17" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="VC is_zero.18" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="VC is_zero.19" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="89"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC zero" expl="VC for zero" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC zero.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="VC zero.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="VC zero.2" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="VC zero.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="117"/></proof>
  </goal>
  <goal name="VC zero.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="94"/></proof>
  </goal>
  <goal name="VC zero.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="VC zero.6" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="92"/></proof>
  </goal>
  <goal name="VC zero.7" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="94"/></proof>
  </goal>
  <goal name="VC zero.8" expl="loop variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="90"/></proof>
  </goal>
  <goal name="VC zero.9" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="VC zero.10" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.38" steps="176"/></proof>
  </goal>
  <goal name="VC zero.11" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="83"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_limb" expl="VC for add_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="84"/></proof>
  </goal>
  <goal name="VC add_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="85"/></proof>
  </goal>
  <goal name="VC add_limb.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="79"/></proof>
  </goal>
  <goal name="VC add_limb.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="81"/></proof>
  </goal>
  <goal name="VC add_limb.4" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.14" steps="136"/></proof>
  </goal>
  <goal name="VC add_limb.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="97"/></proof>
  </goal>
  <goal name="VC add_limb.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="VC add_limb.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="106"/></proof>
  </goal>
  <goal name="VC add_limb.8" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limb.8.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="4.30"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="3.01"/></proof>
   </goal>
   <goal name="VC add_limb.8.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limb.9" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="101"/></proof>
  </goal>
  <goal name="VC add_limb.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="108"/></proof>
  </goal>
  <goal name="VC add_limb.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="97"/></proof>
  </goal>
  <goal name="VC add_limb.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.08" steps="98"/></proof>
  </goal>
  <goal name="VC add_limb.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limb.13.0" expl="VC for add_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC add_limb.13.1" expl="VC for add_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="112"/></proof>
   </goal>
   <goal name="VC add_limb.13.2" expl="VC for add_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_limb.13.3" expl="VC for add_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="99"/></proof>
   </goal>
   <goal name="VC add_limb.13.4" expl="VC for add_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_limb.13.5" expl="VC for add_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add_limb.13.6" expl="VC for add_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.20" steps="123"/></proof>
   </goal>
   <goal name="VC add_limb.13.7" expl="VC for add_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limb.14" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="VC add_limb.15" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="9"><result status="valid" time="0.08" steps="109"/></proof>
  </goal>
  <goal name="VC add_limb.16" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.16" steps="103"/></proof>
  </goal>
  <goal name="VC add_limb.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add_limb.18" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="89"/></proof>
  </goal>
  <goal name="VC add_limb.19" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="VC add_limb.20" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="96"/></proof>
  </goal>
  <goal name="VC add_limb.21" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="VC add_limb.22" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.12" steps="88"/></proof>
  </goal>
  <goal name="VC add_limb.23" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="100"/></proof>
  </goal>
  <goal name="VC add_limb.24" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="VC add_limb.25" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limb.25.0" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.20" steps="180"/></proof>
   </goal>
   <goal name="VC add_limb.25.1" expl="assertion" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC add_limb.25.1.0" expl="assertion" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="84"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limb.26" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="VC add_limb.27" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="112"/></proof>
  </goal>
  <goal name="VC add_limb.28" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="102"/></proof>
  </goal>
  <goal name="VC add_limb.29" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="103"/></proof>
  </goal>
  <goal name="VC add_limb.30" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.08" steps="104"/></proof>
  </goal>
  <goal name="VC add_limb.31" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="104"/></proof>
  </goal>
  <goal name="VC add_limb.32" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.09" steps="104"/></proof>
  </goal>
  <goal name="VC add_limb.33" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="131"/></proof>
  </goal>
  <goal name="VC add_limb.34" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="94"/></proof>
  </goal>
  <goal name="VC add_limb.35" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="95"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_limbs" expl="VC for add_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_limbs.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="VC add_limbs.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="VC add_limbs.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="80"/></proof>
  </goal>
  <goal name="VC add_limbs.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.11" steps="137"/></proof>
  </goal>
  <goal name="VC add_limbs.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="VC add_limbs.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="95"/></proof>
  </goal>
  <goal name="VC add_limbs.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="96"/></proof>
  </goal>
  <goal name="VC add_limbs.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="89"/></proof>
  </goal>
  <goal name="VC add_limbs.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="107"/></proof>
  </goal>
  <goal name="VC add_limbs.9" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limbs.9.0" expl="VC for add_limbs" proved="true">
   <proof prover="0"><result status="valid" time="4.49"/></proof>
   </goal>
   <goal name="VC add_limbs.9.1" expl="VC for add_limbs" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="96"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limbs.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="VC add_limbs.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="108"/></proof>
  </goal>
  <goal name="VC add_limbs.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.08" steps="100"/></proof>
  </goal>
  <goal name="VC add_limbs.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.09" steps="101"/></proof>
  </goal>
  <goal name="VC add_limbs.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="102"/></proof>
  </goal>
  <goal name="VC add_limbs.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_limbs.15.0" expl="VC for add_limbs" proved="true">
   <proof prover="9" timelimit="10" memlimit="4000"><result status="valid" time="1.32" steps="141"/></proof>
   </goal>
   <goal name="VC add_limbs.15.1" expl="VC for add_limbs" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.16" steps="118"/></proof>
   </goal>
   <goal name="VC add_limbs.15.2" expl="VC for add_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_limbs.15.3" expl="VC for add_limbs" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="103"/></proof>
   </goal>
   <goal name="VC add_limbs.15.4" expl="VC for add_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_limbs.15.5" expl="VC for add_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add_limbs.15.6" expl="VC for add_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_limbs.15.7" expl="VC for add_limbs" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.31" steps="125"/></proof>
   </goal>
   <goal name="VC add_limbs.15.8" expl="VC for add_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_limbs.15.9" expl="VC for add_limbs" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.29" steps="124"/></proof>
   </goal>
   <goal name="VC add_limbs.15.10" expl="VC for add_limbs" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_limbs.16" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.10" steps="104"/></proof>
  </goal>
  <goal name="VC add_limbs.17" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.12" steps="104"/></proof>
  </goal>
  <goal name="VC add_limbs.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  <proof prover="9"><result status="valid" time="0.16" steps="106"/></proof>
  </goal>
  <goal name="VC add_limbs.19" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="9"><result status="valid" time="0.10" steps="106"/></proof>
  </goal>
  <goal name="VC add_limbs.20" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
  <goal name="VC add_limbs.21" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add" expl="VC for add" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="143"/></proof>
  </goal>
  <goal name="VC add.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC add.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="99"/></proof>
  </goal>
  <goal name="VC add.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="VC add.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="5.57"/></proof>
  </goal>
  <goal name="VC add.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC add.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.15.0" expl="VC for add" proved="true">
   <proof prover="9" timelimit="10" memlimit="4000"><result status="valid" time="2.20" steps="147"/></proof>
   </goal>
   <goal name="VC add.15.1" expl="VC for add" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.19" steps="121"/></proof>
   </goal>
   <goal name="VC add.15.2" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add.15.3" expl="VC for add" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.16" steps="105"/></proof>
   </goal>
   <goal name="VC add.15.4" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add.15.5" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add.15.6" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add.15.7" expl="VC for add" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.41" steps="131"/></proof>
   </goal>
   <goal name="VC add.15.8" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add.15.9" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.22" steps="130"/></proof>
   </goal>
   <goal name="VC add.15.10" expl="VC for add" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.16" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.17" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="106"/></proof>
  </goal>
  <goal name="VC add.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add.19" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="108"/></proof>
  </goal>
  <goal name="VC add.20" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.21" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.13" steps="91"/></proof>
  </goal>
  <goal name="VC add.22" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.23" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.24" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="VC add.25" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.26" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add.27" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="VC add.28" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.29" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="116"/></proof>
  </goal>
  <goal name="VC add.30" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="126"/></proof>
  </goal>
  <goal name="VC add.31" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.32" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.33" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.34" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.35" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.35.0" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="116"/></proof>
   </goal>
   <goal name="VC add.35.1" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="126"/></proof>
   </goal>
   <goal name="VC add.35.2" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="133"/></proof>
   </goal>
   <goal name="VC add.35.3" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="119"/></proof>
   </goal>
   <goal name="VC add.35.4" expl="VC for add" proved="true">
   <proof prover="0"><result status="valid" time="0.62"/></proof>
   </goal>
   <goal name="VC add.35.5" expl="VC for add" proved="true">
   <proof prover="0"><result status="valid" time="2.50"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.36" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.37" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="117"/></proof>
  </goal>
  <goal name="VC add.38" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.39" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="119"/></proof>
  </goal>
  <goal name="VC add.40" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="VC add.41" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.42" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="109"/></proof>
  </goal>
  <goal name="VC add.43" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.44" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="122"/></proof>
  </goal>
  <goal name="VC add.45" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.45.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.24" steps="206"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.46" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.47" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.48" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="112"/></proof>
  </goal>
  <goal name="VC add.49" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="113"/></proof>
  </goal>
  <goal name="VC add.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.50.0" expl="VC for add" proved="true">
   <proof prover="0"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC add.50.1" expl="VC for add" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="130"/></proof>
   </goal>
   <goal name="VC add.50.2" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add.50.3" expl="VC for add" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="114"/></proof>
   </goal>
   <goal name="VC add.50.4" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add.50.5" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add.50.6" expl="VC for add" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.13" steps="138"/></proof>
   </goal>
   <goal name="VC add.50.7" expl="VC for add" proved="true">
   <proof prover="3"><result status="valid" time="0.46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.51" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.52" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add.53" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add.54" expl="loop invariant preservation" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="117"/></proof>
  </goal>
  <goal name="VC add.55" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.56" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.57" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC add.58" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC add.59" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="105"/></proof>
  </goal>
  <goal name="VC add.60" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.61" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="124"/></proof>
  </goal>
  <goal name="VC add.62" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.63" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add.64" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="112"/></proof>
  </goal>
  <goal name="VC add.65" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="113"/></proof>
  </goal>
  <goal name="VC add.66" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add.66.0" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="114"/></proof>
   </goal>
   <goal name="VC add.66.1" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="124"/></proof>
   </goal>
   <goal name="VC add.66.2" expl="VC for add" proved="true">
   <proof prover="9"><result status="valid" time="0.10" steps="131"/></proof>
   </goal>
   <goal name="VC add.66.3" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="117"/></proof>
   </goal>
   <goal name="VC add.66.4" expl="VC for add" proved="true">
   <proof prover="0"><result status="valid" time="0.73"/></proof>
   </goal>
   <goal name="VC add.66.5" expl="VC for add" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="119"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.67" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.68" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add.69" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add.70" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="117"/></proof>
  </goal>
  <goal name="VC add.71" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="104"/></proof>
  </goal>
  <goal name="VC add.72" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_in_place" expl="VC for add_in_place" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_in_place.0" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="VC add_in_place.1" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
  <goal name="VC add_in_place.2" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="VC add_in_place.3" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="135"/></proof>
  </goal>
  <goal name="VC add_in_place.4" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="83"/></proof>
  </goal>
  <goal name="VC add_in_place.5" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="74"/></proof>
  </goal>
  <goal name="VC add_in_place.6" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC add_in_place.7" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="104"/></proof>
  </goal>
  <goal name="VC add_in_place.8" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="105"/></proof>
  </goal>
  <goal name="VC add_in_place.9" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="VC add_in_place.10" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="91"/></proof>
  </goal>
  <goal name="VC add_in_place.11" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC add_in_place.12" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="5.58"/></proof>
  </goal>
  <goal name="VC add_in_place.13" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="107"/></proof>
  </goal>
  <goal name="VC add_in_place.14" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="109"/></proof>
  </goal>
  <goal name="VC add_in_place.15" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="102"/></proof>
  </goal>
  <goal name="VC add_in_place.16" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="103"/></proof>
  </goal>
  <goal name="VC add_in_place.17" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.16" steps="104"/></proof>
  </goal>
  <goal name="VC add_in_place.18" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="9.92"/></proof>
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.18.0" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.37" steps="127"/></proof>
   </goal>
   <goal name="VC add_in_place.18.1" expl="VC for add_in_place" proved="true">
   <transf name="cut" proved="true" arg1="(value x i = value x k + (power radix k) * o12)">
    <goal name="VC add_in_place.18.1.0" expl="VC for add_in_place" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC add_in_place.18.1.1" proved="true">
    <proof prover="9" timelimit="1"><result status="valid" time="0.34" steps="122"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC add_in_place.18.2" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.38" steps="117"/></proof>
   </goal>
   <goal name="VC add_in_place.18.3" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_in_place.18.4" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.25" steps="106"/></proof>
   </goal>
   <goal name="VC add_in_place.18.5" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add_in_place.18.6" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC add_in_place.18.7" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_in_place.18.8" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_in_place.18.9" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.36" steps="122"/></proof>
   </goal>
   <goal name="VC add_in_place.18.10" expl="VC for add_in_place" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.19" expl="loop variant decrease" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add_in_place.20" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC add_in_place.21" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.22" steps="108"/></proof>
  </goal>
  <goal name="VC add_in_place.22" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC add_in_place.23" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.21" steps="121"/></proof>
  </goal>
  <goal name="VC add_in_place.24" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.27" steps="123"/></proof>
  </goal>
  <goal name="VC add_in_place.25" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="VC add_in_place.26" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="90"/></proof>
  </goal>
  <goal name="VC add_in_place.27" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="91"/></proof>
  </goal>
  <goal name="VC add_in_place.28" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="103"/></proof>
  </goal>
  <goal name="VC add_in_place.29" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="VC add_in_place.30" expl="assertion" proved="true">
  <proof prover="9" timelimit="50" memlimit="2000"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC add_in_place.31" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.31.0" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="101"/></proof>
   </goal>
   <goal name="VC add_in_place.31.1" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="101"/></proof>
   </goal>
   <goal name="VC add_in_place.31.2" expl="VC for add_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="113"/></proof>
   </goal>
   <goal name="VC add_in_place.31.3" expl="VC for add_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="104"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.32" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC add_in_place.32.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC add_in_place.32.0.0" expl="precondition" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="111"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.33" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="100"/></proof>
  </goal>
  <goal name="VC add_in_place.34" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="VC add_in_place.35" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.35.0" expl="VC for add_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="116"/></proof>
   </goal>
   <goal name="VC add_in_place.35.1" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="10" memlimit="2000"><result status="valid" time="0.04" steps="102"/></proof>
   </goal>
   <goal name="VC add_in_place.35.2" expl="VC for add_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="115"/></proof>
   </goal>
   <goal name="VC add_in_place.35.3" expl="VC for add_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="110"/></proof>
   </goal>
   <goal name="VC add_in_place.35.4" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="10" memlimit="2000"><result status="valid" time="0.04" steps="106"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.36" expl="postcondition" proved="true">
  <proof prover="9" timelimit="50" memlimit="2000"><result status="valid" time="0.04" steps="103"/></proof>
  </goal>
  <goal name="VC add_in_place.37" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="104"/></proof>
  </goal>
  <goal name="VC add_in_place.38" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="114"/></proof>
  </goal>
  <goal name="VC add_in_place.39" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="114"/></proof>
  </goal>
  <goal name="VC add_in_place.40" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="118"/></proof>
  </goal>
  <goal name="VC add_in_place.41" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="100"/></proof>
  </goal>
  <goal name="VC add_in_place.42" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_in_place.43" expl="precondition" proved="true">
  <proof prover="9" timelimit="50" memlimit="2000"><result status="valid" time="0.03" steps="104"/></proof>
  </goal>
  <goal name="VC add_in_place.44" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="120"/></proof>
  </goal>
  <goal name="VC add_in_place.45" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.45.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="5.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.46" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="117"/></proof>
  </goal>
  <goal name="VC add_in_place.47" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="119"/></proof>
  </goal>
  <goal name="VC add_in_place.48" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="127"/></proof>
  </goal>
  <goal name="VC add_in_place.49" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="VC add_in_place.50" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="VC add_in_place.51" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC add_in_place.51.0" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.25" steps="136"/></proof>
   </goal>
   <goal name="VC add_in_place.51.1" expl="VC for add_in_place" proved="true">
   <transf name="cut" proved="true" arg1="(value x i = value x k + (power radix k * o13))">
    <goal name="VC add_in_place.51.1.0" expl="VC for add_in_place" proved="true">
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
    <goal name="VC add_in_place.51.1.1" proved="true">
    <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="131"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC add_in_place.51.2" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.16" steps="126"/></proof>
   </goal>
   <goal name="VC add_in_place.51.3" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add_in_place.51.4" expl="VC for add_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.12" steps="115"/></proof>
   </goal>
   <goal name="VC add_in_place.51.5" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_in_place.51.6" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add_in_place.51.7" expl="VC for add_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC add_in_place.51.8" expl="VC for add_in_place" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_place.52" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_in_place.53" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_in_place.54" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC add_in_place.55" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_in_place.56" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_in_place.57" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC add_in_place.58" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="158"/></proof>
  </goal>
  <goal name="VC add_in_place.59" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="97"/></proof>
  </goal>
  <goal name="VC add_in_place.60" expl="postcondition" proved="true">
  <proof prover="9" timelimit="50" memlimit="2000"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC add_in_place.61" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="108"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub_limb" expl="VC for sub_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limb.4" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="136"/></proof>
  </goal>
  <goal name="VC sub_limb.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="VC sub_limb.8" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_limb.8.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="3.61"/></proof>
   </goal>
   <goal name="VC sub_limb.8.1" expl="assertion" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limb.9" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_limb.13.0" expl="VC for sub_limb" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="3.69"/></proof>
   </goal>
   <goal name="VC sub_limb.13.1" expl="VC for sub_limb" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="112"/></proof>
   </goal>
   <goal name="VC sub_limb.13.2" expl="VC for sub_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_limb.13.3" expl="VC for sub_limb" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="99"/></proof>
   </goal>
   <goal name="VC sub_limb.13.4" expl="VC for sub_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_limb.13.5" expl="VC for sub_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub_limb.13.6" expl="VC for sub_limb" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.21" steps="123"/></proof>
   </goal>
   <goal name="VC sub_limb.13.7" expl="VC for sub_limb" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limb.14" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limb.15" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sub_limb.16" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sub_limb.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC sub_limb.18" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="89"/></proof>
  </goal>
  <goal name="VC sub_limb.19" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.20" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.21" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.22" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.11" steps="88"/></proof>
  </goal>
  <goal name="VC sub_limb.23" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limb.24" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="112"/></proof>
  </goal>
  <goal name="VC sub_limb.25" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_limb.25.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="3.55"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="180"/></proof>
   </goal>
   <goal name="VC sub_limb.25.1" expl="assertion" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC sub_limb.25.1.0" expl="assertion" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="84"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limb.26" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.27" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sub_limb.28" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.29" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limb.30" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.31" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limb.32" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limb.33" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="131"/></proof>
  </goal>
  <goal name="VC sub_limb.34" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="94"/></proof>
  </goal>
  <goal name="VC sub_limb.35" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub_limbs" expl="VC for sub_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub_limbs.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limbs.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="137"/></proof>
  </goal>
  <goal name="VC sub_limbs.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="107"/></proof>
  </goal>
  <goal name="VC sub_limbs.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="4.02"/></proof>
  <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="10.05"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
  <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.99"/></proof>
  </goal>
  <goal name="VC sub_limbs.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_limbs.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_limbs.15.0" expl="VC for sub_limbs" proved="true">
   <proof prover="0"><result status="valid" time="4.17"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.08"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.1" expl="VC for sub_limbs" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="118"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.2" expl="VC for sub_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.3" expl="VC for sub_limbs" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="103"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.4" expl="VC for sub_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.5" expl="VC for sub_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.6" expl="VC for sub_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.7" expl="VC for sub_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.8" expl="VC for sub_limbs" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.35" steps="125"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.9" expl="VC for sub_limbs" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.30" steps="124"/></proof>
   </goal>
   <goal name="VC sub_limbs.15.10" expl="VC for sub_limbs" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_limbs.16" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.17" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub_limbs.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_limbs.19" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sub_limbs.20" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub_limbs.21" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub" expl="VC for sub" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.3" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="82"/></proof>
  </goal>
  <goal name="VC sub.4" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="147"/></proof>
  </goal>
  <goal name="VC sub.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="113"/></proof>
  </goal>
  <goal name="VC sub.10" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.10.0" expl="assertion" proved="true">
   <transf name="cut" proved="true" arg1="(value r i = value r1 i)">
    <goal name="VC sub.10.0.0" expl="assertion" proved="true">
    <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="99"/></proof>
    </goal>
    <goal name="VC sub.10.0.1" proved="true">
    <proof prover="0"><result status="valid" time="4.62"/></proof>
    <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
    <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
    <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.98"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC sub.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.15.0" expl="VC for sub" proved="true">
   <proof prover="9" timelimit="10" memlimit="4000"><result status="valid" time="1.74" steps="147"/></proof>
   </goal>
   <goal name="VC sub.15.1" expl="VC for sub" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.21" steps="121"/></proof>
   </goal>
   <goal name="VC sub.15.2" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub.15.3" expl="VC for sub" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.12" steps="105"/></proof>
   </goal>
   <goal name="VC sub.15.4" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub.15.5" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub.15.6" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub.15.7" expl="VC for sub" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.40" steps="131"/></proof>
   </goal>
   <goal name="VC sub.15.8" expl="VC for sub" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.38" steps="130"/></proof>
   </goal>
   <goal name="VC sub.15.9" expl="VC for sub" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.16" expl="loop variant decrease" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="106"/></proof>
  </goal>
  <goal name="VC sub.17" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="VC sub.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub.19" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sub.20" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="VC sub.21" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="92"/></proof>
  </goal>
  <goal name="VC sub.22" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.23" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="108"/></proof>
  </goal>
  <goal name="VC sub.24" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="VC sub.25" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.26" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="102"/></proof>
  </goal>
  <goal name="VC sub.27" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="102"/></proof>
  </goal>
  <goal name="VC sub.28" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="108"/></proof>
  </goal>
  <goal name="VC sub.29" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="117"/></proof>
  </goal>
  <goal name="VC sub.30" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="127"/></proof>
  </goal>
  <goal name="VC sub.31" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="122"/></proof>
  </goal>
  <goal name="VC sub.32" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="124"/></proof>
  </goal>
  <goal name="VC sub.33" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="115"/></proof>
  </goal>
  <goal name="VC sub.34" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="116"/></proof>
  </goal>
  <goal name="VC sub.35" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.35.0" expl="VC for sub" proved="true">
   <proof prover="0"><result status="valid" time="2.77"/></proof>
   </goal>
   <goal name="VC sub.35.1" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="127"/></proof>
   </goal>
   <goal name="VC sub.35.2" expl="VC for sub" proved="true">
   <proof prover="0" timelimit="20" memlimit="3000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC sub.35.3" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="120"/></proof>
   </goal>
   <goal name="VC sub.35.4" expl="VC for sub" proved="true">
   <proof prover="0"><result status="valid" time="2.50"/></proof>
   </goal>
   <goal name="VC sub.35.5" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="122"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.36" expl="loop variant decrease" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="118"/></proof>
  </goal>
  <goal name="VC sub.37" expl="loop invariant preservation" proved="true">
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="118"/></proof>
  </goal>
  <goal name="VC sub.38" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="120"/></proof>
  </goal>
  <goal name="VC sub.39" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub.40" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="108"/></proof>
  </goal>
  <goal name="VC sub.41" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="109"/></proof>
  </goal>
  <goal name="VC sub.42" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.43" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.44" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="123"/></proof>
  </goal>
  <goal name="VC sub.45" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.45.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.05"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.28" steps="210"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.46" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.47" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.48" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.49" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.49.0" expl="VC for sub" proved="true">
   <proof prover="0"><result status="valid" time="2.32"/></proof>
   </goal>
   <goal name="VC sub.49.1" expl="VC for sub" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="130"/></proof>
   </goal>
   <goal name="VC sub.49.2" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub.49.3" expl="VC for sub" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="114"/></proof>
   </goal>
   <goal name="VC sub.49.4" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub.49.5" expl="VC for sub" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub.49.6" expl="VC for sub" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.16" steps="138"/></proof>
   </goal>
   <goal name="VC sub.49.7" expl="VC for sub" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.50" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.51" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sub.52" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="117"/></proof>
  </goal>
  <goal name="VC sub.53" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="117"/></proof>
  </goal>
  <goal name="VC sub.54" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="166"/></proof>
  </goal>
  <goal name="VC sub.55" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC sub.56" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="99"/></proof>
  </goal>
  <goal name="VC sub.57" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="99"/></proof>
  </goal>
  <goal name="VC sub.58" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="VC sub.59" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="115"/></proof>
  </goal>
  <goal name="VC sub.60" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="125"/></proof>
  </goal>
  <goal name="VC sub.61" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="120"/></proof>
  </goal>
  <goal name="VC sub.62" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="122"/></proof>
  </goal>
  <goal name="VC sub.63" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="113"/></proof>
  </goal>
  <goal name="VC sub.64" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="114"/></proof>
  </goal>
  <goal name="VC sub.65" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub.65.0" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="115"/></proof>
   </goal>
   <goal name="VC sub.65.1" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="125"/></proof>
   </goal>
   <goal name="VC sub.65.2" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.15" steps="132"/></proof>
   </goal>
   <goal name="VC sub.65.3" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="118"/></proof>
   </goal>
   <goal name="VC sub.65.4" expl="VC for sub" proved="true">
   <proof prover="0"><result status="valid" time="2.42"/></proof>
   </goal>
   <goal name="VC sub.65.5" expl="VC for sub" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="120"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub.66" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub.67" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="116"/></proof>
  </goal>
  <goal name="VC sub.68" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="118"/></proof>
  </goal>
  <goal name="VC sub.69" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="118"/></proof>
  </goal>
  <goal name="VC sub.70" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="105"/></proof>
  </goal>
  <goal name="VC sub.71" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="106"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub_in_place" expl="VC for sub_in_place" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub_in_place.0" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="VC sub_in_place.1" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
  <goal name="VC sub_in_place.2" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="VC sub_in_place.3" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="VC sub_in_place.4" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="139"/></proof>
  </goal>
  <goal name="VC sub_in_place.5" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="VC sub_in_place.6" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="74"/></proof>
  </goal>
  <goal name="VC sub_in_place.7" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC sub_in_place.8" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="105"/></proof>
  </goal>
  <goal name="VC sub_in_place.9" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="VC sub_in_place.10" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC sub_in_place.11" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="VC sub_in_place.12" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="111"/></proof>
  </goal>
  <goal name="VC sub_in_place.13" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="4.94"/></proof>
  </goal>
  <goal name="VC sub_in_place.14" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="109"/></proof>
  </goal>
  <goal name="VC sub_in_place.15" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="102"/></proof>
  </goal>
  <goal name="VC sub_in_place.16" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="103"/></proof>
  </goal>
  <goal name="VC sub_in_place.17" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="104"/></proof>
  </goal>
  <goal name="VC sub_in_place.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.18.0" expl="VC for sub_in_place" proved="true">
   <proof prover="0"><result status="valid" time="4.65"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.1" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.23" steps="119"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.2" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.3" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="105"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.4" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.5" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.6" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.7" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.44" steps="129"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.8" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.54" steps="128"/></proof>
   </goal>
   <goal name="VC sub_in_place.18.9" expl="VC for sub_in_place" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.19" expl="loop variant decrease" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC sub_in_place.20" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.26" steps="106"/></proof>
  </goal>
  <goal name="VC sub_in_place.21" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.26" steps="108"/></proof>
  </goal>
  <goal name="VC sub_in_place.22" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC sub_in_place.23" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.39" steps="121"/></proof>
  </goal>
  <goal name="VC sub_in_place.24" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.26" steps="123"/></proof>
  </goal>
  <goal name="VC sub_in_place.25" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="89"/></proof>
  </goal>
  <goal name="VC sub_in_place.26" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="91"/></proof>
  </goal>
  <goal name="VC sub_in_place.27" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="92"/></proof>
  </goal>
  <goal name="VC sub_in_place.28" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="104"/></proof>
  </goal>
  <goal name="VC sub_in_place.29" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="102"/></proof>
  </goal>
  <goal name="VC sub_in_place.30" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="99"/></proof>
  </goal>
  <goal name="VC sub_in_place.31" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.31.0" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="102"/></proof>
   </goal>
   <goal name="VC sub_in_place.31.1" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="102"/></proof>
   </goal>
   <goal name="VC sub_in_place.31.2" expl="VC for sub_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="114"/></proof>
   </goal>
   <goal name="VC sub_in_place.31.3" expl="VC for sub_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="105"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.32" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="111"/></proof>
  </goal>
  <goal name="VC sub_in_place.33" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="101"/></proof>
  </goal>
  <goal name="VC sub_in_place.34" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="102"/></proof>
  </goal>
  <goal name="VC sub_in_place.35" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.35.0" expl="VC for sub_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="117"/></proof>
   </goal>
   <goal name="VC sub_in_place.35.1" expl="VC for sub_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="103"/></proof>
   </goal>
   <goal name="VC sub_in_place.35.2" expl="VC for sub_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="116"/></proof>
   </goal>
   <goal name="VC sub_in_place.35.3" expl="VC for sub_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="111"/></proof>
   </goal>
   <goal name="VC sub_in_place.35.4" expl="VC for sub_in_place" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="107"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.36" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="104"/></proof>
  </goal>
  <goal name="VC sub_in_place.37" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="105"/></proof>
  </goal>
  <goal name="VC sub_in_place.38" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="115"/></proof>
  </goal>
  <goal name="VC sub_in_place.39" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="115"/></proof>
  </goal>
  <goal name="VC sub_in_place.40" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="119"/></proof>
  </goal>
  <goal name="VC sub_in_place.41" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="101"/></proof>
  </goal>
  <goal name="VC sub_in_place.42" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="104"/></proof>
  </goal>
  <goal name="VC sub_in_place.43" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="105"/></proof>
  </goal>
  <goal name="VC sub_in_place.44" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="121"/></proof>
  </goal>
  <goal name="VC sub_in_place.45" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.45.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.38" steps="210"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.46" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="119"/></proof>
  </goal>
  <goal name="VC sub_in_place.47" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="127"/></proof>
  </goal>
  <goal name="VC sub_in_place.48" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="VC sub_in_place.49" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="VC sub_in_place.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_in_place.50.0" expl="VC for sub_in_place" proved="true">
   <transf name="cut" proved="true" arg1="(value x i = value x k + (power radix k * o12))">
    <goal name="VC sub_in_place.50.0.0" expl="VC for sub_in_place" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC sub_in_place.50.0.1" proved="true">
    <proof prover="9" timelimit="1"><result status="valid" time="0.25" steps="136"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC sub_in_place.50.1" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.16" steps="128"/></proof>
   </goal>
   <goal name="VC sub_in_place.50.2" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC sub_in_place.50.3" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="114"/></proof>
   </goal>
   <goal name="VC sub_in_place.50.4" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub_in_place.50.5" expl="VC for sub_in_place" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC sub_in_place.50.6" expl="VC for sub_in_place" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.47" steps="136"/></proof>
   </goal>
   <goal name="VC sub_in_place.50.7" expl="VC for sub_in_place" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_in_place.51" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sub_in_place.52" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sub_in_place.53" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sub_in_place.54" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sub_in_place.55" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_in_place.56" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC sub_in_place.57" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="162"/></proof>
  </goal>
  <goal name="VC sub_in_place.58" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC sub_in_place.59" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="99"/></proof>
  </goal>
  <goal name="VC sub_in_place.60" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="109"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul_limb" expl="VC for mul_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mul_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limb.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limb.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.13" steps="136"/></proof>
  </goal>
  <goal name="VC mul_limb.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="VC mul_limb.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC mul_limb.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limb.8" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.8.0" expl="VC for mul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="91"/></proof>
   </goal>
   <goal name="VC mul_limb.8.1" expl="VC for mul_limb" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.66"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.9" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.9.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="103"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.10" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.10.0" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC mul_limb.10.1" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC mul_limb.10.2" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC mul_limb.10.3" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limb.10.4" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limb.10.5" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limb.10.6" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC mul_limb.10.7" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC mul_limb.10.8" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limb.10.9" expl="VC for mul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limb.12" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.13" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC mul_limb.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limb.16.0" expl="VC for mul_limb" proved="true">
   <transf name="cut" proved="true" arg1="(value r i = value r k + (o14 * power radix k))">
    <goal name="VC mul_limb.16.0.0" expl="VC for mul_limb" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC mul_limb.16.0.1" proved="true">
    <proof prover="9" timelimit="1"><result status="valid" time="0.57" steps="120"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mul_limb.16.1" expl="VC for mul_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.44" steps="115"/></proof>
   </goal>
   <goal name="VC mul_limb.16.2" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limb.16.3" expl="VC for mul_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.24" steps="102"/></proof>
   </goal>
   <goal name="VC mul_limb.16.4" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limb.16.5" expl="VC for mul_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.36" steps="102"/></proof>
   </goal>
   <goal name="VC mul_limb.16.6" expl="VC for mul_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.22" steps="102"/></proof>
   </goal>
   <goal name="VC mul_limb.16.7" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limb.16.8" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limb.16.9" expl="VC for mul_limb" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limb.16.10" expl="VC for mul_limb" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.60" steps="126"/></proof>
   </goal>
   <goal name="VC mul_limb.16.11" expl="VC for mul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limb.17" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limb.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC mul_limb.19" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC mul_limb.20" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC addmul_limb" expl="VC for addmul_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC addmul_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="135"/></proof>
  </goal>
  <goal name="VC addmul_limb.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC addmul_limb.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC addmul_limb.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="VC addmul_limb.7" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.7.0" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.7.1" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.8" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limb.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.12" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.12.0" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.12.1" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.13.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC addmul_limb.13.1" expl="assertion" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="1.14"/></proof>
   </goal>
   <goal name="VC addmul_limb.13.2" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.14" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.14.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limb.14.0.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC addmul_limb.14.0.0.0" expl="assertion" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.07"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.15.0" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC addmul_limb.15.1" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC addmul_limb.15.2" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC addmul_limb.15.3" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC addmul_limb.15.4" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limb.15.5" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.15.6" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC addmul_limb.15.7" expl="VC for addmul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.16" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.17" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.18" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC addmul_limb.19" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limb.20" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.21" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC addmul_limb.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limb.22.0" expl="VC for addmul_limb" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC addmul_limb.22.0.0" expl="VC for addmul_limb" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limb.22.1" expl="VC for addmul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.06"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.99"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.2" expl="VC for addmul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.05"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.3" expl="VC for addmul_limb" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.4" expl="VC for addmul_limb" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.5" expl="VC for addmul_limb" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC addmul_limb.22.5.0" expl="VC for addmul_limb" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limb.22.6" expl="VC for addmul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.7" expl="VC for addmul_limb" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.8" expl="VC for addmul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.9" expl="VC for addmul_limb" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.93"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="1.91"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.07"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.10" expl="VC for addmul_limb" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.11" expl="VC for addmul_limb" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.12" expl="VC for addmul_limb" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.13" expl="VC for addmul_limb" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limb.22.14" expl="VC for addmul_limb" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC addmul_limb.22.14.0" expl="VC for addmul_limb" proved="true">
    <proof prover="0"><result status="valid" time="0.75"/></proof>
    <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="10.05"/></proof>
    <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.99"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limb.22.15" expl="VC for addmul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limb.23" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limb.24" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC addmul_limb.25" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC addmul_limb.26" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="4.72"/></proof>
  </goal>
  <goal name="VC addmul_limb.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC addmul_limb.28" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="VC addmul_limb.29" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul_limbs" expl="VC for mul_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mul_limbs.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="89"/></proof>
  </goal>
  <goal name="VC mul_limbs.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.4" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="102"/></proof>
  </goal>
  <goal name="VC mul_limbs.5" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="97"/></proof>
  </goal>
  <goal name="VC mul_limbs.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.7" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="162"/></proof>
  </goal>
  <goal name="VC mul_limbs.8" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="90"/></proof>
  </goal>
  <goal name="VC mul_limbs.9" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.10" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="92"/></proof>
  </goal>
  <goal name="VC mul_limbs.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.13.0" expl="assertion" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="110"/></proof>
  </goal>
  <goal name="VC mul_limbs.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.16" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.16.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC mul_limbs.16.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC mul_limbs.16.0.0.0" expl="VC for mul_limbs" proved="true">
     <proof prover="4"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC mul_limbs.16.0.0.1" expl="VC for mul_limbs" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC mul_limbs.16.0.0.2" expl="VC for mul_limbs" proved="true">
     <proof prover="4"><result status="valid" time="0.12"/></proof>
     </goal>
     <goal name="VC mul_limbs.16.0.0.3" expl="VC for mul_limbs" proved="true">
     <proof prover="4"><result status="valid" time="0.14"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.17.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC mul_limbs.17.0.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC mul_limbs.17.0.0.0" expl="assertion" proved="true">
     <proof prover="9" timelimit="20" memlimit="3000"><result status="valid" time="0.04" steps="106"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.18.0" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="107"/></proof>
   </goal>
   <goal name="VC mul_limbs.18.1" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.06" steps="110"/></proof>
   </goal>
   <goal name="VC mul_limbs.18.2" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="122"/></proof>
   </goal>
   <goal name="VC mul_limbs.18.3" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.11" steps="110"/></proof>
   </goal>
   <goal name="VC mul_limbs.18.4" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.08" steps="134"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.21" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.22" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.22.0" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limbs.22.1" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.23" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.24" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.24.0" expl="VC for mul_limbs" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC mul_limbs.24.1" expl="VC for mul_limbs" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="3.84"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.25" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.26" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.27" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.28" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC mul_limbs.28.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC mul_limbs.28.0.0" expl="assertion" proved="true">
    <proof prover="0" memlimit="1000"><result status="valid" time="0.94"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.29" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.29.0" expl="VC for mul_limbs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC mul_limbs.29.0.0" expl="VC for mul_limbs" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC mul_limbs.29.0.0.0" expl="VC for mul_limbs" proved="true">
     <proof prover="9" memlimit="2000"><result status="valid" time="2.02" steps="150"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC mul_limbs.29.1" expl="VC for mul_limbs" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.16" steps="127"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.2" expl="VC for mul_limbs" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.42" steps="138"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.3" expl="VC for mul_limbs" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="4.32" steps="128"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.4" expl="VC for mul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.94"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.5" expl="VC for mul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.90"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.6" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.7" expl="VC for mul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.60"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.8" expl="VC for mul_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.9" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.10" expl="VC for mul_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.11" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.12" expl="VC for mul_limbs" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.13" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.14" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.15" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.16" expl="VC for mul_limbs" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.17" expl="VC for mul_limbs" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.18" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.19" expl="VC for mul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.20" expl="VC for mul_limbs" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC mul_limbs.29.21" expl="VC for mul_limbs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC mul_limbs.29.21.0" expl="VC for mul_limbs" proved="true">
    <proof prover="0"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mul_limbs.29.22" expl="VC for mul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.30" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC mul_limbs.31" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.32" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.33" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC mul_limbs.35" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.36" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.37" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.38" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_limbs.39" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_limbs.40" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.40.0" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limbs.40.1" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.41" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.41.0" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul_limbs.41.1" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.42" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_limbs.43" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC mul_limbs.44" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul_limbs.44.0" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC mul_limbs.44.1" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="107"/></proof>
   </goal>
   <goal name="VC mul_limbs.44.2" expl="VC for mul_limbs" proved="true">
   <proof prover="9"><result status="valid" time="0.06" steps="123"/></proof>
   </goal>
   <goal name="VC mul_limbs.44.3" expl="VC for mul_limbs" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC mul_limbs.44.4" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul_limbs.44.5" expl="VC for mul_limbs" proved="true">
   <proof prover="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC mul_limbs.44.6" expl="VC for mul_limbs" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_limbs.45" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.10" steps="107"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC addmul_limbs" expl="VC for addmul_limbs" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC addmul_limbs.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limbs.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC addmul_limbs.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limbs.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC addmul_limbs.4" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="94"/></proof>
  </goal>
  <goal name="VC addmul_limbs.5" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="10"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC addmul_limbs.6" expl="precondition" proved="true">
  <proof prover="4" timelimit="10"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC addmul_limbs.7" expl="assertion" proved="true">
  <proof prover="4" timelimit="10"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC addmul_limbs.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.19" steps="207"/></proof>
  </goal>
  <goal name="VC addmul_limbs.9" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="VC addmul_limbs.10" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.12" steps="156"/></proof>
  </goal>
  <goal name="VC addmul_limbs.11" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="VC addmul_limbs.12" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="VC addmul_limbs.13" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="VC addmul_limbs.14" expl="loop invariant init" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC addmul_limbs.15" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.05" steps="94"/></proof>
  </goal>
  <goal name="VC addmul_limbs.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limbs.16.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.16.0.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC addmul_limbs.16.0.0.0" expl="assertion" proved="true">
     <proof prover="0" timelimit="20" memlimit="1000"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.17" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="VC addmul_limbs.18" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.05" steps="97"/></proof>
  </goal>
  <goal name="VC addmul_limbs.19" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.06" steps="116"/></proof>
  </goal>
  <goal name="VC addmul_limbs.20" expl="assertion" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.04" steps="102"/></proof>
  </goal>
  <goal name="VC addmul_limbs.21" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limbs.21.0" expl="VC for addmul_limbs" proved="true">
   <proof prover="9" timelimit="20"><result status="valid" time="0.04" steps="103"/></proof>
   </goal>
   <goal name="VC addmul_limbs.21.1" expl="VC for addmul_limbs" proved="true">
   <proof prover="9" timelimit="20"><result status="valid" time="0.05" steps="106"/></proof>
   </goal>
   <goal name="VC addmul_limbs.21.2" expl="VC for addmul_limbs" proved="true">
   <proof prover="9" timelimit="20"><result status="valid" time="0.08" steps="119"/></proof>
   </goal>
   <goal name="VC addmul_limbs.21.3" expl="VC for addmul_limbs" proved="true">
   <proof prover="9" timelimit="20"><result status="valid" time="0.10" steps="123"/></proof>
   </goal>
   <goal name="VC addmul_limbs.21.4" expl="VC for addmul_limbs" proved="true">
   <proof prover="9" timelimit="20"><result status="valid" time="0.08" steps="130"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.22" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.14" steps="123"/></proof>
  </goal>
  <goal name="VC addmul_limbs.23" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="1.75"/></proof>
  </goal>
  <goal name="VC addmul_limbs.24" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.05" steps="106"/></proof>
  </goal>
  <goal name="VC addmul_limbs.25" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.05" steps="109"/></proof>
  </goal>
  <goal name="VC addmul_limbs.26" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.06" steps="110"/></proof>
  </goal>
  <goal name="VC addmul_limbs.27" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.08" steps="129"/></proof>
  </goal>
  <goal name="VC addmul_limbs.28" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC addmul_limbs.28.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC addmul_limbs.28.0.0" expl="assertion" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC addmul_limbs.28.0.0.0" expl="assertion" proved="true">
     <proof prover="9" memlimit="2000"><result status="valid" time="0.32" steps="140"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.29" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.08" steps="129"/></proof>
  </goal>
  <goal name="VC addmul_limbs.30" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limbs.30.0" expl="VC for addmul_limbs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.30.0.0" expl="VC for addmul_limbs" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC addmul_limbs.30.0.0.0" expl="VC for addmul_limbs" proved="true">
     <proof prover="9"><result status="valid" time="0.16" steps="147"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limbs.30.1" expl="VC for addmul_limbs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.30.1.0" expl="VC for addmul_limbs" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC addmul_limbs.30.1.0.0" expl="VC for addmul_limbs" proved="true">
     <proof prover="0"><result status="valid" time="2.48"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.31" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.09" steps="121"/></proof>
  </goal>
  <goal name="VC addmul_limbs.32" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.12" steps="122"/></proof>
  </goal>
  <goal name="VC addmul_limbs.33" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.13" steps="123"/></proof>
  </goal>
  <goal name="VC addmul_limbs.34" expl="precondition" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.31" steps="124"/></proof>
  </goal>
  <goal name="VC addmul_limbs.35" expl="assertion" proved="true">
  <proof prover="9" timelimit="20"><result status="valid" time="0.58" steps="140"/></proof>
  </goal>
  <goal name="VC addmul_limbs.36" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.06"/></proof>
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC addmul_limbs.36.0" expl="VC for addmul_limbs" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.58" steps="137"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.1" expl="VC for addmul_limbs" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.45"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.2" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="4.30"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.3" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.4" expl="VC for addmul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="2.71"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.5" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.6" expl="VC for addmul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="6.13"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.7" expl="VC for addmul_limbs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.36.7.0" expl="VC for addmul_limbs" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limbs.36.8" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.9" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.10" expl="VC for addmul_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.11" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.12" expl="VC for addmul_limbs" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.13" expl="VC for addmul_limbs" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.14" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.15" expl="VC for addmul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.16" expl="VC for addmul_limbs" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC addmul_limbs.36.16.0" expl="VC for addmul_limbs" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limbs.36.17" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.18" expl="VC for addmul_limbs" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.19" expl="VC for addmul_limbs" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.20" expl="VC for addmul_limbs" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.21" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.22" expl="VC for addmul_limbs" proved="true">
   <proof prover="0"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.23" expl="VC for addmul_limbs" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.24" expl="VC for addmul_limbs" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.25" expl="VC for addmul_limbs" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC addmul_limbs.36.26" expl="VC for addmul_limbs" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC addmul_limbs.36.26.0" expl="VC for addmul_limbs" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.10"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limbs.36.27" expl="VC for addmul_limbs" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC addmul_limbs.36.27.0" expl="VC for addmul_limbs" proved="true">
    <proof prover="0"><result status="valid" time="0.10"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC addmul_limbs.36.28" expl="VC for addmul_limbs" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.84"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC addmul_limbs.37" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC addmul_limbs.38" expl="loop variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="0.54" steps="130"/></proof>
  </goal>
  <goal name="VC addmul_limbs.39" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.46" steps="130"/></proof>
  </goal>
  <goal name="VC addmul_limbs.40" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.42" steps="132"/></proof>
  </goal>
  <goal name="VC addmul_limbs.41" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.42" steps="132"/></proof>
  </goal>
  <goal name="VC addmul_limbs.42" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.50" steps="133"/></proof>
  </goal>
  <goal name="VC addmul_limbs.43" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.42" steps="134"/></proof>
  </goal>
  <goal name="VC addmul_limbs.44" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.61"/></proof>
  </goal>
  <goal name="VC addmul_limbs.45" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="94"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul" expl="VC for mul" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mul.0" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="VC mul.1" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC mul.2" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="VC mul.3" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="VC mul.4" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="83"/></proof>
  </goal>
  <goal name="VC mul.5" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="106"/></proof>
  </goal>
  <goal name="VC mul.6" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="86"/></proof>
  </goal>
  <goal name="VC mul.7" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.7.0" expl="VC for mul" proved="true">
   <proof prover="3"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC mul.7.1" expl="VC for mul" proved="true">
   <transf name="cut" proved="true" arg1="(value r sx = value r1 sx)">
    <goal name="VC mul.7.1.0" expl="VC for mul" proved="true">
    <proof prover="9" timelimit="1"><result status="valid" time="0.03" steps="89"/></proof>
    </goal>
    <goal name="VC mul.7.1.1" proved="true">
    <proof prover="0"><result status="valid" time="4.75"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mul.7.2" expl="VC for mul" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.8" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="VC mul.9" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="102"/></proof>
  </goal>
  <goal name="VC mul.10" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="VC mul.11" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="105"/></proof>
  </goal>
  <goal name="VC mul.12" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="VC mul.13" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
  <goal name="VC mul.14" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="VC mul.15" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="110"/></proof>
  </goal>
  <goal name="VC mul.16" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="118"/></proof>
  </goal>
  <goal name="VC mul.17" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="102"/></proof>
  </goal>
  <goal name="VC mul.18" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="133"/></proof>
  </goal>
  <goal name="VC mul.19" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="116"/></proof>
  </goal>
  <goal name="VC mul.20" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="105"/></proof>
  </goal>
  <goal name="VC mul.21" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="125"/></proof>
  </goal>
  <goal name="VC mul.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.22.0" expl="assertion" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="110"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.23" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.23.0" expl="VC for mul" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.13" steps="111"/></proof>
   </goal>
   <goal name="VC mul.23.1" expl="VC for mul" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.14" steps="114"/></proof>
   </goal>
   <goal name="VC mul.23.2" expl="VC for mul" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.14" steps="128"/></proof>
   </goal>
   <goal name="VC mul.23.3" expl="VC for mul" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.12" steps="114"/></proof>
   </goal>
   <goal name="VC mul.23.4" expl="VC for mul" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.50" steps="142"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.24" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.16" steps="112"/></proof>
  </goal>
  <goal name="VC mul.25" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="113"/></proof>
  </goal>
  <goal name="VC mul.26" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.50" steps="136"/></proof>
  </goal>
  <goal name="VC mul.27" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.14" steps="132"/></proof>
  </goal>
  <goal name="VC mul.28" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="4.48"/></proof>
  </goal>
  <goal name="VC mul.29" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.14" steps="122"/></proof>
  </goal>
  <goal name="VC mul.30" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.15" steps="123"/></proof>
  </goal>
  <goal name="VC mul.31" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.19" steps="124"/></proof>
  </goal>
  <goal name="VC mul.32" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="6.32"/></proof>
  </goal>
  <goal name="VC mul.33" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mul.33.0" expl="VC for mul" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC mul.33.0.0" expl="VC for mul" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC mul.33.0.0.0" expl="VC for mul" proved="true">
     <proof prover="4" memlimit="2000"><result status="valid" time="2.49"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC mul.33.1" expl="VC for mul" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.22" steps="127"/></proof>
   </goal>
   <goal name="VC mul.33.2" expl="VC for mul" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.42" steps="142"/></proof>
   </goal>
   <goal name="VC mul.33.3" expl="VC for mul" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.50"/></proof>
   </goal>
   <goal name="VC mul.33.4" expl="VC for mul" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="2.82"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.08"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
   </goal>
   <goal name="VC mul.33.5" expl="VC for mul" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="3.25"/></proof>
   </goal>
   <goal name="VC mul.33.6" expl="VC for mul" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.07"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC mul.33.7" expl="VC for mul" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC mul.33.7.0" expl="VC for mul" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mul.33.8" expl="VC for mul" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC mul.33.9" expl="VC for mul" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul.33.10" expl="VC for mul" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul.33.11" expl="VC for mul" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC mul.33.12" expl="VC for mul" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC mul.33.13" expl="VC for mul" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul.33.14" expl="VC for mul" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mul.33.15" expl="VC for mul" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC mul.33.15.0" expl="VC for mul" proved="true">
    <proof prover="0"><result status="valid" time="1.20"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mul.33.16" expl="VC for mul" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.23"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul.34" expl="precondition" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC mul.35" expl="loop variant decrease" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.31" steps="130"/></proof>
  </goal>
  <goal name="VC mul.36" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.49" steps="130"/></proof>
  </goal>
  <goal name="VC mul.37" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.33" steps="132"/></proof>
  </goal>
  <goal name="VC mul.38" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.34" steps="132"/></proof>
  </goal>
  <goal name="VC mul.39" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.40" steps="146"/></proof>
  </goal>
  <goal name="VC mul.40" expl="loop invariant preservation" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.83" steps="154"/></proof>
  </goal>
  <goal name="VC mul.41" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="117"/></proof>
  </goal>
  <goal name="VC mul.42" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="123"/></proof>
  </goal>
  <goal name="VC mul.43" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="103"/></proof>
  </goal>
  <goal name="VC mul.44" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="125"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC pow2_64" expl="VC for pow2_64" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC pow2_64.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="78"/></proof>
  </goal>
  <goal name="VC pow2_64.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="VC pow2_64.2" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC pow2_64.3" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="VC pow2_64.4" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="VC pow2_64.5" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="82"/></proof>
  </goal>
  <goal name="VC pow2_64.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mod_mult" expl="VC for mod_mult" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="77"/></proof>
 </goal>
 <goal name="VC lsld_ext" expl="VC for lsld_ext" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC lsld_ext.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lsld_ext.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="VC lsld_ext.2" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.2.0" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC lsld_ext.2.1" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.3" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.3.0" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.02" steps="83"/></proof>
   </goal>
   <goal name="VC lsld_ext.3.1" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="83"/></proof>
   </goal>
   <goal name="VC lsld_ext.3.2" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="86"/></proof>
   </goal>
   <goal name="VC lsld_ext.3.3" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="85"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.4" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.4.0" expl="VC for lsld_ext" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC lsld_ext.4.1" expl="VC for lsld_ext" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC lsld_ext.4.2" expl="VC for lsld_ext" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC lsld_ext.4.3" expl="VC for lsld_ext" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.5" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.5.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="86"/></proof>
  </goal>
  <goal name="VC lsld_ext.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="87"/></proof>
  </goal>
  <goal name="VC lsld_ext.8" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.8.0" expl="VC for lsld_ext" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
   <proof prover="1"><result status="valid" time="0.06"/></proof>
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   <proof prover="9"><result status="valid" time="0.09" steps="88"/></proof>
   </goal>
   <goal name="VC lsld_ext.8.1" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.09" steps="88"/></proof>
   </goal>
   <goal name="VC lsld_ext.8.2" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.07" steps="89"/></proof>
   </goal>
   <goal name="VC lsld_ext.8.3" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.09" steps="89"/></proof>
   </goal>
   <goal name="VC lsld_ext.8.4" expl="VC for lsld_ext" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC lsld_ext.8.4.0" expl="VC for lsld_ext" proved="true">
    <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC lsld_ext.8.5" expl="VC for lsld_ext" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lsld_ext.8.6" expl="VC for lsld_ext" proved="true">
   <proof prover="9"><result status="valid" time="0.08" steps="93"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.9" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.9.0" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.1" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.2" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.3" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.4" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.5" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.6" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.7" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.8" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.9" expl="VC for lsld_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.9.10" expl="VC for lsld_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.10" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lsld_ext.10.0" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.1" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.2" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.3" expl="VC for lsld_ext" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.4" expl="VC for lsld_ext" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="97"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.5" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.6" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lsld_ext.10.7" expl="VC for lsld_ext" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lsld_ext.11" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.24" steps="259"/></proof>
  </goal>
  <goal name="VC lsld_ext.12" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
  </goal>
  <goal name="VC lsld_ext.13" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.28" steps="131"/></proof>
  </goal>
  <goal name="VC lsld_ext.14" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.21"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="9"><result status="valid" time="0.44" steps="131"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC clz_ext" expl="VC for clz_ext" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC clz_ext.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC clz_ext.1" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC clz_ext.1.0" expl="VC for clz_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC clz_ext.1.1" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="81"/></proof>
   </goal>
   <goal name="VC clz_ext.1.2" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="82"/></proof>
   </goal>
   <goal name="VC clz_ext.1.3" expl="VC for clz_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC clz_ext.1.4" expl="VC for clz_ext" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.38"/></proof>
   </goal>
   <goal name="VC clz_ext.1.5" expl="VC for clz_ext" proved="true">
   <proof prover="1"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC clz_ext.1.6" expl="VC for clz_ext" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC clz_ext.1.7" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="87"/></proof>
   </goal>
   <goal name="VC clz_ext.1.8" expl="VC for clz_ext" proved="true">
   <proof prover="1" timelimit="20" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC clz_ext.1.9" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="88"/></proof>
   </goal>
   <goal name="VC clz_ext.1.10" expl="VC for clz_ext" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.02" steps="89"/></proof>
   </goal>
   <goal name="VC clz_ext.1.11" expl="VC for clz_ext" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.08"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.03"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC clz_ext.1.12" expl="VC for clz_ext" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC clz_ext.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC clz_ext.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC clz_ext.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC clz_ext.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC lshift" expl="VC for lshift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC lshift.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
  <goal name="VC lshift.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="VC lshift.2" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="89"/></proof>
  </goal>
  <goal name="VC lshift.3" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="VC lshift.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="VC lshift.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="VC lshift.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="102"/></proof>
  </goal>
  <goal name="VC lshift.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="89"/></proof>
  </goal>
  <goal name="VC lshift.9" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="5.08"/></proof>
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="94"/></proof>
  </goal>
  <goal name="VC lshift.10" expl="loop invariant init" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC lshift.10.0" expl="loop invariant init" proved="true">
   <proof prover="1"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.11" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="VC lshift.12" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="VC lshift.13" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.14" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="108"/></proof>
  </goal>
  <goal name="VC lshift.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.16" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="VC lshift.17" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC lshift.18" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="108"/></proof>
  </goal>
  <goal name="VC lshift.19" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.10" steps="123"/></proof>
  </goal>
  <goal name="VC lshift.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.07" steps="111"/></proof>
  </goal>
  <goal name="VC lshift.21" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lshift.21.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.22" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC lshift.23" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.24" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.25" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC lshift.26" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.66"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC lshift.27" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC lshift.28" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  <proof prover="9" obsolete="true"><result status="timeout" time="4.99"/></proof>
  </goal>
  <goal name="VC lshift.29" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.30" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.31" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lshift.31.0" expl="VC for lshift" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC lshift.31.1" expl="VC for lshift" proved="true">
   <proof prover="2"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC lshift.31.2" expl="VC for lshift" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC lshift.31.3" expl="VC for lshift" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC lshift.31.4" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lshift.31.5" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC lshift.31.6" expl="VC for lshift" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC lshift.31.7" expl="VC for lshift" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC lshift.31.8" expl="VC for lshift" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC lshift.31.9" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lshift.31.10" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lshift.31.11" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC lshift.31.12" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lshift.31.13" expl="VC for lshift" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC lshift.31.14" expl="VC for lshift" proved="true">
   <proof prover="0" memlimit="1000" obsolete="true"><result status="timeout" time="4.93"/></proof>
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC lshift.31.15" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC lshift.31.16" expl="VC for lshift" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.55"/></proof>
   </goal>
   <goal name="VC lshift.31.17" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC lshift.31.18" expl="VC for lshift" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC lshift.31.18.0" expl="VC for lshift" proved="true">
    <proof prover="1"><result status="valid" time="0.11"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC lshift.31.19" expl="VC for lshift" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.32" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.33" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.34" expl="loop invariant preservation" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC lshift.34.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC lshift.36" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC lshift.37" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.38" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.39" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.40" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.41" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC lshift.42" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="107"/></proof>
  </goal>
  <goal name="VC lshift.43" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.44" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC lshift.45" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC lshift.45.0" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC lshift.45.1" expl="VC for lshift" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC lshift.46" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC lshift.47" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="3000"><result status="valid" time="2.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC rshift" expl="VC for rshift" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC rshift.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.6" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="VC rshift.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC rshift.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.9" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.10" expl="loop invariant init" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC rshift.10.0" expl="loop invariant init" proved="true">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.12" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.13" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.14" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.16" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.17" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.21" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.22" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.23" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.24" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.25" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.26" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC rshift.27" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.27.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.27.0.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC rshift.27.0.0.0" expl="assertion" proved="true">
     <proof prover="0"><result status="valid" time="1.44"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.28" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC rshift.29" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.31" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.32.0" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC rshift.32.1" expl="VC for rshift" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC rshift.32.2" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC rshift.32.3" expl="VC for rshift" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="2.06"/></proof>
   </goal>
   <goal name="VC rshift.32.4" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC rshift.32.5" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC rshift.32.6" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC rshift.32.7" expl="VC for rshift" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC rshift.32.8" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC rshift.32.9" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC rshift.32.10" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC rshift.32.11" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC rshift.32.12" expl="VC for rshift" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC rshift.32.13" expl="VC for rshift" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC rshift.32.14" expl="VC for rshift" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="VC rshift.32.14.0" expl="VC for rshift" proved="true">
    <proof prover="0"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC rshift.32.15" expl="VC for rshift" proved="true">
   <transf name="replace" proved="true" arg1="(1+i)" arg2="(i+1)">
    <goal name="VC rshift.32.15.0" expl="VC for rshift" proved="true">
    <proof prover="0"><result status="valid" time="0.12"/></proof>
    </goal>
    <goal name="VC rshift.32.15.1" proved="true">
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC rshift.32.16" expl="VC for rshift" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.33" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC rshift.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC rshift.35" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.36" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC rshift.37" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC rshift.38" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.44"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.39" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.40" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.46"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.41" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC rshift.42" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC rshift.43" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.43.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.44" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.62"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rshift.45" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC rshift.46" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.47" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC rshift.48" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC rshift.49" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC rshift.50" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="5.97"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rshift.51" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.51.0" expl="VC for rshift" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.51.0.0" expl="VC for rshift" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC rshift.51.0.0.0" expl="VC for rshift" proved="true">
     <proof prover="0"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rshift.51.1" expl="VC for rshift" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.51.1.0" expl="VC for rshift" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC rshift.51.1.0.0" expl="VC for rshift" proved="true">
     <proof prover="0"><result status="valid" time="3.42"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.52" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rshift.52.0" expl="VC for rshift" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC rshift.52.0.0" expl="VC for rshift" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC rshift.52.0.0.0" expl="VC for rshift" proved="true">
     <proof prover="0"><result status="valid" time="5.54"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rshift.52.1" expl="VC for rshift" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rshift.53" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC fact_div" expl="VC for fact_div" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC fact_div.0" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC fact_div.0.0" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="77"/></proof>
   </goal>
   <goal name="VC fact_div.0.1" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="77"/></proof>
   </goal>
   <goal name="VC fact_div.0.2" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="78"/></proof>
   </goal>
   <goal name="VC fact_div.0.3" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="79"/></proof>
   </goal>
   <goal name="VC fact_div.0.4" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="81"/></proof>
   </goal>
   <goal name="VC fact_div.0.5" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="81"/></proof>
   </goal>
   <goal name="VC fact_div.0.6" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="82"/></proof>
   </goal>
   <goal name="VC fact_div.0.7" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="83"/></proof>
   </goal>
   <goal name="VC fact_div.0.8" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="83"/></proof>
   </goal>
   <goal name="VC fact_div.0.9" expl="VC for fact_div" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="85"/></proof>
   </goal>
   <goal name="VC fact_div.0.10" expl="VC for fact_div" proved="true">
   <proof prover="1"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC fact_div.1" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC invert_limb" expl="VC for invert_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC invert_limb.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC invert_limb.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC invert_limb.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC invert_limb.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC invert_limb.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="80"/></proof>
  </goal>
  <goal name="VC invert_limb.5" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC invert_limb.5.0" expl="VC for invert_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC invert_limb.5.1" expl="VC for invert_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC invert_limb.5.2" expl="VC for invert_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC invert_limb.5.3" expl="VC for invert_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC invert_limb.5.4" expl="VC for invert_limb" proved="true">
   <proof prover="1"><result status="valid" time="0.06"/></proof>
   <proof prover="9"><result status="valid" time="0.03" steps="85"/></proof>
   </goal>
   <goal name="VC invert_limb.5.5" expl="VC for invert_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC invert_limb.5.6" expl="VC for invert_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.02" steps="85"/></proof>
   </goal>
   <goal name="VC invert_limb.5.7" expl="VC for invert_limb" proved="true">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   <proof prover="9"><result status="valid" time="0.03" steps="88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC invert_limb.6" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC div2by1_inv" expl="VC for div2by1_inv" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div2by1_inv.0" expl="integer overflow" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.05"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="VC div2by1_inv.1" expl="integer overflow" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="VC div2by1_inv.2" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="1.51"/></proof>
  </goal>
  <goal name="VC div2by1_inv.3" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.05"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="83"/></proof>
  </goal>
  <goal name="VC div2by1_inv.4" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.07"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="VC div2by1_inv.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.6" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.6.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.13" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.14" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.15" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.16" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.17" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.18" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.19" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.20" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.21" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.22" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.23" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.24" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.25" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.26" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.6.27" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.7" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.7.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div2by1_inv.7.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.7.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.8" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.9" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.9.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="97"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.10" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.10.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.81"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="100"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.10.13" expl="VC for div2by1_inv" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.34" steps="110"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.11" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div2by1_inv.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div2by1_inv.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div2by1_inv.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.16.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.13" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.14" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.15" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.16" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.17" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.18" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.19" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.20" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.21" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.22" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.23" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.24" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.25" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.26" expl="VC for div2by1_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div2by1_inv.16.26.0" expl="VC for div2by1_inv" proved="true">
    <proof prover="0" timelimit="55"><result status="valid" time="51.30"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div2by1_inv.16.27" expl="VC for div2by1_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.28" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.29" expl="VC for div2by1_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div2by1_inv.16.29.0" expl="VC for div2by1_inv" proved="true">
    <proof prover="0" timelimit="55"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div2by1_inv.16.30" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.31" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.32" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.33" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.34" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.35" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.36" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.37" expl="VC for div2by1_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="3.11"/></proof>
   <proof prover="9"><result status="valid" time="1.21" steps="127"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.38" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.39" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.40" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.41" expl="VC for div2by1_inv" proved="true">
   <proof prover="9"><result status="valid" time="1.23" steps="131"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.42" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.43" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.44" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.45" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.46" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.47" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.16.48" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.17.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.18.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="9"><result status="valid" time="2.26" steps="110"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.18.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div2by1_inv.20" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div2by1_inv.21" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.21.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.21.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div2by1_inv.21.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.63"/></proof>
   </goal>
   <goal name="VC div2by1_inv.21.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.22" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.23" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.23.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.23.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="3.72"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.24" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.24.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div2by1_inv.24.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.25" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.25.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.25.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.25.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div2by1_inv.25.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.25.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.26" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.26.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.63"/></proof>
   </goal>
   <goal name="VC div2by1_inv.26.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.27" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.27.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.27.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.28" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.28.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.12" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.13" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.14" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.15" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.16" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.17" expl="VC for div2by1_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div2by1_inv.28.18" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.29" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.29.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.29.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.30" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.30.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.30.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.31" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div2by1_inv.32" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.33" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div2by1_inv.34" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.35" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div2by1_inv.36" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.36.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.36.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.37" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.37.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.38" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.38.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.38.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.39" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.39.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.40" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC div2by1_inv.41" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.42" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div2by1_inv.43" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.44" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.45" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div2by1_inv.46" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.47" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.47.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div2by1_inv.47.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.48" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div2by1_inv.49" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.50.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.2" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.3" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.4" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.5" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.6" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.7" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.8" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.9" expl="VC for div2by1_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.10" expl="VC for div2by1_inv" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div2by1_inv.50.11" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.51" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div2by1_inv.52" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div2by1_inv.53" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div2by1_inv.54" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div2by1_inv.55" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div2by1_inv.56" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div2by1_inv.57" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.58" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div2by1_inv.59" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div2by1_inv.59.0" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div2by1_inv.59.1" expl="VC for div2by1_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div2by1_inv.60" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div2by1_inv.61" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div2by1_inv.62" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC divmod_1" expl="VC for divmod_1" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC divmod_1.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.3" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="VC divmod_1.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="VC divmod_1.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="VC divmod_1.12" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.12.0" expl="assertion" proved="true">
   <proof prover="9"><result status="valid" time="0.08" steps="96"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.13" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="VC divmod_1.14" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="98"/></proof>
  </goal>
  <goal name="VC divmod_1.15" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="99"/></proof>
  </goal>
  <goal name="VC divmod_1.16" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.17" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.18" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.19" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.20" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.21" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.22" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="105"/></proof>
  </goal>
  <goal name="VC divmod_1.23" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="116"/></proof>
  </goal>
  <goal name="VC divmod_1.24" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="VC divmod_1.25" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC divmod_1.26" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
  </goal>
  <goal name="VC divmod_1.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC divmod_1.28" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.29" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.30" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.31" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.31.0" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.31.1" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC divmod_1.31.2" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.31.3" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC divmod_1.31.4" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.31.5" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC divmod_1.31.6" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.31.7" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.31.8" expl="VC for divmod_1" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
   <goal name="VC divmod_1.31.9" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.31.10" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.31.11" expl="VC for divmod_1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.98"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.05"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
   </goal>
   <goal name="VC divmod_1.31.12" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.31.13" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.31.14" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.31.15" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.31.16" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.31.17" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.31.18" expl="VC for divmod_1" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.31.19" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.32.0" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.32.1" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.32.2" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.33" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_1.34" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.98"/></proof>
  </goal>
  <goal name="VC divmod_1.35" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.98"/></proof>
  </goal>
  <goal name="VC divmod_1.36" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.37" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_1.38" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.39" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.39.0" expl="VC for divmod_1" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC divmod_1.39.1" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.39.2" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.39.3" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.39.4" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.39.5" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC divmod_1.39.6" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.39.7" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.40" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC divmod_1.41" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.41.0" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.41.1" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC divmod_1.41.2" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.41.3" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.41.4" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_1.41.5" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.41.6" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.41.7" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC divmod_1.41.8" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.41.9" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.41.10" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC divmod_1.41.11" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.41.12" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.42" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.43" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.44" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC divmod_1.45" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.46" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.47" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC divmod_1.48" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.49" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.50.0" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC divmod_1.50.1" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.52"/></proof>
   </goal>
   <goal name="VC divmod_1.50.2" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC divmod_1.50.3" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC divmod_1.50.4" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC divmod_1.50.5" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC divmod_1.50.6" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.50.7" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC divmod_1.50.8" expl="VC for divmod_1" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC divmod_1.50.9" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.50.10" expl="VC for divmod_1" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC divmod_1.50.11" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC divmod_1.50.12" expl="VC for divmod_1" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.50.13" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC divmod_1.50.14" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.15"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.51" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.52" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="VC divmod_1.53" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC divmod_1.54" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC divmod_1.55" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.56" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.57" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.58" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.59" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.60" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC divmod_1.61" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC divmod_1.62" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.63" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.64" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.65" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.66" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.66.0" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC divmod_1.66.1" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.98"/></proof>
   </goal>
   <goal name="VC divmod_1.66.2" expl="VC for divmod_1" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC divmod_1.66.3" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.66.4" expl="VC for divmod_1" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_1.66.5" expl="VC for divmod_1" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.67" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_1.68" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.69" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.70" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
  <proof prover="1" memlimit="2000"><result status="valid" time="0.94"/></proof>
  <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="10.78"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
  <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.98"/></proof>
  </goal>
  <goal name="VC divmod_1.71" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
  <proof prover="1" memlimit="2000"><result status="valid" time="0.09"/></proof>
  <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="10.07"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
  <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.99"/></proof>
  </goal>
  <goal name="VC divmod_1.72" expl="precondition" proved="true">
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="106"/></proof>
  </goal>
  <goal name="VC divmod_1.73" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_1.74" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="VC divmod_1.75" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="97"/></proof>
  </goal>
  <goal name="VC divmod_1.76" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="105"/></proof>
  </goal>
  <goal name="VC divmod_1.77" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="VC divmod_1.78" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="107"/></proof>
  </goal>
  <goal name="VC divmod_1.79" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="108"/></proof>
  </goal>
  <goal name="VC divmod_1.80" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="101"/></proof>
  </goal>
  <goal name="VC divmod_1.81" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="112"/></proof>
  </goal>
  <goal name="VC divmod_1.82" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_1.83" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="116"/></proof>
  </goal>
  <goal name="VC divmod_1.84" expl="precondition" proved="true">
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="123"/></proof>
  </goal>
  <goal name="VC divmod_1.85" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.85.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.86" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="111"/></proof>
  </goal>
  <goal name="VC divmod_1.87" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_1.88" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC divmod_1.89" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_1.90" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_1.91" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC divmod_1.92" expl="integer overflow" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
  </goal>
  <goal name="VC divmod_1.93" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.94" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.95" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_1.95.0" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.49"/></proof>
   </goal>
   <goal name="VC divmod_1.95.1" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_1.95.2" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="5.26"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.07"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.98"/></proof>
   </goal>
   <goal name="VC divmod_1.95.3" expl="VC for divmod_1" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC divmod_1.95.4" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.33"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.71"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC divmod_1.95.5" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.95.6" expl="VC for divmod_1" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC divmod_1.95.7" expl="VC for divmod_1" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_1.95.8" expl="VC for divmod_1" proved="true">
   <proof prover="0"><result status="valid" time="5.88"/></proof>
   </goal>
   <goal name="VC divmod_1.95.9" expl="VC for divmod_1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_1.95.9.0" expl="VC for divmod_1" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_1.96" expl="loop variant decrease" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_1.97" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.98" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC divmod_1.99" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.100" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC divmod_1.101" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC divmod_1.102" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC divmod_1.103" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC divmod_1.104" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_1.105" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.106" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_1.107" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC div3by2_inv" expl="VC for div3by2_inv" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div3by2_inv.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="VC div3by2_inv.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="81"/></proof>
  </goal>
  <goal name="VC div3by2_inv.2" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div3by2_inv.3" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div3by2_inv.4" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="VC div3by2_inv.5" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.5.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.4" expl="VC for div3by2_inv" proved="true">
   <transf name="cut" proved="true" arg1="(v* (radix*uh) &lt;= v*d)">
    <goal name="VC div3by2_inv.5.4.0" expl="VC for div3by2_inv" proved="true">
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
    <goal name="VC div3by2_inv.5.4.1" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="3.24"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.5.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.5.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC div3by2_inv.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="VC div3by2_inv.8" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div3by2_inv.9" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div3by2_inv.10" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div3by2_inv.11" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div3by2_inv.12" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div3by2_inv.13" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div3by2_inv.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div3by2_inv.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.15.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="1.12"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.15.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.15.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="1.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.15.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.15.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.16.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.36"/></proof>
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.13" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.14" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.15" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.16" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.16.17" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.17.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.55"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.13" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.14" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.15" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.16" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.17" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.18" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.19" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.20" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.21" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.22" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.23" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.25"/></proof>
   <proof prover="4"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.24" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.25" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.26"/></proof>
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.26" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.27" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.28" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.29" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.25"/></proof>
   <proof prover="4"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.30" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.31" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.32" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.33" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.34" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.35" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.36" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.37" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   <proof prover="4"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.38" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.39" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.40" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.41" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.42" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.43" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.44" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.45" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.46" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.40"/></proof>
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.47" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.24"/></proof>
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.48" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="4000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.49" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="4000"><result status="valid" time="0.62"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.50" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.17.50.0" expl="VC for div3by2_inv" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div3by2_inv.17.50.0.0" expl="VC for div3by2_inv" proved="true">
     <proof prover="0" timelimit="60" memlimit="4000"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.51" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="4000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.52" expl="VC for div3by2_inv" proved="true">
   <proof prover="1" timelimit="60" memlimit="4000"><result status="valid" time="0.14"/></proof>
   <proof prover="2" timelimit="60" memlimit="4000"><result status="valid" time="0.13"/></proof>
   <proof prover="4" timelimit="60" memlimit="4000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.53" expl="VC for div3by2_inv" proved="true">
   <transf name="apply" proved="true" arg1="prod_compat_strict_r">
    <goal name="VC div3by2_inv.17.53.0" proved="true">
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
    <goal name="VC div3by2_inv.17.53.1" proved="true">
    <proof prover="3"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.54" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="4000"><result status="valid" time="4.57"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.55" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.56" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.57" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="2.98"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.11"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.98"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.58" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.59" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.60" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="3000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.61" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="3000"><result status="valid" time="2.68"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.62" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.17.62.0" expl="VC for div3by2_inv" proved="true">
    <proof prover="0" timelimit="60" memlimit="3000"><result status="valid" time="3.59"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.63" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="2.87"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.64" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="55" memlimit="4000"><result status="valid" time="3.38"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.65" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.66" expl="VC for div3by2_inv" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div3by2_inv.17.66.0" expl="VC for div3by2_inv" proved="true">
    <proof prover="1"><result status="valid" time="0.14"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.67" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.68" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   <proof prover="4"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.69" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.70" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.71" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.72" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.73" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.74" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.75" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.76" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.77" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.78" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.79" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.80" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.81" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.82" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.83" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.84" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.85" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.86" expl="VC for div3by2_inv" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div3by2_inv.17.86.0" expl="VC for div3by2_inv" proved="true">
    <proof prover="0" timelimit="60" memlimit="4000"><result status="valid" time="17.58"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.87" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="60" memlimit="6000"><result status="valid" time="0.18"/></proof>
   <proof prover="4" timelimit="60" memlimit="6000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.88" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.89" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.20"/></proof>
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.90" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.91" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.92" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="6000"><result status="valid" time="2.81"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.93" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="1"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.94" expl="VC for div3by2_inv" proved="true">
   <transf name="cut" proved="true" arg1="(dh * k &lt;= dh * d)">
    <goal name="VC div3by2_inv.17.94.0" expl="VC for div3by2_inv" proved="true">
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
    <goal name="VC div3by2_inv.17.94.1" proved="true">
    <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
    <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
    <transf name="apply" proved="true" arg1="prod_compat_r">
     <goal name="VC div3by2_inv.17.94.1.0" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div3by2_inv.17.94.1.1" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.95" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="60" memlimit="6000"><result status="valid" time="0.07"/></proof>
   <proof prover="4" timelimit="60" memlimit="6000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.96" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.97" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.98" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.99" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.100" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.101" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.102" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.103" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.104" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.105" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.106" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.107" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.108" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.109" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.110" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.111" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.112" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="60" memlimit="6000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.113" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="60" memlimit="6000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.114" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.115" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.116" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.117" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.38"/></proof>
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.118" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.119" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.120" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.121" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.122" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.123" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.124" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.125" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.126" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.127" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.128" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.129" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.130" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.131" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.132" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.133" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.134" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.135" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.136" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.137" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.138" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.139" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.140" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.141" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.142" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.143" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.144" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="60" memlimit="6000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.145" expl="VC for div3by2_inv" proved="true">
   <proof prover="1" timelimit="60" memlimit="6000"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.146" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" timelimit="60" memlimit="6000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.147" expl="VC for div3by2_inv" proved="true">
   <proof prover="4" timelimit="150" memlimit="6000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.148" expl="VC for div3by2_inv" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div3by2_inv.17.148.0" expl="VC for div3by2_inv" proved="true">
    <proof prover="1" timelimit="55" memlimit="2000"><result status="valid" time="1.20"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div3by2_inv.17.149" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="60" memlimit="6000"><result status="valid" time="0.14"/></proof>
   <proof prover="4" timelimit="60" memlimit="6000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.150" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.151" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.152" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.153" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.154" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="20" memlimit="2000"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.155" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.156" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.157" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.158" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.159" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.160" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.161" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.162" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.163" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.164" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.165" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.166" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.167" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.168" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.169" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.170" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.171" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.172" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.173" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.17.174" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC div3by2_inv.19" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.19.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.19.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="1.21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.20" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.20.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.34"/></proof>
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.20.13" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.21" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div3by2_inv.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.22.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.49"/></proof>
   </goal>
   <goal name="VC div3by2_inv.22.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.23" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.23.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.23.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.24" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.24.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.09"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.50"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.47"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.42"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.24.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.25" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  <proof prover="9" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC div3by2_inv.26" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div3by2_inv.27" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.27.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.27.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.27.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="6.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.27.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.28" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.28.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="1.83"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.13" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.14" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.15" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.16" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.17" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.18" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.19" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.20" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.17"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.21" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.28.22" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.29" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.29.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.29.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.29.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div3by2_inv.29.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div3by2_inv.29.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.29.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div3by2_inv.29.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.30" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.30.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.31" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div3by2_inv.32" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.28"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div3by2_inv.33" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC div3by2_inv.34" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div3by2_inv.35" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.35.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.35.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="1" timelimit="20" memlimit="2000"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.36" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.36.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="1.33"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.36.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="3.66"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.37" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.37.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="1.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.37.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div3by2_inv.37.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.38" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="3.31"/></proof>
  </goal>
  <goal name="VC div3by2_inv.39" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div3by2_inv.40" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div3by2_inv.41" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC div3by2_inv.42" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div3by2_inv.43" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div3by2_inv.44" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.44.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="2.33"/></proof>
   </goal>
   <goal name="VC div3by2_inv.44.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.45" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.45.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.46" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div3by2_inv.47" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  <proof prover="9" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC div3by2_inv.48" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC div3by2_inv.49" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.49.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div3by2_inv.49.1" expl="assertion" proved="true">
   <proof prover="0" memlimit="1000" obsolete="true"><result status="timeout" time="4.94"/></proof>
   <proof prover="2" timelimit="1"><result status="valid" time="0.11"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.50.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.3" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.4" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.5" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.6" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.7" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.8" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.9" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.10" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.11" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.50.12" expl="VC for div3by2_inv" proved="true">
   <proof prover="1"><result status="valid" time="0.20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.51" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.05"/></proof>
  </goal>
  <goal name="VC div3by2_inv.52" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.52.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="0"><result status="valid" time="1.05"/></proof>
   </goal>
   <goal name="VC div3by2_inv.52.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div3by2_inv.52.2" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.53" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="4.46"/></proof>
  </goal>
  <goal name="VC div3by2_inv.54" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div3by2_inv.55" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC div3by2_inv.56" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div3by2_inv.56.0" expl="VC for div3by2_inv" proved="true">
   <proof prover="4"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div3by2_inv.56.1" expl="VC for div3by2_inv" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.18"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div3by2_inv.57" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.10"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div3by2_inv.58" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC bounds_imply_rec3by2" expl="VC for bounds_imply_rec3by2" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="79"/></proof>
 </goal>
 <goal name="VC reciprocal_word_3by2" expl="VC for reciprocal_word_3by2" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC reciprocal_word_3by2.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.2" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.2.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="79"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.2.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.20" steps="180"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.2.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.15" steps="134"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.3" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.3.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="81"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.16" steps="154"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="81"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.20"/></proof>
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="9"><result status="valid" time="0.06" steps="84"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="9"><result status="valid" time="0.04" steps="84"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.3.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.4" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="85"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.5" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.5.0" expl="assertion" proved="true">
   <proof prover="9"><result status="valid" time="0.06" steps="88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.6" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.6.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   <proof prover="9"><result status="valid" time="0.06" steps="87"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.6.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.05" steps="89"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.6.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.84"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.9" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.10" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
  <proof prover="1" memlimit="2000"><result status="valid" time="0.06"/></proof>
  <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
  <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.11" expl="integer overflow" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="98"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.12" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="2.75"/></proof>
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.94"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.14" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.15" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.07" steps="102"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.17.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.24" steps="110"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.28" steps="112"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.17.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.27" steps="114"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.18.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.18.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.18.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.19" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.19.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.19.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.20" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="1.37"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.21" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.21.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.21.7" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.22.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.22.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.40"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.23" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="1.15"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.24" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.24.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.24.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.25" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.26" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.26.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.26.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.27" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.29" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.30" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.30.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.30.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.61"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.31" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.32" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.33" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="92"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.34" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.35" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.35.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.35.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   <proof prover="9"><result status="valid" time="0.04" steps="97"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.36" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.07"/></proof>
  <proof prover="9"><result status="valid" time="0.15" steps="97"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.37" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.38" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.38.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   <proof prover="9"><result status="valid" time="0.07" steps="105"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   <proof prover="9"><result status="valid" time="0.06" steps="106"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="9"><result status="valid" time="0.05" steps="107"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="9"><result status="valid" time="0.06" steps="107"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.38.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   <proof prover="9"><result status="valid" time="0.10" steps="109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.39" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.39.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   <proof prover="9"><result status="valid" time="0.10" steps="105"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.39.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.39.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   <proof prover="9"><result status="valid" time="0.10" steps="107"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.40" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.40.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.40.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.41" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.42" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.42.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.42.7" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   <proof prover="9" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.43" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.43.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.43.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   <proof prover="4"><result status="valid" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.44" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="1.00"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.45" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.45.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.45.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.46" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.47" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.47.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.47.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.48" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="1.02"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.49" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.50" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.51" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.52" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1"><result status="valid" time="0.07"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.53" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="1.05"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.54" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.87"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.55" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.56" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.56.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.56.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.57" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.57.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.57.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.57.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.58" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.58.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.58.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.59" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.60" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.60.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.2" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.3" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.4" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.5" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.6" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.60.7" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   <proof prover="1"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.61" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.61.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.61.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.62" expl="integer overflow" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="1.00"/></proof>
  <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.63" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.64" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.65" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.65.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.65.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="2"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.66" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.67" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.67.0" expl="VC for reciprocal_word_3by2" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC reciprocal_word_3by2.67.0.0" expl="VC for reciprocal_word_3by2" proved="true">
    <proof prover="3"><result status="valid" time="0.03"/></proof>
    </goal>
    <goal name="VC reciprocal_word_3by2.67.0.1" expl="VC for reciprocal_word_3by2" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC reciprocal_word_3by2.67.1" expl="VC for reciprocal_word_3by2" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC reciprocal_word_3by2.67.1.0" expl="VC for reciprocal_word_3by2" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
    <goal name="VC reciprocal_word_3by2.67.1.1" expl="VC for reciprocal_word_3by2" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.68" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.08"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC reciprocal_word_3by2.69" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC reciprocal_word_3by2.69.0" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1"><result status="valid" time="1.00"/></proof>
   </goal>
   <goal name="VC reciprocal_word_3by2.69.1" expl="VC for reciprocal_word_3by2" proved="true">
   <proof prover="1" obsolete="true"><result status="highfailure" time="0.81"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.11" steps="130"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC reciprocal_word_3by2.70" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub3" expl="VC for sub3" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub3.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="76"/></proof>
  </goal>
  <goal name="VC sub3.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
  <goal name="VC sub3.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="79"/></proof>
  </goal>
  <goal name="VC sub3.3" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="83"/></proof>
  </goal>
  <goal name="VC sub3.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC submul_limb" expl="VC for submul_limb" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC submul_limb.0" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="VC submul_limb.1" expl="integer overflow" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="VC submul_limb.2" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.2.0" expl="VC for submul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="79"/></proof>
   </goal>
   <goal name="VC submul_limb.2.1" expl="VC for submul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.02" steps="80"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.3" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="139"/></proof>
  </goal>
  <goal name="VC submul_limb.4" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
  </transf>
  </goal>
  <goal name="VC submul_limb.5" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
  </transf>
  </goal>
  <goal name="VC submul_limb.6" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.6.0" expl="VC for submul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
   </goal>
   <goal name="VC submul_limb.6.1" expl="VC for submul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="86"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.7" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.7.0" expl="VC for submul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.02" steps="87"/></proof>
   </goal>
   <goal name="VC submul_limb.7.1" expl="VC for submul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="99"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.8" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="99"/></proof>
  </goal>
  <goal name="VC submul_limb.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="92"/></proof>
  </goal>
  <goal name="VC submul_limb.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC submul_limb.11" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.11.0" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.11.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.12" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.12.0" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC submul_limb.12.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.13.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.13.1" expl="assertion" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.94"/></proof>
   </goal>
   <goal name="VC submul_limb.13.2" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.14" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC submul_limb.15" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.15.0" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.15.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.15.2" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC submul_limb.15.3" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.15.4" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.15.5" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.15.6" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.15.7" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.16" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.16.0" expl="VC for submul_limb" proved="true">
   <proof prover="9"><result status="valid" time="0.02" steps="75"/></proof>
   </goal>
   <goal name="VC submul_limb.16.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.16.2" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.17" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.17.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC submul_limb.17.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.18" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.18.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.18.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.19" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC submul_limb.20" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC submul_limb.21" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC submul_limb.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.22.0" expl="VC for submul_limb" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.50"/></proof>
   </goal>
   <goal name="VC submul_limb.22.1" expl="VC for submul_limb" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC submul_limb.22.2" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.42"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="VC submul_limb.22.3" expl="VC for submul_limb" proved="true">
   <proof prover="0"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC submul_limb.22.4" expl="VC for submul_limb" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC submul_limb.22.5" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC submul_limb.22.6" expl="VC for submul_limb" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.22.7" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC submul_limb.22.8" expl="VC for submul_limb" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC submul_limb.22.8.0" expl="VC for submul_limb" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC submul_limb.22.8.0.0" expl="VC for submul_limb" proved="true">
     <proof prover="0"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC submul_limb.22.9" expl="VC for submul_limb" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="1.96"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.35"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="VC submul_limb.22.10" expl="VC for submul_limb" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.05"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC submul_limb.22.11" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC submul_limb.22.12" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC submul_limb.22.13" expl="VC for submul_limb" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.22.14" expl="VC for submul_limb" proved="true">
   <proof prover="1"><result status="valid" time="2.48"/></proof>
   </goal>
   <goal name="VC submul_limb.22.15" expl="VC for submul_limb" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC submul_limb.22.15.0" expl="VC for submul_limb" proved="true">
    <proof prover="1"><result status="valid" time="0.11"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.23" expl="loop variant decrease" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.23.0" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC submul_limb.23.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.24" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC submul_limb.24.0" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC submul_limb.24.1" expl="VC for submul_limb" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC submul_limb.25" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC submul_limb.26" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10" memlimit="1000"><result status="valid" time="5.48"/></proof>
  </goal>
  <goal name="VC submul_limb.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC submul_limb.28" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="VC submul_limb.29" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC div_sb_qr" expl="VC for div_sb_qr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div_sb_qr.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="95"/></proof>
  </goal>
  <goal name="VC div_sb_qr.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="96"/></proof>
  </goal>
  <goal name="VC div_sb_qr.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="VC div_sb_qr.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC div_sb_qr.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="99"/></proof>
  </goal>
  <goal name="VC div_sb_qr.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="100"/></proof>
  </goal>
  <goal name="VC div_sb_qr.6" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="VC div_sb_qr.7" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="90"/></proof>
  </goal>
  <goal name="VC div_sb_qr.9" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.08" steps="106"/></proof>
  </goal>
  <goal name="VC div_sb_qr.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="93"/></proof>
  </goal>
  <goal name="VC div_sb_qr.11" expl="integer overflow" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.13.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.03" steps="95"/></proof>
   </goal>
   <goal name="VC div_sb_qr.13.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.04" steps="126"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.14" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="111"/></proof>
  </goal>
  <goal name="VC div_sb_qr.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="110"/></proof>
  </goal>
  <goal name="VC div_sb_qr.16" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="97"/></proof>
  </goal>
  <goal name="VC div_sb_qr.17" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.18" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.19" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="124"/></proof>
  </goal>
  <goal name="VC div_sb_qr.20" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="127"/></proof>
  </goal>
  <goal name="VC div_sb_qr.21" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div_sb_qr.22" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.23" expl="precondition" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div_sb_qr.24" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="134"/></proof>
  </goal>
  <goal name="VC div_sb_qr.25" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.25.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.25.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.25.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="VC div_sb_qr.25.0.0.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
     </goal>
     <goal name="VC div_sb_qr.25.0.0.2" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="VC div_sb_qr.25.0.0.3" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.26" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="115"/></proof>
  </goal>
  <goal name="VC div_sb_qr.27" expl="assertion" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC div_sb_qr.27.0" expl="assertion" proved="true">
   <proof prover="1" timelimit="55" memlimit="2000"><result status="valid" time="1.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.28" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.28.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.28.0.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.28.0.0.0" expl="assertion" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.22"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.28.1" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.28.1.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.28.1.0.0" expl="assertion" proved="true">
     <proof prover="0"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.30" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="119"/></proof>
  </goal>
  <goal name="VC div_sb_qr.31" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.31.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.31.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.54"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.32" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.32.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="145"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.32.3.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.32.3.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.30"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.32.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="123"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="123"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.32.6.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.43"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.32.6.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.32.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.12" steps="138"/></proof>
   </goal>
   <goal name="VC div_sb_qr.32.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.39" steps="129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_sb_qr.34" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.34.0" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.34.0.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.34.1" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.34.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.34.2" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.34.2.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.34.2.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.19"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.34.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.34.3.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.34.3.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.35" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div_sb_qr.36" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.36.0" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.36.0.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.36.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.84"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.36.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.62"/></proof>
   <proof prover="4"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.58" steps="168"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.4" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.36.4.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.36.4.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="9" memlimit="2000"><result status="valid" time="0.30" steps="129"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.36.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.22" steps="132"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   <proof prover="9"><result status="valid" time="1.04" steps="272"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.36.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.16"/></proof>
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.37" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.38" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.15" steps="126"/></proof>
  </goal>
  <goal name="VC div_sb_qr.39" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.39.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="120"/></proof>
   </goal>
   <goal name="VC div_sb_qr.39.1" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.39.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.71"/></proof>
    <proof prover="1" memlimit="2000"><result status="valid" time="0.21"/></proof>
    <proof prover="9" memlimit="2000"><result status="valid" time="0.46" steps="132"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.40" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.40.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="106"/></proof>
   </goal>
   <goal name="VC div_sb_qr.40.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="107"/></proof>
   </goal>
   <goal name="VC div_sb_qr.40.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.23" steps="232"/></proof>
   </goal>
   <goal name="VC div_sb_qr.40.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.41" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC div_sb_qr.42" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.43" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.44" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.45" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.46" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.46.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="135"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="3.58"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.54"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.09"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.46.7.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.44"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.46.7.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.46.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.99"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.10"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.36"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.15"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.46"/></proof>
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.08"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.46.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.10"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.46.12.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
    <proof prover="1" memlimit="2000"><result status="valid" time="0.72"/></proof>
    <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.06"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.46.12.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
    <proof prover="1" memlimit="2000"><result status="valid" time="1.01"/></proof>
    <proof prover="2" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.46.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div_sb_qr.48" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div_sb_qr.49" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.50" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.50.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.50.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.10"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.50.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.40"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.50.1.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.50.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.50.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.50.3.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.22"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.50.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.47"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.26" steps="137"/></proof>
   </goal>
   <goal name="VC div_sb_qr.50.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.51" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.51.0" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.51.0.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.51.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.09"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.51.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.51.2" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.51.2.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.51.2.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="9" timelimit="1"><result status="valid" time="0.40" steps="131"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.51.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.51.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.10"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.51.4.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="VC div_sb_qr.51.4.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.51.5" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.51.5.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.51.5.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="9" memlimit="2000"><result status="valid" time="0.77" steps="132"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.51.6" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.51.6.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.06"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.51.7" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.51.7.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.24"/></proof>
    <proof prover="9" memlimit="2000"><result status="valid" time="0.47" steps="119"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.51.8" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.51.8.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.51.8.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
     <proof prover="2" timelimit="1"><result status="valid" time="0.32"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.52" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.52.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.52.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.11"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.53" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.54" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.55" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.56" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="VC div_sb_qr.57" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="113"/></proof>
  </goal>
  <goal name="VC div_sb_qr.58" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.12" steps="129"/></proof>
  </goal>
  <goal name="VC div_sb_qr.59" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.09" steps="130"/></proof>
  </goal>
  <goal name="VC div_sb_qr.60" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  <proof prover="9"><result status="valid" time="0.15" steps="131"/></proof>
  </goal>
  <goal name="VC div_sb_qr.61" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC div_sb_qr.62" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_sb_qr.63" expl="loop invariant init" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="118"/></proof>
  </goal>
  <goal name="VC div_sb_qr.64" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="118"/></proof>
  </goal>
  <goal name="VC div_sb_qr.65" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_sb_qr.66" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.67" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.68" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.68.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   <proof prover="9"><result status="valid" time="0.20" steps="134"/></proof>
   </goal>
   <goal name="VC div_sb_qr.68.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.69" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.70" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC div_sb_qr.71" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.72" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.72.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.72.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.30" steps="139"/></proof>
   </goal>
   <goal name="VC div_sb_qr.72.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.28"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.22" steps="139"/></proof>
   </goal>
   <goal name="VC div_sb_qr.72.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.54" steps="168"/></proof>
   </goal>
   <goal name="VC div_sb_qr.72.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.19"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.31" steps="142"/></proof>
   </goal>
   <goal name="VC div_sb_qr.72.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="3.30"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.74" steps="168"/></proof>
   </goal>
   <goal name="VC div_sb_qr.72.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.36" steps="144"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.73" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC div_sb_qr.74" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC div_sb_qr.75" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.75.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.75.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.76"/></proof>
   </goal>
   <goal name="VC div_sb_qr.75.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="2.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.75.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="2.35"/></proof>
   </goal>
   <goal name="VC div_sb_qr.75.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.10"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.76" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC div_sb_qr.77" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.77.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.58"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.12"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.77.7.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.77.7.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.77.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.45"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.77.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.78" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.79" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_sb_qr.80" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.80.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.80.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="3.81"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.81" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.06" steps="145"/></proof>
  </goal>
  <goal name="VC div_sb_qr.82" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.82.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.82.1" expl="precondition" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.83" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.83.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="4.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.83.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_sb_qr.83.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.83.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.83.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.84" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.85" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.85.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.85.0.0" expl="postcondition" proved="true">
    <proof prover="0" memlimit="1000"><result status="valid" time="0.09"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.86" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div_sb_qr.87" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC div_sb_qr.88" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.88.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.88.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.89" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.89.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.43"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.15"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.89.6.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.89.6.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.89.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.93"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.78"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.32" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.89.33" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.90" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="VC div_sb_qr.91" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="VC div_sb_qr.92" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC div_sb_qr.93" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC div_sb_qr.94" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.95" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.95.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.35"/></proof>
   <proof prover="4"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_sb_qr.95.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.37"/></proof>
   <proof prover="4"><result status="valid" time="0.20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.96" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.96.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_sb_qr.96.1" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.96.1.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.96.1.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.38"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.96.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.97" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.98" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC div_sb_qr.99" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.99.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.1" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.99.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1"><result status="valid" time="0.21"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.99.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.42"/></proof>
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="2.32"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.50"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.37"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.99.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.99.13.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.100" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.100.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.43"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.6" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.6.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.6.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="2.00"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.8" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.8.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="2" memlimit="2000"><result status="unknown" time="5.26"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.94"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.8.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.14" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.14.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.08"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.14.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.06"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.17" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.17.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.15"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.17.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.18" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.18.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.69"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.18.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.22" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.22.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="timeout" time="4.94"/></proof>
    <proof prover="1" memlimit="2000"><result status="valid" time="1.42"/></proof>
    <proof prover="2" memlimit="2000"><result status="unknown" time="5.19"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.96"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.22.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.23" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.23.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.23.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.25" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.25.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.25.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.28" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.28.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="timeout" time="4.96"/></proof>
    <proof prover="1" memlimit="2000"><result status="valid" time="0.18"/></proof>
    <proof prover="2" memlimit="2000"><result status="unknown" time="5.32"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.99"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.28.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.24"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.29" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.29.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="2" memlimit="2000"><result status="unknown" time="5.16"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.93"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.29.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="timeout" time="4.95"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="1.98"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000"><result status="timeout" time="4.99"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.31.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.23"/></proof>
    <proof prover="2" memlimit="2000"><result status="unknown" time="5.20"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.98"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.31.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.85"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.100.31.1.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.96"/></proof>
     </goal>
     <goal name="VC div_sb_qr.100.31.1.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="10.32"/></proof>
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.98"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.32" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
   <proof prover="1" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.26"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.32.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.05"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.32.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.78"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.100.32.1.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="0.01"/></proof>
     <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="VC div_sb_qr.100.32.1.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="0.01"/></proof>
     <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.33" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.46"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.34" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.34.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.48"/></proof>
    <proof prover="2" memlimit="2000"><result status="valid" time="1.88"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.99"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.34.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.15"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.35" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.35.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.57"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.35.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.36" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.46"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.37" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.37.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.22"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.37.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.38" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.48"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.39" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.39.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.39.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.40" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.40.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.17"/></proof>
    <proof prover="2" memlimit="2000"><result status="unknown" time="5.19"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.98"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.40.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.41" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.42" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.43" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.44" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.44.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.34"/></proof>
    <proof prover="2" memlimit="2000"><result status="unknown" time="5.18"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="9" memlimit="2000"><result status="timeout" time="4.99"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.44.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.45" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.46" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.47" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.100.47.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="VC div_sb_qr.100.47.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.100.48" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.100.49" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.101" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.101.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.55"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.6" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.101.6.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.101.6.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.101.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.101.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.102" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC div_sb_qr.103" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC div_sb_qr.104" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.104.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.39"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.99"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.104.17" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.104.17.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.26"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.104.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.105" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC div_sb_qr.106" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_sb_qr.107" expl="loop invariant preservation" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.55"/></proof>
  </goal>
  <goal name="VC div_sb_qr.108" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="3.64"/></proof>
  </goal>
  <goal name="VC div_sb_qr.109" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.81"/></proof>
  <proof prover="4"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC div_sb_qr.110" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.74"/></proof>
  </goal>
  <goal name="VC div_sb_qr.111" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.51"/></proof>
  </goal>
  <goal name="VC div_sb_qr.112" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.53"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_sb_qr.113" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.17"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.114" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.115" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.116" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.116.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.28" steps="134"/></proof>
   </goal>
   <goal name="VC div_sb_qr.116.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.116.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.116.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.116.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.117" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.117.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   <proof prover="9"><result status="valid" time="0.33" steps="136"/></proof>
   </goal>
   <goal name="VC div_sb_qr.117.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.118" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  <proof prover="4"><result status="valid" time="2.21"/></proof>
  </goal>
  <goal name="VC div_sb_qr.119" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC div_sb_qr.120" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.121" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_sb_qr.122" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.122.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="3.86"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.69" steps="166"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.38" steps="157"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.37" steps="157"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.38" steps="142"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.43" steps="164"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.122.9" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.122.9.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.122.9.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.12"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.123" expl="postcondition" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
  <proof prover="9" memlimit="2000"><result status="valid" time="0.38" steps="139"/></proof>
  </goal>
  <goal name="VC div_sb_qr.124" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.124.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.124.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   <proof prover="9"><result status="valid" time="0.24" steps="138"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.125" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.24" steps="136"/></proof>
  </goal>
  <goal name="VC div_sb_qr.126" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="1.46"/></proof>
  </goal>
  <goal name="VC div_sb_qr.127" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div_sb_qr.128" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.128.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.128.0.0" expl="precondition" proved="true">
    <proof prover="2" memlimit="2000"><result status="valid" time="3.84"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.129" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="1.08" steps="165"/></proof>
  </goal>
  <goal name="VC div_sb_qr.130" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.88"/></proof>
  </goal>
  <goal name="VC div_sb_qr.131" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC div_sb_qr.132" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.132.0" expl="assertion" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="2.53"/></proof>
   </goal>
   <goal name="VC div_sb_qr.132.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.132.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.132.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.132.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.17"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.133" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.133.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.133.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.07"/></proof>
    <proof prover="2" memlimit="2000"><result status="valid" time="0.18"/></proof>
    <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.134" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.134.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.134.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.135" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.135.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.135.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.20"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.136" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC div_sb_qr.137" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC div_sb_qr.138" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="VC div_sb_qr.139" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC div_sb_qr.140" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC div_sb_qr.141" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC div_sb_qr.142" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.142.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.142.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.142.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.143" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC div_sb_qr.144" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.144.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.144.0.0" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.144.0.0.0" expl="assertion" proved="true">
     <proof prover="0"><result status="valid" time="1.19"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.144.1" expl="assertion" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.20"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.144.1.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.20"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.144.1.1" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.23"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.145" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC div_sb_qr.146" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.147" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.147.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.147.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.86"/></proof>
   </goal>
   <goal name="VC div_sb_qr.147.2" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.147.2.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1"><result status="valid" time="0.17"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.147.3" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.147.3.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1"><result status="valid" time="0.21"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.147.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.147.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.148" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.148.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div_sb_qr.148.1" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.148.1.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.148.1.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.148.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.17"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.149" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.51"/></proof>
  <proof prover="4" memlimit="2000"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC div_sb_qr.150" expl="assertion" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC div_sb_qr.151" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.151.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.151.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.151.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.151.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.33"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.05"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.151.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.23"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.151.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.151.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.151.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.32"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.152" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC div_sb_qr.153" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.153.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="1.38"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.86"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.153.1" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.153.1.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.153.1.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.153.2" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.153.2.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.153.2.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
     <proof prover="2" timelimit="1"><result status="valid" time="0.08"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.153.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.56"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.153.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.25"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.154" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.154.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.39"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.99"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.18"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="2.65"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.93"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.154.24.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.154.24.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.154.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.154.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.155" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="0.26"/></proof>
  <proof prover="2" memlimit="2000"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC div_sb_qr.156" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.157" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC div_sb_qr.158" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC div_sb_qr.159" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.159.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
   <proof prover="2"><result status="valid" time="1.86"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="5.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.12" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.159.12.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" timelimit="30" memlimit="2000"><result status="valid" time="0.32"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.159.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.25"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.80"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.159.17" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.159.17.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
    <proof prover="4" memlimit="2000"><result status="valid" time="1.18"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.159.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.19"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.159.18.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.76"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.159.18.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.160" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.161" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC div_sb_qr.162" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC div_sb_qr.163" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.163.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.163.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.86"/></proof>
   </goal>
   <goal name="VC div_sb_qr.163.2" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.163.2.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.30"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.163.3" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.163.3.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.19"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.163.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.164" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.164.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.164.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.165" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.165.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.7" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.165.7.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.45"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.165.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.14" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.165.14.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.37"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.165.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.45"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="2.45"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.26"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.165.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.166" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.167" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.167.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.167.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.167.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC div_sb_qr.167.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.167.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.167.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.167.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.168" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.168.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.168.0.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.169" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC div_sb_qr.170" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC div_sb_qr.171" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC div_sb_qr.172" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.172.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.172.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_sb_qr.172.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.35"/></proof>
     </goal>
     <goal name="VC div_sb_qr.172.0.0.1" expl="VC for div_sb_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
     </goal>
     <goal name="VC div_sb_qr.172.0.0.2" expl="VC for div_sb_qr" proved="true">
     <proof prover="4" timelimit="30" memlimit="2000"><result status="valid" time="7.11"/></proof>
     </goal>
     <goal name="VC div_sb_qr.172.0.0.3" expl="VC for div_sb_qr" proved="true">
     <proof prover="4" timelimit="30" memlimit="2000"><result status="valid" time="7.47"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.173" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="VC div_sb_qr.174" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.174.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.45"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.174.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.175" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.175.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.175.0.0" expl="precondition" proved="true">
    <proof prover="2" timelimit="20" memlimit="1500"><result status="valid" time="0.30"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.176" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_sb_qr.176.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_sb_qr.176.0.0" expl="postcondition" proved="true">
    <proof prover="0" memlimit="1000"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.177" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.177.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.33"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.177.0.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.06"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.177.0.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.177.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.76"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.85"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.50"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.177.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.178" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC div_sb_qr.179" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.179.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.179.1" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.179.1.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000" obsolete="true"><result status="timeout" time="8.00"/></proof>
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.179.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.179.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.84"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.179.3.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="1.01"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.179.3.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.179.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.179.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.70"/></proof>
   </goal>
   <goal name="VC div_sb_qr.179.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.179.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.180" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.180.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.180.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.181" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC div_sb_qr.182" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.182.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.29"/></proof>
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.182.0.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" timelimit="20" memlimit="2000"><result status="valid" time="0.29"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.182.1" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.182.1.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.182.1.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.10"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.182.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.182.3.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.46"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.182.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.182.5.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.182.5.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.182.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="3.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.48"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.9" expl="VC for div_sb_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.182.9.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="2" memlimit="2000"><result status="valid" time="2.13"/></proof>
    </goal>
    <goal name="VC div_sb_qr.182.9.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.182.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.11" expl="VC for div_sb_qr" proved="true">
   <transf name="apply" proved="true" arg1="prod_compat_r">
    <goal name="VC div_sb_qr.182.11.0" proved="true">
    <proof prover="3"><result status="valid" time="0.07"/></proof>
    </goal>
    <goal name="VC div_sb_qr.182.11.1" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.182.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.182.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.183" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.184" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC div_sb_qr.185" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.185.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.185.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.185.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.185.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.185.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.186" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC div_sb_qr.187" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC div_sb_qr.188" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_sb_qr.189" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.189.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.76"/></proof>
   <proof prover="4"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.189.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.77"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.190" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="VC div_sb_qr.191" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC div_sb_qr.192" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.85"/></proof>
  </goal>
  <goal name="VC div_sb_qr.193" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.193.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.66"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="3.59"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.78"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.193.3.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.193.3.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" timelimit="20"><result status="valid" time="1.12"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.57"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.31"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.74"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.193.9.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.193.9.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.10" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.193.10.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.193.10.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.10"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.52"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.50"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.42"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" timelimit="60"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.54"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.39"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.65"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="4.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.85"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.80"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.29" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.193.29.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.193.29.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.55"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.87"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.32" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.193.32.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.193.32.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.21"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.33" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.193.33.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.193.33.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.34" expl="VC for div_sb_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.35" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.44"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.36" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.56"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.37" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="1.35"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.193.37.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.24"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.193.37.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.06"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.193.38" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.53"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.39" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.40" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.41" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" timelimit="20" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.42" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.43" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.44" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
   <proof prover="2" timelimit="1"><result status="valid" time="0.63"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.45" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="4.82"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.46" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="5.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.47" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.48" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.49" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.50" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.51" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.52" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.69"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.53" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.54" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.07"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.68"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.193.55" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.194" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.194.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.89"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.90"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.93"/></proof>
   </goal>
   <goal name="VC div_sb_qr.194.10" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.194.10.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.194.10.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
     <proof prover="1" memlimit="2000"><result status="valid" time="0.57"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.194.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.195" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.195.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="2.35"/></proof>
   </goal>
   <goal name="VC div_sb_qr.195.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.196" expl="loop variant decrease" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.196.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.56"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.196.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.52"/></proof>
   <proof prover="4"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.197" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC div_sb_qr.198" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.85"/></proof>
  </goal>
  <goal name="VC div_sb_qr.199" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="4.95"/></proof>
  </goal>
  <goal name="VC div_sb_qr.200" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.61"/></proof>
  </goal>
  <goal name="VC div_sb_qr.201" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="VC div_sb_qr.202" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.67"/></proof>
  </goal>
  <goal name="VC div_sb_qr.203" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="VC div_sb_qr.204" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC div_sb_qr.205" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.206" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.207" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC div_sb_qr.208" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC div_sb_qr.209" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.210" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.210.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.45"/></proof>
   </goal>
   <goal name="VC div_sb_qr.210.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.44"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.211" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC div_sb_qr.212" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC div_sb_qr.213" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.56"/></proof>
  </goal>
  <goal name="VC div_sb_qr.214" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.214.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.26"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="3.22"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.3.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.3.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="1.07"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.4" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.4.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.4.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.52"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.26"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.28"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.78"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.36"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.9" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.9.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.9.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.16"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.10" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.10.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.10.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.11" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.11.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" timelimit="20"><result status="valid" time="11.85"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.26"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.36"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.44"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.19" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.19.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.19.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.09"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.20.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.20"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" timelimit="20" memlimit="2000"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.26" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.26.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.26.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.16"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.66"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.66"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.30" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.30.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.30.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.32" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.60"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.33" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.33.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.33.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.23"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.34" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.35" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.37"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.36" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.36"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.214.36.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.214.36.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.32"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.37" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.38" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.27"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.39" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.40" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.41" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.41.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.41.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.42" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.42.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.214.42.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.43" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.44" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="2.57"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.45" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="3.34"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.46" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.46.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.47" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.214.47.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.214.47.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.48" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.214.48.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.214.49" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.58"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.50" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.51" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.52" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.53" expl="VC for div_sb_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.09"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.46"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.214.54" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.215" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC div_sb_qr.216" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC div_sb_qr.217" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.217.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.28"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.217.0.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.217.0.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.217.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.90"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.217.1.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.217.1.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.217.2" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.217.2.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
    <transf name="introduce_premises" proved="true" >
     <goal name="VC div_sb_qr.217.2.0.0" expl="VC for div_sb_qr" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="VC div_sb_qr.217.2.0.0.0" expl="VC for div_sb_qr" proved="true">
      <proof prover="0"><result status="valid" time="1.58"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.217.3" expl="VC for div_sb_qr" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="VC div_sb_qr.217.3.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.34"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.217.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.44"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.217.4.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.217.4.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.04"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.218" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.218.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.88"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.3" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.218.3.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.218.3.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0" timelimit="50"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.218.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.7" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.218.7.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.218.7.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.19"/></proof>
     <proof prover="2" memlimit="2000"><result status="valid" time="0.13"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.218.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.31"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.11" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.218.11.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.218.11.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.218.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.19" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.20" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.21" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="3.44"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.22" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.23" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.24" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.25" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.26" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.27" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.28" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.29" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.30" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.31" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.32" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.33" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.34" expl="VC for div_sb_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.35" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_sb_qr.218.36" expl="VC for div_sb_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.219" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC div_sb_qr.220" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC div_sb_qr.221" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.221.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="1.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.6" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.7" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.8" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.9" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.10" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.11" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.12" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.13" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.14" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.15" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.16" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.17" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="2.19"/></proof>
   </goal>
   <goal name="VC div_sb_qr.221.18" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.222" expl="loop variant decrease" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.222.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.52"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_sb_qr.222.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.223" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC div_sb_qr.224" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.74"/></proof>
  </goal>
  <goal name="VC div_sb_qr.225" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="4.91"/></proof>
  </goal>
  <goal name="VC div_sb_qr.226" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.56"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_sb_qr.227" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.56"/></proof>
  </goal>
  <goal name="VC div_sb_qr.228" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.58"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.229" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.58"/></proof>
  </goal>
  <goal name="VC div_sb_qr.230" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.231" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.232" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_sb_qr.233" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.233.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_sb_qr.233.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.234" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.235" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC div_sb_qr.236" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_sb_qr.237" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC div_sb_qr.238" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.238.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.68" steps="159"/></proof>
   </goal>
   <goal name="VC div_sb_qr.238.1" expl="VC for div_sb_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_sb_qr.238.1.0" expl="VC for div_sb_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_sb_qr.238.1.0.0" expl="VC for div_sb_qr" proved="true">
     <proof prover="9" timelimit="1"><result status="valid" time="0.90" steps="164"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.239" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC div_sb_qr.240" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_sb_qr.240.0" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" memlimit="2000" obsolete="true"><result status="unknown" time="5.09"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.59" steps="160"/></proof>
   </goal>
   <goal name="VC div_sb_qr.240.1" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.52" steps="137"/></proof>
   </goal>
   <goal name="VC div_sb_qr.240.2" expl="VC for div_sb_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_sb_qr.240.3" expl="VC for div_sb_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_sb_qr.240.3.0" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.07"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_sb_qr.240.3.1" expl="VC for div_sb_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.08"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_sb_qr.240.4" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.35" steps="137"/></proof>
   </goal>
   <goal name="VC div_sb_qr.240.5" expl="VC for div_sb_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="1.96" steps="173"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.241" expl="postcondition" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_sb_qr.242" expl="postcondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC div_sb_qr.242.0" expl="postcondition" proved="true">
   <proof prover="1" timelimit="20" memlimit="2000"><result status="valid" time="3.62"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_sb_qr.243" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC divmod_2" expl="VC for divmod_2" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC divmod_2.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.4" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.6" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.7" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="89"/></proof>
  </goal>
  <goal name="VC divmod_2.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="113"/></proof>
  </goal>
  <goal name="VC divmod_2.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="VC divmod_2.13" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.13.0" expl="assertion" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="2.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.14" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.16" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC divmod_2.18" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.28" steps="376"/></proof>
  </goal>
  <goal name="VC divmod_2.19" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.06" steps="101"/></proof>
  </goal>
  <goal name="VC divmod_2.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.22" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.22.0" expl="VC for divmod_2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.13"/></proof>
   <proof prover="1"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_2.22.1" expl="VC for divmod_2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="122"/></proof>
   </goal>
   <goal name="VC divmod_2.22.2" expl="VC for divmod_2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="108"/></proof>
   </goal>
   <goal name="VC divmod_2.22.3" expl="VC for divmod_2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="108"/></proof>
   </goal>
   <goal name="VC divmod_2.22.4" expl="VC for divmod_2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="123"/></proof>
   </goal>
   <goal name="VC divmod_2.22.5" expl="VC for divmod_2" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.25" steps="144"/></proof>
   </goal>
   <goal name="VC divmod_2.22.6" expl="VC for divmod_2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.23" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.24" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.02"/></proof>
  </goal>
  <goal name="VC divmod_2.25" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC divmod_2.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC divmod_2.28" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.44" steps="202"/></proof>
  </goal>
  <goal name="VC divmod_2.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC divmod_2.30" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.31" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.31.0" expl="VC for divmod_2" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_2.31.1" expl="VC for divmod_2" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.32" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC divmod_2.33" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.34" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.35" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC divmod_2.36" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.37" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="104"/></proof>
  </goal>
  <goal name="VC divmod_2.38" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_2.39" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.40" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.41" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.42" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.43" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC divmod_2.44" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.44.0" expl="VC for divmod_2" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_2.44.1" expl="VC for divmod_2" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_2.44.2" expl="VC for divmod_2" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_2.44.3" expl="VC for divmod_2" proved="true">
   <proof prover="2"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.45" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_2.46" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_2.47" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.47.0" expl="VC for divmod_2" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.47.0.0" expl="VC for divmod_2" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC divmod_2.47.0.0.0" expl="VC for divmod_2" proved="true">
     <proof prover="0"><result status="valid" time="0.07"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.1" expl="VC for divmod_2" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.47.1.0" expl="VC for divmod_2" proved="true">
    <proof prover="0"><result status="valid" time="0.80"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.2" expl="VC for divmod_2" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.72"/></proof>
   </goal>
   <goal name="VC divmod_2.47.3" expl="VC for divmod_2" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC divmod_2.47.4" expl="VC for divmod_2" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.76"/></proof>
   </goal>
   <goal name="VC divmod_2.47.5" expl="VC for divmod_2" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.21"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC divmod_2.47.5.0" expl="VC for divmod_2" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC divmod_2.47.5.1" expl="VC for divmod_2" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.6" expl="VC for divmod_2" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC divmod_2.47.7" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC divmod_2.47.8" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC divmod_2.47.9" expl="VC for divmod_2" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.11"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_2.47.10" expl="VC for divmod_2" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.04"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC divmod_2.47.11" expl="VC for divmod_2" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC divmod_2.47.12" expl="VC for divmod_2" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC divmod_2.47.13" expl="VC for divmod_2" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC divmod_2.47.14" expl="VC for divmod_2" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.24"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC divmod_2.47.14.0" expl="VC for divmod_2" proved="true">
    <proof prover="0"><result status="valid" time="0.24"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC divmod_2.47.14.1" expl="VC for divmod_2" proved="true">
    <proof prover="0"><result status="valid" time="0.26"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC divmod_2.47.15" expl="VC for divmod_2" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.95"/></proof>
   <proof prover="2" timelimit="1"><result status="unknown" time="1.18"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="timeout" time="1.01"/></proof>
   </goal>
   <goal name="VC divmod_2.47.16" expl="VC for divmod_2" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.48" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.49" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_2.50" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC divmod_2.51" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.52" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.53" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC divmod_2.54" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC divmod_2.55" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.56" expl="assertion" proved="true">
  <proof prover="9" obsolete="true"><result status="timeout" time="5.01"/></proof>
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.56.0" expl="VC for divmod_2" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC divmod_2.56.1" expl="VC for divmod_2" proved="true">
   <proof prover="0"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.57" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC divmod_2.58" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.58.0" expl="VC for divmod_2" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC divmod_2.58.1" expl="VC for divmod_2" proved="true">
   <proof prover="2"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.59" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC divmod_2.59.0" expl="VC for divmod_2" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.19" steps="111"/></proof>
   </goal>
   <goal name="VC divmod_2.59.1" expl="VC for divmod_2" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.18" steps="111"/></proof>
   </goal>
   <goal name="VC divmod_2.59.2" expl="VC for divmod_2" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC divmod_2.59.2.0" expl="VC for divmod_2" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC divmod_2.59.2.0.0" expl="VC for divmod_2" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.34"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC divmod_2.60" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.16" steps="126"/></proof>
  </goal>
  <goal name="VC divmod_2.61" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC divmod_2.62" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC div_qr" expl="VC for div_qr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC div_qr.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_qr.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC div_qr.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.12" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.24" steps="203"/></proof>
  </goal>
  <goal name="VC div_qr.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="VC div_qr.14" expl="integer overflow" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC div_qr.15" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.15.0" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.15.1" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.16" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.10"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="134"/></proof>
  </goal>
  <goal name="VC div_qr.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.18" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.18.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.18.0.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.21" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.21.0" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.21.1" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.22" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.22.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.22.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.04" steps="135"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.23" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.06" steps="133"/></proof>
  </goal>
  <goal name="VC div_qr.24" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.25" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.25.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.25.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.25.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.25.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.25.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.21"/></proof>
     </goal>
     <goal name="VC div_qr.25.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.36"/></proof>
     <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.07" steps="146"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.26" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.27" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="116"/></proof>
  </goal>
  <goal name="VC div_qr.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="171"/></proof>
  </goal>
  <goal name="VC div_qr.29" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.29.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.29.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.29.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.29.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.29.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.25"/></proof>
     </goal>
     <goal name="VC div_qr.29.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.28"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.30" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.31" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.31.0" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.53" steps="248"/></proof>
   </goal>
   <goal name="VC div_qr.31.1" expl="VC for div_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.96"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.75" steps="258"/></proof>
   </goal>
   <goal name="VC div_qr.31.2" expl="VC for div_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.93"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.54" steps="248"/></proof>
   </goal>
   <goal name="VC div_qr.31.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.31.4" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.05" steps="127"/></proof>
   </goal>
   <goal name="VC div_qr.31.5" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_qr.31.6" expl="VC for div_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC div_qr.31.7" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.26"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.39"/></proof>
   </goal>
   <goal name="VC div_qr.31.8" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.19"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.31.9" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.12"/></proof>
   </goal>
   <goal name="VC div_qr.31.10" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.06"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.31.11" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="154"/></proof>
   </goal>
   <goal name="VC div_qr.31.12" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_qr.31.13" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.63" steps="261"/></proof>
   </goal>
   <goal name="VC div_qr.31.14" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.31.15" expl="VC for div_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.31.16" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.00"/></proof>
   </goal>
   <goal name="VC div_qr.31.17" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.32" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1" memlimit="2000"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC div_qr.33" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="1.53"/></proof>
  </goal>
  <goal name="VC div_qr.34" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.35" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.36" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.36.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.36.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.36.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.36.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.36.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.36.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.37" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.38" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.39" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.39.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="140"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.40" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.41" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.42" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.43" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.43.0" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.15" steps="147"/></proof>
   </goal>
   <goal name="VC div_qr.43.1" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.43.2" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.07" steps="113"/></proof>
   </goal>
   <goal name="VC div_qr.43.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.16" steps="165"/></proof>
   </goal>
   <goal name="VC div_qr.43.4" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.04" steps="116"/></proof>
   </goal>
   <goal name="VC div_qr.43.5" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.90"/></proof>
   </goal>
   <goal name="VC div_qr.43.6" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.08" steps="137"/></proof>
   </goal>
   <goal name="VC div_qr.43.7" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.05" steps="116"/></proof>
   </goal>
   <goal name="VC div_qr.43.8" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.32"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.42" steps="229"/></proof>
   </goal>
   <goal name="VC div_qr.43.9" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.94"/></proof>
   </goal>
   <goal name="VC div_qr.43.10" expl="VC for div_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.06" steps="122"/></proof>
   </goal>
   <goal name="VC div_qr.43.11" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.10" steps="152"/></proof>
   </goal>
   <goal name="VC div_qr.43.12" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.43.13" expl="VC for div_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.09" steps="157"/></proof>
   </goal>
   <goal name="VC div_qr.43.14" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.07" steps="146"/></proof>
   </goal>
   <goal name="VC div_qr.43.15" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.06" steps="125"/></proof>
   </goal>
   <goal name="VC div_qr.43.16" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.06" steps="128"/></proof>
   </goal>
   <goal name="VC div_qr.43.17" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.43.18" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.06" steps="130"/></proof>
   </goal>
   <goal name="VC div_qr.43.19" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.18" steps="167"/></proof>
   </goal>
   <goal name="VC div_qr.43.20" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.08" steps="132"/></proof>
   </goal>
   <goal name="VC div_qr.43.21" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.07" steps="133"/></proof>
   </goal>
   <goal name="VC div_qr.43.22" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.13" steps="165"/></proof>
   </goal>
   <goal name="VC div_qr.43.23" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.05" steps="134"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.44" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.45" expl="postcondition" proved="true">
  <proof prover="4" timelimit="10"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_qr.46" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.47" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.48" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.48.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.48.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.48.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.48.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.48.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.48.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.49" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.50" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.51" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.51.0" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.51.1" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.52" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.53" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.53.0" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.96"/></proof>
   </goal>
   <goal name="VC div_qr.53.1" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.08" steps="153"/></proof>
   </goal>
   <goal name="VC div_qr.53.2" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="120"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.54" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.54.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="119"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.55" expl="integer overflow" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="141"/></proof>
  </goal>
  <goal name="VC div_qr.56" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.57" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.57.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.57.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.57.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.72"/></proof>
     </goal>
     <goal name="VC div_qr.57.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="2" memlimit="2000"><result status="valid" time="0.21"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.58" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_qr.59" expl="precondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="122"/></proof>
  </goal>
  <goal name="VC div_qr.60" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="124"/></proof>
  </goal>
  <goal name="VC div_qr.61" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.62" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.62.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.62.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.62.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.05"/></proof>
     </goal>
     <goal name="VC div_qr.62.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.62.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.91"/></proof>
     </goal>
     <goal name="VC div_qr.62.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.63" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.64" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.65" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.66" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.66.0" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="131"/></proof>
   </goal>
   <goal name="VC div_qr.66.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.2" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.66.3" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000" obsolete="true"><result status="timeout" time="4.97"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.66.4" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="1.35"/></proof>
   </goal>
   <goal name="VC div_qr.66.5" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.6" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.66.7" expl="VC for div_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC div_qr.66.8" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.66.9" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.27"/></proof>
   </goal>
   <goal name="VC div_qr.66.10" expl="VC for div_qr" proved="true">
   <proof prover="2"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.66.11" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.66.12" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC div_qr.66.13" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.66.14" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.05"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_qr.66.15" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="9"><result status="valid" time="0.13" steps="132"/></proof>
   </goal>
   <goal name="VC div_qr.66.16" expl="VC for div_qr" proved="true">
   <proof prover="2"><result status="valid" time="1.30"/></proof>
   </goal>
   <goal name="VC div_qr.66.17" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.66"/></proof>
   </goal>
   <goal name="VC div_qr.66.18" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.66.19" expl="VC for div_qr" proved="true">
   <proof prover="1"><result status="valid" time="0.20"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.20" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.66.21" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC div_qr.66.22" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.66.23" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.24" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.66.25" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.66.26" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.66.27" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.67" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.67.0" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="132"/></proof>
   </goal>
   <goal name="VC div_qr.67.1" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="156"/></proof>
   </goal>
   <goal name="VC div_qr.67.2" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.13" steps="134"/></proof>
   </goal>
   <goal name="VC div_qr.67.3" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="134"/></proof>
   </goal>
   <goal name="VC div_qr.67.4" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.16" steps="136"/></proof>
   </goal>
   <goal name="VC div_qr.67.5" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.09"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="137"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.68" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_qr.69" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.69.0" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="timeout" time="4.95"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
   <proof prover="2" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000"><result status="timeout" time="4.98"/></proof>
   </goal>
   <goal name="VC div_qr.69.1" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.69.2" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.69.3" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.41"/></proof>
   </goal>
   <goal name="VC div_qr.69.4" expl="VC for div_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC div_qr.69.5" expl="VC for div_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.69.6" expl="VC for div_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.92"/></proof>
   </goal>
   <goal name="VC div_qr.69.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC div_qr.69.8" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.98"/></proof>
   </goal>
   <goal name="VC div_qr.69.9" expl="VC for div_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="VC div_qr.69.10" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="VC div_qr.69.11" expl="VC for div_qr" proved="true">
   <transf name="cut" proved="true" arg1="(value q (sx - 1) &gt;= 0)">
    <goal name="VC div_qr.69.11.0" expl="VC for div_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.14"/></proof>
    </goal>
    <goal name="VC div_qr.69.11.1" proved="true">
    <proof prover="3"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.69.12" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC div_qr.69.13" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="timeout" time="4.93"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.18"/></proof>
   <proof prover="2" memlimit="2000"><result status="unknown" time="5.40"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC div_qr.69.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.69.15" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.52"/></proof>
   </goal>
   <goal name="VC div_qr.69.16" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.69.17" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="1.24"/></proof>
   </goal>
   <goal name="VC div_qr.69.18" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.69.19" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.70" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.71" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="1.59"/></proof>
  </goal>
  <goal name="VC div_qr.72" expl="integer overflow" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.04" steps="117"/></proof>
  </goal>
  <goal name="VC div_qr.73" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.05" steps="117"/></proof>
  </goal>
  <goal name="VC div_qr.74" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.75" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.03" steps="118"/></proof>
  </goal>
  <goal name="VC div_qr.76" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.77" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_qr.78" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="138"/></proof>
  </goal>
  <goal name="VC div_qr.79" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.80" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.80.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.80.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.80.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.80.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.80.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.80.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.81" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.82" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.83" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.83.0" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.83.1" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.84" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.84.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.84.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.07" steps="137"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.85" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.85.0" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="146"/></proof>
   </goal>
   <goal name="VC div_qr.85.1" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.30" steps="245"/></proof>
   </goal>
   <goal name="VC div_qr.85.2" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="136"/></proof>
   </goal>
   <goal name="VC div_qr.85.3" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="139"/></proof>
   </goal>
   <goal name="VC div_qr.85.4" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.48" steps="335"/></proof>
   </goal>
   <goal name="VC div_qr.85.5" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="146"/></proof>
   </goal>
   <goal name="VC div_qr.85.6" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.78"/></proof>
   </goal>
   <goal name="VC div_qr.85.7" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="119"/></proof>
   </goal>
   <goal name="VC div_qr.85.8" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="156"/></proof>
   </goal>
   <goal name="VC div_qr.85.9" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="122"/></proof>
   </goal>
   <goal name="VC div_qr.85.10" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.85"/></proof>
   </goal>
   <goal name="VC div_qr.85.11" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.70" steps="436"/></proof>
   </goal>
   <goal name="VC div_qr.85.12" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="150"/></proof>
   </goal>
   <goal name="VC div_qr.85.13" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.79" steps="386"/></proof>
   </goal>
   <goal name="VC div_qr.85.14" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="121"/></proof>
   </goal>
   <goal name="VC div_qr.85.15" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="145"/></proof>
   </goal>
   <goal name="VC div_qr.85.16" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC div_qr.85.17" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.03" steps="121"/></proof>
   </goal>
   <goal name="VC div_qr.85.18" expl="VC for div_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.85.18.0" expl="VC for div_qr" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="125"/></proof>
    </goal>
    <goal name="VC div_qr.85.18.1" expl="VC for div_qr" proved="true">
    <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="125"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.86" expl="integer overflow" proved="true">
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="139"/></proof>
  </goal>
  <goal name="VC div_qr.87" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.06" steps="137"/></proof>
  </goal>
  <goal name="VC div_qr.88" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.88.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.88.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.88.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.88.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.88.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.22"/></proof>
     </goal>
     <goal name="VC div_qr.88.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.89" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.90" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="169"/></proof>
  </goal>
  <goal name="VC div_qr.91" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="166"/></proof>
  </goal>
  <goal name="VC div_qr.92" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.92.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.92.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.92.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.06"/></proof>
     </goal>
     <goal name="VC div_qr.92.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.92.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.19"/></proof>
     </goal>
     <goal name="VC div_qr.92.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.16"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.93" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.94" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.94.0" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.94.1" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.06"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.94.1.0" expl="VC for div_qr" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
    <proof prover="1" memlimit="2000"><result status="valid" time="2.04"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_qr.94.1.1" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.15"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.94.2" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000" obsolete="true"><result status="timeout" time="4.96"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.07"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.94.2.0" expl="VC for div_qr" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="4.93"/></proof>
    <proof prover="1" memlimit="2000"><result status="valid" time="1.74"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_qr.94.2.1" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.94.3" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC div_qr.94.4" expl="VC for div_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.37"/></proof>
   </goal>
   <goal name="VC div_qr.94.5" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="VC div_qr.94.6" expl="VC for div_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.94.7" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="4.84"/></proof>
   </goal>
   <goal name="VC div_qr.94.8" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.94.9" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="134"/></proof>
   </goal>
   <goal name="VC div_qr.94.10" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_qr.94.11" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_qr.94.12" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="2.49"/></proof>
   </goal>
   <goal name="VC div_qr.94.13" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.95" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_qr.96" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC div_qr.97" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.98" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.15" steps="165"/></proof>
  </goal>
  <goal name="VC div_qr.99" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_qr.100" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="2.51"/></proof>
  </goal>
  <goal name="VC div_qr.101" expl="postcondition" proved="true">
  <proof prover="9" timelimit="1"><result status="valid" time="0.15" steps="152"/></proof>
  </goal>
  <goal name="VC div_qr.102" expl="postcondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="131"/></proof>
  </goal>
  <goal name="VC div_qr.103" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_qr.104" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.105" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.106" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.106.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.106.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.106.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.106.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.106.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_qr.106.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.107" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.108" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC div_qr.109" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.109.0" expl="assertion" proved="true">
   <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.07" steps="144"/></proof>
   </goal>
   <goal name="VC div_qr.109.1" expl="assertion" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.07" steps="144"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.110" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.111" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.112" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC div_qr.113" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.113.0" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.1" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="115"/></proof>
   </goal>
   <goal name="VC div_qr.113.2" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.06" steps="115"/></proof>
   </goal>
   <goal name="VC div_qr.113.3" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.14" steps="169"/></proof>
   </goal>
   <goal name="VC div_qr.113.4" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.5" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC div_qr.113.6" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.08" steps="139"/></proof>
   </goal>
   <goal name="VC div_qr.113.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.113.8" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.113.9" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.89"/></proof>
   </goal>
   <goal name="VC div_qr.113.10" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.11" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.113.12" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.113.13" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.47"/></proof>
   </goal>
   <goal name="VC div_qr.113.14" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.04" steps="119"/></proof>
   </goal>
   <goal name="VC div_qr.113.15" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.113.16" expl="VC for div_qr" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="VC div_qr.113.16.0" expl="VC for div_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.11"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.113.17" expl="VC for div_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.09" steps="156"/></proof>
   </goal>
   <goal name="VC div_qr.113.18" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="143"/></proof>
   </goal>
   <goal name="VC div_qr.113.19" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.113.20" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.113.21" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.113.22" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.113.23" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.20" steps="166"/></proof>
   </goal>
   <goal name="VC div_qr.113.24" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.113.25" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.113.26" expl="VC for div_qr" proved="true">
   <proof prover="9" timelimit="1"><result status="valid" time="0.17" steps="164"/></proof>
   </goal>
   <goal name="VC div_qr.113.27" expl="VC for div_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.10" steps="131"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.114" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC div_qr.115" expl="postcondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC div_qr.115.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.116" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.117" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.118" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.118.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.118.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.118.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="VC div_qr.118.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.118.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_qr.118.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.119" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.120" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.121" expl="precondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.121.0" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.121.1" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.122" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.04" steps="121"/></proof>
  </goal>
  <goal name="VC div_qr.123" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.123.0" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.95"/></proof>
   </goal>
   <goal name="VC div_qr.123.1" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC div_qr.123.2" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="124"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.124" expl="assertion" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="144"/></proof>
  </goal>
  <goal name="VC div_qr.125" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.125.0" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.125.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.125.2" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.18" steps="172"/></proof>
   </goal>
   <goal name="VC div_qr.125.3" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.09" steps="148"/></proof>
   </goal>
   <goal name="VC div_qr.125.4" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.125.5" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.125.6" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC div_qr.125.7" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.125.8" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.15" steps="158"/></proof>
   </goal>
   <goal name="VC div_qr.125.9" expl="VC for div_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.94"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.125.10" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.125.11" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.05" steps="127"/></proof>
   </goal>
   <goal name="VC div_qr.125.12" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.21"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div_qr.125.13" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_qr.125.14" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.125.15" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.125.16" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.125.17" expl="VC for div_qr" proved="true">
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1"><result status="valid" time="0.13" steps="156"/></proof>
   </goal>
   <goal name="VC div_qr.125.18" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC div_qr.125.19" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="132"/></proof>
   </goal>
   <goal name="VC div_qr.125.20" expl="VC for div_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_qr.125.21" expl="VC for div_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.125.22" expl="VC for div_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.125.22.0" expl="VC for div_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.03"/></proof>
    </goal>
    <goal name="VC div_qr.125.22.1" expl="VC for div_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.11"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.125.23" expl="VC for div_qr" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="VC div_qr.125.23.0" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.18"/></proof>
    <proof prover="2" memlimit="2000"><result status="valid" time="0.15"/></proof>
    <proof prover="4" memlimit="2000"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.126" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="2.06"/></proof>
  </goal>
  <goal name="VC div_qr.127" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.127.0" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC div_qr.127.1" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="121"/></proof>
   </goal>
   <goal name="VC div_qr.127.2" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.16" steps="156"/></proof>
   </goal>
   <goal name="VC div_qr.127.3" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="146"/></proof>
   </goal>
   <goal name="VC div_qr.127.4" expl="VC for div_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC div_qr.127.5" expl="VC for div_qr" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="4.95"/></proof>
   <proof prover="3"><result status="valid" time="0.54"/></proof>
   </goal>
   <goal name="VC div_qr.127.6" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.12" steps="154"/></proof>
   </goal>
   <goal name="VC div_qr.127.7" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.56"/></proof>
   </goal>
   <goal name="VC div_qr.127.8" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="125"/></proof>
   </goal>
   <goal name="VC div_qr.127.9" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.42" steps="128"/></proof>
   </goal>
   <goal name="VC div_qr.127.10" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.97"/></proof>
   </goal>
   <goal name="VC div_qr.127.11" expl="VC for div_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC div_qr.127.12" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.11" steps="159"/></proof>
   </goal>
   <goal name="VC div_qr.127.13" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.96"/></proof>
   </goal>
   <goal name="VC div_qr.127.14" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.127.14.0" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_qr.127.14.1" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="1.40"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.127.15" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.08" steps="127"/></proof>
   </goal>
   <goal name="VC div_qr.127.16" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.09" steps="153"/></proof>
   </goal>
   <goal name="VC div_qr.127.17" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.76"/></proof>
   </goal>
   <goal name="VC div_qr.127.18" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="127"/></proof>
   </goal>
   <goal name="VC div_qr.127.19" expl="VC for div_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.127.19.0" expl="VC for div_qr" proved="true">
    <proof prover="2" memlimit="2000"><result status="valid" time="0.07"/></proof>
    <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
    <proof prover="9" memlimit="2000"><result status="valid" time="0.34" steps="130"/></proof>
    </goal>
    <goal name="VC div_qr.127.19.1" expl="VC for div_qr" proved="true">
    <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
    <proof prover="4" memlimit="2000"><result status="valid" time="0.02"/></proof>
    <proof prover="9" memlimit="2000"><result status="valid" time="0.33" steps="131"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.128" expl="integer overflow" proved="true">
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1"><result status="valid" time="0.10" steps="147"/></proof>
  </goal>
  <goal name="VC div_qr.129" expl="precondition" proved="true">
  <proof prover="9" memlimit="2000"><result status="valid" time="0.07" steps="145"/></proof>
  </goal>
  <goal name="VC div_qr.130" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.130.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.130.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.130.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.130.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.130.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="1.13"/></proof>
     </goal>
     <goal name="VC div_qr.130.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.41"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.131" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.131.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.131.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.131.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="VC div_qr.131.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.01"/></proof>
     </goal>
     <goal name="VC div_qr.131.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="1.02"/></proof>
     </goal>
     <goal name="VC div_qr.131.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.98"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.132" expl="precondition" proved="true">
  <proof prover="9" timelimit="20" memlimit="2000"><result status="valid" time="0.07" steps="179"/></proof>
  </goal>
  <goal name="VC div_qr.133" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.134" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.135" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC div_qr.135.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC div_qr.135.0.0" expl="precondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC div_qr.135.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.135.0.0.1" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC div_qr.135.0.0.2" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.78"/></proof>
     </goal>
     <goal name="VC div_qr.135.0.0.3" expl="VC for div_qr" proved="true">
     <proof prover="4"><result status="valid" time="0.78"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.136" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.137" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_qr.138" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC div_qr.139" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.139.0" expl="VC for div_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_qr.139.0.0" expl="VC for div_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_qr.139.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="0"><result status="valid" time="0.09"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.139.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.139.2" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.139.3" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.4" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC div_qr.139.5" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC div_qr.139.6" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.139.7" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="1.28"/></proof>
   </goal>
   <goal name="VC div_qr.139.8" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.139.9" expl="VC for div_qr" proved="true">
   <transf name="cut" proved="true" arg1="(p*n &gt;= 0)">
    <goal name="VC div_qr.139.9.0" expl="VC for div_qr" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.50"/></proof>
    </goal>
    <goal name="VC div_qr.139.9.1" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.139.10" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_qr.139.11" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.139.12" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC div_qr.139.13" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.139.14" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.139.15" expl="VC for div_qr" proved="true">
   <proof prover="9"><result status="valid" time="0.11" steps="135"/></proof>
   </goal>
   <goal name="VC div_qr.139.16" expl="VC for div_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.139.16.0" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.56"/></proof>
    </goal>
    <goal name="VC div_qr.139.16.1" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.52"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.139.17" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC div_qr.139.18" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.139.19" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC div_qr.139.20" expl="VC for div_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.139.20.0" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC div_qr.139.20.1" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.139.21" expl="VC for div_qr" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.46"/></proof>
   </goal>
   <goal name="VC div_qr.139.22" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC div_qr.139.23" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.139.24" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.139.25" expl="VC for div_qr" proved="true">
   <proof prover="4"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC div_qr.139.26" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="VC div_qr.139.27" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.140" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.140.0" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="135"/></proof>
   </goal>
   <goal name="VC div_qr.140.1" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.15" steps="159"/></proof>
   </goal>
   <goal name="VC div_qr.140.2" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.16" steps="137"/></proof>
   </goal>
   <goal name="VC div_qr.140.3" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.06" steps="137"/></proof>
   </goal>
   <goal name="VC div_qr.140.4" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.16" steps="139"/></proof>
   </goal>
   <goal name="VC div_qr.140.5" expl="VC for div_qr" proved="true">
   <proof prover="9" memlimit="2000"><result status="valid" time="0.10" steps="140"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.141" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_qr.142" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.142.0" expl="VC for div_qr" proved="true">
   <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.10"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.01"/></proof>
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.142.0.0" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.14"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_qr.142.0.1" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="0.05"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.142.1" expl="VC for div_qr" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC div_qr.142.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   <proof prover="9" timelimit="20" memlimit="2000" obsolete="true"><result status="timeout" time="19.99"/></proof>
   </goal>
   <goal name="VC div_qr.142.3" expl="VC for div_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.142.3.0" expl="VC for div_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC div_qr.142.3.1" expl="VC for div_qr" proved="true">
    <proof prover="3"><result status="valid" time="0.03"/></proof>
    <proof prover="9" memlimit="2000" obsolete="true"><result status="timeout" time="4.98"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.142.4" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC div_qr.142.5" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.53"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="1.43"/></proof>
   </goal>
   <goal name="VC div_qr.142.6" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.35"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="1.17"/></proof>
   </goal>
   <goal name="VC div_qr.142.7" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_qr.142.8" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="2.20"/></proof>
   </goal>
   <goal name="VC div_qr.142.9" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.16"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.08"/></proof>
   <proof prover="4" memlimit="2000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.142.10" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="timeout" time="4.96"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
   <proof prover="2" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC div_qr.142.11" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="timeout" time="4.95"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.20"/></proof>
   <proof prover="2" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC div_qr.142.12" expl="VC for div_qr" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC div_qr.142.13" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="2" memlimit="2000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC div_qr.142.14" expl="VC for div_qr" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC div_qr.142.14.0" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="1.43"/></proof>
    <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.11"/></proof>
    <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
    <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC div_qr.142.14.1" expl="VC for div_qr" proved="true">
    <proof prover="0"><result status="valid" time="1.44"/></proof>
    <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.08"/></proof>
    <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
    <proof prover="9" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.142.15" expl="VC for div_qr" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC div_qr.142.16" expl="VC for div_qr" proved="true">
   <proof prover="0"><result status="timeout" time="4.96"/></proof>
   <proof prover="1" memlimit="2000"><result status="valid" time="0.14"/></proof>
   <proof prover="2" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="9" memlimit="2000"><result status="timeout" time="5.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.143" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.144" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.145" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  <proof prover="9" timelimit="20" memlimit="2000" obsolete="true"><result status="timeout" time="19.98"/></proof>
  </goal>
  <goal name="VC div_qr.146" expl="precondition" proved="true">
  <proof prover="2" memlimit="2000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC div_qr.147" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_qr.148" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.148.0" expl="VC for div_qr" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC div_qr.148.0.0" expl="VC for div_qr" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC div_qr.148.0.0.0" expl="VC for div_qr" proved="true">
     <proof prover="0"><result status="valid" time="1.74"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC div_qr.148.1" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC div_qr.148.2" expl="VC for div_qr" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.149" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.149.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC div_qr.149.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.150" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC div_qr.151" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1" obsolete="true"><result status="unknown" time="2.09"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="9" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC div_qr.151.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="VC div_qr.151.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="9" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_qr.152" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="0.61"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC tdiv_qr" expl="VC for tdiv_qr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC tdiv_qr.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="98"/></proof>
  </goal>
  <goal name="VC tdiv_qr.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="84"/></proof>
  </goal>
  <goal name="VC tdiv_qr.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="VC tdiv_qr.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="86"/></proof>
  </goal>
  <goal name="VC tdiv_qr.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="VC tdiv_qr.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="VC tdiv_qr.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
  <goal name="VC tdiv_qr.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="9"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
  <goal name="VC tdiv_qr.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="95"/></proof>
  </goal>
  <goal name="VC tdiv_qr.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="95"/></proof>
  </goal>
  <goal name="VC tdiv_qr.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="9"><result status="valid" time="0.04" steps="95"/></proof>
  </goal>
  <goal name="VC tdiv_qr.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.16"/></proof>
  <proof prover="9"><result status="valid" time="0.06" steps="123"/></proof>
  </goal>
  <goal name="VC tdiv_qr.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="9"><result status="valid" time="0.05" steps="115"/></proof>
  </goal>
  <goal name="VC tdiv_qr.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="VC tdiv_qr.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="105"/></proof>
  </goal>
  <goal name="VC tdiv_qr.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="107"/></proof>
  </goal>
  <goal name="VC tdiv_qr.16" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.03" steps="109"/></proof>
  </goal>
  <goal name="VC tdiv_qr.17" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="109"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
