<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="1.30" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Eprover" version="1.9.1-001" timelimit="10" steplimit="0" memlimit="2000"/>
<file name="../lineardecision.mlw">
<theory name="LinearEquationsCoeffs" proved="true" sum="bb2566ecd3328b81f619dab554651c42">
 <goal name="VC czero" expl="VC for czero" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC cone" expl="VC for cone" proved="true">
 <transf name="split_goal_wp" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="LinearEquationsDecision" proved="true" sum="e1e3f0c70c7204c4240fea937da06824">
 <goal name="VC valid_expr" expl="VC for valid_expr" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC expr_bound" expl="VC for expr_bound" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC valid_eq" expl="VC for valid_eq" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC eq_bound" expl="VC for eq_bound" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC valid_ctx" expl="VC for valid_ctx" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC ctx_bound" expl="VC for ctx_bound" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC expr_bound_w" expl="VC for expr_bound_w" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC expr_bound_w.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC expr_bound_w.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC expr_bound_w.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC expr_bound_w.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC expr_bound_w.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC expr_bound_w.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC expr_bound_w.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eq_bound_w" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
 </goal>
 <goal name="VC ctx_bound_w" expl="VC for ctx_bound_w" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC ctx_bound_w.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC ctx_bound_w.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC ctx_bound_w.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC ctx_bound_w.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_r" expl="VC for apply_r" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC apply_r.0" expl="array creation size" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC apply_r.1" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC apply_r.2" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC apply_r.3" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC apply_r.4" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC apply_r.5" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="VC apply_r.6" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC apply_r.7" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC apply_r.8" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_l" expl="VC for apply_l" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC apply_l.0" expl="array creation size" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC apply_l.1" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC apply_l.2" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC apply_l.3" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC apply_l.4" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC apply_l.5" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="VC apply_l.6" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC apply_l.7" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC apply_l.8" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sprod" expl="VC for sprod" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sprod.0" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC sprod.1" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC sprod.2" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="VC sprod.3" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC m_append" expl="VC for m_append" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC m_append.0" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC m_append.1" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC m_append.2" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC m_append.3" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC m_append.4" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC m_append.5" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC m_append.6" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC m_append.7" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="VC m_append.8" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC m_append.9" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC m_append.10" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC m_append.11" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC m_append.12" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC m_append.13" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="VC m_append.14" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC m_append.15" expl="out of loop bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC m_append.16" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC m_append.17" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC m_append.18" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC m_append.19" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC m_append.20" expl="out of loop bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC v_append" expl="VC for v_append" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC v_append.0" expl="array creation size" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="VC v_append.1" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC v_append.2" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC v_append.3" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC v_append.4" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC v_append.5" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="VC v_append.6" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC v_append.7" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC v_append.8" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC v_append.9" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC v_append.10" expl="out of loop bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC infix ==" expl="VC for infix ==" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC infix ==.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC infix ==.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC infix ==.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC infix ==.3" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC infix ==.4" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC infix ==.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="VC infix ==.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC infix ==.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC max_var" expl="VC for max_var" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="265"/></proof>
 </goal>
 <goal name="VC max_var_e" expl="VC for max_var_e" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC max_var_ctx" expl="VC for max_var_ctx" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="146"/></proof>
 </goal>
 <goal name="VC opp_expr" expl="VC for opp_expr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC opp_expr.0" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC opp_expr.0.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
   <goal name="VC opp_expr.0.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
   <goal name="VC opp_expr.0.2" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="4.56"/></proof>
   </goal>
   <goal name="VC opp_expr.0.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="7"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC opp_expr.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC opp_expr.2" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC opp_expr.3" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC opp_expr.4" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC opp_expr.4.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
   <goal name="VC opp_expr.4.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC opp_expr.4.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC opp_expr.4.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="7"/></proof>
   </goal>
   <goal name="VC opp_expr.4.4" expl="VC for opp_expr" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC opp_expr.5" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC opp_expr.5.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="VC opp_expr.5.1" expl="postcondition" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="VC opp_expr.5.1.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC opp_expr.5.2" expl="postcondition" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="VC opp_expr.5.2.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC opp_expr.5.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="8"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC opp_expr.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="95"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC norm_eq_aux" expl="VC for norm_eq_aux" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC norm_eq_aux.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.2" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="7"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.7" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.8" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="33"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.11" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC norm_eq_aux.12" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC norm_eq" expl="VC for norm_eq" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC norm_eq.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="VC norm_eq.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC norm_eq.2" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC norm_eq.2.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="72"/></proof>
   </goal>
   <goal name="VC norm_eq.2.1" expl="VC for norm_eq" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="23"/></proof>
   </goal>
   <goal name="VC norm_eq.2.2" expl="VC for norm_eq" proved="true">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC norm_eq.2.3" expl="VC for norm_eq" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC norm_eq.2.4" expl="VC for norm_eq" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC norm_eq.2.5" expl="VC for norm_eq" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC norm_eq.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC norm_eq.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC norm_eq.5" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp_ctx_impl" expl="VC for interp_ctx_impl" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC interp_ctx_impl.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC interp_ctx_impl.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC interp_ctx_impl.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp_ctx_valid" expl="VC for interp_ctx_valid" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC interp_ctx_valid.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC interp_ctx_valid.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp_ctx_wr" expl="VC for interp_ctx_wr" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="108"/></proof>
 </goal>
 <goal name="VC interp_ctx_wl" expl="VC for interp_ctx_wl" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="87"/></proof>
 </goal>
 <goal name="VC mul_expr" expl="VC for mul_expr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mul_expr.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="VC mul_expr.1" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_expr.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC mul_expr.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="VC mul_expr.4" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC mul_expr.5" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mul_expr.6" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="VC mul_expr.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="15"/></proof>
  </goal>
  <goal name="VC mul_expr.8" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mul_expr.9" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_expr" expl="VC for add_expr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_expr.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="VC add_expr.1" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC add_expr.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="98"/></proof>
  </goal>
  <goal name="VC add_expr.4" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC add_expr.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC add_expr.7" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC add_expr.10" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC add_expr.13" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.14" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.17" steps="99"/></proof>
  </goal>
  <goal name="VC add_expr.16" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC add_expr.18" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="72"/></proof>
  </goal>
  <goal name="VC add_expr.19" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="VC add_expr.21" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC add_expr.22" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC add_expr.25" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.27" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC add_expr.28" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.29" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.30" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="VC add_expr.31" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.32" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="VC add_expr.33" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC add_expr.34" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.35" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.36" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.37" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.38" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.39" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.40" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC add_expr.41" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.42" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.43" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.44" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.45" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.46" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="11"/></proof>
  </goal>
  <goal name="VC add_expr.47" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.48" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_expr.49" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_expr.50" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_expr.51" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul_eq" expl="VC for mul_eq" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
 </goal>
 <goal name="VC add_eq" expl="VC for add_eq" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_eq.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_eq.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_eq.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_eq.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_eq.4" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_eq.5" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC zero_expr" expl="VC for zero_expr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC zero_expr.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC zero_expr.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC zero_expr.2" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC zero_expr.2.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="VC zero_expr.2.1" expl="postcondition" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="VC zero_expr.2.1.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.10"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC zero_expr.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC zero_expr.2.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC sub_expr" expl="VC for sub_expr" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC sub_expr.0" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC sub_expr.0.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC sub_expr.0.1" expl="VC for sub_expr" proved="true">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC sub_expr.0.2" expl="VC for sub_expr" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="VC sub_expr.0.3" expl="VC for sub_expr" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="VC sub_expr.0.4" expl="VC for sub_expr" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="9"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sub_expr.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC sub_expr.2" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC sub_expr.3" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC same_eq" expl="VC for same_eq" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC same_eq.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC same_eq.1" expl="exceptional postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
  </transf>
  </goal>
  <goal name="VC same_eq.2" expl="exceptional postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC norm_context" expl="VC for norm_context" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC norm_context.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC norm_context.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC norm_context.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  <proof prover="3"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="VC norm_context.3" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC norm_context.4" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC check_combination" expl="VC for check_combination" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC check_combination.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC check_combination.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC check_combination.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="VC check_combination.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC check_combination.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="VC check_combination.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="VC check_combination.6" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC check_combination.7" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC check_combination.7.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="21"/></proof>
   </goal>
   <goal name="VC check_combination.7.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="VC check_combination.7.2" expl="VC for check_combination" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="111"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC check_combination.8" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="VC check_combination.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="VC check_combination.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="VC check_combination.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="VC check_combination.12" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC check_combination.13" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC check_combination.14" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC check_combination.15" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC check_combination.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC check_combination.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC check_combination.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC check_combination.19" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC check_combination.20" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC check_combination.21" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC check_combination.22" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC transpose" expl="VC for transpose" proved="true">
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="VC swap_rows" expl="VC for swap_rows" proved="true">
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="VC mul_row" expl="VC for mul_row" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="15"/></proof>
 </goal>
 <goal name="VC addmul_row" expl="VC for addmul_row" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
 </goal>
 <goal name="VC gauss_jordan" expl="VC for gauss_jordan" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC gauss_jordan.0" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.02" steps="15"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC gauss_jordan.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC gauss_jordan.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC gauss_jordan.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC gauss_jordan.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC gauss_jordan.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC gauss_jordan.6" expl="array creation size" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="7"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.7" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="9"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC gauss_jordan.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.11" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC gauss_jordan.12" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="18"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC gauss_jordan.13" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC gauss_jordan.14" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="25"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC gauss_jordan.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC gauss_jordan.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC gauss_jordan.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="VC gauss_jordan.19" expl="index in matrix bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="VC gauss_jordan.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="VC gauss_jordan.21" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gauss_jordan.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC gauss_jordan.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC gauss_jordan.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="89"/></proof>
  </goal>
  <goal name="VC gauss_jordan.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="VC gauss_jordan.26" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="VC gauss_jordan.27" expl="index in matrix bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="VC gauss_jordan.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="VC gauss_jordan.29" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gauss_jordan.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="VC gauss_jordan.31" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC gauss_jordan.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="90"/></proof>
  </goal>
  <goal name="VC gauss_jordan.33" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="35"/></proof>
  </goal>
  <goal name="VC gauss_jordan.34" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="VC gauss_jordan.35" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gauss_jordan.36" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gauss_jordan.37" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="19"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.38" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="24"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.39" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC gauss_jordan.41" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.42" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.43" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gauss_jordan.44" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3" timelimit="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC gauss_jordan.45" expl="index in matrix bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="23"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.46" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="22"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gauss_jordan.47" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC gauss_jordan.48" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC gauss_jordan.49" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="18"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gauss_jordan.50" expl="out of loop bounds" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="8"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC linear_decision" expl="VC for linear_decision" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC linear_decision.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="17"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC linear_decision.3" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.4" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC linear_decision.5" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.6" expl="index in matrix bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="VC linear_decision.7" expl="index in matrix bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="82"/></proof>
  </goal>
  <goal name="VC linear_decision.8" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.9" expl="index in matrix bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="79"/></proof>
  </goal>
  <goal name="VC linear_decision.10" expl="index in matrix bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="79"/></proof>
  </goal>
  <goal name="VC linear_decision.11" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.12" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC linear_decision.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC linear_decision.15" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC linear_decision.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC linear_decision.18" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.19" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.20" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.21" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.22" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.23" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="23"/></proof>
  </goal>
  <goal name="VC linear_decision.24" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="23"/></proof>
  </goal>
  <goal name="VC linear_decision.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC linear_decision.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="51"/></proof>
  </goal>
  <goal name="VC linear_decision.27" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC linear_decision.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="49"/></proof>
  </goal>
  <goal name="VC linear_decision.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="VC linear_decision.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="VC linear_decision.31" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.32" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.33" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.34" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.35" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC linear_decision.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="VC linear_decision.38" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC linear_decision.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="VC linear_decision.40" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="VC linear_decision.41" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="VC linear_decision.42" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.43" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.44" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.45" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC linear_decision.46" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC linear_decision.47" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.48" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC linear_decision.49" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC linear_decision.50" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.51" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="71"/></proof>
  </goal>
  <goal name="VC linear_decision.52" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="71"/></proof>
  </goal>
  <goal name="VC linear_decision.53" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.54" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC linear_decision.55" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="VC linear_decision.56" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC linear_decision.57" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="VC linear_decision.58" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.59" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.60" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.61" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.62" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC linear_decision.63" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.64" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.65" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.66" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.67" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="25"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.68" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.69" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC linear_decision.70" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC linear_decision.71" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.72" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.73" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.74" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.75" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC linear_decision.76" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.77" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC linear_decision.78" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="RationalCoeffs" proved="true" sum="fe1aa57a33f272e30e4522705a46736e">
 <goal name="VC rzero" expl="VC for rzero" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC rone" expl="VC for rone" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC prod_compat_eq" expl="VC for prod_compat_eq" proved="true">
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="VC cross_d" expl="VC for cross_d" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC cross_d.0" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC cross_d.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.56"/></proof>
   </goal>
   <goal name="VC cross_d.0.1" expl="VC for cross_d" proved="true">
   <transf name="apply" proved="true" arg1="prod_compat_eq" arg2="with" arg3="d">
    <goal name="VC cross_d.0.1.0" proved="true">
    <proof prover="2"><result status="valid" time="0.01"/></proof>
    </goal>
    <goal name="VC cross_d.0.1.1" proved="true">
    <proof prover="2"><result status="valid" time="0.44"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cross_d.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC cross_ind" expl="VC for cross_ind" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC cross_ind.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC cross_ind.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC cross_ind.2" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC cross_ind.2.0" expl="VC for cross_ind" proved="true">
   <proof prover="3"><result status="valid" time="3.51"/></proof>
   </goal>
   <goal name="VC cross_ind.2.1" expl="VC for cross_ind" proved="true">
   <proof prover="0"><result status="valid" time="0.00" steps="8"/></proof>
   </goal>
   <goal name="VC cross_ind.2.2" expl="VC for cross_ind" proved="true">
   <proof prover="3"><result status="valid" time="3.61"/></proof>
   </goal>
   <goal name="VC cross_ind.2.3" expl="VC for cross_ind" proved="true">
   <proof prover="2"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cross_ind.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC cross_ind.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cross" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="11"/></proof>
 </goal>
 <goal name="VC gcd" expl="VC for gcd" proved="true">
 <proof prover="1"><result status="valid" time="0.30"/></proof>
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC gcd.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gcd.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC gcd.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.6" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC gcd.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.8" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC gcd.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC simp" expl="VC for simp" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC simp.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC simp.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC simp.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC simp.3" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC simp.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC simp.5" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC simp.5.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC simp.5.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC simp.5.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC radd" expl="VC for radd" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC radd.0" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC radd.1" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC radd.1.0" expl="assertion" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="VC radd.1.0.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.19"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC radd.1.1" expl="VC for radd" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="VC radd.1.1.0" expl="VC for radd" proved="true">
    <transf name="replace" proved="true" arg1="(from_int a * from_int b)" arg2="(from_int b * from_int a)">
     <goal name="VC radd.1.1.0.0" expl="VC for radd" proved="true">
     <transf name="cut" proved="true" arg1="(inv1 (from_int b) * from_int b = one)">
      <goal name="VC radd.1.1.0.0.0" expl="VC for radd" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
      </goal>
      <goal name="VC radd.1.1.0.0.1" proved="true">
      <proof prover="2"><result status="valid" time="0.03"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC radd.1.1.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.01"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC radd.1.2" expl="VC for radd" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC radd.1.3" expl="VC for radd" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="VC radd.1.3.0" expl="VC for radd" proved="true">
    <proof prover="3"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC radd.1.4" expl="VC for radd" proved="true">
   <transf name="apply" proved="true" arg1="prod_compat_eq" arg2="with" arg3="d">
    <goal name="VC radd.1.4.0" proved="true">
    <proof prover="2"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC radd.1.4.1" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="23"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC radd.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC rmul" expl="VC for rmul" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC rmul.0" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC rmul.1" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC rmul.1.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="VC rmul.1.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC rmul.1.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.70" steps="108"/></proof>
   </goal>
   <goal name="VC rmul.1.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="VC rmul.1.4" expl="VC for rmul" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rmul.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ropp" expl="VC for ropp" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="VC ropp.0" expl="VC for ropp" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC req" expl="VC for req" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC req.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC req.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC req.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC rinv" expl="VC for rinv" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC rinv.0" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC rinv.1" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC rinv.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rinv.2" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC rinv.2.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LinearDecisionRational" proved="true" sum="3fdfbafa6a3d689800457f386065e60f">
 <goal name="C.A.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Unit_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Unit_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Inv_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Inv_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.MulAssoc.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_r" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.MulComm.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Unitary" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.NonTrivialRing" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.ZeroLessOne" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.CompatOrderAdd" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.CompatOrderMult" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC czero" expl="VC for czero" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC cone" expl="VC for cone" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.zero_def" proved="true">
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="C.one_def" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="one_def.0" proved="true">
  <transf name="replace" proved="true" arg1="one" arg2="1.0">
   <goal name="one_def.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="one_def.0.1" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="C.VC add" expl="VC for add" proved="true">
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="C.VC mul" expl="VC for mul" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC opp" expl="VC for opp" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC eq" expl="VC for eq" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC inv" expl="VC for inv" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
<theory name="LinearDecisionInt" proved="true" sum="be6c54c332ada184f9cc22ecde94ac8f">
 <goal name="VC eq" expl="VC for eq" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC inv" expl="VC for inv" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Unit_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Unit_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Inv_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Inv_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.MulAssoc.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_l" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_r" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.MulComm.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Unitary" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.NonTrivialRing" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.ZeroLessOne" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.CompatOrderAdd" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.CompatOrderMult" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC czero" expl="VC for czero" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC cone" expl="VC for cone" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.zero_def" proved="true">
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="C.one_def" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC add" expl="VC for add" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC mul" expl="VC for mul" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC opp" expl="VC for opp" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC eq" expl="VC for eq" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC inv" expl="VC for inv" proved="true">
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="VC m" expl="VC for m" proved="true">
 <proof prover="2"><result status="valid" time="0.08"/></proof>
 </goal>
 <goal name="VC m_y" expl="VC for m_y" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC m_expr" expl="VC for m_expr" proved="true">
 <proof prover="0"><result status="valid" time="0.22" steps="765"/></proof>
 </goal>
 <goal name="VC m_eq" expl="VC for m_eq" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="428"/></proof>
 </goal>
 <goal name="VC m_ctx" expl="VC for m_ctx" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="319"/></proof>
 </goal>
 <goal name="VC int_decision" expl="VC for int_decision" proved="true">
 <proof prover="2"><result status="valid" time="0.06"/></proof>
 </goal>
</theory>
<theory name="Test" proved="true" sum="d88543cdd7247628457967e9971d0315">
 <goal name="g" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="g.0" proved="true">
  <transf name="reflection_f" proved="true" arg1="linear_decision">
   <goal name="g.0.0" expl="reification check" proved="true">
   <transf name="revert" proved="true" arg1="HR">
    <goal name="g.0.0.0" expl="reification check" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="g.0.0.0.0" expl="reification check" proved="true">
     <proof prover="3" timelimit="5"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="g.0.1" proved="true">
   <transf name="compute_in_goal" proved="true" >
   </transf>
   </goal>
   <goal name="g.0.2" proved="true">
   <transf name="compute_in_goal" proved="true" >
   </transf>
   </goal>
   <goal name="g.0.3" proved="true">
   <transf name="compute_in_goal" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="TestInt" proved="true" sum="ead5e26e5f6dc61c9c33ba6a7fd7b743">
 <goal name="g" proved="true">
 <transf name="reflection_f" proved="true" arg1="int_decision">
  <goal name="g.0" expl="reification check" proved="true">
  <transf name="revert" proved="true" arg1="HR">
   <goal name="g.0.0" expl="reification check" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="g.0.0.0" expl="reification check" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="g.1" proved="true">
  <transf name="compute_in_goal" proved="true" >
  </transf>
  </goal>
  <goal name="g.2" proved="true">
  <transf name="compute_in_goal" proved="true" >
  </transf>
  </goal>
  <goal name="g.3" proved="true">
  <transf name="compute_in_goal" proved="true" >
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="MP64Coeffs" proved="true" sum="ad5a7866c98ecf16ea2efd2dfc33d441">
 <goal name="VC mzero" expl="VC for mzero" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC mone" expl="VC for mone" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="qinterp_def" proved="true">
 <transf name="compute_in_goal" proved="true" >
 </transf>
 </goal>
 <goal name="VC same_exp" expl="VC for same_exp" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC same_exp.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC same_exp.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC same_exp.2" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC same_exp.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC same_exp.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC same_exp.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="215"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_exp" expl="VC for add_exp" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC add_exp.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="78"/></proof>
  </goal>
  <goal name="VC add_exp.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="81"/></proof>
  </goal>
  <goal name="VC add_exp.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="VC add_exp.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_exp.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="VC add_exp.5" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_exp.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="VC add_exp.7" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.8" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_exp.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="81"/></proof>
  </goal>
  <goal name="VC add_exp.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="117"/></proof>
  </goal>
  <goal name="VC add_exp.11" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="VC add_exp.13" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_exp.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="VC add_exp.15" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_exp.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="VC add_exp.17" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.18" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_exp.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="82"/></proof>
  </goal>
  <goal name="VC add_exp.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="118"/></proof>
  </goal>
  <goal name="VC add_exp.21" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC add_exp.22" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_exp.23" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="87"/></proof>
  </goal>
  <goal name="VC add_exp.24" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_exp.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
  <goal name="VC add_exp.26" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.27" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_exp.28" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="82"/></proof>
  </goal>
  <goal name="VC add_exp.29" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="78"/></proof>
  </goal>
  <goal name="VC add_exp.30" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_exp.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="87"/></proof>
  </goal>
  <goal name="VC add_exp.32" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_exp.33" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="VC add_exp.34" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.35" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.36" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_exp.37" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_exp.38" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC add_exp.39" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_exp.40" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="VC add_exp.41" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC add_exp.42" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC add_exp.43" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.44" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC add_exp.45" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="82"/></proof>
  </goal>
  <goal name="VC add_exp.46" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC add_exp.47" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="VC add_exp.48" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.49" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC add_exp.50" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="VC add_exp.51" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.52" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC add_exp.53" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="77"/></proof>
  </goal>
  <goal name="VC add_exp.54" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC opp_exp" expl="VC for opp_exp" proved="true">
 <proof prover="0"><result status="valid" time="0.17" steps="371"/></proof>
 </goal>
 <goal name="VC madd" expl="VC for madd" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC madd.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.60" steps="242"/></proof>
  </goal>
  <goal name="VC madd.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC madd.2" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC madd.2.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC madd.2.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC madd.2.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC madd.2.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="83"/></proof>
   </goal>
   <goal name="VC madd.2.4" expl="VC for madd" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="82"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC madd.3" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC madd.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC madd.4" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC madd.5" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mmul" expl="VC for mmul" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mmul.0" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC mmul.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC mmul.0.1" expl="VC for mmul" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="79"/></proof>
   </goal>
   <goal name="VC mmul.0.2" expl="VC for mmul" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC mmul.0.3" expl="VC for mmul" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC mmul.0.4" expl="VC for mmul" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="77"/></proof>
   </goal>
   <goal name="VC mmul.0.5" expl="VC for mmul" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="78"/></proof>
   </goal>
   <goal name="VC mmul.0.6" expl="VC for mmul" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mmul.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC mmul.2" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC mmul.3" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mopp" expl="VC for mopp" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="VC mopp.0" expl="VC for mopp" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="79"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC meq" expl="VC for meq" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC meq.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.19" steps="337"/></proof>
  </goal>
  <goal name="VC meq.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.68" steps="815"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC minv" expl="VC for minv" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC minv.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC minv.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC minv.2" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LinearDecisionRationalMP" proved="true" sum="d8f8528f023f74d01ed8225cd391fc28">
 <goal name="C.A.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Unit_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Unit_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Inv_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Inv_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.MulAssoc.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.MulComm.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Unitary" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.NonTrivialRing" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.ZeroLessOne" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.CompatOrderAdd" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.CompatOrderMult" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC czero" expl="VC for czero" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC cone" expl="VC for cone" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.zero_def" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.one_def" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="98"/></proof>
 </goal>
 <goal name="C.VC add" expl="VC for add" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC mul" expl="VC for mul" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC opp" expl="VC for opp" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC eq" expl="VC for eq" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC inv" expl="VC for inv" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="LinearDecisionIntMP" proved="true" sum="9518fd0f4d2feaaf9a7830ede9ec9f74">
 <goal name="VC mpzero" expl="VC for mpzero" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC mpone" expl="VC for mpone" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC mpadd" expl="VC for mpadd" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC mpmul" expl="VC for mpmul" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC mpopp" expl="VC for mpopp" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC mpeq" expl="VC for mpeq" proved="true">
 <proof prover="2"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="VC mpinv" expl="VC for mpinv" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.Unit_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Unit_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Inv_def_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Inv_def_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.MulAssoc.Assoc" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_l" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Mul_distr_r" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.MulComm.Comm" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.Unitary" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.NonTrivialRing" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.A.ZeroLessOne" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.CompatOrderAdd" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.A.CompatOrderMult" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.VC czero" expl="VC for czero" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC cone" expl="VC for cone" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.zero_def" proved="true">
 <transf name="compute_in_goal" proved="true" >
 </transf>
 </goal>
 <goal name="C.one_def" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="80"/></proof>
 </goal>
 <goal name="C.VC add" expl="VC for add" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC mul" expl="VC for mul" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC opp" expl="VC for opp" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC eq" expl="VC for eq" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="C.VC inv" expl="VC for inv" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC m" expl="VC for m" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC m.0" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC m.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC m.0.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="1.40"/></proof>
   </goal>
   <goal name="VC m.0.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.20" steps="149"/></proof>
   </goal>
   <goal name="VC m.0.3" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC m.0.4" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="102"/></proof>
   </goal>
   <goal name="VC m.0.5" expl="VC for m" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="87"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC m.1" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC m.1.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="88"/></proof>
   </goal>
   <goal name="VC m.1.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="3.82"/></proof>
   </goal>
   <goal name="VC m.1.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.22" steps="175"/></proof>
   </goal>
   <goal name="VC m.1.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="181"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC m_y" expl="VC for m_y" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC m_expr" expl="VC for m_expr" proved="true">
 <proof prover="0" timelimit="10" memlimit="2000"><result status="valid" time="0.94" steps="1699"/></proof>
 </goal>
 <goal name="VC m_eq" expl="VC for m_eq" proved="true">
 <proof prover="1"><result status="valid" time="0.16"/></proof>
 </goal>
 <goal name="VC m_ctx" expl="VC for m_ctx" proved="true">
 <proof prover="0"><result status="valid" time="0.35" steps="705"/></proof>
 </goal>
 <goal name="VC mp_decision" expl="VC for mp_decision" proved="true">
 <proof prover="2"><result status="valid" time="0.10"/></proof>
 </goal>
</theory>
<theory name="TestMP" sum="75a775736591ce7f9e8f3f5a32b21dd3">
 <goal name="g">
 </goal>
</theory>
</file>
</why3session>
