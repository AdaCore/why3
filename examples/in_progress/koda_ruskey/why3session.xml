<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.01" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="4" name="Z3" version="4.4.1" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Coq" version="8.4pl6" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../koda_ruskey.mlw" expanded="true">
<theory name="KodaRuskey_Spec" sum="1c69f4c0d66d96419306b846f0fb17b4">
 <goal name="VC count_forest" expl="VC for count_forest">
 </goal>
</theory>
<theory name="Lemmas" sum="648776d7b50fd0728e68b81cd236a1ef">
 <goal name="mem_app">
 <transf name="induction_ty_lex">
  <goal name="mem_app.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="mem_app.1.1" expl="1.">
   <proof prover="1" steplimit="0"><result status="valid" time="0.00" steps="7"/></proof>
   </goal>
   <goal name="mem_app.1.2" expl="2.">
   <proof prover="1" steplimit="0"><result status="valid" time="0.05" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="size_stack_nonneg">
 <transf name="induction_ty_lex">
  <goal name="size_stack_nonneg.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="size_stack_nonneg.1.1" expl="1.">
   <proof prover="1" steplimit="0"><result status="valid" time="0.00" steps="4"/></proof>
   </goal>
   <goal name="size_stack_nonneg.1.2" expl="2.">
   <proof prover="1" steplimit="0"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="white_forest_equiv">
 <transf name="induction_ty_lex">
  <goal name="white_forest_equiv.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.02" steps="107"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_forest_frame">
 <transf name="induction_ty_lex">
  <goal name="any_forest_frame.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="any_forest_frame.1.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
   <goal name="any_forest_frame.1.2" expl="2.">
   <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
   <goal name="any_forest_frame.1.3" expl="3.">
   <proof prover="1"><result status="valid" time="0.04" steps="172"/></proof>
   </goal>
   <goal name="any_forest_frame.1.4" expl="4.">
   <proof prover="1"><result status="valid" time="0.08" steps="75"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="any_stack_frame">
 <transf name="induction_ty_lex">
  <goal name="any_stack_frame.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="any_stack_frame.1.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
   </goal>
   <goal name="any_stack_frame.1.2" expl="2.">
   <transf name="introduce_premises">
    <goal name="any_stack_frame.1.2.1" expl="1.">
    <transf name="compute_in_goal">
     <goal name="any_stack_frame.1.2.1.1" expl="1.">
     <transf name="split_goal_right">
      <goal name="any_stack_frame.1.2.1.1.1" expl="1.">
      <proof prover="1" timelimit="36" steplimit="0"><result status="valid" time="0.02" steps="106"/></proof>
      </goal>
      <goal name="any_stack_frame.1.2.1.1.2" expl="2.">
      <proof prover="2" timelimit="36" steplimit="0"><result status="valid" time="0.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame">
 <transf name="induction_ty_lex">
  <goal name="inverse_frame.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.07" steps="268"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame2">
 <transf name="induction_ty_lex">
  <goal name="inverse_frame2.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.11" steps="333"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC inverse_any" expl="VC for inverse_any">
 <transf name="induction_ty_lex">
  <goal name="VC inverse_any.1" expl="1. VC for inverse_any">
  <proof prover="1"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_final">
 <transf name="compute_in_goal">
  <goal name="inverse_final.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.16" steps="122"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_white">
 <transf name="compute_in_goal">
  <goal name="inverse_white.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.40" steps="268"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC white_final_exclusive" expl="VC for white_final_exclusive">
 <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
 </goal>
 <goal name="final_unique">
 <transf name="induction_ty_lex">
  <goal name="final_unique.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="final_unique.1.1" expl="1.">
   <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.00" steps="9"/></proof>
   </goal>
   <goal name="final_unique.1.2" expl="2.">
   <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.48" steps="740"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC inverse_inverse" expl="VC for inverse_inverse">
 <proof prover="1"><result status="valid" time="0.23" steps="469"/></proof>
 </goal>
 <goal name="sub_not_nil">
 <transf name="induction_pr">
  <goal name="sub_not_nil.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="sub_not_nil.2" expl="2.">
  <proof prover="0" timelimit="6" steplimit="0"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="sub_not_nil.3" expl="3.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_empty">
 <transf name="induction_pr">
  <goal name="sub_empty.1" expl="1.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="sub_empty.2" expl="2.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="sub_empty.3" expl="3.">
  <transf name="induction_ty_lex">
   <goal name="sub_empty.3.1" expl="1.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.19" steps="443"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_mem">
 <transf name="induction_pr">
  <goal name="sub_mem.1" expl="1.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="sub_mem.2" expl="2.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="sub_mem.3" expl="3.">
  <transf name="simplify_trivial_quantification">
   <goal name="sub_mem.3.1" expl="1.">
   <proof prover="0" steplimit="0"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken1">
 <transf name="induction_pr">
  <goal name="sub_weaken1.1" expl="1.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_weaken1.2" expl="2.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="sub_weaken1.3" expl="3.">
  <transf name="induction_ty_lex">
   <goal name="sub_weaken1.3.1" expl="1.">
   <proof prover="1" steplimit="0"><result status="valid" time="1.00" steps="1000"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken2">
 <transf name="induction_pr">
  <goal name="sub_weaken2.1" expl="1.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="sub_weaken2.2" expl="2.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.01" steps="66"/></proof>
  </goal>
  <goal name="sub_weaken2.3" expl="3.">
  <transf name="induction_ty_lex">
   <goal name="sub_weaken2.3.1" expl="1.">
   <transf name="split_goal_right">
    <goal name="sub_weaken2.3.1.1" expl="1.">
    <proof prover="5"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="sub_weaken2.3.1.2" expl="2.">
    <proof prover="0" steplimit="0"><result status="valid" time="0.49"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_st">
 <transf name="induction_pr">
  <goal name="not_mem_st.1" expl="1.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="not_mem_st.2" expl="2.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="not_mem_st.3" expl="3.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.01" steps="68"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_frame">
 <transf name="induction_pr">
  <goal name="sub_frame.1" expl="1.">
  <proof prover="1" steplimit="0"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="sub_frame.2" expl="2.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_frame.3" expl="3.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep">
 <transf name="induction_pr">
  <goal name="sub_no_rep.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="sub_no_rep.2" expl="2.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_no_rep.3" expl="3.">
  <proof prover="0" steplimit="0"><result status="valid" time="0.13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep2">
 <transf name="induction_pr">
  <goal name="sub_no_rep2.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="sub_no_rep2.1.1" expl="1.">
   <proof prover="0" steplimit="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.2" expl="2.">
  <transf name="split_goal_right">
   <goal name="sub_no_rep2.2.1" expl="1.">
   <proof prover="0" steplimit="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.3" expl="3.">
  <transf name="split_goal_right">
   <goal name="sub_no_rep2.3.1" expl="1.">
   <proof prover="0" steplimit="0"><result status="valid" time="0.73"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="white_valid">
 <transf name="induction_ty_lex">
  <goal name="white_valid.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="white_valid.1.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.00" steps="7"/></proof>
   </goal>
   <goal name="white_valid.1.2" expl="2.">
   <proof prover="1"><result status="valid" time="0.01" steps="52"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="final_valid">
 <transf name="induction_ty_lex">
  <goal name="final_valid.1" expl="1.">
  <transf name="split_goal_right">
   <goal name="final_valid.1.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
   <goal name="final_valid.1.2" expl="2.">
   <proof prover="1"><result status="valid" time="0.01" steps="59"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_frame">
 <transf name="induction_ty_lex">
  <goal name="valid_coloring_frame.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.04" steps="246"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_set">
 <transf name="induction_ty_lex">
  <goal name="valid_coloring_set.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="head_and_tail">
 <transf name="induction_ty_lex">
  <goal name="head_and_tail.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_valid_coloring_f1">
 <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.02" steps="60"/></proof>
 </goal>
 <goal name="sub_valid_coloring">
 <transf name="induction_pr">
  <goal name="sub_valid_coloring.1" expl="1.">
  <transf name="introduce_premises">
   <goal name="sub_valid_coloring.1.1" expl="1.">
   <transf name="compute_in_goal">
    <goal name="sub_valid_coloring.1.1.1" expl="1.">
    <transf name="split_goal_right">
     <goal name="sub_valid_coloring.1.1.1.1" expl="1.">
     <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.03" steps="74"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.1.1.2" expl="2.">
     <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.01" steps="17"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.1.1.3" expl="3.">
     <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.03" steps="92"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.2" expl="2.">
  <transf name="introduce_premises">
   <goal name="sub_valid_coloring.2.1" expl="1.">
   <transf name="compute_in_goal">
    <goal name="sub_valid_coloring.2.1.1" expl="1.">
    <proof prover="0" timelimit="6" steplimit="0"><result status="valid" time="1.35"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.3" expl="3.">
  <transf name="introduce_premises">
   <goal name="sub_valid_coloring.3.1" expl="1.">
   <transf name="simplify_trivial_quantification">
    <goal name="sub_valid_coloring.3.1.1" expl="1.">
    <transf name="compute_in_goal">
     <goal name="sub_valid_coloring.3.1.1.1" expl="1.">
     <transf name="split_goal_right">
      <goal name="sub_valid_coloring.3.1.1.1.1" expl="1.">
      <proof prover="9" edited="koda_ruskey_KodaRuskey_Spec_sub_valid_coloring_1.v" obsolete="true"><undone/></proof>
      </goal>
      <goal name="sub_valid_coloring.3.1.1.1.2" expl="2.">
      <proof prover="0" timelimit="6" steplimit="0"><result status="valid" time="0.04"/></proof>
      <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.01" steps="19"/></proof>
      </goal>
      <goal name="sub_valid_coloring.3.1.1.1.3" expl="3.">
      <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.81" steps="515"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_Cons_N">
 <transf name="induction_pr">
  <goal name="sub_Cons_N.1" expl="1.">
  <proof prover="1" timelimit="26" steplimit="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="sub_Cons_N.2" expl="2.">
  <proof prover="0" timelimit="26" steplimit="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="sub_Cons_N.3" expl="3.">
  <proof prover="0" timelimit="26" steplimit="0"><result status="valid" time="0.13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_white">
 <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.02" steps="34"/></proof>
 </goal>
 <goal name="VC sub_valid_coloring_white" expl="VC for sub_valid_coloring_white">
 <transf name="split_goal_right">
  <goal name="VC sub_valid_coloring_white.1" expl="1. variant decrease">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.2" expl="2. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.3" expl="3. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.4" expl="4. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.5" expl="5. variant decrease">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.6" expl="6. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.7" expl="7. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.8" expl="8. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.9" expl="9. postcondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.10" expl="10. postcondition">
  <proof prover="1" steplimit="-1" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_stack_nonneg">
 <transf name="induction_ty_lex">
  <goal name="count_stack_nonneg.1" expl="1.">
  <proof prover="1" timelimit="6" steplimit="0"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC stored_trans1" expl="VC for stored_trans1">
 <proof prover="1" steplimit="-1"><result status="valid" time="3.99" steps="1772"/></proof>
 </goal>
 <goal name="VC stored_trans2" expl="VC for stored_trans2">
 <proof prover="1" steplimit="-1"><result status="valid" time="2.91" steps="1710"/></proof>
 </goal>
</theory>
<theory name="KodaRuskey" sum="1dd1e4c48016dfe357d46654d8d584fa" expanded="true">
 <goal name="VC enum" expl="VC for enum" expanded="true">
 <proof prover="1" obsolete="true"><result status="timeout" time="5.01"/></proof>
 <transf name="split_goal_right" expanded="true">
  <goal name="VC enum.1" expl="1. unreachable point">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC enum.2" expl="2. assertion">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC enum.3" expl="3. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="VC enum.4" expl="4. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC enum.5" expl="5. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC enum.6" expl="6. postcondition">
  <proof prover="1"><result status="valid" time="0.04" steps="62"/></proof>
  </goal>
  <goal name="VC enum.7" expl="7. variant decrease">
  <proof prover="1"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC enum.8" expl="8. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC enum.9" expl="9. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC enum.10" expl="10. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC enum.11" expl="11. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="VC enum.12" expl="12. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="VC enum.13" expl="13. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC enum.14" expl="14. postcondition">
  <proof prover="1"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="VC enum.15" expl="15. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="VC enum.16" expl="16. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC enum.17" expl="17. postcondition">
  <proof prover="1"><result status="valid" time="0.10" steps="202"/></proof>
  </goal>
  <goal name="VC enum.18" expl="18. assertion">
  <proof prover="0"><result status="valid" time="2.94"/></proof>
  <proof prover="1"><result status="valid" time="1.04" steps="293"/></proof>
  </goal>
  <goal name="VC enum.19" expl="19. assertion">
  <proof prover="1"><result status="valid" time="0.06" steps="97"/></proof>
  </goal>
  <goal name="VC enum.20" expl="20. index in array bounds">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC enum.21" expl="21. variant decrease">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  <proof prover="1"><result status="valid" time="0.10" steps="66"/></proof>
  </goal>
  <goal name="VC enum.22" expl="22. precondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="VC enum.23" expl="23. precondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="VC enum.24" expl="24. precondition">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.09" steps="65"/></proof>
  </goal>
  <goal name="VC enum.25" expl="25. precondition">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
  <goal name="VC enum.26" expl="26. precondition">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.20" steps="190"/></proof>
  </goal>
  <goal name="VC enum.27" expl="27. precondition">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="VC enum.28" expl="28. assertion">
  <proof prover="0"><result status="valid" time="0.27"/></proof>
  <proof prover="1"><result status="valid" time="1.89" steps="655"/></proof>
  </goal>
  <goal name="VC enum.29" expl="29. index in array bounds">
  <proof prover="2"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="VC enum.30" expl="30. assertion">
  <proof prover="1"><result status="valid" time="1.01" steps="394"/></proof>
  </goal>
  <goal name="VC enum.31" expl="31. assertion" expanded="true">
  <proof prover="0"><result status="valid" time="0.92"/></proof>
  </goal>
  <goal name="VC enum.32" expl="32. assertion">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1"><result status="valid" time="0.14" steps="78"/></proof>
  </goal>
  <goal name="VC enum.33" expl="33. assertion">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="31"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.34" expl="34. variant decrease">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.09" steps="34"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.35" expl="35. precondition">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="27"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.36" expl="36. precondition">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="27"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.37" expl="37. precondition">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.11" steps="96"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.38" expl="38. precondition">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="5"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC enum.39" expl="39. precondition">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC enum.40" expl="40. precondition">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.19" steps="98"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.41" expl="41. assertion">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC enum.42" expl="42. assertion">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.20" steps="91"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.43" expl="43. assertion">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC enum.44" expl="44. precondition">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="33"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.45" expl="45. precondition">
  <proof prover="2"><result status="valid" time="1.07"/></proof>
  </goal>
  <goal name="VC enum.46" expl="46. precondition">
  <proof prover="0"><result status="valid" time="2.00"/></proof>
  </goal>
  <goal name="VC enum.47" expl="47. precondition">
  <proof prover="2"><result status="valid" time="1.68"/></proof>
  </goal>
  <goal name="VC enum.48" expl="48. precondition">
  <proof prover="2"><result status="valid" time="1.60"/></proof>
  </goal>
  <goal name="VC enum.49" expl="49. precondition">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="33"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC enum.50" expl="50. precondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="33"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC enum.51" expl="51. postcondition">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC enum.52" expl="52. postcondition">
  <transf name="introduce_premises">
   <goal name="VC enum.52.1" expl="1. postcondition">
   <transf name="compute_in_goal">
    <goal name="VC enum.52.1.1" expl="1. postcondition">
    <transf name="split_goal_right">
     <goal name="VC enum.52.1.1.1" expl="1. VC for enum">
     <proof prover="0" timelimit="35" steplimit="-1"><result status="valid" time="0.19"/></proof>
     </goal>
     <goal name="VC enum.52.1.1.2" expl="2. VC for enum">
     <proof prover="0" timelimit="35" steplimit="-1"><result status="valid" time="1.58"/></proof>
     </goal>
     <goal name="VC enum.52.1.1.3" expl="3. VC for enum">
     <proof prover="0" timelimit="35" steplimit="-1"><result status="valid" time="0.15"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC enum.53" expl="53. postcondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="34"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC enum.54" expl="54. postcondition">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="34"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.55" expl="55. assertion">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.28" steps="457"/></proof>
  </goal>
  <goal name="VC enum.56" expl="56. variant decrease">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.05" steps="26"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.57" expl="57. precondition">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="16"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC enum.58" expl="58. precondition">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.59" expl="59. precondition">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1"><result status="valid" time="0.08" steps="84"/></proof>
  </goal>
  <goal name="VC enum.60" expl="60. precondition">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="5"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC enum.61" expl="61. precondition">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC enum.62" expl="62. precondition">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="16"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.63" expl="63. assertion">
  <proof prover="2"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC enum.64" expl="64. index in array bounds">
  <proof prover="2"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC enum.65" expl="65. assertion">
  <proof prover="0"><result status="valid" time="0.57"/></proof>
  <proof prover="1"><result status="valid" time="0.30" steps="140"/></proof>
  </goal>
  <goal name="VC enum.66" expl="66. assertion">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="29"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC enum.67" expl="67. assertion">
  <proof prover="1"><result status="valid" time="1.92" steps="570"/></proof>
  </goal>
  <goal name="VC enum.68" expl="68. assertion">
  <proof prover="1"><result status="valid" time="3.45" steps="1975"/></proof>
  </goal>
  <goal name="VC enum.69" expl="69. variant decrease">
  <proof prover="0"><result status="valid" time="0.21"/></proof>
  <proof prover="1"><result status="valid" time="0.15" steps="123"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.70" expl="70. precondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.71" expl="71. precondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC enum.72" expl="72. precondition">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.09" steps="90"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC enum.73" expl="73. precondition">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="5"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC enum.74" expl="74. precondition">
  <proof prover="0"><result status="valid" time="1.90"/></proof>
  </goal>
  <goal name="VC enum.75" expl="75. precondition">
  <proof prover="0"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC enum.76" expl="76. assertion">
  <proof prover="0"><result status="valid" time="0.20"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="107"/></proof>
  </goal>
  <goal name="VC enum.77" expl="77. assertion" expanded="true">
  <proof prover="2" timelimit="40"><result status="valid" time="26.36"/></proof>
  </goal>
  <goal name="VC enum.78" expl="78. precondition">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="32"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC enum.79" expl="79. precondition">
  <proof prover="2"><result status="valid" time="0.71"/></proof>
  </goal>
  <goal name="VC enum.80" expl="80. precondition">
  <proof prover="0"><result status="valid" time="1.71"/></proof>
  </goal>
  <goal name="VC enum.81" expl="81. precondition">
  <proof prover="2"><result status="valid" time="0.97"/></proof>
  </goal>
  <goal name="VC enum.82" expl="82. precondition">
  <proof prover="2"><result status="valid" time="0.89"/></proof>
  </goal>
  <goal name="VC enum.83" expl="83. precondition">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC enum.84" expl="84. precondition">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC enum.85" expl="85. postcondition">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC enum.86" expl="86. postcondition">
  <proof prover="0"><result status="valid" time="2.01"/></proof>
  <proof prover="1"><result status="valid" time="1.67" steps="1157"/></proof>
  </goal>
  <goal name="VC enum.87" expl="87. postcondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="33"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC enum.88" expl="88. postcondition">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="33"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC main" expl="VC for main">
 <proof prover="1"><result status="valid" time="0.03" steps="154"/></proof>
 </goal>
</theory>
</file>
</why3session>
