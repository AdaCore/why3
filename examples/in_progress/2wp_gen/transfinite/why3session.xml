<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="1" name="CVC4" version="1.4" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="1.00.prv" timelimit="5" steplimit="1" memlimit="1000"/>
<file name="../transfinite.mlw">
<theory name="IterateCommon" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Iterates" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="IterateProof" sum="749a80e0893a304d15f90fcfd59ecdd2">
 <goal name="tr_reach_compare">
 <transf name="induction_pr">
  <goal name="tr_reach_compare.1" expl="1.">
  <proof prover="2"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="tr_reach_compare.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="tr_reach_compare.3" expl="3.">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="separation">
 <transf name="induction_pr">
  <goal name="separation.1" expl="1.">
  <transf name="simplify_trivial_quantification_in_goal">
   <goal name="separation.1.1" expl="1.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="separation.1.1.1" expl="1.">
    <proof prover="2"><result status="valid" time="0.01" steps="20"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separation.2" expl="2.">
  <transf name="simplify_trivial_quantification_in_goal">
   <goal name="separation.2.1" expl="1.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="separation.2.1.1" expl="1.">
    <proof prover="1"><result status="valid" time="0.14"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separation.3" expl="3.">
  <transf name="simplify_trivial_quantification_in_goal">
   <goal name="separation.3.1" expl="1.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="separation.3.1.1" expl="1.">
    <transf name="inline_goal">
     <goal name="separation.3.1.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.08" steps="235"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_separation">
 <transf name="split_goal_wp">
  <goal name="all_separation.1" expl="1.">
  <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="all_separation.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="all_separation.3" expl="3.">
  <proof prover="2"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="all_separation.4" expl="4.">
  <proof prover="2"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="all_separation.5" expl="5.">
  <proof prover="2"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
  <goal name="all_separation.6" expl="6.">
  <proof prover="2"><result status="valid" time="0.02" steps="108"/></proof>
  </goal>
  <goal name="all_separation.7" expl="7.">
  <proof prover="2"><result status="valid" time="0.02" steps="64"/></proof>
  </goal>
  <goal name="all_separation.8" expl="8.">
  <transf name="induction_pr">
   <goal name="all_separation.8.1" expl="1.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="all_separation.8.1.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="all_separation.8.1.1.1" expl="1.">
     <proof prover="1"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_separation.8.2" expl="2.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="all_separation.8.2.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="all_separation.8.2.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.33" steps="475"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_separation.8.3" expl="3.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="all_separation.8.3.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="all_separation.8.3.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.25" steps="722"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="fixpoint_max_proof">
 <transf name="split_goal_wp">
  <goal name="fixpoint_max_proof.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="fixpoint_max_proof.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="fixpoint_max_proof.3" expl="3.">
  <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="fixpoint_max_proof.4" expl="4.">
  <proof prover="2"><result status="valid" time="0.08" steps="230"/></proof>
  </goal>
  <goal name="fixpoint_max_proof.5" expl="5.">
  <proof prover="2"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="fixpoint_is_max_proof">
 <transf name="split_goal_wp">
  <goal name="fixpoint_is_max_proof.1" expl="1.">
  <transf name="induction_pr">
   <goal name="fixpoint_is_max_proof.1.1" expl="1.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="fixpoint_is_max_proof.1.1.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="fixpoint_is_max_proof.1.1.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.01" steps="15"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="fixpoint_is_max_proof.1.2" expl="2.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="fixpoint_is_max_proof.1.2.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="fixpoint_is_max_proof.1.2.1.1" expl="1.">
     <proof prover="1"><result status="valid" time="0.24"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="fixpoint_is_max_proof.1.3" expl="3.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="fixpoint_is_max_proof.1.3.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="fixpoint_is_max_proof.1.3.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.05" steps="85"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="fixpoint_is_max_proof.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_chain">
 <transf name="split_goal_wp">
  <goal name="add_chain.1" expl="1.">
  <proof prover="2"><result status="valid" time="1.85" steps="2404"/></proof>
  </goal>
  <goal name="add_chain.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.95" steps="1275"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="accessibility">
 <transf name="split_goal_wp">
  <goal name="accessibility.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="accessibility.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
  <goal name="accessibility.3" expl="3.">
  <proof prover="2"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="accessibility.4" expl="4.">
  <proof prover="2"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="accessibility.5" expl="5.">
  <proof prover="1"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="accessibility.6" expl="6.">
  <proof prover="1"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="accessibility.7" expl="7.">
  <proof prover="2"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="accessibility.8" expl="8.">
  <proof prover="1"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="accessibility.9" expl="9.">
  <proof prover="2"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="accessibility.10" expl="10.">
  <proof prover="2"><result status="valid" time="1.99" steps="4383"/></proof>
  </goal>
  <goal name="accessibility.11" expl="11.">
  <transf name="induction_pr">
   <goal name="accessibility.11.1" expl="1.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="accessibility.11.1.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="accessibility.11.1.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.04" steps="190"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="accessibility.11.2" expl="2.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="accessibility.11.2.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="accessibility.11.2.1.1" expl="1.">
     <proof prover="1"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="accessibility.11.3" expl="3.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="accessibility.11.3.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="accessibility.11.3.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.04" steps="113"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="accessibility.12" expl="12.">
  <proof prover="1"><result status="valid" time="0.31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Iterates.tr_reach_separated">
 <proof prover="1"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="Iterates.tr_reach_maximum">
 <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="Iterates.tr_reach_fixpoint">
 <proof prover="2"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
 <goal name="Iterates.tr_reach_compare">
 <proof prover="2"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
 <goal name="Iterates.tr_reach_transitive">
 <transf name="split_goal_wp">
  <goal name="tr_reach_transitive.1" expl="1.">
  <transf name="prop_curry">
   <goal name="tr_reach_transitive.1.1" expl="1.">
   <transf name="induction_pr">
    <goal name="tr_reach_transitive.1.1.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="tr_reach_transitive.1.1.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.01" steps="0"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="tr_reach_transitive.1.1.2" expl="2.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="tr_reach_transitive.1.1.2.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.02" steps="9"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="tr_reach_transitive.1.1.3" expl="3.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="tr_reach_transitive.1.1.3.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Iterates.tr_reach_wf">
 <proof prover="2"><result status="valid" time="0.03" steps="17"/></proof>
 </goal>
</theory>
<theory name="ChainExtensionCommon" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="ChainExtension" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="ChainExtensionProof" sum="fcf81d2518ca60cb2f06e6d92c1f1a0c">
 <goal name="WP_parameter ext" expl="VC for ext">
 <transf name="split_goal_wp">
  <goal name="WP_parameter ext.1" expl="1. assertion">
  <transf name="inline_goal">
   <goal name="WP_parameter ext.1.1" expl="1. assertion">
   <proof prover="2"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter ext.2" expl="2. postcondition">
  <proof prover="2"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subchain_complete">
 <transf name="split_goal_wp">
  <goal name="subchain_complete.1" expl="1.">
  <proof prover="2"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="subchain_complete.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="subchain_complete.3" expl="3.">
  <proof prover="2"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="subchain_complete.4" expl="4.">
  <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="subchain_complete.5" expl="5.">
  <proof prover="2"><result status="valid" time="0.05" steps="108"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subchain_competion_chain">
 <proof prover="2"><result status="valid" time="0.03" steps="96"/></proof>
 </goal>
 <goal name="extends_preserve_chain">
 <proof prover="2"><result status="valid" time="0.02" steps="32"/></proof>
 </goal>
 <goal name="reach_only_chains">
 <transf name="split_goal_wp">
  <goal name="reach_only_chains.1" expl="1.">
  <transf name="induction_pr">
   <goal name="reach_only_chains.1.1" expl="1.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="reach_only_chains.1.1.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="reach_only_chains.1.1.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.02" steps="4"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reach_only_chains.1.2" expl="2.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="reach_only_chains.1.2.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="reach_only_chains.1.2.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.02" steps="18"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reach_only_chains.1.3" expl="3.">
   <transf name="simplify_trivial_quantification_in_goal">
    <goal name="reach_only_chains.1.3.1" expl="1.">
    <transf name="simplify_trivial_quantification_in_goal">
     <goal name="reach_only_chains.1.3.1.1" expl="1.">
     <proof prover="2"><result status="valid" time="0.44" steps="1096"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reach_only_chains.2" expl="2.">
  <proof prover="2"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ChainExtension.subchain_order">
 <proof prover="2"><result status="valid" time="0.03" steps="62"/></proof>
 </goal>
 <goal name="ChainExtension.subchain_complete">
 <proof prover="2"><result status="valid" time="0.02" steps="4"/></proof>
 </goal>
 <goal name="ChainExtension.subchain_completion_chain">
 <proof prover="2"><result status="valid" time="0.02" steps="18"/></proof>
 </goal>
 <goal name="ChainExtension.extends_inflationary">
 <proof prover="2"><result status="valid" time="0.03" steps="37"/></proof>
 </goal>
 <goal name="ChainExtension.extends_preserve_chain">
 <proof prover="2"><result status="valid" time="0.02" steps="10"/></proof>
 </goal>
 <goal name="ChainExtension.reach_only_chains">
 <proof prover="2"><result status="valid" time="0.02" steps="20"/></proof>
 </goal>
</theory>
</file>
</why3session>
