<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.4" alternative="noBV" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="9" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="hackers-delight.mlw"/>
<theory name="Utils_Spec" proved="true">
 <goal name="countZero" proved="true">
 <proof prover="9"><result status="valid" time="0.01" steps="5081"/></proof>
 </goal>
 <goal name="numOfZero" proved="true">
 <proof prover="9"><result status="valid" time="0.08" steps="17985"/></proof>
 </goal>
 <goal name="countStep" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="countStep.0" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="87733"/></proof>
  </goal>
  <goal name="countStep.1" proved="true">
  <proof prover="9"><result status="valid" time="0.08" steps="31258"/></proof>
  </goal>
  <goal name="countStep.2" proved="true">
  <proof prover="9" timelimit="10" memlimit="4000"><result status="valid" time="2.07" steps="96859"/></proof>
  </goal>
  <goal name="countStep.3" proved="true">
  <proof prover="9"><result status="valid" time="0.10" steps="30624"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="numof_shift&#39;vc" expl="VC for numof_shift" proved="true">
 <proof prover="9"><result status="valid" time="0.07" steps="20691"/></proof>
 </goal>
 <goal name="countSpec_Aux&#39;vc" expl="VC for countSpec_Aux" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="countSpec_Aux&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="countSpec_Aux&#39;vc.0.0" expl="VC for countSpec_Aux" proved="true">
   <proof prover="9"><result status="valid" time="0.02" steps="7683"/></proof>
   </goal>
   <goal name="countSpec_Aux&#39;vc.0.1" expl="VC for countSpec_Aux" proved="true">
   <proof prover="0"><result status="valid" time="0.39" steps="315"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="countSpec_Aux&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="countSpec_Aux&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="298"/></proof>
   </goal>
   <goal name="countSpec_Aux&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="9"><result status="valid" time="0.10" steps="24457"/></proof>
   </goal>
   <goal name="countSpec_Aux&#39;vc.1.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.24" steps="374"/></proof>
   </goal>
   <goal name="countSpec_Aux&#39;vc.1.3" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="2.41"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="countSpec_Aux&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.11" steps="38681"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="countSpec" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="9284"/></proof>
 </goal>
 <goal name="hamming_spec&#39;vc" expl="VC for hamming_spec" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="hamming_spec&#39;vc.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="16656"/></proof>
  </goal>
  <goal name="hamming_spec&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.15" steps="240023"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="symmetric" proved="true">
 <proof prover="9"><result status="valid" time="0.02" steps="11132"/></proof>
 </goal>
 <goal name="separation" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="18005"/></proof>
 </goal>
 <goal name="numof_or&#39;vc" expl="VC for numof_or" proved="true">
 <proof prover="9"><result status="valid" time="0.09" steps="27968"/></proof>
 </goal>
 <goal name="triangleInequalityInt&#39;vc" expl="VC for triangleInequalityInt" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="triangleInequalityInt&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="triangleInequalityInt&#39;vc.0.0" expl="VC for triangleInequalityInt" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="124"/></proof>
   </goal>
   <goal name="triangleInequalityInt&#39;vc.0.1" expl="VC for triangleInequalityInt" proved="true">
   <proof prover="8"><result status="valid" time="0.03" steps="26095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="triangleInequalityInt&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.10" steps="25705"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="triangleInequality" proved="true">
 <proof prover="0"><result status="valid" time="0.38" steps="638"/></proof>
 </goal>
</theory>
<theory name="Hackers_delight" proved="true">
 <goal name="ascii&#39;vc" expl="VC for ascii" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="19557"/></proof>
 </goal>
 <goal name="asciiProp" proved="true">
 <proof prover="9"><result status="valid" time="0.63" steps="127794"/></proof>
 </goal>
 <goal name="iso" proved="true">
 <proof prover="9"><result status="valid" time="0.18" steps="51316"/></proof>
 </goal>
 <goal name="grayIsGray" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="19783"/></proof>
 </goal>
 <goal name="nthGray" proved="true">
 <proof prover="9"><result status="valid" time="0.19" steps="68564"/></proof>
 </goal>
 <goal name="lastNthGray" proved="true">
 <proof prover="9"><result status="valid" time="0.22" steps="68882"/></proof>
 </goal>
 <goal name="nthBinary" proved="true">
 <proof prover="9"><result status="valid" time="0.43" steps="116690"/></proof>
 </goal>
 <goal name="evenOdd" proved="true">
 <proof prover="9"><result status="valid" time="0.22" steps="76820"/></proof>
 </goal>
 <goal name="DM1" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="13790"/></proof>
 </goal>
 <goal name="DM2" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="13972"/></proof>
 </goal>
 <goal name="DM3" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="14645"/></proof>
 </goal>
 <goal name="DM4" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="14527"/></proof>
 </goal>
 <goal name="DM5" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="14568"/></proof>
 </goal>
 <goal name="DM6" proved="true">
 <proof prover="9"><result status="valid" time="0.05" steps="14142"/></proof>
 </goal>
 <goal name="DM7" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="20508"/></proof>
 </goal>
 <goal name="DM8" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="22834"/></proof>
 </goal>
 <goal name="DMtest" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="14553"/></proof>
 </goal>
 <goal name="Aa" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="13468"/></proof>
 </goal>
 <goal name="Ac" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="14685"/></proof>
 </goal>
 <goal name="Ad" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="13682"/></proof>
 </goal>
 <goal name="Ae" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="12517"/></proof>
 </goal>
 <goal name="Af" proved="true">
 <proof prover="9"><result status="valid" time="0.05" steps="14857"/></proof>
 </goal>
 <goal name="Aj" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="12670"/></proof>
 </goal>
 <goal name="An" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="19383"/></proof>
 </goal>
 <goal name="Ao" proved="true">
 <proof prover="9"><result status="valid" time="0.06" steps="17197"/></proof>
 </goal>
 <goal name="Aq" proved="true">
 <proof prover="9"><result status="valid" time="0.10" steps="29545"/></proof>
 </goal>
 <goal name="At" proved="true">
 <proof prover="9"><result status="valid" time="0.06" steps="14798"/></proof>
 </goal>
 <goal name="Au" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="15400"/></proof>
 </goal>
 <goal name="Av" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="17912"/></proof>
 </goal>
 <goal name="IE1" proved="true">
 <proof prover="9"><result status="valid" time="0.05" steps="15364"/></proof>
 </goal>
 <goal name="IE2" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="15621"/></proof>
 </goal>
 <goal name="IEa" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="18434"/></proof>
 </goal>
 <goal name="IEb" proved="true">
 <proof prover="9"><result status="valid" time="0.03" steps="18423"/></proof>
 </goal>
 <goal name="IE3" proved="true">
 <proof prover="9"><result status="valid" time="0.04" steps="18989"/></proof>
 </goal>
 <goal name="IE4" proved="true">
 <proof prover="9"><result status="valid" time="0.05" steps="19795"/></proof>
 </goal>
 <goal name="SR1" proved="true">
 <proof prover="9"><result status="valid" time="0.06" steps="24205"/></proof>
 </goal>
 <goal name="RS_left" proved="true">
 <proof prover="9"><result status="valid" time="0.02" steps="13189"/></proof>
 </goal>
 <goal name="RS_right" proved="true">
 <proof prover="9"><result status="valid" time="0.02" steps="13259"/></proof>
 </goal>
 <goal name="BP" proved="true">
 <proof prover="9"><result status="valid" time="0.10" steps="48418"/></proof>
 </goal>
</theory>
</file>
</why3session>
