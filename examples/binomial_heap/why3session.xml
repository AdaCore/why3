<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.01" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="1.8-001" timelimit="6" steplimit="0" memlimit="1000"/>
<file name="../binomial_heap.mlw" expanded="true">
<theory name="BinomialHeap" sum="69f761ca58435723990c69900429c264" expanded="true">
 <goal name="WP_parameter size_nonnneg" expl="VC for size_nonnneg">
 <proof prover="0"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="le_roots_trans">
 <transf name="induction_ty_lex">
  <goal name="le_roots_trans.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="heaps_append">
 <transf name="induction_ty_lex">
  <goal name="heaps_append.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="heaps_append.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="heaps_append.1.2" expl="2.">
   <proof prover="2"><result status="valid" time="0.41"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="heaps_reverse">
 <transf name="induction_ty_lex">
  <goal name="heaps_reverse.1" expl="1.">
  <proof prover="2"><result status="valid" time="0.99"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter occ_nonneg" expl="VC for occ_nonneg">
 <proof prover="0"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="occ_append">
 <transf name="induction_ty_lex">
  <goal name="occ_append.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="occ_append.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="occ_append.1.2" expl="2.">
   <transf name="compute_in_goal">
    <goal name="occ_append.1.2.1" expl="1.">
    <proof prover="0"><result status="valid" time="0.37"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="occ_reverse">
 <transf name="induction_ty_lex">
  <goal name="occ_reverse.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.25"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter heaps_mem" expl="VC for heaps_mem">
 <proof prover="0"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="has_order_length">
 <transf name="induction_ty_lex">
  <goal name="has_order_length.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="has_order_length.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="has_order_length.1.2" expl="2.">
   <transf name="compute_in_goal">
    <goal name="has_order_length.1.2.1" expl="1.">
    <proof prover="1"><result status="valid" time="0.45" steps="629"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inv_trans">
 <transf name="induction_ty_lex">
  <goal name="inv_trans.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter inv_reverse" expl="VC for inv_reverse">
 <transf name="split_goal_wp">
  <goal name="WP_parameter inv_reverse.1" expl="1. postcondition">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="WP_parameter inv_reverse.2" expl="2. assertion">
  <proof prover="1"><result status="valid" time="0.14" steps="293"/></proof>
  </goal>
  <goal name="WP_parameter inv_reverse.3" expl="3. variant decrease">
  <transf name="split_goal_wp">
   <goal name="WP_parameter inv_reverse.3.1" expl="1. VC for inv_reverse">
   <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
   </goal>
   <goal name="WP_parameter inv_reverse.3.2" expl="2. VC for inv_reverse">
   <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inv_reverse.4" expl="4. precondition">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="WP_parameter inv_reverse.5" expl="5. precondition">
  <transf name="introduce_premises">
   <goal name="WP_parameter inv_reverse.5.1" expl="1. precondition">
   <transf name="compute_in_goal">
    <goal name="WP_parameter inv_reverse.5.1.1" expl="1. precondition">
    <proof prover="1"><result status="valid" time="0.03" steps="295"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inv_reverse.6" expl="6. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter inv_reverse.7" expl="7. precondition">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter inv_reverse.8" expl="8. precondition">
  <transf name="introduce_premises">
   <goal name="WP_parameter inv_reverse.8.1" expl="1. precondition">
   <transf name="compute_in_goal">
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inv_reverse.9" expl="9. postcondition">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter empty" expl="VC for empty">
 <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="WP_parameter is_empty" expl="VC for is_empty">
 <proof prover="1"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
 <goal name="WP_parameter get_min" expl="VC for get_min">
 <transf name="split_goal_wp">
  <goal name="WP_parameter get_min.1" expl="1. unreachable point">
  <proof prover="1"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="WP_parameter get_min.2" expl="2. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter get_min.3" expl="3. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="WP_parameter get_min.4" expl="4. variant decrease">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter get_min.5" expl="5. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="WP_parameter get_min.6" expl="6. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="WP_parameter get_min.7" expl="7. postcondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="WP_parameter get_min.8" expl="8. postcondition">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="WP_parameter get_min.9" expl="9. precondition">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter get_min.10" expl="10. postcondition">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter get_min.11" expl="11. postcondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter add_tree" expl="VC for add_tree">
 <transf name="split_goal_wp">
  <goal name="WP_parameter add_tree.1" expl="1. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.2" expl="2. postcondition">
  <proof prover="1" timelimit="21"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.3" expl="3. postcondition">
  <proof prover="1"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.4" expl="4. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="60"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.5" expl="5. postcondition">
  <proof prover="1" timelimit="21"><result status="valid" time="0.01" steps="45"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.6" expl="6. postcondition">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.7" expl="7. assertion">
  <transf name="compute_in_goal">
   <goal name="WP_parameter add_tree.7.1" expl="1. assertion">
   <proof prover="1"><result status="valid" time="0.05" steps="55"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter add_tree.8" expl="8. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.9" expl="9. precondition">
  <proof prover="0"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.10" expl="10. precondition">
  <transf name="compute_in_goal">
   <goal name="WP_parameter add_tree.10.1" expl="1. precondition">
   <proof prover="1"><result status="valid" time="0.37" steps="1339"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter add_tree.11" expl="11. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="72"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.12" expl="12. precondition">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.13" expl="13. postcondition">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.14" expl="14. postcondition">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter add_tree.15" expl="15. postcondition">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter add" expl="VC for add">
 <proof prover="0"><result status="valid" time="0.04"/></proof>
 <proof prover="1"><result status="valid" time="0.02" steps="171"/></proof>
 </goal>
 <goal name="WP_parameter merge" expl="VC for merge">
 <transf name="split_goal_wp">
  <goal name="WP_parameter merge.1" expl="1. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter merge.2" expl="2. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter merge.3" expl="3. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter merge.4" expl="4. postcondition">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter merge.5" expl="5. postcondition">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter merge.6" expl="6. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter merge.7" expl="7. postcondition">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter merge.8" expl="8. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter merge.9" expl="9. postcondition">
  <transf name="compute_in_goal">
   <goal name="WP_parameter merge.9.1" expl="1. postcondition">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter merge.10" expl="10. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="WP_parameter merge.11" expl="11. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="59"/></proof>
  </goal>
  <goal name="WP_parameter merge.12" expl="12. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="WP_parameter merge.13" expl="13. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter merge.14" expl="14. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="46"/></proof>
  </goal>
  <goal name="WP_parameter merge.15" expl="15. postcondition">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="82"/></proof>
  </goal>
  <goal name="WP_parameter merge.16" expl="16. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="55"/></proof>
  </goal>
  <goal name="WP_parameter merge.17" expl="17. postcondition">
  <proof prover="1"><result status="valid" time="0.07" steps="90"/></proof>
  </goal>
  <goal name="WP_parameter merge.18" expl="18. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter merge.19" expl="19. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="WP_parameter merge.20" expl="20. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
  <goal name="WP_parameter merge.21" expl="21. precondition">
  <transf name="compute_in_goal">
   <goal name="WP_parameter merge.21.1" expl="1. precondition">
   <proof prover="1"><result status="valid" time="0.03" steps="464"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter merge.22" expl="22. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="26"/></proof>
  </goal>
  <goal name="WP_parameter merge.23" expl="23. postcondition">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="83"/></proof>
  </goal>
  <goal name="WP_parameter merge.24" expl="24. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="WP_parameter merge.25" expl="25. postcondition">
  <proof prover="1"><result status="valid" time="0.06" steps="91"/></proof>
  </goal>
  <goal name="WP_parameter merge.26" expl="26. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter merge.27" expl="27. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter merge.28" expl="28. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="WP_parameter merge.29" expl="29. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter merge.30" expl="30. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="WP_parameter merge.31" expl="31. precondition">
  <transf name="compute_in_goal">
   <goal name="WP_parameter merge.31.1" expl="1. precondition">
   <proof prover="0"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter merge.32" expl="32. precondition">
  <transf name="introduce_premises">
   <goal name="WP_parameter merge.32.1" expl="1. precondition">
   <transf name="compute_in_goal">
    <goal name="WP_parameter merge.32.1.1" expl="1. precondition">
    <proof prover="1"><result status="valid" time="0.04" steps="363"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter merge.33" expl="33. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter merge.34" expl="34. precondition">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="WP_parameter merge.35" expl="35. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="WP_parameter merge.36" expl="36. postcondition">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter merge.37" expl="37. postcondition">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter extract_min_tree" expl="VC for extract_min_tree">
 <transf name="split_goal_wp">
  <goal name="WP_parameter extract_min_tree.1" expl="1. unreachable point">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter extract_min_tree.2" expl="2. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="45"/></proof>
  </goal>
  <goal name="WP_parameter extract_min_tree.3" expl="3. variant decrease">
  <proof prover="1"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="WP_parameter extract_min_tree.4" expl="4. precondition">
  <transf name="compute_in_goal">
   <goal name="WP_parameter extract_min_tree.4.1" expl="1. precondition">
   <proof prover="1"><result status="valid" time="0.02" steps="247"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter extract_min_tree.5" expl="5. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="WP_parameter extract_min_tree.6" expl="6. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter extract_min_tree.7" expl="7. postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter extract_min_tree.7.1" expl="1. VC for extract_min_tree">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="1"><result status="valid" time="0.02" steps="109"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.2" expl="2. VC for extract_min_tree">
   <proof prover="1"><result status="valid" time="0.00" steps="17"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.3" expl="3. VC for extract_min_tree">
   <proof prover="1"><result status="valid" time="0.01" steps="52"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.4" expl="4. VC for extract_min_tree">
   <proof prover="1"><result status="valid" time="0.01" steps="67"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.5" expl="5. VC for extract_min_tree">
   <proof prover="1"><result status="valid" time="0.01" steps="51"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.6" expl="6. VC for extract_min_tree">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   <proof prover="1"><result status="valid" time="0.09" steps="107"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.7" expl="7. VC for extract_min_tree">
   <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.8" expl="8. VC for extract_min_tree">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="1"><result status="valid" time="0.02" steps="162"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.9" expl="9. VC for extract_min_tree">
   <proof prover="1"><result status="valid" time="0.01" steps="76"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.10" expl="10. VC for extract_min_tree">
   <proof prover="1"><result status="valid" time="0.01" steps="49"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.11" expl="11. VC for extract_min_tree">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="WP_parameter extract_min_tree.7.12" expl="12. VC for extract_min_tree">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="1"><result status="valid" time="0.06" steps="117"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter extract_min" expl="VC for extract_min">
 <transf name="split_goal_wp">
  <goal name="WP_parameter extract_min.1" expl="1. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter extract_min.2" expl="2. precondition">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter extract_min.3" expl="3. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter extract_min.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="WP_parameter extract_min.5" expl="5. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter extract_min.6" expl="6. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="WP_parameter extract_min.7" expl="7. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="WP_parameter extract_min.8" expl="8. postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter extract_min.8.1" expl="1. VC for extract_min">
   <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="WP_parameter extract_min.8.2" expl="2. VC for extract_min">
   <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="WP_parameter extract_min.8.3" expl="3. VC for extract_min">
   <proof prover="1"><result status="valid" time="0.02" steps="62"/></proof>
   </goal>
   <goal name="WP_parameter extract_min.8.4" expl="4. VC for extract_min">
   <proof prover="1"><result status="valid" time="0.02" steps="196"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter has_order_size" expl="VC for has_order_size">
 <proof prover="1"><result status="valid" time="0.02" steps="116"/></proof>
 </goal>
 <goal name="binomial_tree_size">
 <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
 <goal name="WP_parameter inv_size" expl="VC for inv_size">
 <transf name="split_goal_wp">
  <goal name="WP_parameter inv_size.1" expl="1. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter inv_size.2" expl="2. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter inv_size.3" expl="3. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter inv_size.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="WP_parameter inv_size.5" expl="5. postcondition">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="heap_size">
 <proof prover="0"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
</file>
</why3session>
