<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="6" memlimit="4000"/>
<prover id="1" name="Z3" version="4.3.1" timelimit="6" memlimit="1000"/>
<prover id="2" name="Z3" version="3.2" timelimit="5" memlimit="4000"/>
<prover id="3" name="Alt-Ergo" version="0.95.2" timelimit="6" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.3" timelimit="6" memlimit="1000"/>
<file name="../inverse_in_place.mlw" expanded="true">
<theory name="InverseInPlace" sum="703e4628428f2257a861c2bd15a6641c" expanded="true">
 <goal name="num_of_decrease">
 <proof prover="4"><result status="valid" time="0.38"/></proof>
 </goal>
 <goal name="is_permutation_inverse">
 <proof prover="3"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter inverse_in_place" expl="VC for inverse_in_place">
 <transf name="split_goal_wp">
  <goal name="WP_parameter inverse_in_place.1" expl="1. postcondition">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.2" expl="2. postcondition">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.3" expl="3. loop invariant init">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.4" expl="4. type invariant">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.5" expl="5. index in array bounds">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.6" expl="6. index in array bounds">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.7" expl="7. index in array bounds">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.8" expl="8. loop invariant init">
  <transf name="split_goal_wp">
   <goal name="WP_parameter inverse_in_place.8.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.2" expl="2.">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.3" expl="3.">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.4" expl="4.">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.5" expl="5.">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.6" expl="6.">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.7" expl="7.">
   <proof prover="1"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.8" expl="8.">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.9" expl="9.">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.9" expl="9. loop invariant init">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.10" expl="10. loop invariant init">
  <proof prover="0" timelimit="5"><result status="valid" time="1.03"/></proof>
  <proof prover="2"><result status="valid" time="1.49"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.11" expl="11. type invariant">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.12" expl="12. index in array bounds">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.13" expl="13. index in array bounds">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.14" expl="14. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.50"/></proof>
  <proof prover="4"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.15" expl="15. loop invariant preservation">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.43"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.16" expl="16. loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="WP_parameter inverse_in_place.16.1" expl="1. loop invariant preservation">
   <transf name="inline_goal">
    <goal name="WP_parameter inverse_in_place.16.1.1" expl="1. loop invariant preservation">
    <transf name="split_goal_wp">
     <goal name="WP_parameter inverse_in_place.16.1.1.1" expl="1.">
     <proof prover="0" memlimit="1000"><result status="valid" time="3.28"/></proof>
     <proof prover="3"><result status="valid" time="2.77"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.2" expl="2.">
     <proof prover="0" memlimit="1000"><result status="valid" time="3.55"/></proof>
     <proof prover="3"><result status="valid" time="1.70"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.3" expl="3.">
     <proof prover="3"><result status="valid" time="0.86"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.4" expl="4.">
     <proof prover="3"><result status="valid" time="0.90"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.5" expl="5.">
     <proof prover="3"><result status="valid" time="0.21"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.6" expl="6.">
     <proof prover="3"><result status="valid" time="0.89"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.7" expl="7.">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.66"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.8" expl="8.">
     <proof prover="0" memlimit="1000"><result status="valid" time="1.64"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.17" expl="17. loop variant decrease">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.18" expl="18. assertion">
  <proof prover="1"><result status="valid" time="1.06"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.19" expl="19. assertion">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.20" expl="20. type invariant">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.21" expl="21. index in array bounds">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.22" expl="22. loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="WP_parameter inverse_in_place.22.1" expl="1. loop invariant preservation">
   <transf name="inline_goal">
    <goal name="WP_parameter inverse_in_place.22.1.1" expl="1. loop invariant preservation">
    <transf name="split_goal_wp">
     <goal name="WP_parameter inverse_in_place.22.1.1.1" expl="1.">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.93"/></proof>
     <proof prover="3"><result status="valid" time="0.86"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.2" expl="2.">
     <proof prover="0" memlimit="1000"><result status="valid" time="2.50"/></proof>
     <proof prover="3"><result status="valid" time="1.40"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.3" expl="3.">
     <proof prover="3"><result status="valid" time="1.69"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.4" expl="4.">
     <proof prover="4"><result status="valid" time="0.13"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.5" expl="5.">
     <proof prover="3"><result status="valid" time="0.37"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.6" expl="6.">
     <proof prover="4"><result status="valid" time="0.65"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.7" expl="7.">
     <proof prover="0" memlimit="1000"><result status="valid" time="2.22"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.8" expl="8.">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.86"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.23" expl="23. assertion">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.24" expl="24. index in array bounds">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.25" expl="25. loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="WP_parameter inverse_in_place.25.1" expl="1. loop invariant preservation">
   <transf name="inline_goal">
    <goal name="WP_parameter inverse_in_place.25.1.1" expl="1. loop invariant preservation">
    <transf name="split_goal_wp">
     <goal name="WP_parameter inverse_in_place.25.1.1.1" expl="1.">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.2" expl="2.">
     <proof prover="3"><result status="valid" time="0.05"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.3" expl="3.">
     <proof prover="4"><result status="valid" time="0.13"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.4" expl="4.">
     <proof prover="4"><result status="valid" time="0.14"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.5" expl="5.">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.15"/></proof>
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     <proof prover="4"><result status="valid" time="0.06"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.6" expl="6.">
     <proof prover="4"><result status="valid" time="0.24"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.7" expl="7.">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.90"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.8" expl="8.">
     <proof prover="0" memlimit="1000"><result status="valid" time="0.30"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.26" expl="26. type invariant">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.27" expl="27. postcondition">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.28" expl="28. postcondition">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Harness" sum="d2a3ed3346a0a1d44000405b261935d4" expanded="true">
 <goal name="WP_parameter test1" expl="VC for test1">
 <proof prover="3"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="WP_parameter test2" expl="VC for test2">
 <proof prover="3"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
</file>
</why3session>
