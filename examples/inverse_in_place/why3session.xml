<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.3.1" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="0.95.2" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.3" timelimit="6" steplimit="0" memlimit="1000"/>
<file name="../inverse_in_place.mlw">
<theory name="InverseInPlace" sum="5ac8c81dbf56dc5874bbb415ac4a2c4c">
 <goal name="is_permutation_inverse" expl="">
 <proof prover="3"><result status="valid" time="0.02" steps="17"/></proof>
 </goal>
 <goal name="WP_parameter inverse_in_place" expl="VC for inverse_in_place">
 <transf name="split_goal_wp">
  <goal name="WP_parameter inverse_in_place.1" expl="postcondition">
  <proof prover="3"><result status="valid" time="0.02" steps="3"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.2" expl="postcondition">
  <proof prover="3"><result status="valid" time="0.02" steps="4"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.3" expl="loop invariant init">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.4" expl="type invariant">
  <proof prover="3"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.5" expl="index in array bounds">
  <proof prover="3"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.6" expl="index in array bounds">
  <proof prover="3"><result status="valid" time="0.02" steps="7"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.7" expl="index in array bounds">
  <proof prover="3"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.8" expl="loop invariant init">
  <transf name="split_goal_wp">
   <goal name="WP_parameter inverse_in_place.8.1" expl="VC for inverse_in_place">
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.2" expl="VC for inverse_in_place">
   <proof prover="3"><result status="valid" time="0.04" steps="25"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.3" expl="VC for inverse_in_place">
   <proof prover="3"><result status="valid" time="0.02" steps="10"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.4" expl="VC for inverse_in_place">
   <proof prover="3"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.5" expl="VC for inverse_in_place">
   <proof prover="3"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.6" expl="VC for inverse_in_place">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.7" expl="VC for inverse_in_place">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.8" expl="VC for inverse_in_place">
   <proof prover="3"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="WP_parameter inverse_in_place.8.9" expl="VC for inverse_in_place">
   <proof prover="3"><result status="valid" time="0.02" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.9" expl="loop invariant init">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.10" expl="loop invariant init">
  <proof prover="0" timelimit="5" memlimit="4000"><result status="valid" time="0.68"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.11" expl="type invariant">
  <proof prover="3"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.12" expl="index in array bounds">
  <proof prover="3"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.13" expl="index in array bounds">
  <proof prover="3"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.14" expl="loop invariant preservation">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="4"><result status="valid" time="3.52"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.15" expl="loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.16" expl="loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="WP_parameter inverse_in_place.16.1" expl="loop invariant preservation">
   <transf name="inline_goal">
    <goal name="WP_parameter inverse_in_place.16.1.1" expl="loop invariant preservation">
    <transf name="split_goal_wp">
     <goal name="WP_parameter inverse_in_place.16.1.1.1" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="1.28"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.2" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.71"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.3" expl="VC for inverse_in_place">
     <proof prover="1"><result status="valid" time="0.05"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.4" expl="VC for inverse_in_place">
     <proof prover="1"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.5" expl="VC for inverse_in_place">
     <proof prover="3"><result status="valid" time="0.21" steps="75"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.6" expl="VC for inverse_in_place">
     <proof prover="1"><result status="valid" time="0.05"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.7" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.68"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.16.1.1.8" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.93"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.17" expl="loop variant decrease">
  <proof prover="1"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.18" expl="assertion">
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.19" expl="assertion">
  <proof prover="3"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.20" expl="type invariant">
  <proof prover="3"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.21" expl="index in array bounds">
  <proof prover="3"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.22" expl="loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="WP_parameter inverse_in_place.22.1" expl="loop invariant preservation">
   <transf name="inline_goal">
    <goal name="WP_parameter inverse_in_place.22.1.1" expl="loop invariant preservation">
    <transf name="split_goal_wp">
     <goal name="WP_parameter inverse_in_place.22.1.1.1" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.74"/></proof>
     <proof prover="3"><result status="valid" time="2.66" steps="110"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.2" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.85"/></proof>
     <proof prover="3"><result status="valid" time="2.95" steps="118"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.3" expl="VC for inverse_in_place">
     <proof prover="3"><result status="valid" time="1.85" steps="73"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.4" expl="VC for inverse_in_place">
     <proof prover="4"><result status="valid" time="0.13"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.5" expl="VC for inverse_in_place">
     <proof prover="3"><result status="valid" time="0.37" steps="113"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.6" expl="VC for inverse_in_place">
     <proof prover="4"><result status="valid" time="0.41"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.7" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.58"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.22.1.1.8" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.61"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.23" expl="assertion">
  <proof prover="3"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.24" expl="index in array bounds">
  <proof prover="3"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.25" expl="loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="WP_parameter inverse_in_place.25.1" expl="loop invariant preservation">
   <transf name="inline_goal">
    <goal name="WP_parameter inverse_in_place.25.1.1" expl="loop invariant preservation">
    <transf name="split_goal_wp">
     <goal name="WP_parameter inverse_in_place.25.1.1.1" expl="VC for inverse_in_place">
     <proof prover="3"><result status="valid" time="0.04" steps="33"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.2" expl="VC for inverse_in_place">
     <proof prover="3"><result status="valid" time="0.18" steps="40"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.3" expl="VC for inverse_in_place">
     <proof prover="4"><result status="valid" time="0.13"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.4" expl="VC for inverse_in_place">
     <proof prover="4"><result status="valid" time="0.14"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.5" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.15"/></proof>
     <proof prover="3"><result status="valid" time="0.03" steps="36"/></proof>
     <proof prover="4"><result status="valid" time="0.06"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.6" expl="VC for inverse_in_place">
     <proof prover="4"><result status="valid" time="0.24"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.7" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.54"/></proof>
     </goal>
     <goal name="WP_parameter inverse_in_place.25.1.1.8" expl="VC for inverse_in_place">
     <proof prover="0"><result status="valid" time="0.15"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter inverse_in_place.26" expl="type invariant">
  <proof prover="3"><result status="valid" time="0.02" steps="4"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.27" expl="postcondition">
  <proof prover="3"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="WP_parameter inverse_in_place.28" expl="postcondition">
  <proof prover="3"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Harness" sum="ed5fcd093136ff61f06fcb963c1c5145">
 <goal name="WP_parameter test1" expl="VC for test1">
 <proof prover="3"><result status="valid" time="0.04" steps="43"/></proof>
 </goal>
 <goal name="WP_parameter test2" expl="VC for test2">
 <proof prover="3"><result status="valid" time="0.02" steps="43"/></proof>
 </goal>
</theory>
</file>
</why3session>
