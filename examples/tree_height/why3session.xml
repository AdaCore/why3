<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="0.99.1" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Vampire" version="0.6" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../tree_height.mlw" expanded="true">
<theory name="HeightCPS" sum="2f25229264d604069c9ccec3e12b820b" expanded="true">
 <goal name="VC height_cps" expl="VC for height_cps">
 <proof prover="6"><result status="valid" time="0.00" steps="46"/></proof>
 </goal>
 <goal name="VC height" expl="VC for height">
 <proof prover="6"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Iteration" sum="5f18df8a033a043182231f18342f705d" expanded="true">
 <goal name="VC is_id" expl="VC for is_id">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC is_result" expl="VC for is_result">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="sizek_nonneg">
 <transf name="induction_ty_lex">
  <goal name="sizek_nonneg.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="helper1">
 <proof prover="0"><result status="valid" time="0.01" steps="1"/></proof>
 </goal>
 <goal name="sizew_nonneg">
 <proof prover="2"><result status="valid" time="0.11"/></proof>
 </goal>
 <goal name="VC height1" expl="VC for height1">
 <transf name="split_goal_wp">
  <goal name="VC height1.1" expl="1. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC height1.2" expl="2. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC height1.3" expl="3. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC height1.4" expl="4. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC height1.5" expl="5. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="VC height1.6" expl="6. unreachable point">
  <proof prover="6"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC height1.7" expl="7. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC height1.8" expl="8. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC height1.9" expl="9. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC height1.10" expl="10. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="41"/></proof>
  </goal>
  <goal name="VC height1.11" expl="11. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC height1.12" expl="12. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="VC height1.13" expl="13. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC height1.14" expl="14. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC height1.15" expl="15. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC height1.16" expl="16. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="41"/></proof>
  </goal>
  <goal name="VC height1.17" expl="17. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC height1.18" expl="18. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC height1.19" expl="19. unreachable point">
  <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC height1.20" expl="20. postcondition">
  <transf name="inline_all">
   <goal name="VC height1.20.1" expl="1. postcondition">
   <proof prover="6"><result status="valid" time="0.01" steps="7"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeightStack" sum="0574d29049467f5598663f7d3cdc1067" expanded="true">
 <goal name="sizes_nonneg">
 <transf name="induction_ty_lex">
  <goal name="sizes_nonneg.1" expl="1.">
  <proof prover="4"><result status="valid" time="0.23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC height_stack" expl="VC for height_stack">
 <transf name="split_goal_wp">
  <goal name="VC height_stack.1" expl="1. variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC height_stack.2" expl="2. precondition">
  <proof prover="6"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC height_stack.3" expl="3. variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC height_stack.4" expl="4. precondition">
  <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC height_stack.5" expl="5. postcondition">
  <proof prover="1" timelimit="1"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC height1" expl="VC for height1">
 <transf name="split_goal_wp">
  <goal name="VC height1.1" expl="1. precondition">
  <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC height1.2" expl="2. postcondition">
  <proof prover="1"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
