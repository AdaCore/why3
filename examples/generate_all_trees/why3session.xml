<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Eprover" version="2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="generate_all_trees.mlw"/>
<theory name="GenerateAllTrees" proved="true">
 <goal name="size_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="4899"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_left" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="size_left.0" proved="true">
  <transf name="destruct_term" proved="true" arg1="t">
   <goal name="size_left.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="5046"/></proof>
   </goal>
   <goal name="size_left.0.1" proved="true">
   <proof prover="3"><result status="valid" time="0.02" steps="4718"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_trees_0" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="all_trees_0.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="all_trees_0.0.0" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="all_trees_0.0.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.03" steps="6752"/></proof>
    </goal>
    <goal name="all_trees_0.0.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.38"/></proof>
    </goal>
    <goal name="all_trees_0.0.0.2" proved="true">
    <proof prover="3"><result status="valid" time="0.02" steps="7890"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="tree_diff" proved="true">
 <proof prover="3"><result status="valid" time="0.04" steps="6182"/></proof>
 </goal>
 <goal name="combine&#39;vc" expl="VC for combine" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="combine&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="8722"/></proof>
  </goal>
  <goal name="combine&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="165"/></proof>
  </goal>
  <goal name="combine&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="2274"/></proof>
  </goal>
  <goal name="combine&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.11" steps="29485"/></proof>
  </goal>
  <goal name="combine&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8369"/></proof>
  </goal>
  <goal name="combine&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="108"/></proof>
  </goal>
  <goal name="combine&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="7409"/></proof>
  </goal>
  <goal name="combine&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="2357"/></proof>
  </goal>
  <goal name="combine&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.14" steps="28281"/></proof>
  </goal>
  <goal name="combine&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="6006"/></proof>
  </goal>
  <goal name="combine&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="5956"/></proof>
  </goal>
  <goal name="combine&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="15655"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="all_trees&#39;vc" expl="VC for all_trees" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="all_trees&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="5357"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="7072"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8999"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="168"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="148"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="11363"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="11402"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="11370"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="12563"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.11" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="12108"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="111"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="229"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.37" steps="71615"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="17732"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9814"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9691"/></proof>
  </goal>
  <goal name="all_trees&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="7543"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
