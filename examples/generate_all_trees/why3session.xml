<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Eprover" version="2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="9" name="Alt-Ergo" version="1.30" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../generate_all_trees.mlw" proved="true">
<theory name="GenerateAllTrees" proved="true">
 <goal name="size_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_left" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="size_left.0" proved="true">
  <transf name="destruct_alg" proved="true" arg1="t">
   <goal name="size_left.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="size_left.0.1" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_trees_0" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="all_trees_0.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="all_trees_0.0.0" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="all_trees_0.0.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.03"/></proof>
    </goal>
    <goal name="all_trees_0.0.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.38"/></proof>
    </goal>
    <goal name="all_trees_0.0.0.2" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="tree_diff" proved="true">
 <proof prover="3"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="VC combine" expl="VC for combine" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC combine.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC combine.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="131"/></proof>
  </goal>
  <goal name="VC combine.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.52" steps="2512"/></proof>
  </goal>
  <goal name="VC combine.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC combine.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC combine.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="102"/></proof>
  </goal>
  <goal name="VC combine.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC combine.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.37" steps="2097"/></proof>
  </goal>
  <goal name="VC combine.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC combine.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC combine.10" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC combine.11" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC all_trees" expl="VC for all_trees" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC all_trees.0" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC all_trees.1" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC all_trees.2" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC all_trees.3" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC all_trees.4" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.00" steps="168"/></proof>
  </goal>
  <goal name="VC all_trees.5" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="VC all_trees.6" expl="loop invariant init" proved="true">
  <proof prover="9"><result status="valid" time="0.01" steps="148"/></proof>
  </goal>
  <goal name="VC all_trees.7" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC all_trees.8" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC all_trees.9" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC all_trees.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC all_trees.11" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC all_trees.12" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC all_trees.13" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.05" steps="151"/></proof>
  </goal>
  <goal name="VC all_trees.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.94"/></proof>
  </goal>
  <goal name="VC all_trees.15" expl="loop invariant preservation" proved="true">
  <proof prover="9"><result status="valid" time="0.04" steps="175"/></proof>
  </goal>
  <goal name="VC all_trees.16" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC all_trees.17" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC all_trees.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
