<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="counting_sort.mlw"/>
<theory name="Spec" proved="true">
 <goal name="eqlt&#39;vc" expl="VC for eqlt" proved="true">
 <proof prover="1"><result status="valid" time="0.76" steps="777"/></proof>
 </goal>
</theory>
<theory name="CountingSort" proved="true">
 <goal name="counting_sort&#39;vc" expl="VC for counting_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="counting_sort&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="88"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="175"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="154"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="166"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="69"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="79"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="94210"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="2.68" steps="4738376"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="204"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="28"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.26" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="337"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.27" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="221"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="28"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.29" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.30" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="34"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InPlaceCountingSort" proved="true">
 <goal name="in_place_counting_sort&#39;vc" expl="VC for in_place_counting_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="in_place_counting_sort&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="86"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="171"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="152"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="202"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.17" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="85"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="23"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="69"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="84"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="66030"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="214831"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="234"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.27" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="331"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.28" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="41457"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="27"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.30" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.31" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="25"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Harness" proved="true">
 <goal name="harness&#39;vc" expl="VC for harness" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="harness&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="harness&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="harness&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="35"/></proof>
  </goal>
  <goal name="harness&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="46058"/></proof>
  </goal>
  <goal name="harness&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="116093"/></proof>
  </goal>
  <goal name="harness&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="124148"/></proof>
  </goal>
  <goal name="harness&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="221317"/></proof>
  </goal>
  <goal name="harness&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="254"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
