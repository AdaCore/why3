<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.7.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="11" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="12" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="bitwalker.mlw"/>
<theory name="Bitwalker" proved="true">
 <goal name="nth64" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="100"/></proof>
 </goal>
 <goal name="nth8" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="260"/></proof>
 </goal>
 <goal name="nth_ultpre0&#39;vc" expl="VC for nth_ultpre0" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="nth_ultpre0&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="183"/></proof>
  <proof prover="11"><result status="valid" time="0.05" steps="35339"/></proof>
  </goal>
  <goal name="nth_ultpre0&#39;vc.1" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="183723"/></proof>
  </goal>
  <goal name="nth_ultpre0&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="571"/></proof>
  <proof prover="11"><result status="valid" time="0.65" steps="1158391"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_64bit_bv&#39;vc" expl="VC for poke_64bit_bv" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_64bit_bv&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="38192"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10258"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.18" steps="33188"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="20592"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.08" steps="70111"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="279765"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_64bit&#39;vc" expl="VC for poke_64bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_64bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.05" steps="59142"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.09" steps="150674"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="23152"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="17422"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.36" steps="80392"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="16607"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_8bit_bv&#39;vc" expl="VC for peek_8bit_bv" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_8bit_bv&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.04" steps="39194"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10272"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="12369"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.05" steps="61494"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_8bit_array&#39;vc" expl="VC for peek_8bit_array" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_8bit_array&#39;vc.0" expl="remainder by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10842"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10929"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="12576"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="12520"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="20461"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek&#39;vc" expl="VC for peek" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek&#39;vc.0" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10886"/></proof>
  </goal>
  <goal name="peek&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10944"/></proof>
  </goal>
  <goal name="peek&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.03" steps="12415"/></proof>
  </goal>
  <goal name="peek&#39;vc.3" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11038"/></proof>
  </goal>
  <goal name="peek&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="12561"/></proof>
  </goal>
  <goal name="peek&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.03" steps="1718"/></proof>
  </goal>
  <goal name="peek&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="202"/></proof>
  </goal>
  <goal name="peek&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="23871"/></proof>
  </goal>
  <goal name="peek&#39;vc.8" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="12914"/></proof>
  </goal>
  <goal name="peek&#39;vc.9" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="11649"/></proof>
  </goal>
  <goal name="peek&#39;vc.10" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="123341"/></proof>
  </goal>
  <goal name="peek&#39;vc.11" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="13122"/></proof>
  </goal>
  <goal name="peek&#39;vc.12" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.08" steps="152057"/></proof>
  </goal>
  <goal name="peek&#39;vc.13" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="13969"/></proof>
  </goal>
  <goal name="peek&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.03" steps="14151"/></proof>
  </goal>
  <goal name="peek&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="226251"/></proof>
  </goal>
  <goal name="peek&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="198048"/></proof>
  </goal>
  <goal name="peek&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="714"/></proof>
  </goal>
  <goal name="peek&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.03" steps="28276"/></proof>
  </goal>
  <goal name="peek&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="12884"/></proof>
  </goal>
  <goal name="peek&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.09" steps="133303"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_64bit&#39;vc" expl="VC for peek_64bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_64bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="38192"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10258"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="20228"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="428121"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_8bit&#39;vc" expl="VC for poke_8bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_8bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="39346"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="8281"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="15741"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10971"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="76777"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="543851"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_8bit_array&#39;vc" expl="VC for poke_8bit_array" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_8bit_array&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10842"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.1" expl="remainder by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10929"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="12585"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.03" steps="12448"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.03" steps="13196"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.5" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="poke_8bit_array&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(div i 8 = o)">
    <goal name="poke_8bit_array&#39;vc.5.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="4"><result status="valid" time="0.60" steps="846"/></proof>
    </goal>
    <goal name="poke_8bit_array&#39;vc.5.0.1" expl="false case (postcondition)" proved="true">
    <proof prover="4"><result status="valid" time="0.42" steps="770"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="poke_8bit_array&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="201"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke&#39;vc" expl="VC for poke" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke&#39;vc.0" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.03" steps="10881"/></proof>
  </goal>
  <goal name="poke&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10926"/></proof>
  </goal>
  <goal name="poke&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11987"/></proof>
  </goal>
  <goal name="poke&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11036"/></proof>
  </goal>
  <goal name="poke&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11073"/></proof>
  </goal>
  <goal name="poke&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="11238"/></proof>
  </goal>
  <goal name="poke&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10966"/></proof>
  </goal>
  <goal name="poke&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.03" steps="12049"/></proof>
  </goal>
  <goal name="poke&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="596402"/></proof>
  </goal>
  <goal name="poke&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11106"/></proof>
  </goal>
  <goal name="poke&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11271"/></proof>
  </goal>
  <goal name="poke&#39;vc.11" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="12026"/></proof>
  </goal>
  <goal name="poke&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="14141"/></proof>
  </goal>
  <goal name="poke&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10180"/></proof>
  </goal>
  <goal name="poke&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="11636"/></proof>
  </goal>
  <goal name="poke&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10180"/></proof>
  </goal>
  <goal name="poke&#39;vc.16" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="13151"/></proof>
  </goal>
  <goal name="poke&#39;vc.17" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.08" steps="82962"/></proof>
  </goal>
  <goal name="poke&#39;vc.18" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="13322"/></proof>
  </goal>
  <goal name="poke&#39;vc.19" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="13376"/></proof>
  </goal>
  <goal name="poke&#39;vc.20" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="85157"/></proof>
  </goal>
  <goal name="poke&#39;vc.21" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="poke&#39;vc.21.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="219"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="poke&#39;vc.22" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="poke&#39;vc.22.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="8703"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="13762"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.2" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="11528"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.3" expl="assertion" proved="true">
   <proof prover="11"><result status="valid" time="0.03" steps="25068"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="poke&#39;vc.23" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.03" steps="14950"/></proof>
  </goal>
  <goal name="poke&#39;vc.24" expl="loop variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="15131"/></proof>
  </goal>
  <goal name="poke&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.16" steps="141700"/></proof>
  </goal>
  <goal name="poke&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.14" steps="33595"/></proof>
  </goal>
  <goal name="poke&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="810"/></proof>
  </goal>
  <goal name="poke&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="249734"/></proof>
  </goal>
  <goal name="poke&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="11470"/></proof>
  </goal>
  <goal name="poke&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="13066"/></proof>
  </goal>
  <goal name="poke&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="211"/></proof>
  </goal>
  <goal name="poke&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="18001"/></proof>
  </goal>
  <goal name="poke&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="515994"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peekthenpoke&#39;vc" expl="VC for peekthenpoke" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peekthenpoke&#39;vc.0" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11780"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.1" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11822"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10891"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11181"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.4" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="12292"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.5" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="11226"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.6" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.04" steps="38383"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.7" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.24" steps="30182"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11819"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.07" steps="24121"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pokethenpeek&#39;vc" expl="VC for pokethenpeek" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="pokethenpeek&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.15" steps="389001"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.1" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.01" steps="10973"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="11997"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="10998"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.4" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="12947"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.5" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="13130"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.6" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.02" steps="13184"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.7" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.04" steps="13229"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.8" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.28" steps="44376"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="184"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
