<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.12.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.1.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="12" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="bitwalker.mlw"/>
<theory name="Bitwalker" proved="true">
 <goal name="nth64" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="527"/></proof>
 </goal>
 <goal name="nth8" proved="true">
 <proof prover="5"><result status="valid" time="0.060000" steps="642"/></proof>
 </goal>
 <goal name="nth_ultpre0&#39;vc" expl="VC for nth_ultpre0" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="nth_ultpre0&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.060000" steps="207"/></proof>
  <proof prover="4"><result status="valid" time="0.010000" steps="45273"/></proof>
  </goal>
  <goal name="nth_ultpre0&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="241211"/></proof>
  </goal>
  <goal name="nth_ultpre0&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.100000" steps="613"/></proof>
  <proof prover="4"><result status="valid" time="0.387626" steps="1746431"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_64bit_bv&#39;vc" expl="VC for poke_64bit_bv" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_64bit_bv&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="45692"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="10642"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.180000" steps="30636"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.100000" steps="18090"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="158064"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.240000" steps="618155"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_64bit&#39;vc" expl="VC for poke_64bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_64bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="96137"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="271166"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="23473"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="14819"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.360000" steps="77884"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="16975"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_8bit_bv&#39;vc" expl="VC for peek_8bit_bv" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_8bit_bv&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="53259"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="10656"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="9917"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="89867"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_8bit_array&#39;vc" expl="VC for peek_8bit_array" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_8bit_array&#39;vc.0" expl="remainder by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11226"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11313"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12940"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="12868"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="49977"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek&#39;vc" expl="VC for peek" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek&#39;vc.0" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11270"/></proof>
  </goal>
  <goal name="peek&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="10564"/></proof>
  </goal>
  <goal name="peek&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="12737"/></proof>
  </goal>
  <goal name="peek&#39;vc.3" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11422"/></proof>
  </goal>
  <goal name="peek&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12475"/></proof>
  </goal>
  <goal name="peek&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="220"/></proof>
  </goal>
  <goal name="peek&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="42471"/></proof>
  </goal>
  <goal name="peek&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="38008"/></proof>
  </goal>
  <goal name="peek&#39;vc.8" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13262"/></proof>
  </goal>
  <goal name="peek&#39;vc.9" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="12033"/></proof>
  </goal>
  <goal name="peek&#39;vc.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="272007"/></proof>
  </goal>
  <goal name="peek&#39;vc.11" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13470"/></proof>
  </goal>
  <goal name="peek&#39;vc.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="358203"/></proof>
  </goal>
  <goal name="peek&#39;vc.13" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="14317"/></proof>
  </goal>
  <goal name="peek&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="14499"/></proof>
  </goal>
  <goal name="peek&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.046400" steps="299545"/></proof>
  </goal>
  <goal name="peek&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.446483" steps="1699648"/></proof>
  </goal>
  <goal name="peek&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.250000" steps="750"/></proof>
  </goal>
  <goal name="peek&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="92908"/></proof>
  </goal>
  <goal name="peek&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13232"/></proof>
  </goal>
  <goal name="peek&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.050000" steps="326855"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_64bit&#39;vc" expl="VC for peek_64bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_64bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="45692"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="10642"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.100000" steps="17724"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.511059" steps="965341"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_8bit&#39;vc" expl="VC for poke_8bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_8bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="49758"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="5867"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="13239"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="8463"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="96028"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="153378"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_8bit_array&#39;vc" expl="VC for poke_8bit_array" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_8bit_array&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11226"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.1" expl="remainder by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11313"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="12949"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="12796"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="13560"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.5" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="poke_8bit_array&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(div i 8 = o)">
    <goal name="poke_8bit_array&#39;vc.5.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="1"><result status="valid" time="0.541593" steps="906"/></proof>
    </goal>
    <goal name="poke_8bit_array&#39;vc.5.0.1" expl="false case (postcondition)" proved="true">
    <proof prover="1"><result status="valid" time="0.409206" steps="818"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="poke_8bit_array&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.100000" steps="597"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke&#39;vc" expl="VC for poke" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke&#39;vc.0" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="11265"/></proof>
  </goal>
  <goal name="poke&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11310"/></proof>
  </goal>
  <goal name="poke&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12335"/></proof>
  </goal>
  <goal name="poke&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11420"/></proof>
  </goal>
  <goal name="poke&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11457"/></proof>
  </goal>
  <goal name="poke&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11622"/></proof>
  </goal>
  <goal name="poke&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11350"/></proof>
  </goal>
  <goal name="poke&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="12397"/></proof>
  </goal>
  <goal name="poke&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.435619" steps="1263631"/></proof>
  </goal>
  <goal name="poke&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11490"/></proof>
  </goal>
  <goal name="poke&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11655"/></proof>
  </goal>
  <goal name="poke&#39;vc.11" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="12374"/></proof>
  </goal>
  <goal name="poke&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="14055"/></proof>
  </goal>
  <goal name="poke&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="10564"/></proof>
  </goal>
  <goal name="poke&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11506"/></proof>
  </goal>
  <goal name="poke&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="10564"/></proof>
  </goal>
  <goal name="poke&#39;vc.16" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13499"/></proof>
  </goal>
  <goal name="poke&#39;vc.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="83301"/></proof>
  </goal>
  <goal name="poke&#39;vc.18" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="13670"/></proof>
  </goal>
  <goal name="poke&#39;vc.19" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13724"/></proof>
  </goal>
  <goal name="poke&#39;vc.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="181891"/></proof>
  </goal>
  <goal name="poke&#39;vc.21" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="poke&#39;vc.21.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.040000" steps="243"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="poke&#39;vc.22" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="poke&#39;vc.22.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.040000" steps="6535"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.050000" steps="11120"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.2" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.050000" steps="8886"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.020000" steps="37537"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="poke&#39;vc.23" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="15298"/></proof>
  </goal>
  <goal name="poke&#39;vc.24" expl="loop variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="15479"/></proof>
  </goal>
  <goal name="poke&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.060000" steps="260705"/></proof>
  </goal>
  <goal name="poke&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.140000" steps="30863"/></proof>
  </goal>
  <goal name="poke&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.250000" steps="895"/></proof>
  </goal>
  <goal name="poke&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.140000" steps="365880"/></proof>
  </goal>
  <goal name="poke&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11854"/></proof>
  </goal>
  <goal name="poke&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13414"/></proof>
  </goal>
  <goal name="poke&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="235"/></proof>
  </goal>
  <goal name="poke&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="23749"/></proof>
  </goal>
  <goal name="poke&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.471615" steps="1201954"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peekthenpoke&#39;vc" expl="VC for peekthenpoke" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peekthenpoke&#39;vc.0" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12128"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.1" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12170"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11275"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11565"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.4" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12640"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.5" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11610"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.231235" steps="613672"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.7" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.240000" steps="30550"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12203"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.070000" steps="24487"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pokethenpeek&#39;vc" expl="VC for pokethenpeek" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="pokethenpeek&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.260126" steps="674302"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.1" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="11357"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="12345"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="11382"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.4" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13295"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.5" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13478"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.6" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="13532"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.7" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="13577"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.8" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.280000" steps="41827"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.090000" steps="240"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
