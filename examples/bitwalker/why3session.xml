<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.12.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="12" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="bitwalker.mlw"/>
<theory name="Bitwalker" proved="true">
 <goal name="nth64" proved="true">
 <proof prover="0"><result status="valid" time="0.132149" steps="1498"/></proof>
 </goal>
 <goal name="nth8" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="1744"/></proof>
 </goal>
 <goal name="nth_ultpre0&#39;vc" expl="VC for nth_ultpre0" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="nth_ultpre0&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.060000" steps="610"/></proof>
  <proof prover="4"><result status="valid" time="0.010000" steps="43344"/></proof>
  </goal>
  <goal name="nth_ultpre0&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="238814"/></proof>
  </goal>
  <goal name="nth_ultpre0&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="1506"/></proof>
  <proof prover="4"><result status="valid" time="0.376085" steps="1650977"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_64bit_bv&#39;vc" expl="VC for poke_64bit_bv" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_64bit_bv&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36540"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15230"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.180000" steps="29522"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.100000" steps="17018"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="193010"/></proof>
  </goal>
  <goal name="poke_64bit_bv&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.240000" steps="246075"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_64bit&#39;vc" expl="VC for poke_64bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_64bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="111987"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="332714"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="35196"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="13716"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.411064" steps="79615"/></proof>
  </goal>
  <goal name="poke_64bit&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="28565"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_8bit_bv&#39;vc" expl="VC for peek_8bit_bv" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_8bit_bv&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="43674"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15244"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="8853"/></proof>
  </goal>
  <goal name="peek_8bit_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="100615"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_8bit_array&#39;vc" expl="VC for peek_8bit_array" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_8bit_array&#39;vc.0" expl="remainder by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15597"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15684"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="17875"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="17803"/></proof>
  </goal>
  <goal name="peek_8bit_array&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="38072"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek&#39;vc" expl="VC for peek" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek&#39;vc.0" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15641"/></proof>
  </goal>
  <goal name="peek&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15152"/></proof>
  </goal>
  <goal name="peek&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="17672"/></proof>
  </goal>
  <goal name="peek&#39;vc.3" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15793"/></proof>
  </goal>
  <goal name="peek&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="17410"/></proof>
  </goal>
  <goal name="peek&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.070000" steps="253"/></proof>
  </goal>
  <goal name="peek&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="29459"/></proof>
  </goal>
  <goal name="peek&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="29431"/></proof>
  </goal>
  <goal name="peek&#39;vc.8" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18197"/></proof>
  </goal>
  <goal name="peek&#39;vc.9" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="16404"/></proof>
  </goal>
  <goal name="peek&#39;vc.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="156924"/></proof>
  </goal>
  <goal name="peek&#39;vc.11" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18405"/></proof>
  </goal>
  <goal name="peek&#39;vc.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="127341"/></proof>
  </goal>
  <goal name="peek&#39;vc.13" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="19252"/></proof>
  </goal>
  <goal name="peek&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="19434"/></proof>
  </goal>
  <goal name="peek&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.046400" steps="229167"/></proof>
  </goal>
  <goal name="peek&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.179599" steps="700046"/></proof>
  </goal>
  <goal name="peek&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.250000" steps="2458"/></proof>
  </goal>
  <goal name="peek&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="60472"/></proof>
  </goal>
  <goal name="peek&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18167"/></proof>
  </goal>
  <goal name="peek&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.178413" steps="398542"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peek_64bit&#39;vc" expl="VC for peek_64bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peek_64bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36540"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15230"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.100000" steps="16652"/></proof>
  </goal>
  <goal name="peek_64bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.538274" steps="1220616"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_8bit&#39;vc" expl="VC for poke_8bit" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_8bit&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="43249"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.1" expl="arithmetic overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="4774"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="12123"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="7401"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="111398"/></proof>
  </goal>
  <goal name="poke_8bit&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="127349"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke_8bit_array&#39;vc" expl="VC for poke_8bit_array" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke_8bit_array&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15597"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.1" expl="remainder by zero" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15684"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="17884"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="17731"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="18654"/></proof>
  </goal>
  <goal name="poke_8bit_array&#39;vc.5" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="poke_8bit_array&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(div i 8 = o)">
    <goal name="poke_8bit_array&#39;vc.5.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="0.218639" steps="2588"/></proof>
    </goal>
    <goal name="poke_8bit_array&#39;vc.5.0.1" expl="false case (postcondition)" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="0.184018" steps="2356"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="poke_8bit_array&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="1520"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="poke&#39;vc" expl="VC for poke" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="poke&#39;vc.0" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="15636"/></proof>
  </goal>
  <goal name="poke&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15681"/></proof>
  </goal>
  <goal name="poke&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="17270"/></proof>
  </goal>
  <goal name="poke&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15791"/></proof>
  </goal>
  <goal name="poke&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15828"/></proof>
  </goal>
  <goal name="poke&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15993"/></proof>
  </goal>
  <goal name="poke&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15721"/></proof>
  </goal>
  <goal name="poke&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="17332"/></proof>
  </goal>
  <goal name="poke&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.588857" steps="2279828"/></proof>
  </goal>
  <goal name="poke&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15861"/></proof>
  </goal>
  <goal name="poke&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="16026"/></proof>
  </goal>
  <goal name="poke&#39;vc.11" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="17309"/></proof>
  </goal>
  <goal name="poke&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18990"/></proof>
  </goal>
  <goal name="poke&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15152"/></proof>
  </goal>
  <goal name="poke&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15877"/></proof>
  </goal>
  <goal name="poke&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15152"/></proof>
  </goal>
  <goal name="poke&#39;vc.16" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18434"/></proof>
  </goal>
  <goal name="poke&#39;vc.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="238352"/></proof>
  </goal>
  <goal name="poke&#39;vc.18" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="18605"/></proof>
  </goal>
  <goal name="poke&#39;vc.19" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18659"/></proof>
  </goal>
  <goal name="poke&#39;vc.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="207386"/></proof>
  </goal>
  <goal name="poke&#39;vc.21" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="poke&#39;vc.21.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.040000" steps="286"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="poke&#39;vc.22" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="poke&#39;vc.22.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.040000" steps="6609"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.050000" steps="11212"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.2" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.050000" steps="8980"/></proof>
   </goal>
   <goal name="poke&#39;vc.22.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.020000" steps="36422"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="poke&#39;vc.23" expl="arithmetic overflow" proved="true">
  <proof prover="12"><result status="valid" time="0.030000" steps="20233"/></proof>
  </goal>
  <goal name="poke&#39;vc.24" expl="loop variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="20414"/></proof>
  </goal>
  <goal name="poke&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.060000" steps="308620"/></proof>
  </goal>
  <goal name="poke&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.140000" steps="30982"/></proof>
  </goal>
  <goal name="poke&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.250000" steps="2291"/></proof>
  </goal>
  <goal name="poke&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.140000" steps="374916"/></proof>
  </goal>
  <goal name="poke&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="16225"/></proof>
  </goal>
  <goal name="poke&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18349"/></proof>
  </goal>
  <goal name="poke&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.070000" steps="767"/></proof>
  </goal>
  <goal name="poke&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="24087"/></proof>
  </goal>
  <goal name="poke&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.324545" steps="828781"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="peekthenpoke&#39;vc" expl="VC for peekthenpoke" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="peekthenpoke&#39;vc.0" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="17063"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.1" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="17105"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15646"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15936"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.4" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="17575"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.5" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15981"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.092721" steps="188959"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.7" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.290608" steps="47472"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="16574"/></proof>
  </goal>
  <goal name="peekthenpoke&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.070000" steps="35750"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pokethenpeek&#39;vc" expl="VC for pokethenpeek" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="pokethenpeek&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.050967" steps="89675"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.1" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.010000" steps="15728"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="17280"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="15753"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.4" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18230"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.5" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18413"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.6" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.020000" steps="18467"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.7" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.040000" steps="18512"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.8" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.266506" steps="37932"/></proof>
  </goal>
  <goal name="pokethenpeek&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.043201" steps="246"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
