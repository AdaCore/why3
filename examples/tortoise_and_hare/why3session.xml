<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Eprover" version="2.0" timelimit="16" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Eprover" version="1.8-001" timelimit="16" steplimit="0" memlimit="1000"/>
<prover id="9" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="tortoise_and_hare.mlw"/>
<theory name="TortoiseAndHareAlgorithm" proved="true">
 <goal name="x0&#39;vc" expl="VC for x0" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
 <goal name="x_in_range&#39;vc" expl="VC for x_in_range" proved="true">
 <proof prover="5"><result status="valid" time="0.070000" steps="391"/></proof>
 </goal>
 <goal name="periodicity&#39;vc" expl="VC for periodicity" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="periodicity&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="14495"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.040000" steps="15820"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.060000" steps="15689"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.060000" steps="17447"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.150000" steps="34959"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.070000" steps="16284"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.030000" steps="14477"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.070000" steps="22774"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.140000" steps="28265"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.029481" steps="390"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.370000" steps="47794"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.12" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.050000" steps="16072"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.13" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="14191"/></proof>
  </goal>
  <goal name="periodicity&#39;vc.14" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.060000" steps="14411"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="equality&#39;vc" expl="VC for equality" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.070000" steps="10000"/></proof>
  </goal>
  <goal name="equality&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.030000" steps="9720"/></proof>
  </goal>
  <goal name="equality&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="0.070000" steps="17206"/></proof>
   </goal>
   <goal name="equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="0.030000" steps="10084"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="equality&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="9837"/></proof>
  </goal>
  <goal name="equality&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.050000" steps="9809"/></proof>
  </goal>
  <goal name="equality&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.050000" steps="9826"/></proof>
  </goal>
  <goal name="equality&#39;vc.6" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="((k-1)*lambda &gt;= 0)">
   <goal name="equality&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="3"><result status="valid" time="3.320000"/></proof>
   </goal>
   <goal name="equality&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.030000" steps="10175"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="equality&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="equality&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="0.030000" steps="10193"/></proof>
   </goal>
   <goal name="equality&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="0.100000" steps="23650"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="equality&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.030000" steps="10262"/></proof>
  </goal>
  <goal name="equality&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="10262"/></proof>
  </goal>
  <goal name="equality&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.030000" steps="10422"/></proof>
  </goal>
  <goal name="equality&#39;vc.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="17373"/></proof>
  </goal>
  <goal name="equality&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.060000" steps="59013"/></proof>
  </goal>
  <goal name="equality&#39;vc.13" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.040000" steps="9983"/></proof>
  </goal>
  <goal name="equality&#39;vc.14" expl="unreachable point" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.070000" steps="20051"/></proof>
  </goal>
  <goal name="equality&#39;vc.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.030000" steps="10251"/></proof>
  </goal>
  <goal name="equality&#39;vc.16" expl="precondition" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.020000" steps="10078"/></proof>
  </goal>
  <goal name="equality&#39;vc.17" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.030000" steps="17249"/></proof>
  </goal>
  <goal name="equality&#39;vc.18" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="7001"/></proof>
  </goal>
  <goal name="equality&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.025534" steps="93"/></proof>
  </goal>
  <goal name="equality&#39;vc.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="equality&#39;vc.20.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.080000" steps="16020"/></proof>
   </goal>
   <goal name="equality&#39;vc.20.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="1309"/></proof>
   </goal>
   <goal name="equality&#39;vc.20.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="((k-1) * lambda &gt;= 0)">
    <goal name="equality&#39;vc.20.2.0" expl="asserted formula" proved="true">
    <proof prover="3"><result status="valid" time="3.420000"/></proof>
    </goal>
    <goal name="equality&#39;vc.20.2.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.790000"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="tortoise_and_hare&#39;vc" expl="VC for tortoise_and_hare" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="tortoise_and_hare&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="10350"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.050000" steps="15508"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.070000" steps="13279"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.040000" steps="11460"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.4" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="95"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.5" expl="unreachable point" proved="true">
  <proof prover="1"><result status="valid" time="0.081728" steps="296"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.6" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.020000" steps="10949"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.7" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="tortoise_and_hare&#39;vc.7.0" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.040000" steps="11278"/></proof>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.7.1" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.120000" steps="10862"/></proof>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.7.2" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.100000" steps="40019"/></proof>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.7.3" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.030000" steps="21289"/></proof>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.7.4" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.060000" steps="16622"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.8" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="23118"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.9" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Ensures" arg2="(n+n),n">
   <goal name="tortoise_and_hare&#39;vc.9.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="191"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.10" expl="assertion" proved="true">
  <transf name="destruct" proved="true" arg1="Assert">
   <goal name="tortoise_and_hare&#39;vc.10.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="n" arg2="(k*lambda)">
    <goal name="tortoise_and_hare&#39;vc.10.0.0" expl="assertion" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures" arg2="(j+n),j">
     <goal name="tortoise_and_hare&#39;vc.10.0.0.0" expl="assertion" proved="true">
     <proof prover="0"><result status="valid" time="0.140000" steps="24251"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="tortoise_and_hare&#39;vc.10.0.1" expl="equality hypothesis" proved="true">
    <proof prover="6"><result status="valid" time="0.020000" steps="10869"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.020000" steps="11012"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.250000" steps="42335"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="1385"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.090000" steps="11654"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.040000" steps="11543"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.020000" steps="517"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.290000" steps="67116"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="1213"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(lam1 = 0)">
   <goal name="tortoise_and_hare&#39;vc.19.0" expl="asserted formula" proved="true">
   <proof prover="6"><result status="valid" time="0.030000" steps="12254"/></proof>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.19.1" expl="loop invariant preservation" proved="true">
   <transf name="assert" proved="true" arg1="(x (n + i1) = x n)">
    <goal name="tortoise_and_hare&#39;vc.19.1.0" expl="asserted formula" proved="true">
    <proof prover="6"><result status="valid" time="0.040000" steps="12259"/></proof>
    </goal>
    <goal name="tortoise_and_hare&#39;vc.19.1.1" expl="loop invariant preservation" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures4" arg2="(n+i1),n">
     <goal name="tortoise_and_hare&#39;vc.19.1.1.0" expl="loop invariant preservation" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. k &gt;= 1 /\ i1 = k * lambda)">
      <goal name="tortoise_and_hare&#39;vc.19.1.1.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="0.040000" steps="12598"/></proof>
      </goal>
      <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1" expl="loop invariant preservation" proved="true">
      <transf name="destruct" proved="true" arg1="h">
       <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0" expl="loop invariant preservation" proved="true">
       <transf name="assert" proved="true" arg1="((k-1) * lambda &gt;= 0)">
        <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="7"><result status="valid" time="2.300000"/></proof>
        </goal>
        <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1" expl="loop invariant preservation" proved="true">
        <transf name="assert" proved="true" arg1="(i1 &gt;= lambda)">
         <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.0" expl="asserted formula" proved="true">
         <proof prover="6"><result status="valid" time="0.040000" steps="12730"/></proof>
         </goal>
         <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.1" expl="loop invariant preservation" proved="true">
         <transf name="case" proved="true" arg1="(k=1)">
          <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.1.0" expl="true case (loop invariant preservation)" proved="true">
          <proof prover="6"><result status="valid" time="0.040000" steps="12967"/></proof>
          </goal>
          <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.1.1" expl="false case (loop invariant preservation)" proved="true">
          <transf name="assert" proved="true" arg1="(x (n + lambda) &lt;&gt; x n)">
           <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.1.1.0" expl="asserted formula" proved="true">
           <transf name="assert" proved="true" arg1="(lambda &lt; i1)">
            <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.1.1.0.0" expl="asserted formula" proved="true">
            <proof prover="5"><result status="valid" time="0.320000" steps="22776"/></proof>
            </goal>
            <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.1.1.0.1" expl="asserted formula" proved="true">
            <proof prover="2"><result status="valid" time="0.030000" steps="38011"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="tortoise_and_hare&#39;vc.19.1.1.0.1.0.1.1.1.1" expl="false case (loop invariant preservation)" proved="true">
           <proof prover="6"><result status="valid" time="0.630000" steps="92750"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.20" expl="loop variant decrease" proved="true">
  <transf name="case" proved="true" arg1="(i = mu+1)">
   <goal name="tortoise_and_hare&#39;vc.20.0" expl="true case (loop variant decrease)" proved="true">
   <transf name="assert" proved="true" arg1="(x mu = x (mu + n))">
    <goal name="tortoise_and_hare&#39;vc.20.0.0" expl="asserted formula" proved="true">
    <proof prover="6"><result status="valid" time="0.050000" steps="14199"/></proof>
    </goal>
    <goal name="tortoise_and_hare&#39;vc.20.0.1" expl="true case (loop variant decrease)" proved="true">
    <proof prover="6"><result status="valid" time="0.120000" steps="11613"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.20.1" expl="false case (loop variant decrease)" proved="true">
   <proof prover="2"><result status="valid" time="0.030000" steps="9998"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.21" expl="loop invariant preservation" proved="true">
  <transf name="replace" proved="true" arg1="n" arg2="(2*n - n)">
   <goal name="tortoise_and_hare&#39;vc.21.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="516"/></proof>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.21.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.020000" steps="11454"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.22" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="tortoise_and_hare&#39;vc.22.0" expl="loop invariant preservation" proved="true">
   <proof prover="6"><result status="valid" time="0.110000" steps="27370"/></proof>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.22.1" expl="loop invariant preservation" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="0.320000" steps="57003"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.190000" steps="29308"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.256115" steps="11067"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.25" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Ensures" arg2="(n+i),n">
   <goal name="tortoise_and_hare&#39;vc.25.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.130000" steps="19717"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.26" expl="assertion" proved="true">
  <transf name="case" proved="true" arg1="(lam = 0)">
   <goal name="tortoise_and_hare&#39;vc.26.0" expl="true case (assertion)" proved="true">
   <transf name="assert" proved="true" arg1="(lambda &gt;= mu)">
    <goal name="tortoise_and_hare&#39;vc.26.0.0" expl="asserted formula" proved="true">
    <transf name="case" proved="true" arg1="(lambda &lt; mu)">
     <goal name="tortoise_and_hare&#39;vc.26.0.0.0" expl="true case (asserted formula)" proved="true">
     <transf name="assert" proved="true" arg1="(x (n + lambda) &lt;&gt; x n)">
      <goal name="tortoise_and_hare&#39;vc.26.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.030000" steps="25885"/></proof>
      </goal>
      <goal name="tortoise_and_hare&#39;vc.26.0.0.0.1" expl="true case (asserted formula)" proved="true">
      <transf name="assert" proved="true" arg1="(x (n + lambda) = x n)">
       <goal name="tortoise_and_hare&#39;vc.26.0.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="instantiate" proved="true" arg1="Ensures" arg2="(n+lambda),n">
        <goal name="tortoise_and_hare&#39;vc.26.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.060000" steps="7375"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="tortoise_and_hare&#39;vc.26.0.0.0.1.1" expl="true case (asserted formula)" proved="true">
       <proof prover="6"><result status="valid" time="0.030000" steps="11418"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="tortoise_and_hare&#39;vc.26.0.0.1" expl="false case (asserted formula)" proved="true">
     <proof prover="6"><result status="valid" time="0.020000" steps="11393"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="tortoise_and_hare&#39;vc.26.0.1" expl="true case (assertion)" proved="true">
    <transf name="destruct" proved="true" arg1="Assert2">
     <goal name="tortoise_and_hare&#39;vc.26.0.1.0" expl="true case (assertion)" proved="true">
     <transf name="assert" proved="true" arg1="(n = lambda \/ n = 2*lambda)">
      <goal name="tortoise_and_hare&#39;vc.26.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="5"><result status="valid" time="0.040000" steps="1588"/></proof>
      </goal>
      <goal name="tortoise_and_hare&#39;vc.26.0.1.0.1" expl="true case (assertion)" proved="true">
      <proof prover="0"><result status="valid" time="0.100000" steps="11624"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="tortoise_and_hare&#39;vc.26.1" expl="false case (assertion)" proved="true">
   <proof prover="0"><result status="valid" time="0.050000" steps="4199"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.030000" steps="12137"/></proof>
  </goal>
  <goal name="tortoise_and_hare&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="37861"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
