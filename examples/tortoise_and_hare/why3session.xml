<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="2" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Eprover" version="1.8-001" timelimit="16" steplimit="0" memlimit="1000"/>
<file name="../tortoise_and_hare.mlw" proved="true">
<theory name="TortoiseAndHareAlgorithm" proved="true">
 <goal name="VC x0" expl="VC for x0" proved="true">
 <proof prover="6"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC x_in_range" expl="VC for x_in_range" proved="true">
 <proof prover="2"><result status="valid" time="0.36" steps="311"/></proof>
 </goal>
 <goal name="VC periodicity" expl="VC for periodicity" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC periodicity.0" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC periodicity.1" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC periodicity.2" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC periodicity.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC periodicity.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC periodicity.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC periodicity.6" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC periodicity.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC periodicity.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC periodicity.9" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="1.24"/></proof>
  </goal>
  <goal name="VC periodicity.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.92" steps="823"/></proof>
  </goal>
  <goal name="VC periodicity.11" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC periodicity.12" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC periodicity.13" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC periodicity.14" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC equality" expl="VC for equality" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC equality.0" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC equality.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC equality.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC equality.3" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC equality.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC equality.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC equality.6" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="((k-1)*lambda &gt;= 0)">
   <goal name="VC equality.6.0" proved="true">
   <proof prover="7"><result status="valid" time="2.45"/></proof>
   </goal>
   <goal name="VC equality.6.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC equality.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC equality.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC equality.9" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC equality.9.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC equality.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC equality.10.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC equality.11" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC equality.12" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC equality.13" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC equality.14" expl="unreachable point" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC equality.14.0" expl="unreachable point" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC equality.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC equality.16" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC equality.16.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC equality.17" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC equality.18" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC equality.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC equality.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC equality.20.0" expl="VC for equality" proved="true">
   <proof prover="6"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC equality.20.1" expl="VC for equality" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="15"/></proof>
   </goal>
   <goal name="VC equality.20.2" expl="VC for equality" proved="true">
   <transf name="assert" proved="true" arg1="((k-1) * lambda &gt;= 0)">
    <goal name="VC equality.20.2.0" proved="true">
    <proof prover="7"><result status="valid" time="5.90"/></proof>
    </goal>
    <goal name="VC equality.20.2.1" expl="VC for equality" proved="true">
    <proof prover="7"><result status="valid" time="0.22"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC tortoise_and_hare" expl="VC for tortoise_and_hare" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC tortoise_and_hare.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC tortoise_and_hare.1.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC tortoise_and_hare.1.0.0" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.2" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.5" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.63" steps="396"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.6" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.7" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC tortoise_and_hare.7.0" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC tortoise_and_hare.7.1" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="6"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC tortoise_and_hare.7.2" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="6"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC tortoise_and_hare.7.3" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="6"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC tortoise_and_hare.7.4" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="6"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.8" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.9" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="H7" arg2="(n+n),n">
   <goal name="VC tortoise_and_hare.9.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.10" expl="assertion" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="VC tortoise_and_hare.10.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="n" arg2="(k*lambda)">
    <goal name="VC tortoise_and_hare.10.0.0" expl="assertion" proved="true">
    <transf name="instantiate" proved="true" arg1="H10" arg2="(j+n),j">
     <goal name="VC tortoise_and_hare.10.0.0.0" expl="assertion" proved="true">
     <proof prover="6"><result status="valid" time="0.12"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC tortoise_and_hare.10.0.1" proved="true">
    <proof prover="6"><result status="valid" time="0.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.11" expl="loop invariant init" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC tortoise_and_hare.11.0" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="VC tortoise_and_hare.11.1" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="6"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.12" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.13" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.14" expl="loop variant decrease" proved="true">
  <transf name="case" proved="true" arg1="(i = mu+1)">
   <goal name="VC tortoise_and_hare.14.0" expl="true case (loop variant decrease)" proved="true">
   <transf name="assert" proved="true" arg1="(x mu = x (mu + n))">
    <goal name="VC tortoise_and_hare.14.0.0" proved="true">
    <proof prover="6"><result status="valid" time="0.05"/></proof>
    </goal>
    <goal name="VC tortoise_and_hare.14.0.1" expl="true case (loop variant decrease)" proved="true">
    <proof prover="6"><result status="valid" time="0.12"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC tortoise_and_hare.14.1" expl="false case (loop variant decrease)" proved="true">
   <proof prover="5"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.15" expl="loop invariant preservation" proved="true">
  <transf name="replace" proved="true" arg1="n" arg2="(2*n - n)">
   <goal name="VC tortoise_and_hare.15.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="36"/></proof>
   </goal>
   <goal name="VC tortoise_and_hare.15.1" proved="true">
   <proof prover="6"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.16" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.18" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.60"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.19" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.20" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.21" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.22" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.23" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.25" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC tortoise_and_hare.25.0" expl="VC for tortoise_and_hare" proved="true">
   <proof prover="6"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC tortoise_and_hare.25.1" expl="VC for tortoise_and_hare" proved="true">
   <transf name="assert" proved="true" arg1="(x (n+lambda) = x n)">
    <goal name="VC tortoise_and_hare.25.1.0" proved="true">
    <proof prover="6"><result status="valid" time="0.39"/></proof>
    </goal>
    <goal name="VC tortoise_and_hare.25.1.1" expl="VC for tortoise_and_hare" proved="true">
    <proof prover="5"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.26" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="H23" arg2="(n+i),n">
   <goal name="VC tortoise_and_hare.26.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(exists k. k &gt;= 1 /\ i = k * lambda)">
    <goal name="VC tortoise_and_hare.26.0.0" proved="true">
    <proof prover="6"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC tortoise_and_hare.26.0.1" expl="assertion" proved="true">
    <transf name="destruct" proved="true" arg1="h">
     <goal name="VC tortoise_and_hare.26.0.1.0" expl="assertion" proved="true">
     <transf name="case" proved="true" arg1="(k=1)">
      <goal name="VC tortoise_and_hare.26.0.1.0.0" expl="true case (assertion)" proved="true">
      <proof prover="6"><result status="valid" time="0.04"/></proof>
      </goal>
      <goal name="VC tortoise_and_hare.26.0.1.0.1" expl="false case (assertion)" proved="true">
      <transf name="assert" proved="true" arg1="(x (n + (k-1) * lambda) = x n)">
       <goal name="VC tortoise_and_hare.26.0.1.0.1.0" proved="true">
       <proof prover="6"><result status="valid" time="0.52"/></proof>
       </goal>
       <goal name="VC tortoise_and_hare.26.0.1.0.1.1" expl="false case (assertion)" proved="true">
       <proof prover="6"><result status="valid" time="0.60"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC tortoise_and_hare.27" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC tortoise_and_hare.28" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
