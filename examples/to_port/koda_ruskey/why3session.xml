<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.01" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="36" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../koda_ruskey.mlw">
<theory name="KodaRuskey_Spec" proved="true" sum="e0308e10a2a37054e0603c665fb5c6b6">
 <goal name="VC eq_color" expl="VC for eq_color" proved="true">
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 <proof prover="7"><result status="valid" time="0.00" steps="9"/></proof>
 </goal>
 <goal name="size_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_forest_nonneg.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="5"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_forest_nonneg.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="7"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemmas" sum="e080da8fb8c456ab9b68962322db67fd">
 <goal name="mem_app" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="mem_app.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="mem_app.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.00" steps="9"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="mem_app.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="46"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="size_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_stack_nonneg.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="size_stack_nonneg.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.00" steps="6"/></proof>
   <proof prover="4"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="size_stack_nonneg.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="white_forest_equiv" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_forest_equiv.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="102"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_forest_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_forest_frame.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="any_forest_frame.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="any_forest_frame.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="any_forest_frame.0.2" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="167"/></proof>
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="any_forest_frame.0.3" proved="true">
   <proof prover="1"><result status="valid" time="0.08" steps="74"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="any_stack_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_stack_frame.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="any_stack_frame.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="any_stack_frame.0.1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="any_stack_frame.0.1.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="any_stack_frame.0.1.0.0" proved="true">
     <transf name="split_goal_wp" proved="true" >
      <goal name="any_stack_frame.0.1.0.0.0" proved="true">
      <proof prover="1" timelimit="36"><result status="valid" time="0.02" steps="104"/></proof>
      <proof prover="4"><result status="valid" time="0.04"/></proof>
      </goal>
      <goal name="any_stack_frame.0.1.0.0.1" proved="true">
      <proof prover="2"><result status="valid" time="0.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.07" steps="265"/></proof>
  <proof prover="7" timelimit="1"><result status="valid" time="0.04" steps="198"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame2" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame2.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.11" steps="330"/></proof>
  <proof prover="7" timelimit="1"><result status="valid" time="0.06" steps="230"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC inverse_any" expl="VC for inverse_any" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="VC inverse_any.0" expl="VC for inverse_any" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="104"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_final" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="inverse_final.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.18" steps="124"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_white" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="inverse_white.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.30" steps="268"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC white_final_exclusive" expl="VC for white_final_exclusive" proved="true">
 <proof prover="4"><result status="valid" time="0.03"/></proof>
 <proof prover="7"><result status="valid" time="0.02" steps="27"/></proof>
 </goal>
 <goal name="final_unique" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_unique.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="final_unique.0.0" proved="true">
   <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="11"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="final_unique.0.1" proved="true">
   <proof prover="1" timelimit="6"><result status="valid" time="0.52" steps="736"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC inverse_inverse" expl="VC for inverse_inverse" proved="true">
 <proof prover="4"><result status="valid" time="0.35"/></proof>
 <proof prover="7"><result status="valid" time="0.26" steps="752"/></proof>
 </goal>
 <goal name="sub_not_nil" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_not_nil.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="10"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_not_nil.1" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="8"><result status="valid" time="0.95"/></proof>
  </goal>
  <goal name="sub_not_nil.2" proved="true">
  <proof prover="0" timelimit="6"><result status="valid" time="0.01"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_empty" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_empty.0" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_empty.1" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_empty.2" proved="true">
  <proof prover="0"><result status="valid" time="0.67"/></proof>
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_mem" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_mem.0" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_mem.1" proved="true">
  <transf name="simplify_trivial_quantification" proved="true" >
   <goal name="sub_mem.1.0" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_mem.2" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken1" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken1.0" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="sub_weaken1.1" proved="true">
  <transf name="induction_ty_lex" proved="true" >
   <goal name="sub_weaken1.1.0" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="57"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_weaken1.2" proved="true">
  <proof prover="0"><result status="valid" time="0.88"/></proof>
  <proof prover="4"><result status="valid" time="0.15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken2.0" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="sub_weaken2.1" proved="true">
  <transf name="induction_ty_lex" proved="true" >
   <goal name="sub_weaken2.1.0" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="sub_weaken2.1.0.0" proved="true">
    <proof prover="4"><result status="valid" time="0.04"/></proof>
    <proof prover="5"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_weaken2.2" proved="true">
  <proof prover="0"><result status="valid" time="2.95"/></proof>
  <proof prover="4"><result status="valid" time="0.34"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_st" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="not_mem_st.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="not_mem_st.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="25"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="not_mem_st.2" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="69"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_frame" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_frame.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_frame.1" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_frame.2" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_no_rep.1" proved="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_no_rep.2" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep2.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="sub_no_rep2.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="7" timelimit="1"><result status="valid" time="0.01" steps="29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.1" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="sub_no_rep2.1.0" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.2" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.63"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_valid.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="white_valid.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.00" steps="9"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="white_valid.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="51"/></proof>
   <proof prover="4"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="final_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_valid.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="final_valid.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
   <proof prover="4"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="final_valid.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="58"/></proof>
   <proof prover="4"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_frame.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.04" steps="241"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_set" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_set.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="head_and_tail" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="head_and_tail.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="36"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_valid_coloring_f1" proved="true">
 <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="60"/></proof>
 <proof prover="4"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="sub_valid_coloring" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_valid_coloring.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="sub_valid_coloring.0.0" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="sub_valid_coloring.0.0.0" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="sub_valid_coloring.0.0.0.0" proved="true">
     <proof prover="1" timelimit="6"><result status="valid" time="0.03" steps="111"/></proof>
     <proof prover="7" timelimit="1"><result status="valid" time="0.04" steps="143"/></proof>
     </goal>
     <goal name="sub_valid_coloring.0.0.0.1" proved="true">
     <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="47"/></proof>
     <proof prover="7" timelimit="1"><result status="valid" time="0.01" steps="22"/></proof>
     </goal>
     <goal name="sub_valid_coloring.0.0.0.2" proved="true">
     <proof prover="1" timelimit="6"><result status="valid" time="0.03" steps="134"/></proof>
     <proof prover="7" timelimit="1"><result status="valid" time="0.06" steps="175"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.1" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="sub_valid_coloring.1.0" proved="true">
   <transf name="simplify_trivial_quantification" proved="true" >
    <goal name="sub_valid_coloring.1.0.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="sub_valid_coloring.1.0.0.0" proved="true">
     <transf name="split_goal_wp" proved="true" >
      <goal name="sub_valid_coloring.1.0.0.0.0" proved="true">
      <proof prover="0"><result status="valid" time="0.04"/></proof>
      <proof prover="4"><result status="valid" time="0.14"/></proof>
      <proof prover="7"><result status="valid" time="0.26" steps="351"/></proof>
      </goal>
      <goal name="sub_valid_coloring.1.0.0.0.1" proved="true">
      <proof prover="4"><result status="valid" time="0.90"/></proof>
      </goal>
      <goal name="sub_valid_coloring.1.0.0.0.2" proved="true">
      <proof prover="4"><result status="valid" time="0.92"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.2" proved="true">
  <proof prover="4"><result status="valid" time="1.26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_Cons_N" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_Cons_N.0" proved="true">
  <proof prover="1" timelimit="26"><result status="valid" time="0.01" steps="14"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="sub_Cons_N.1" proved="true">
  <proof prover="0" timelimit="26"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="sub_Cons_N.2" proved="true">
  <proof prover="0" timelimit="26"><result status="valid" time="0.08"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="7"><result status="valid" time="0.05" steps="103"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_white" proved="true">
 <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="29"/></proof>
 <proof prover="4"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="VC sub_valid_coloring_white" expl="VC for sub_valid_coloring_white">
 <transf name="split_goal_wp" >
  <goal name="VC sub_valid_coloring_white.0" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.4" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC sub_valid_coloring_white.8" expl="postcondition">
  </goal>
 </transf>
 </goal>
 <goal name="count_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_stack_nonneg.0" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="15"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC stored_trans1" expl="VC for stored_trans1" proved="true">
 <proof prover="7" timelimit="1"><result status="valid" time="0.39" steps="437"/></proof>
 </goal>
 <goal name="VC stored_trans2" expl="VC for stored_trans2" proved="true">
 <proof prover="7" timelimit="1"><result status="valid" time="0.39" steps="437"/></proof>
 </goal>
</theory>
<theory name="KodaRuskey" proved="true" sum="86ac68f78ceb4787658265bddc2afa70">
 <goal name="VC enum" expl="VC for enum" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC enum.0" expl="unreachable point" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC enum.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="VC enum.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC enum.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="72"/></proof>
  </goal>
  <goal name="VC enum.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC enum.5" expl="postcondition" proved="true">
  <proof prover="7" timelimit="1"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="VC enum.6" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC enum.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="VC enum.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC enum.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="VC enum.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC enum.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="VC enum.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC enum.13" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="53"/></proof>
  </goal>
  <goal name="VC enum.14" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="VC enum.15" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC enum.16" expl="postcondition" proved="true">
  <proof prover="7" timelimit="1"><result status="valid" time="0.08" steps="270"/></proof>
  </goal>
  <goal name="VC enum.17" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.16"/></proof>
  <proof prover="7"><result status="valid" time="0.54" steps="324"/></proof>
  </goal>
  <goal name="VC enum.18" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.18"/></proof>
  <proof prover="7"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="VC enum.19" expl="index in array bounds" proved="true">
  <proof prover="9"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="VC enum.20" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  <proof prover="7"><result status="valid" time="0.04" steps="78"/></proof>
  </goal>
  <goal name="VC enum.21" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC enum.22" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC enum.23" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.06" steps="58"/></proof>
  </goal>
  <goal name="VC enum.24" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC enum.25" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.23" steps="319"/></proof>
  </goal>
  <goal name="VC enum.26" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC enum.27" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.23"/></proof>
  <proof prover="7"><result status="valid" time="1.26" steps="915"/></proof>
  </goal>
  <goal name="VC enum.28" expl="index in array bounds" proved="true">
  <proof prover="9"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC enum.29" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.42"/></proof>
  <proof prover="7"><result status="valid" time="0.38" steps="396"/></proof>
  </goal>
  <goal name="VC enum.30" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.49"/></proof>
  <proof prover="9"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC enum.31" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.09"/></proof>
  <proof prover="7"><result status="valid" time="0.07" steps="140"/></proof>
  </goal>
  <goal name="VC enum.32" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="VC enum.33" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.09"/></proof>
  <proof prover="7"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="VC enum.34" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="VC enum.35" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="VC enum.36" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  <proof prover="7"><result status="valid" time="0.09" steps="92"/></proof>
  </goal>
  <goal name="VC enum.37" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC enum.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC enum.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC enum.40" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  <proof prover="7"><result status="valid" time="0.34" steps="315"/></proof>
  </goal>
  <goal name="VC enum.41" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.16" steps="150"/></proof>
  </goal>
  <goal name="VC enum.42" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC enum.43" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="VC enum.44" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="VC enum.45" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC enum.46" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC enum.47" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC enum.48" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="VC enum.49" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="VC enum.50" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.38"/></proof>
  <proof prover="4"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC enum.51" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC enum.52" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC enum.53" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC enum.54" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.19" steps="453"/></proof>
  </goal>
  <goal name="VC enum.55" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="VC enum.56" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC enum.57" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC enum.58" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC enum.59" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC enum.60" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  <proof prover="7"><result status="valid" time="0.61" steps="689"/></proof>
  </goal>
  <goal name="VC enum.61" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC enum.62" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.93"/></proof>
  </goal>
  <goal name="VC enum.63" expl="index in array bounds" proved="true">
  <proof prover="9"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC enum.64" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.13"/></proof>
  <proof prover="7"><result status="valid" time="0.29" steps="211"/></proof>
  </goal>
  <goal name="VC enum.65" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="VC enum.66" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.27"/></proof>
  <proof prover="7"><result status="valid" time="0.81" steps="617"/></proof>
  </goal>
  <goal name="VC enum.67" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.40"/></proof>
  <proof prover="7"><result status="valid" time="3.21" steps="2151"/></proof>
  </goal>
  <goal name="VC enum.68" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.12"/></proof>
  <proof prover="7"><result status="valid" time="0.21" steps="129"/></proof>
  </goal>
  <goal name="VC enum.69" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="VC enum.70" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="VC enum.71" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  <proof prover="7"><result status="valid" time="0.09" steps="84"/></proof>
  </goal>
  <goal name="VC enum.72" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC enum.73" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC enum.74" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC enum.75" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  <proof prover="7"><result status="valid" time="0.18" steps="167"/></proof>
  </goal>
  <goal name="VC enum.76" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.14"/></proof>
  </goal>
  <goal name="VC enum.77" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  <proof prover="7"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC enum.78" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="VC enum.79" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.53"/></proof>
  <proof prover="4"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC enum.80" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="4"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC enum.81" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.17"/></proof>
  <proof prover="7"><result status="valid" time="0.44" steps="319"/></proof>
  </goal>
  <goal name="VC enum.82" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC enum.83" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC enum.84" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.23"/></proof>
  <proof prover="4"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC enum.85" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.40"/></proof>
  <proof prover="4"><result status="valid" time="0.39"/></proof>
  <proof prover="7"><result status="valid" time="2.41" steps="1520"/></proof>
  </goal>
  <goal name="VC enum.86" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="VC enum.87" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  <proof prover="7"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC main" expl="VC for main" proved="true">
 <proof prover="7" timelimit="1"><result status="valid" time="0.03" steps="165"/></proof>
 </goal>
</theory>
</file>
</why3session>
