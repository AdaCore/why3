(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import ZArith.
Require Import Rbase.
Require Import ZOdiv.
Require int.Int.
Require int.Abs.
Require int.ComputerDivision.

Parameter sum_multiple_3_5_lt: Z -> Z.

Axiom SumEmpty : ((sum_multiple_3_5_lt 0%Z) = 0%Z).

Axiom SumNo : forall (n:Z), (0%Z <= n)%Z -> (((~ ((ZOmod n 3%Z) = 0%Z)) /\
  ~ ((ZOmod n 5%Z) = 0%Z)) ->
  ((sum_multiple_3_5_lt (n + 1%Z)%Z) = (sum_multiple_3_5_lt n))).

Axiom SumYes : forall (n:Z), (0%Z <= n)%Z -> ((((ZOmod n 3%Z) = 0%Z) \/
  ((ZOmod n 5%Z) = 0%Z)) ->
  ((sum_multiple_3_5_lt (n + 1%Z)%Z) = ((sum_multiple_3_5_lt n) + n)%Z)).

(* Why3 assumption *)
Definition closed_formula(n:Z): Z := let n3 := (ZOdiv n 3%Z) in let n5 :=
  (ZOdiv n 5%Z) in let n15 := (ZOdiv n 15%Z) in
  (ZOdiv (((3%Z * (n3 * (n3 + 1%Z)%Z)%Z)%Z + (5%Z * (n5 * (n5 + 1%Z)%Z)%Z)%Z)%Z - (15%Z * (n15 * (n15 + 1%Z)%Z)%Z)%Z)%Z 2%Z).

(* Why3 assumption *)
Definition p(n:Z): Prop :=
  ((sum_multiple_3_5_lt (n + 1%Z)%Z) = (closed_formula n)).

Axiom mod_div_unique : forall (x:Z) (y:Z) (q:Z) (r:Z), ((0%Z <= x)%Z /\
  ((0%Z < y)%Z /\ ((x = ((q * y)%Z + r)%Z) /\ ((0%Z <= r)%Z /\
  (r < y)%Z)))) -> ((q = (ZOdiv x y)) /\ (r = (ZOmod x y))).

Axiom mod_succ_1 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z < y)%Z) ->
  ((~ ((ZOmod (x + 1%Z)%Z y) = 0%Z)) ->
  ((ZOmod (x + 1%Z)%Z y) = ((ZOmod x y) + 1%Z)%Z)).

Axiom mod_succ_2 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z < y)%Z) ->
  (((ZOmod (x + 1%Z)%Z y) = 0%Z) -> ((ZOmod x y) = (y - 1%Z)%Z)).

Axiom div_succ_1 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z < y)%Z) ->
  (((ZOmod (x + 1%Z)%Z y) = 0%Z) ->
  ((ZOdiv (x + 1%Z)%Z y) = ((ZOdiv x y) + 1%Z)%Z)).

Axiom div_succ_2 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z < y)%Z) ->
  ((~ ((ZOmod (x + 1%Z)%Z y) = 0%Z)) ->
  ((ZOdiv (x + 1%Z)%Z y) = (ZOdiv x y))).

Axiom div2_simpl : forall (x:Z) (y:Z), ((2%Z * x)%Z = y) ->
  (x = (ZOdiv y 2%Z)).

Axiom add_div2 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ ((0%Z <= y)%Z /\
  ((ZOmod x 2%Z) = 0%Z))) ->
  ((ZOdiv (x + y)%Z 2%Z) = ((ZOdiv x 2%Z) + (ZOdiv y 2%Z))%Z).

Axiom sub_div2a : forall (x:Z) (y:Z), (((y <= x)%Z /\ (0%Z <= y)%Z) /\
  (((ZOmod x 2%Z) = 0%Z) /\ ((ZOmod y 2%Z) = 0%Z))) ->
  ((ZOdiv (x - y)%Z 2%Z) = ((ZOdiv x 2%Z) - (ZOdiv y 2%Z))%Z).

Axiom tr_mod_2 : forall (n:Z), (0%Z <= n)%Z ->
  ((ZOmod (n * (n + 1%Z)%Z)%Z 2%Z) = 0%Z).

(* Why3 assumption *)
Definition tr(n:Z): Z := (ZOdiv (n * (n + 1%Z)%Z)%Z 2%Z).

Axiom tr_repr : forall (n:Z), (0%Z <= n)%Z ->
  ((n * (n + 1%Z)%Z)%Z = (2%Z * (tr n))%Z).

Axiom tr_succ : forall (n:Z), (0%Z <= n)%Z ->
  ((tr (n + 1%Z)%Z) = ((tr n) + n)%Z).

Axiom mod_15 : forall (n:Z), ((ZOmod n 15%Z) = 0%Z) <->
  (((ZOmod n 3%Z) = 0%Z) /\ ((ZOmod n 5%Z) = 0%Z)).

Axiom Closed_formula_0 : (p 0%Z).

Axiom Closed_formula_n : forall (n:Z), (0%Z <= n)%Z -> ((p n) ->
  (((~ ((ZOmod (n + 1%Z)%Z 3%Z) = 0%Z)) /\
  ~ ((ZOmod (n + 1%Z)%Z 5%Z) = 0%Z)) -> (p (n + 1%Z)%Z))).

(* Why3 goal *)
Theorem Closed_formula_n_3 : forall (n:Z), (0%Z <= n)%Z -> ((p n) ->
  ((((ZOmod (n + 1%Z)%Z 3%Z) = 0%Z) /\ ~ ((ZOmod (n + 1%Z)%Z 5%Z) = 0%Z)) ->
  (p (n + 1%Z)%Z))).
intros n Hn Hind (H3,H5).
unfold p in *.
rewrite SumYes; auto with zarith.
rewrite Hind; clear Hind.
unfold closed_formula.
rewrite (div_succ_1 n 3); auto with zarith.
rewrite (div_succ_2 n 5); auto with zarith.
rewrite (div_succ_2 n 15); auto with zarith.
2: generalize (mod_15 (n+1)); intuition.
repeat rewrite tr_repr.

apply div2_simpl.
ring_simplify.
rewrite add_div2.


Qed.


