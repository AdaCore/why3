(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import ZArith.
Require Import Rbase.
Require Import ZOdiv.
Axiom Abs_le : forall (x:Z) (y:Z), ((Zabs x) <= y)%Z <-> (((-y)%Z <= x)%Z /\
  (x <= y)%Z).

Axiom mod_div_unique : forall (x:Z) (y:Z) (q:Z) (r:Z), ((0%Z <= x)%Z /\
  ((0%Z <  y)%Z /\ ((x = ((q * y)%Z + r)%Z) /\ ((0%Z <= r)%Z /\
  (r <  y)%Z)))) -> ((q = (ZOdiv x y)) /\ (r = (ZOmod x y))).

Axiom mod_succ_1 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z <  y)%Z) ->
  ((~ ((ZOmod (x + 1%Z)%Z y) = 0%Z)) ->
  ((ZOmod (x + 1%Z)%Z y) = ((ZOmod x y) + 1%Z)%Z)).

(* YOU MAY EDIT THE CONTEXT BELOW *)

(* DO NOT EDIT BELOW *)

Theorem mod_succ_2 : forall (x:Z) (y:Z), ((0%Z <= x)%Z /\ (0%Z <  y)%Z) ->
  (((ZOmod (x + 1%Z)%Z y) = 0%Z) -> ((ZOmod x y) = (y - 1%Z)%Z)).
(* YOU MAY EDIT THE PROOF BELOW *)
intros x y (Hx,Hy) H.
generalize (ZO_div_mod_eq x y); intro h1.
generalize (ZO_div_mod_eq (x+1) y); intro h2.
assert (h3:x = y * ((x + 1) / y - 1) + ((x + 1) mod y + y - 1)).
  ring_simplify; omega.
rewrite H in h3.
generalize (mod_div_unique x y ((x + 1) / y - 1) (0 + y - 1)).
intuition.
destruct H1; auto with zarith.
rewrite h3 at 1.
ring.
Qed.
(* DO NOT EDIT BELOW *)


