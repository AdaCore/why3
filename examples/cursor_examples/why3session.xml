<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Z3" version="4.11.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="cursor_examples.mlw"/>
<theory name="TestCursor" proved="true">
 <goal name="sum&#39;vc" expl="VC for sum" proved="true">
 <proof prover="4"><result status="valid" time="2.86" steps="903"/></proof>
 </goal>
</theory>
<theory name="ListCursorImpl&#39;impl" proved="true">
 <goal name="cursor&#39;vc" expl="VC for cursor" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="33"/></proof>
 </goal>
 <goal name="snoc_Cons&#39;vc" expl="VC for snoc_Cons" proved="true">
 <proof prover="4"><result status="valid" time="0.03" steps="99"/></proof>
 </goal>
 <goal name="C.next&#39;vc" expl="VC for next" proved="true">
 <proof prover="4"><result status="valid" time="0.10" steps="476"/></proof>
 </goal>
 <goal name="C.has_next&#39;vc" expl="VC for has_next" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="66"/></proof>
 </goal>
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="53"/></proof>
 </goal>
 <goal name="ListCursor&#39;impl_of.create&#39;refn&#39;vc" expl="VC for create&#39;refn" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="35"/></proof>
 </goal>
 <goal name="ListCursor&#39;impl_of.C.next&#39;refn&#39;vc" expl="VC for next&#39;refn" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="68"/></proof>
 </goal>
 <goal name="ListCursor&#39;impl_of.C.has_next&#39;refn&#39;vc" expl="VC for has_next&#39;refn" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="13"/></proof>
 </goal>
</theory>
<theory name="TestListCursor">
 <goal name="sum_of_list">
 <transf name="induction_ty_lex" >
  <goal name="sum_of_list.0">
  <transf name="split_goal_right" >
   <goal name="sum_of_list.0.0">
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="19"/></proof>
   </goal>
   <goal name="sum_of_list.0.1">
   <proof prover="4" obsolete="true"><result status="valid" time="2.77" steps="1177"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="list_sum&#39;vc" expl="VC for list_sum">
 <transf name="split_goal_right" >
  <goal name="list_sum&#39;vc.0" expl="loop invariant init">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="list_sum&#39;vc.1" expl="loop invariant init">
  <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="list_sum&#39;vc.2" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="list_sum&#39;vc.3" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.00" steps="2"/></proof>
  </goal>
  <goal name="list_sum&#39;vc.4" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="list_sum&#39;vc.5" expl="loop variant decrease">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="list_sum&#39;vc.6" expl="loop invariant preservation">
  <transf name="simplify_trivial_quantification" >
   <goal name="list_sum&#39;vc.6.0" expl="loop invariant preservation">
   <proof prover="4" obsolete="true"><result status="valid" time="3.97" steps="1495"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="list_sum&#39;vc.7" expl="loop invariant preservation">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="list_sum&#39;vc.8" expl="postcondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.82" steps="343"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ArrayCursorImpl&#39;impl">
 <goal name="cursor&#39;vc" expl="VC for cursor">
 <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="3"/></proof>
 </goal>
 <goal name="create&#39;vc" expl="VC for create">
 <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="C.has_next&#39;vc" expl="VC for has_next">
 <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="19"/></proof>
 </goal>
 <goal name="C.next&#39;vc" expl="VC for next">
 <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="75"/></proof>
 </goal>
 <goal name="ArrayCursor&#39;impl_of.create&#39;refn&#39;vc" expl="VC for create&#39;refn">
 <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="29"/></proof>
 </goal>
 <goal name="ArrayCursor&#39;impl_of.C.next&#39;refn&#39;vc" expl="VC for next&#39;refn">
 <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="46"/></proof>
 </goal>
 <goal name="ArrayCursor&#39;impl_of.C.has_next&#39;refn&#39;vc" expl="VC for has_next&#39;refn">
 <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="13"/></proof>
 </goal>
</theory>
<theory name="TestArrayCursor">
 <goal name="array_sum&#39;vc" expl="VC for array_sum">
 <transf name="split_goal_right" >
  <goal name="array_sum&#39;vc.0" expl="loop invariant init">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.1" expl="loop invariant init">
  <proof prover="1" obsolete="true"><result status="valid" time="0.04" steps="182070"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.2" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.3" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.4" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.5" expl="loop variant decrease">
  <proof prover="4" obsolete="true"><result status="valid" time="2.40" steps="1085"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.6" expl="loop invariant preservation">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.7" expl="loop invariant preservation">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="array_sum&#39;vc.8" expl="postcondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="1"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="harness1&#39;vc" expl="VC for harness1">
 <proof prover="5" obsolete="true"><result status="valid" time="0.16" steps="25574"/></proof>
 </goal>
</theory>
</file>
</why3session>
