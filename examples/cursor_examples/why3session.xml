<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="3" name="Z3" version="4.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/><path name="cursor_examples.mlw"/>
<theory name="TestCursor" proved="true">
 <goal name="VC sum" expl="VC for sum" proved="true">
 <proof prover="4"><result status="valid" time="2.86" steps="903"/></proof>
 </goal>
</theory>
<theory name="ListCursorImpl" proved="true">
 <goal name="VC cursor" expl="VC for cursor" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="33"/></proof>
 </goal>
 <goal name="VC snoc_Cons" expl="VC for snoc_Cons" proved="true">
 <proof prover="4"><result status="valid" time="0.04" steps="99"/></proof>
 </goal>
 <goal name="VC next" expl="VC for next" proved="true">
 <proof prover="4"><result status="valid" time="0.13" steps="476"/></proof>
 </goal>
 <goal name="VC has_next" expl="VC for has_next" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="66"/></proof>
 </goal>
 <goal name="VC create" expl="VC for create" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="53"/></proof>
 </goal>
 <goal name="ListCursor.VC create" expl="VC for create" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="35"/></proof>
 </goal>
 <goal name="ListCursor.C.VC next" expl="VC for next" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="68"/></proof>
 </goal>
 <goal name="ListCursor.C.VC has_next" expl="VC for has_next" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="13"/></proof>
 </goal>
</theory>
<theory name="TestListCursor" proved="true">
 <goal name="sum_of_list" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="sum_of_list.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="sum_of_list.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="19"/></proof>
   </goal>
   <goal name="sum_of_list.0.1" proved="true">
   <proof prover="4"><result status="valid" time="3.48" steps="1177"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC list_sum" expl="VC for list_sum" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC list_sum.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC list_sum.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC list_sum.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC list_sum.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC list_sum.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="VC list_sum.5" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="VC list_sum.6" expl="loop invariant preservation" proved="true">
  <transf name="simplify_trivial_quantification" proved="true" >
   <goal name="VC list_sum.6.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="4.55" steps="1495"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC list_sum.7" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC list_sum.8" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.08" steps="343"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="TestListCursorLink" proved="true">
 <goal name="TestListCursor.ListCursor.VC create" expl="VC for create" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="40"/></proof>
 </goal>
 <goal name="TestListCursor.ListCursor.C.VC next" expl="VC for next" proved="true">
 <proof prover="4"><result status="valid" time="0.03" steps="71"/></proof>
 </goal>
 <goal name="TestListCursor.ListCursor.C.VC has_next" expl="VC for has_next" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
</theory>
<theory name="ArrayCursorImpl" proved="true">
 <goal name="VC cursor" expl="VC for cursor" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="3"/></proof>
 </goal>
 <goal name="VC create" expl="VC for create" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="5"/></proof>
 </goal>
 <goal name="VC has_next" expl="VC for has_next" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="19"/></proof>
 </goal>
 <goal name="VC next" expl="VC for next" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
 </goal>
 <goal name="ArrayCursor.VC create" expl="VC for create" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="29"/></proof>
 </goal>
 <goal name="ArrayCursor.C.VC next" expl="VC for next" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC next.0" expl="precondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="VC next.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="7"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC next.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC next.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="50"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ArrayCursor.C.VC has_next" expl="VC for has_next" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="13"/></proof>
 </goal>
</theory>
<theory name="TestArrayCursor" proved="true">
 <goal name="VC array_sum" expl="VC for array_sum" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC array_sum.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="VC array_sum.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="VC array_sum.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC array_sum.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC array_sum.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC array_sum.5" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="VC array_sum.6" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="3.17" steps="1085"/></proof>
  </goal>
  <goal name="VC array_sum.7" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="VC array_sum.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="154773"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC harness1" expl="VC for harness1" proved="true">
 <proof prover="5"><result status="valid" time="0.16" steps="25838"/></proof>
 </goal>
</theory>
<theory name="TestArrayCursorLink" proved="true">
 <goal name="TestArrayCursor.ArrayCursor.VC create" expl="VC for create" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="29"/></proof>
 </goal>
 <goal name="TestArrayCursor.ArrayCursor.C.VC next" expl="VC for next" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="46"/></proof>
 </goal>
 <goal name="TestArrayCursor.ArrayCursor.C.VC has_next" expl="VC for has_next" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="13"/></proof>
 </goal>
</theory>
</file>
</why3session>
