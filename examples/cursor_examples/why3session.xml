<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../cursor_examples.mlw">
<theory name="TestCursor" sum="4c6babb04c51cb21c0e11617bac06fa4">
 <goal name="VC sum" expl="VC for sum">
 <proof prover="2"><result status="valid" time="4.21" steps="906"/></proof>
 </goal>
</theory>
<theory name="ListCursorImpl" sum="5c9d2123d18fe945b303f391ec90daed">
 <goal name="VC cursor" expl="VC for cursor">
 <proof prover="2"><result status="valid" time="0.02" steps="33"/></proof>
 </goal>
 <goal name="VC snoc_Cons" expl="VC for snoc_Cons">
 <proof prover="2"><result status="valid" time="0.04" steps="99"/></proof>
 </goal>
 <goal name="VC next" expl="VC for next">
 <proof prover="2"><result status="valid" time="0.21" steps="465"/></proof>
 </goal>
 <goal name="VC has_next" expl="VC for has_next">
 <proof prover="2"><result status="valid" time="0.02" steps="66"/></proof>
 </goal>
 <goal name="VC create" expl="VC for create">
 <proof prover="2"><result status="valid" time="0.02" steps="51"/></proof>
 </goal>
 <goal name="ListCursor.VC create" expl="VC for create">
 <proof prover="2"><result status="valid" time="0.02" steps="33"/></proof>
 </goal>
 <goal name="ListCursor.C.VC next" expl="VC for next">
 <proof prover="2"><result status="valid" time="0.02" steps="56"/></proof>
 </goal>
 <goal name="ListCursor.C.VC has_next" expl="VC for has_next">
 <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
</theory>
<theory name="TestListCursor" sum="f903ab67f6dff0732701d35f039a9c15">
 <goal name="sum_of_list" expl="">
 <transf name="induction_ty_lex">
  <goal name="sum_of_list.1" expl="">
  <transf name="split_goal_wp">
   <goal name="sum_of_list.1.1" expl="">
   <proof prover="2"><result status="valid" time="0.02" steps="19"/></proof>
   </goal>
   <goal name="sum_of_list.1.2" expl="">
   <proof prover="2"><result status="valid" time="4.04" steps="1147"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC list_sum" expl="VC for list_sum">
 <transf name="split_goal_wp">
  <goal name="VC list_sum.1" expl="loop invariant init">
  <proof prover="2"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="VC list_sum.2" expl="loop invariant init">
  <proof prover="2"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC list_sum.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC list_sum.4" expl="precondition">
  <proof prover="2"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC list_sum.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="VC list_sum.6" expl="loop variant decrease">
  <proof prover="2"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="VC list_sum.7" expl="loop invariant preservation">
  <transf name="simplify_trivial_quantification">
   <goal name="VC list_sum.7.1" expl="loop invariant preservation">
   <proof prover="2"><result status="valid" time="5.29" steps="1512"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC list_sum.8" expl="loop invariant preservation">
  <proof prover="2"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC list_sum.9" expl="postcondition">
  <proof prover="2"><result status="valid" time="1.80" steps="340"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="TestListCursorLink" sum="57ad90333a0eff06c751d7979b07b08c">
 <goal name="TestListCursor.ListCursor.VC create" expl="VC for create">
 <proof prover="2"><result status="valid" time="0.02" steps="38"/></proof>
 </goal>
 <goal name="TestListCursor.ListCursor.C.VC next" expl="VC for next">
 <proof prover="2"><result status="valid" time="0.03" steps="59"/></proof>
 </goal>
 <goal name="TestListCursor.ListCursor.C.VC has_next" expl="VC for has_next">
 <proof prover="2"><result status="valid" time="0.01" steps="13"/></proof>
 </goal>
</theory>
<theory name="ArrayCursorImpl" sum="8c3698b8bd80945d80a7ab2dcab28e27">
 <goal name="VC cursor" expl="VC for cursor">
 <proof prover="2"><result status="valid" time="0.02" steps="3"/></proof>
 </goal>
 <goal name="VC create" expl="VC for create">
 <proof prover="2"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="VC has_next" expl="VC for has_next">
 <proof prover="2"><result status="valid" time="0.02" steps="19"/></proof>
 </goal>
 <goal name="VC next" expl="VC for next">
 <transf name="split_goal_wp">
  <goal name="VC next.1" expl="unreachable point">
  <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC next.2" expl="type invariant">
  <transf name="split_goal_wp">
   <goal name="VC next.2.1" expl="VC for next">
   <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC next.2.2" expl="VC for next">
   <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="VC next.2.3" expl="VC for next">
   <proof prover="2"><result status="valid" time="0.01" steps="17"/></proof>
   </goal>
   <goal name="VC next.2.4" expl="VC for next">
   <proof prover="2"><result status="valid" time="0.03" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC next.3" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC next.4" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ArrayCursor.VC create" expl="VC for create">
 <proof prover="2"><result status="valid" time="0.02" steps="27"/></proof>
 </goal>
 <goal name="ArrayCursor.C.VC next" expl="VC for next">
 <proof prover="2"><result status="valid" time="0.02" steps="36"/></proof>
 </goal>
 <goal name="ArrayCursor.C.VC has_next" expl="VC for has_next">
 <proof prover="2"><result status="valid" time="0.02" steps="12"/></proof>
 </goal>
</theory>
<theory name="TestArrayCursor" sum="578ef9a36aace669bd2dc95638e8e08c">
 <goal name="VC array_sum" expl="VC for array_sum">
 <transf name="split_goal_wp">
  <goal name="VC array_sum.1" expl="loop invariant init">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC array_sum.2" expl="loop invariant init">
  <proof prover="2"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="VC array_sum.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC array_sum.4" expl="precondition">
  <proof prover="2"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC array_sum.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="VC array_sum.6" expl="loop variant decrease">
  <proof prover="2"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="VC array_sum.7" expl="loop invariant preservation">
  <proof prover="2"><result status="valid" time="3.17" steps="1224"/></proof>
  </goal>
  <goal name="VC array_sum.8" expl="loop invariant preservation">
  <proof prover="2"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="VC array_sum.9" expl="postcondition">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <metas>
   <ts_pos name="real" arity="0" id="real" ip_theory="BuiltIn">
    <ip_library name="why3"/>
    <ip_library name="BuiltIn"/>
    <ip_qualid name="real"/>
   </ts_pos>
   <ts_pos name="bool" arity="0" id="bool" ip_theory="Bool">
    <ip_library name="why3"/>
    <ip_library name="Bool"/>
    <ip_qualid name="bool"/>
   </ts_pos>
   <ts_pos name="tuple0" arity="0" id="tuple0" ip_theory="Tuple0">
    <ip_library name="why3"/>
    <ip_library name="Tuple0"/>
    <ip_qualid name="tuple0"/>
   </ts_pos>
   <ts_pos name="unit" arity="0" id="unit" ip_theory="Unit">
    <ip_library name="why3"/>
    <ip_library name="Unit"/>
    <ip_qualid name="unit"/>
   </ts_pos>
   <ts_pos name="map" arity="2" id="map" ip_theory="Map">
    <ip_library name="map"/>
    <ip_qualid name="map"/>
   </ts_pos>
   <ts_pos name="option" arity="1" id="option" ip_theory="Option">
    <ip_library name="option"/>
    <ip_qualid name="option"/>
   </ts_pos>
   <ts_pos name="ref" arity="1" id="ref" ip_theory="Ref">
    <ip_library name="ref"/>
    <ip_qualid name="ref"/>
   </ts_pos>
   <ls_pos name="infix =" id="infix =" ip_theory="BuiltIn">
    <ip_library name="why3"/>
    <ip_library name="BuiltIn"/>
    <ip_qualid name="infix ="/>
   </ls_pos>
   <ls_pos name="infix @" id="infix @" ip_theory="HighOrd">
    <ip_library name="why3"/>
    <ip_library name="HighOrd"/>
    <ip_qualid name="infix @"/>
   </ls_pos>
   <ls_pos name="zero" id="zero" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="zero"/>
   </ls_pos>
   <ls_pos name="one" id="one" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="one"/>
   </ls_pos>
   <ls_pos name="prefix -" id="prefix -" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="prefix -"/>
   </ls_pos>
   <ls_pos name="infix +" id="infix +" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="infix +"/>
   </ls_pos>
   <ls_pos name="infix *" id="infix *" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="infix *"/>
   </ls_pos>
   <ls_pos name="infix &lt;" id="infix &lt;" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="infix &lt;"/>
   </ls_pos>
   <ls_pos name="infix &gt;" id="infix &gt;" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="infix &gt;"/>
   </ls_pos>
   <ls_pos name="infix &gt;=" id="infix &gt;=" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="infix &gt;="/>
   </ls_pos>
   <ls_pos name="sum" id="sum" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="sum"/>
   </ls_pos>
   <ls_pos name="length" id="length" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="length"/>
   </ls_pos>
   <ls_pos name="get" id="get" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="get"/>
   </ls_pos>
   <ls_pos name="infix ==" id="infix ==" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="infix =="/>
   </ls_pos>
   <ls_pos name="create" id="create" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="create"/>
   </ls_pos>
   <ls_pos name="empty" id="empty" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="empty"/>
   </ls_pos>
   <ls_pos name="set" id="set" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="set"/>
   </ls_pos>
   <ls_pos name="mixfix [&lt;-]" id="mixfix [&lt;-]" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [&lt;-]"/>
   </ls_pos>
   <ls_pos name="singleton" id="singleton" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="singleton"/>
   </ls_pos>
   <ls_pos name="cons" id="cons" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="cons"/>
   </ls_pos>
   <ls_pos name="snoc" id="snoc" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="snoc"/>
   </ls_pos>
   <ls_pos name="mixfix [_.._]" id="mixfix [_.._]" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [_.._]"/>
   </ls_pos>
   <ls_pos name="mixfix [_..]" id="mixfix [_..]" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [_..]"/>
   </ls_pos>
   <ls_pos name="mixfix [.._]" id="mixfix [.._]" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [.._]"/>
   </ls_pos>
   <ls_pos name="infix ++" id="infix ++" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="infix ++"/>
   </ls_pos>
   <ls_pos name="is_nil" id="is_nil" ip_theory="List">
    <ip_library name="list"/>
    <ip_qualid name="is_nil"/>
   </ls_pos>
   <ls_pos name="length" id="length1" ip_theory="Length">
    <ip_library name="list"/>
    <ip_qualid name="length"/>
   </ls_pos>
   <ls_pos name="mem" id="mem" ip_theory="Mem">
    <ip_library name="list"/>
    <ip_qualid name="mem"/>
   </ls_pos>
   <ls_pos name="get" id="get1" ip_theory="Map">
    <ip_library name="map"/>
    <ip_qualid name="get"/>
   </ls_pos>
   <ls_pos name="set" id="set1" ip_theory="Map">
    <ip_library name="map"/>
    <ip_qualid name="set"/>
   </ls_pos>
   <ls_pos name="mixfix []" id="mixfix []" ip_theory="Map">
    <ip_library name="map"/>
    <ip_qualid name="mixfix []"/>
   </ls_pos>
   <ls_pos name="mixfix [&lt;-]" id="mixfix [&lt;-]1" ip_theory="Map">
    <ip_library name="map"/>
    <ip_qualid name="mixfix [&lt;-]"/>
   </ls_pos>
   <ls_pos name="is_none" id="is_none" ip_theory="Option">
    <ip_library name="option"/>
    <ip_qualid name="is_none"/>
   </ls_pos>
   <ls_pos name="nth" id="nth" ip_theory="Nth">
    <ip_library name="list"/>
    <ip_qualid name="nth"/>
   </ls_pos>
   <ls_pos name="infix ++" id="infix ++1" ip_theory="Append">
    <ip_library name="list"/>
    <ip_qualid name="infix ++"/>
   </ls_pos>
   <ls_pos name="to_list" id="to_list" ip_theory="ToList">
    <ip_library name="seq"/>
    <ip_qualid name="to_list"/>
   </ls_pos>
   <ls_pos name="of_list" id="of_list" ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="of_list"/>
   </ls_pos>
   <ls_pos name="point_wise" id="point_wise" ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="point_wise"/>
   </ls_pos>
   <ls_pos name="prefix !" id="prefix !" ip_theory="Ref">
    <ip_library name="ref"/>
    <ip_qualid name="prefix !"/>
   </ls_pos>
   <ls_pos name="elts" id="elts" ip_theory="Array">
    <ip_library name="array"/>
    <ip_qualid name="elts"/>
   </ls_pos>
   <ls_pos name="length" id="length2" ip_theory="Array">
    <ip_library name="array"/>
    <ip_qualid name="length"/>
   </ls_pos>
   <ls_pos name="mixfix [&lt;-]" id="mixfix [&lt;-]2" ip_theory="Array">
    <ip_library name="array"/>
    <ip_qualid name="mixfix [&lt;-]"/>
   </ls_pos>
   <ls_pos name="to_seq_sub" id="to_seq_sub" ip_theory="ToSeq">
    <ip_library name="array"/>
    <ip_qualid name="to_seq_sub"/>
   </ls_pos>
   <ls_pos name="visited" id="visited" ip_theory="ArrayCursor">
    <ip_library name="cursor"/>
    <ip_qualid name="visited"/>
   </ls_pos>
   <ls_pos name="collection" id="collection" ip_theory="ArrayCursor">
    <ip_library name="cursor"/>
    <ip_qualid name="collection"/>
   </ls_pos>
   <pr_pos name="Assoc" id="Assoc" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Assoc"/>
   </pr_pos>
   <pr_pos name="Unit_def_l" id="Unit_def_l" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Unit_def_l"/>
   </pr_pos>
   <pr_pos name="Unit_def_r" id="Unit_def_r" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Unit_def_r"/>
   </pr_pos>
   <pr_pos name="Inv_def_l" id="Inv_def_l" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Inv_def_l"/>
   </pr_pos>
   <pr_pos name="Inv_def_r" id="Inv_def_r" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Inv_def_r"/>
   </pr_pos>
   <pr_pos name="Comm" id="Comm" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Comm"/>
   </pr_pos>
   <pr_pos name="Assoc" id="Assoc1" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="MulAssoc"/>
    <ip_qualid name="Assoc"/>
   </pr_pos>
   <pr_pos name="Mul_distr_l" id="Mul_distr_l" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Mul_distr_l"/>
   </pr_pos>
   <pr_pos name="Mul_distr_r" id="Mul_distr_r" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Mul_distr_r"/>
   </pr_pos>
   <pr_pos name="Comm" id="Comm1" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="MulComm"/>
    <ip_qualid name="Comm"/>
   </pr_pos>
   <pr_pos name="Unitary" id="Unitary" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Unitary"/>
   </pr_pos>
   <pr_pos name="NonTrivialRing" id="NonTrivialRing" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="NonTrivialRing"/>
   </pr_pos>
   <pr_pos name="Refl" id="Refl" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Refl"/>
   </pr_pos>
   <pr_pos name="Trans" id="Trans" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Trans"/>
   </pr_pos>
   <pr_pos name="Antisymm" id="Antisymm" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Antisymm"/>
   </pr_pos>
   <pr_pos name="Total" id="Total" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="Total"/>
   </pr_pos>
   <pr_pos name="ZeroLessOne" id="ZeroLessOne" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="ZeroLessOne"/>
   </pr_pos>
   <pr_pos name="CompatOrderAdd" id="CompatOrderAdd" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="CompatOrderAdd"/>
   </pr_pos>
   <pr_pos name="CompatOrderMult" id="CompatOrderMult" ip_theory="Int">
    <ip_library name="int"/>
    <ip_qualid name="CompatOrderMult"/>
   </pr_pos>
   <pr_pos name="sum_def" id="sum_def" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="sum_def"/>
   </pr_pos>
   <pr_pos name="sum_left" id="sum_left" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="sum_left"/>
   </pr_pos>
   <pr_pos name="sum_le" id="sum_le" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="sum_le"/>
   </pr_pos>
   <pr_pos name="sum_zero" id="sum_zero" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="sum_zero"/>
   </pr_pos>
   <pr_pos name="sum_nonneg" id="sum_nonneg" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="sum_nonneg"/>
   </pr_pos>
   <pr_pos name="sum_decomp" id="sum_decomp" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="sum_decomp"/>
   </pr_pos>
   <pr_pos name="shift_left" id="shift_left" ip_theory="Sum">
    <ip_library name="int"/>
    <ip_qualid name="shift_left"/>
   </pr_pos>
   <pr_pos name="length_nonnegative" id="length_nonnegative" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="length_nonnegative"/>
   </pr_pos>
   <pr_pos name="infix ==_spec" id="infix ==_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="infix ==_spec"/>
   </pr_pos>
   <pr_pos name="create_spec" id="create_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="create_spec"/>
   </pr_pos>
   <pr_pos name="empty_def" id="empty_def" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="empty_def"/>
   </pr_pos>
   <pr_pos name="set_spec" id="set_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="set_spec"/>
   </pr_pos>
   <pr_pos name="set_def" id="set_def" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="set_def"/>
   </pr_pos>
   <pr_pos name="mixfix [&lt;-]_def" id="mixfix [&lt;-]_def" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [&lt;-]_def"/>
   </pr_pos>
   <pr_pos name="singleton_spec" id="singleton_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="singleton_spec"/>
   </pr_pos>
   <pr_pos name="cons_spec" id="cons_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="cons_spec"/>
   </pr_pos>
   <pr_pos name="snoc_spec" id="snoc_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="snoc_spec"/>
   </pr_pos>
   <pr_pos name="mixfix [_.._]_spec" id="mixfix [_.._]_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [_.._]_spec"/>
   </pr_pos>
   <pr_pos name="mixfix [_.._]_def" id="mixfix [_.._]_def" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [_.._]_def"/>
   </pr_pos>
   <pr_pos name="mixfix [_..]_def" id="mixfix [_..]_def" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [_..]_def"/>
   </pr_pos>
   <pr_pos name="mixfix [.._]_def" id="mixfix [.._]_def" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="mixfix [.._]_def"/>
   </pr_pos>
   <pr_pos name="infix ++_spec" id="infix ++_spec" ip_theory="Seq">
    <ip_library name="seq"/>
    <ip_qualid name="infix ++_spec"/>
   </pr_pos>
   <pr_pos name="is_nil_spec" id="is_nil_spec" ip_theory="List">
    <ip_library name="list"/>
    <ip_qualid name="is_nil_spec"/>
   </pr_pos>
   <pr_pos name="Length_nonnegative" id="Length_nonnegative"
    ip_theory="Length">
    <ip_library name="list"/>
    <ip_qualid name="Length_nonnegative"/>
   </pr_pos>
   <pr_pos name="Length_nil" id="Length_nil" ip_theory="Length">
    <ip_library name="list"/>
    <ip_qualid name="Length_nil"/>
   </pr_pos>
   <pr_pos name="is_none_spec" id="is_none_spec" ip_theory="Option">
    <ip_library name="option"/>
    <ip_qualid name="is_none_spec"/>
   </pr_pos>
   <pr_pos name="Append_assoc" id="Append_assoc" ip_theory="Append">
    <ip_library name="list"/>
    <ip_qualid name="Append_assoc"/>
   </pr_pos>
   <pr_pos name="Append_l_nil" id="Append_l_nil" ip_theory="Append">
    <ip_library name="list"/>
    <ip_qualid name="Append_l_nil"/>
   </pr_pos>
   <pr_pos name="Append_length" id="Append_length" ip_theory="Append">
    <ip_library name="list"/>
    <ip_qualid name="Append_length"/>
   </pr_pos>
   <pr_pos name="mem_append" id="mem_append" ip_theory="Append">
    <ip_library name="list"/>
    <ip_qualid name="mem_append"/>
   </pr_pos>
   <pr_pos name="mem_decomp" id="mem_decomp" ip_theory="Append">
    <ip_library name="list"/>
    <ip_qualid name="mem_decomp"/>
   </pr_pos>
   <pr_pos name="to_list_empty" id="to_list_empty" ip_theory="ToList">
    <ip_library name="seq"/>
    <ip_qualid name="to_list_empty"/>
   </pr_pos>
   <pr_pos name="to_list_cons" id="to_list_cons" ip_theory="ToList">
    <ip_library name="seq"/>
    <ip_qualid name="to_list_cons"/>
   </pr_pos>
   <pr_pos name="to_list_length" id="to_list_length" ip_theory="ToList">
    <ip_library name="seq"/>
    <ip_qualid name="to_list_length"/>
   </pr_pos>
   <pr_pos name="to_list_nth" id="to_list_nth" ip_theory="ToList">
    <ip_library name="seq"/>
    <ip_qualid name="to_list_nth"/>
   </pr_pos>
   <pr_pos name="to_list_def_cons" id="to_list_def_cons" ip_theory="ToList">
    <ip_library name="seq"/>
    <ip_qualid name="to_list_def_cons"/>
   </pr_pos>
   <pr_pos name="length_of_list" id="length_of_list" ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="length_of_list"/>
   </pr_pos>
   <pr_pos name="elts_seq_of_list" id="elts_seq_of_list" ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="elts_seq_of_list"/>
   </pr_pos>
   <pr_pos name="is_of_list" id="is_of_list" ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="is_of_list"/>
   </pr_pos>
   <pr_pos name="of_list_app" id="of_list_app" ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="of_list_app"/>
   </pr_pos>
   <pr_pos name="of_list_app_length" id="of_list_app_length"
    ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="of_list_app_length"/>
   </pr_pos>
   <pr_pos name="of_list_snoc" id="of_list_snoc" ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="of_list_snoc"/>
   </pr_pos>
   <pr_pos name="convolution_to_of_list" id="convolution_to_of_list"
    ip_theory="OfList">
    <ip_library name="seq"/>
    <ip_qualid name="convolution_to_of_list"/>
   </pr_pos>
   <pr_pos name="mixfix [&lt;-]_spec" id="mixfix [&lt;-]_spec"
    ip_theory="Array">
    <ip_library name="array"/>
    <ip_qualid name="mixfix [&lt;-]_spec"/>
   </pr_pos>
   <pr_pos name="to_seq_sub_def" id="to_seq_sub_def" ip_theory="ToSeq">
    <ip_library name="array"/>
    <ip_qualid name="to_seq_sub_def"/>
   </pr_pos>
   <meta name="remove_logic">
    <meta_arg_ls id="infix ="/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix @"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="zero"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="one"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="prefix -"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix +"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix *"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix &lt;"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix &gt;"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix &gt;="/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="sum"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="length"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="get"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix =="/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="create"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="empty"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="set"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mixfix [&lt;-]"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="singleton"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="cons"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="snoc"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mixfix [_.._]"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mixfix [_..]"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mixfix [.._]"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix ++"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="is_nil"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="length1"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mem"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="get1"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="set1"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mixfix []"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mixfix [&lt;-]1"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="is_none"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="nth"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="infix ++1"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="to_list"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="of_list"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="point_wise"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="prefix !"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="elts"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="length2"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="mixfix [&lt;-]2"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="to_seq_sub"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="visited"/>
   </meta>
   <meta name="remove_logic">
    <meta_arg_ls id="collection"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Assoc"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Unit_def_l"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Unit_def_r"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Inv_def_l"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Inv_def_r"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Comm"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Assoc1"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Mul_distr_l"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Mul_distr_r"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Comm1"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Unitary"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="NonTrivialRing"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Refl"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Trans"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Antisymm"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Total"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="ZeroLessOne"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="CompatOrderAdd"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="CompatOrderMult"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="sum_def"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="sum_left"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="sum_le"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="sum_zero"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="sum_nonneg"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="sum_decomp"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="shift_left"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="length_nonnegative"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="infix ==_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="create_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="empty_def"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="set_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="set_def"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mixfix [&lt;-]_def"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="singleton_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="cons_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="snoc_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mixfix [_.._]_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mixfix [_.._]_def"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mixfix [_..]_def"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mixfix [.._]_def"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="infix ++_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="is_nil_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Length_nonnegative"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Length_nil"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="is_none_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Append_assoc"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Append_l_nil"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="Append_length"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mem_append"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mem_decomp"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="to_list_empty"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="to_list_cons"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="to_list_length"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="to_list_nth"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="to_list_def_cons"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="length_of_list"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="elts_seq_of_list"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="is_of_list"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="of_list_app"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="of_list_app_length"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="of_list_snoc"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="convolution_to_of_list"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="mixfix [&lt;-]_spec"/>
   </meta>
   <meta name="remove_prop">
    <meta_arg_pr id="to_seq_sub_def"/>
   </meta>
   <meta name="remove_type">
    <meta_arg_ts id="real"/>
   </meta>
   <meta name="remove_type">
    <meta_arg_ts id="bool"/>
   </meta>
   <meta name="remove_type">
    <meta_arg_ts id="tuple0"/>
   </meta>
   <meta name="remove_type">
    <meta_arg_ts id="unit"/>
   </meta>
   <meta name="remove_type">
    <meta_arg_ts id="map"/>
   </meta>
   <meta name="remove_type">
    <meta_arg_ts id="option"/>
   </meta>
   <meta name="remove_type">
    <meta_arg_ts id="ref"/>
   </meta>
   <goal name="VC array_sum.9" expl="postcondition">
   <transf name="eliminate_builtin">
    <goal name="VC array_sum.9.1" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.06"/></proof>
    <proof prover="1"><result status="valid" time="0.06"/></proof>
    </goal>
   </transf>
   </goal>
  </metas>
  </goal>
 </transf>
 </goal>
 <goal name="VC harness1" expl="VC for harness1">
 <proof prover="0"><result status="valid" time="0.16"/></proof>
 </goal>
</theory>
<theory name="TestArrayCursorLink" sum="370a61b549d3ea34adaa1e3c4d098761">
 <goal name="TestArrayCursor.ArrayCursor.VC create" expl="VC for create">
 <proof prover="2"><result status="valid" time="0.02" steps="27"/></proof>
 </goal>
 <goal name="TestArrayCursor.ArrayCursor.C.VC next" expl="VC for next">
 <proof prover="2"><result status="valid" time="0.02" steps="36"/></proof>
 </goal>
 <goal name="TestArrayCursor.ArrayCursor.C.VC has_next" expl="VC for has_next">
 <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
</theory>
</file>
</why3session>
