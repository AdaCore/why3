<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="string_base64_encoding.mlw"/>
<theory name="Spec" proved="true">
 <goal name="int2b64&#39;vc" expl="VC for int2b64" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="316"/></proof>
 </goal>
 <goal name="concat_first" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="160"/></proof>
 </goal>
 <goal name="concat_second" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="85"/></proof>
 </goal>
 <goal name="char_eq&#39;vc" expl="VC for char_eq" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="int2b64_valid_4_char" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="130"/></proof>
 </goal>
 <goal name="b642int&#39;vc" expl="VC for b642int" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="1865"/></proof>
 </goal>
 <goal name="b642int_int2b64" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="357"/></proof>
 </goal>
 <goal name="get_pad&#39;vc" expl="VC for get_pad" proved="true">
 <proof prover="2"><result status="valid" time="0.34" steps="1520"/></proof>
 </goal>
 <goal name="calc_pad&#39;vc" expl="VC for calc_pad" proved="true">
 <proof prover="2"><result status="valid" time="0.92" steps="1318"/></proof>
 </goal>
</theory>
<theory name="Base64">
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="8613"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="213"/></proof>
  </goal>
  <goal name="encode&#39;vc.10" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="225"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="270"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="246"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="325"/></proof>
  </goal>
  <goal name="encode&#39;vc.16" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.40" steps="376"/></proof>
  </goal>
  <goal name="encode&#39;vc.18" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="50"/></proof>
  </goal>
  <goal name="encode&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.95" steps="424"/></proof>
  </goal>
  <goal name="encode&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.86" steps="1146"/></proof>
  </goal>
  <goal name="encode&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.03" steps="591"/></proof>
  </goal>
  <goal name="encode&#39;vc.22" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="encode&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="64471"/></proof>
  </goal>
  <goal name="encode&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="402"/></proof>
  </goal>
  <goal name="encode&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="68"/></proof>
  </goal>
  <goal name="encode&#39;vc.26" expl="assertion" proved="true">
  <proof prover="2" timelimit="10"><result status="valid" time="1.80" steps="542"/></proof>
  </goal>
  <goal name="encode&#39;vc.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.34" steps="464"/></proof>
  </goal>
  <goal name="encode&#39;vc.28" expl="assertion" proved="true">
  <proof prover="2" timelimit="30"><result status="valid" time="0.64" steps="608"/></proof>
  </goal>
  <goal name="encode&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.39" steps="720"/></proof>
  </goal>
  <goal name="encode&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="471"/></proof>
  </goal>
  <goal name="encode&#39;vc.31" expl="assertion" proved="true">
  <proof prover="2" timelimit="15"><result status="valid" time="0.50" steps="621"/></proof>
  </goal>
  <goal name="encode&#39;vc.32" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.24" steps="716"/></proof>
  </goal>
  <goal name="encode&#39;vc.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="264"/></proof>
  </goal>
  <goal name="encode&#39;vc.34" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="691"/></proof>
  </goal>
  <goal name="encode&#39;vc.35" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.35.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="1.74" steps="1718"/></proof>
   </goal>
   <goal name="encode&#39;vc.35.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="1.88" steps="1854"/></proof>
   </goal>
   <goal name="encode&#39;vc.35.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.51" steps="559"/></proof>
   </goal>
   <goal name="encode&#39;vc.35.3" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="1.12" steps="737"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.36" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="84"/></proof>
  </goal>
  <goal name="encode&#39;vc.37" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.37.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="90"/></proof>
   </goal>
   <goal name="encode&#39;vc.37.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="92"/></proof>
   </goal>
   <goal name="encode&#39;vc.37.2" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="encode&#39;vc.37.2.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.21" steps="94"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="encode&#39;vc.37.3" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="96"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.38" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="100"/></proof>
  </goal>
  <goal name="encode&#39;vc.39" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="94"/></proof>
  </goal>
  <goal name="encode&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="94"/></proof>
  </goal>
  <goal name="encode&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="97"/></proof>
  </goal>
  <goal name="encode&#39;vc.42" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="calc_pad" arg2="in" arg3="Ensures20">
   <goal name="encode&#39;vc.42.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="1.18" steps="1283"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.43" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.43.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="1.12" steps="984"/></proof>
   </goal>
   <goal name="encode&#39;vc.43.1" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="1.50" steps="1477"/></proof>
   </goal>
   <goal name="encode&#39;vc.43.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="1.82" steps="1569"/></proof>
   </goal>
   <goal name="encode&#39;vc.43.3" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="1.59" steps="1304"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.44" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.44.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="30"/></proof>
   </goal>
   <goal name="encode&#39;vc.44.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="32"/></proof>
   </goal>
   <goal name="encode&#39;vc.44.2" expl="assertion" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="0.06" steps="34"/></proof>
   </goal>
   <goal name="encode&#39;vc.44.3" expl="assertion" proved="true">
   <proof prover="2" timelimit="20"><result status="valid" time="0.06" steps="36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.45" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="80"/></proof>
  </goal>
  <goal name="encode&#39;vc.46" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="112"/></proof>
  </goal>
  <goal name="encode&#39;vc.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="28"/></proof>
  </goal>
  <goal name="encode&#39;vc.48" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="184"/></proof>
  </goal>
  <goal name="encode&#39;vc.49" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="36"/></proof>
  </goal>
  <goal name="encode&#39;vc.50" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.50.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.59" steps="707"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="1.02" steps="1474"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.2" expl="assertion" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="1.87" steps="2236"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.3" expl="assertion" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="2.36" steps="3029"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.51" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.51.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.66" steps="1382"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.1" expl="assertion" proved="true">
   <proof prover="2" timelimit="15"><result status="valid" time="0.63" steps="858"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.38" steps="589"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.3" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.71" steps="1335"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.4" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.69" steps="933"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.5" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.32" steps="302"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.6" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.84" steps="1217"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.7" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.64" steps="675"/></proof>
   </goal>
   <goal name="encode&#39;vc.51.8" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.56" steps="710"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.54" steps="2381"/></proof>
  </goal>
  <goal name="encode&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="979"/></proof>
  </goal>
  <goal name="encode&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="40"/></proof>
  </goal>
  <goal name="encode&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="2" timelimit="30"><result status="valid" time="3.64" steps="3705"/></proof>
  </goal>
  <goal name="encode&#39;vc.56" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(mod (length s) 3 = 0 -&gt; calc_pad s = get_pad r = 0)">
   <goal name="encode&#39;vc.56.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="2.07" steps="963586"/></proof>
   </goal>
   <goal name="encode&#39;vc.56.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(mod (length s) 3 = 1 -&gt; calc_pad s = get_pad r = 2)">
    <goal name="encode&#39;vc.56.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="3.95" steps="7507"/></proof>
    </goal>
    <goal name="encode&#39;vc.56.1.1" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(mod (length s) 3 = 2 -&gt; calc_pad s = get_pad r = 1)">
     <goal name="encode&#39;vc.56.1.1.0" expl="asserted formula" proved="true">
     <proof prover="2" timelimit="30"><result status="valid" time="12.54" steps="7470"/></proof>
     </goal>
     <goal name="encode&#39;vc.56.1.1.1" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.12" steps="203"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="9697"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="28"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="114"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="160"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="216"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="427"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="203"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="308"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="264"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="46"/></proof>
  </goal>
  <goal name="decode&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="397"/></proof>
  </goal>
  <goal name="decode&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="458"/></proof>
  </goal>
  <goal name="decode&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.58" steps="551"/></proof>
  </goal>
  <goal name="decode&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="292"/></proof>
  </goal>
  <goal name="decode&#39;vc.22" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="341"/></proof>
  </goal>
  <goal name="decode&#39;vc.23" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="decode&#39;vc.24" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.33" steps="431"/></proof>
  </goal>
  <goal name="decode&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.92" steps="694"/></proof>
  </goal>
  <goal name="decode&#39;vc.26" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="1.72" steps="1259"/></proof>
  </goal>
  <goal name="decode&#39;vc.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.17" steps="1252"/></proof>
  </goal>
  <goal name="decode&#39;vc.28" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="66"/></proof>
  </goal>
  <goal name="decode&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="72"/></proof>
  </goal>
  <goal name="decode&#39;vc.30" expl="assertion" proved="true">
  <proof prover="2" timelimit="15"><result status="valid" time="7.22" steps="4170"/></proof>
  </goal>
  <goal name="decode&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="828"/></proof>
  </goal>
  <goal name="decode&#39;vc.32" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="72"/></proof>
  </goal>
  <goal name="decode&#39;vc.33" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="78"/></proof>
  </goal>
  <goal name="decode&#39;vc.34" expl="assertion" proved="true">
  <proof prover="2" timelimit="30"><result status="valid" time="28.04" steps="9468"/></proof>
  </goal>
  <goal name="decode&#39;vc.35" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.89" steps="3053"/></proof>
  </goal>
  <goal name="decode&#39;vc.36" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.42" steps="502"/></proof>
  </goal>
  <goal name="decode&#39;vc.37" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.37.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="1.68" steps="855"/></proof>
   </goal>
   <goal name="decode&#39;vc.37.1" expl="assertion" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="0.45" steps="550"/></proof>
   </goal>
   <goal name="decode&#39;vc.37.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="4.16" steps="4125"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.38" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="84"/></proof>
  </goal>
  <goal name="decode&#39;vc.39" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="decode&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="88"/></proof>
  </goal>
  <goal name="decode&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="89"/></proof>
  </goal>
  <goal name="decode&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="92"/></proof>
  </goal>
  <goal name="decode&#39;vc.43" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.43.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.98" steps="1141"/></proof>
   </goal>
   <goal name="decode&#39;vc.43.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="2.32" steps="2206"/></proof>
   </goal>
   <goal name="decode&#39;vc.43.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="30"><result status="valid" time="1.38" steps="1343"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.44" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
  <goal name="decode&#39;vc.45" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="decode&#39;vc.46" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="114"/></proof>
  </goal>
  <goal name="decode&#39;vc.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.48" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="134"/></proof>
  </goal>
  <goal name="decode&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="158"/></proof>
  </goal>
  <goal name="decode&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.96" steps="1876"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode">
 <transf name="split_vc" >
  <goal name="decode_encode&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.56" steps="616"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.45" steps="685"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode_encode&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="70861"/></proof>
   </goal>
   <goal name="decode_encode&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="73492"/></proof>
   </goal>
   <goal name="decode_encode&#39;vc.3.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="75536"/></proof>
   </goal>
   <goal name="decode_encode&#39;vc.3.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="77053"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="727"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.5" expl="assertion" proved="true">
  <transf name="case" proved="true" arg1="(i &lt; div (length s) 3 * 4)">
   <goal name="decode_encode&#39;vc.5.0" expl="true case (assertion)" proved="true">
   <transf name="left" proved="true" >
    <goal name="decode_encode&#39;vc.5.0.0" expl="left case" proved="true">
    <transf name="inst_rem" proved="true" arg1="Assert1" arg2="(div i 4)">
     <goal name="decode_encode&#39;vc.5.0.0.0" expl="left case" proved="true">
     <proof prover="2"><result status="valid" time="0.07" steps="124"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="decode_encode&#39;vc.5.1" expl="false case (assertion)" proved="true">
   <proof prover="2"><result status="valid" time="0.64" steps="1113"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.6" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode_encode&#39;vc.6.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="Assert4" arg2="(div i 4)">
    <goal name="decode_encode&#39;vc.6.0.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.54" steps="912"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="decode_encode&#39;vc.6.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.56" steps="528"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="27"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="27"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="250"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="decode_encode&#39;vc.10.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="276"/></proof>
   </goal>
   <goal name="decode_encode&#39;vc.10.1" expl="VC for decode_encode" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.11" expl="assertion">
  <proof prover="2" timelimit="240"><result status="timeout" time="240.00"/></proof>
  <transf name="split_vc" >
   <goal name="decode_encode&#39;vc.11.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures" arg2="i">
    <goal name="decode_encode&#39;vc.11.0.0" expl="assertion" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures5" arg2="i">
     <goal name="decode_encode&#39;vc.11.0.0.0" expl="assertion" proved="true">
     <proof prover="2" timelimit="60"><result status="valid" time="8.57" steps="7509"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="decode_encode&#39;vc.11.1" expl="assertion">
   <transf name="instantiate" arg1="Ensures" arg2="i">
    <goal name="decode_encode&#39;vc.11.1.0" expl="assertion">
    <transf name="instantiate" arg1="Ensures5" arg2="i">
     <goal name="decode_encode&#39;vc.11.1.0.0" expl="assertion">
     <proof prover="2" timelimit="60"><result status="timeout" time="60.00"/></proof>
     <transf name="case" arg1="(mod (length s) 3 = 0)">
      <goal name="decode_encode&#39;vc.11.1.0.0.0" expl="true case (assertion)" proved="true">
      <proof prover="2"><result status="valid" time="1.16" steps="674"/></proof>
      </goal>
      <goal name="decode_encode&#39;vc.11.1.0.0.1" expl="false case (assertion)">
      <proof prover="0"><result status="timeout" time="5.00" steps="5576674"/></proof>
      <proof prover="1"><result status="timeout" time="5.00" steps="1420891"/></proof>
      <proof prover="2" timelimit="30"><result status="timeout" time="30.00"/></proof>
      <transf name="case" arg1="(i = div (length s) 3)">
       <goal name="decode_encode&#39;vc.11.1.0.0.1.0" expl="false case (true case. assertion)">
       <proof prover="0"><result status="timeout" time="5.00" steps="3910320"/></proof>
       <proof prover="1"><result status="timeout" time="5.00" steps="1343353"/></proof>
       <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
       </goal>
       <goal name="decode_encode&#39;vc.11.1.0.0.1.1" expl="false case (assertion)" proved="true">
       <proof prover="2" timelimit="30"><result status="valid" time="12.96" steps="12196"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="decode_encode&#39;vc.11.2" expl="assertion">
   <transf name="instantiate" arg1="Ensures" arg2="i">
    <goal name="decode_encode&#39;vc.11.2.0" expl="assertion">
    <transf name="instantiate" arg1="Ensures5" arg2="i">
     <goal name="decode_encode&#39;vc.11.2.0.0" expl="assertion">
     <proof prover="2" timelimit="30"><result status="timeout" time="30.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.12" expl="assertion">
  <proof prover="0"><result status="timeout" time="5.00" steps="5390251"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="336082"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.38" steps="480"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
