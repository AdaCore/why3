<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="string_base64_encoding.mlw"/>
<theory name="Spec" proved="true">
 <goal name="int2b64&#39;vc" expl="VC for int2b64" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="316"/></proof>
 </goal>
 <goal name="concat_first" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="160"/></proof>
 </goal>
 <goal name="concat_second" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="85"/></proof>
 </goal>
 <goal name="char_eq&#39;vc" expl="VC for char_eq" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="int2b64_valid_4_char" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="130"/></proof>
 </goal>
 <goal name="b642int&#39;vc" expl="VC for b642int" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="1865"/></proof>
 </goal>
 <goal name="b642int_int2b64" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="357"/></proof>
 </goal>
 <goal name="get_pad&#39;vc" expl="VC for get_pad" proved="true">
 <proof prover="2"><result status="valid" time="0.34" steps="1520"/></proof>
 </goal>
 <goal name="calc_pad&#39;vc" expl="VC for calc_pad" proved="true">
 <proof prover="2"><result status="valid" time="0.92" steps="1318"/></proof>
 </goal>
</theory>
<theory name="Base64" proved="true">
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="8613"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="213"/></proof>
  </goal>
  <goal name="encode&#39;vc.10" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="225"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="270"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="246"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="325"/></proof>
  </goal>
  <goal name="encode&#39;vc.16" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.40" steps="376"/></proof>
  </goal>
  <goal name="encode&#39;vc.18" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="50"/></proof>
  </goal>
  <goal name="encode&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.95" steps="424"/></proof>
  </goal>
  <goal name="encode&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.86" steps="1146"/></proof>
  </goal>
  <goal name="encode&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.03" steps="591"/></proof>
  </goal>
  <goal name="encode&#39;vc.22" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="encode&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="64471"/></proof>
  </goal>
  <goal name="encode&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="402"/></proof>
  </goal>
  <goal name="encode&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="68"/></proof>
  </goal>
  <goal name="encode&#39;vc.26" expl="assertion" proved="true">
  <proof prover="2" timelimit="10"><result status="valid" time="1.80" steps="542"/></proof>
  </goal>
  <goal name="encode&#39;vc.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.34" steps="464"/></proof>
  </goal>
  <goal name="encode&#39;vc.28" expl="assertion" proved="true">
  <proof prover="2" timelimit="30"><result status="valid" time="0.64" steps="608"/></proof>
  </goal>
  <goal name="encode&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.39" steps="720"/></proof>
  </goal>
  <goal name="encode&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="471"/></proof>
  </goal>
  <goal name="encode&#39;vc.31" expl="assertion" proved="true">
  <proof prover="2" timelimit="15"><result status="valid" time="0.50" steps="621"/></proof>
  </goal>
  <goal name="encode&#39;vc.32" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.24" steps="716"/></proof>
  </goal>
  <goal name="encode&#39;vc.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="264"/></proof>
  </goal>
  <goal name="encode&#39;vc.34" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="691"/></proof>
  </goal>
  <goal name="encode&#39;vc.35" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="76"/></proof>
  </goal>
  <goal name="encode&#39;vc.36" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="78"/></proof>
  </goal>
  <goal name="encode&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="78"/></proof>
  </goal>
  <goal name="encode&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="81"/></proof>
  </goal>
  <goal name="encode&#39;vc.39" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="calc_pad" arg2="in" arg3="Ensures20">
   <goal name="encode&#39;vc.39.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="942"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.40" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.40.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="20"><result status="valid" time="7.84" steps="4937"/></proof>
   </goal>
   <goal name="encode&#39;vc.40.1" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="4.19" steps="2169"/></proof>
   </goal>
   <goal name="encode&#39;vc.40.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="1.14" steps="1131"/></proof>
   </goal>
   <goal name="encode&#39;vc.40.3" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="3.18" steps="2398"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.41" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.41.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="30"/></proof>
   </goal>
   <goal name="encode&#39;vc.41.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="32"/></proof>
   </goal>
   <goal name="encode&#39;vc.41.2" expl="assertion" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="0.06" steps="34"/></proof>
   </goal>
   <goal name="encode&#39;vc.41.3" expl="assertion" proved="true">
   <proof prover="2" timelimit="20"><result status="valid" time="0.06" steps="36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.42" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="80"/></proof>
  </goal>
  <goal name="encode&#39;vc.43" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="112"/></proof>
  </goal>
  <goal name="encode&#39;vc.44" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="28"/></proof>
  </goal>
  <goal name="encode&#39;vc.45" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="184"/></proof>
  </goal>
  <goal name="encode&#39;vc.46" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="encode&#39;vc.47" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(padding &gt;= 0)">
   <goal name="encode&#39;vc.47.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="119"/></proof>
   </goal>
   <goal name="encode&#39;vc.47.1" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(length (make padding char_eq) = padding)">
    <goal name="encode&#39;vc.47.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
    <goal name="encode&#39;vc.47.1.1" expl="assertion" proved="true">
    <transf name="case" proved="true" arg1="(padding = 0)">
     <goal name="encode&#39;vc.47.1.1.0" expl="true case (assertion)" proved="true">
     <proof prover="0"><result status="valid" time="0.10" steps="153128"/></proof>
     <transf name="remove" proved="true" arg1="real,bool,tuple0,unit,ref,tuple3,zero,one,(&gt;),abs,div,mod,empty,lt,le,s_at,prefixof,suffixof,contains,indexof,replace,replaceall,to_int,is_digit,from_int,code,get,eq_string,int63&#39;maxInt,int63&#39;minInt,min_int63,max_int63,to_int1,in_bounds,max_int,min_int,next_m3,next_m4,int2b64,valid_64_char,b642int,calc_pad,s,sp,i,Assoc,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm,Assoc1,Mul_distr_l,Mul_distr_r,Comm1,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,concat_assoc,concat_empty,length_empty,length_concat,lt_empty,lt_not_com,lt_ref,lt_trans,le_empty,le_ref,lt_le,lt_le_eq,le_trans,at_out_of_range,at_empty,at_length,concat_at,substring_out_of_range,substring_of_length_zero_or_less,substring_of_empty,substring_smaller,substring_smaller_x,substring_length,substring_at,substring_substring,prefixof_substring,prefixof_concat,prefixof_empty,prefixof_empty2,suffixof_substring,suffixof_concat,suffixof_empty,suffixof_empty2,contains_prefixof,contains_suffixof,contains_empty,contains_empty2,contains_substring,contains_concat,contains_at,indexof_empty,indexof_empty1,indexof_contains,contains_indexof,not_contains_indexof,substring_indexof,indexof_out_of_range,indexof_in_range,indexof_contains_substring,replace_empty,replace_not_contains,replace_empty2,replace_substring_indexof,replaceall_empty1,not_contains_replaceall,to_int_gt_minus_1,to_int_empty,from_int_negative,from_int_to_int,char&#39;invariant,code,code_chr,chr_code,get,substring_get,extensionality,make_content,to_int_in_bounds,extensionality1,max_int&#39;def,min_int&#39;def,concat_first,concat_second,int2b64_valid_4_char,b642int_int2b64,LoopInvariant,H1,LoopInvariant2,H2,Assert,Ensures2,Ensures3,H3,Assert1,h1,h2">
      <goal name="encode&#39;vc.47.1.1.0.0" expl="true case (assertion)" proved="true">
      <proof prover="0" timelimit="1"><result status="valid" time="0.11" steps="84788"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="encode&#39;vc.47.1.1.1" expl="false case (assertion)" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="93951"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="637"/></proof>
  </goal>
  <goal name="encode&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="209"/></proof>
  </goal>
  <goal name="encode&#39;vc.50" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.50.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.07" steps="1156"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.47" steps="1479"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="2.23" steps="1661"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.3" expl="postcondition" proved="true">
   <proof prover="2" timelimit="20"><result status="valid" time="4.37" steps="4349"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.4" expl="postcondition" proved="true">
   <proof prover="2" timelimit="20"><result status="valid" time="19.48" steps="18517"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.5" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="297"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.6" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Assert2" arg2="i">
    <goal name="encode&#39;vc.50.6.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="2.12" steps="2134"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="encode&#39;vc.50.7" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="247"/></proof>
   </goal>
   <goal name="encode&#39;vc.50.8" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="237"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="9387"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="28"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="114"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="160"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="216"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="427"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="203"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="308"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="264"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="46"/></proof>
  </goal>
  <goal name="decode&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="397"/></proof>
  </goal>
  <goal name="decode&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="458"/></proof>
  </goal>
  <goal name="decode&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="701"/></proof>
  </goal>
  <goal name="decode&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="292"/></proof>
  </goal>
  <goal name="decode&#39;vc.22" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="341"/></proof>
  </goal>
  <goal name="decode&#39;vc.23" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="decode&#39;vc.24" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.33" steps="431"/></proof>
  </goal>
  <goal name="decode&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.92" steps="694"/></proof>
  </goal>
  <goal name="decode&#39;vc.26" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="1.72" steps="1259"/></proof>
  </goal>
  <goal name="decode&#39;vc.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.48" steps="1364"/></proof>
  </goal>
  <goal name="decode&#39;vc.28" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="66"/></proof>
  </goal>
  <goal name="decode&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="72"/></proof>
  </goal>
  <goal name="decode&#39;vc.30" expl="assertion" proved="true">
  <proof prover="2" timelimit="15"><result status="valid" time="8.81" steps="4448"/></proof>
  </goal>
  <goal name="decode&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="827"/></proof>
  </goal>
  <goal name="decode&#39;vc.32" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="72"/></proof>
  </goal>
  <goal name="decode&#39;vc.33" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="78"/></proof>
  </goal>
  <goal name="decode&#39;vc.34" expl="assertion" proved="true">
  <proof prover="2" timelimit="30"><result status="valid" time="31.08" steps="11258"/></proof>
  </goal>
  <goal name="decode&#39;vc.35" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.89" steps="3169"/></proof>
  </goal>
  <goal name="decode&#39;vc.36" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.42" steps="502"/></proof>
  </goal>
  <goal name="decode&#39;vc.37" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.37.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="1.68" steps="855"/></proof>
   </goal>
   <goal name="decode&#39;vc.37.1" expl="assertion" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="0.45" steps="550"/></proof>
   </goal>
   <goal name="decode&#39;vc.37.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="4.16" steps="4129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.38" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="84"/></proof>
  </goal>
  <goal name="decode&#39;vc.39" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="decode&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="88"/></proof>
  </goal>
  <goal name="decode&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="89"/></proof>
  </goal>
  <goal name="decode&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="92"/></proof>
  </goal>
  <goal name="decode&#39;vc.43" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.43.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.98" steps="1141"/></proof>
   </goal>
   <goal name="decode&#39;vc.43.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="2.32" steps="2206"/></proof>
   </goal>
   <goal name="decode&#39;vc.43.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="30"><result status="valid" time="1.38" steps="1343"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.44" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
  <goal name="decode&#39;vc.45" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="decode&#39;vc.46" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="114"/></proof>
  </goal>
  <goal name="decode&#39;vc.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.48" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="134"/></proof>
  </goal>
  <goal name="decode&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="158"/></proof>
  </goal>
  <goal name="decode&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.96" steps="1947"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode_encode&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.1" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(next_m3 (length s) = length s + calc_pad s)">
   <goal name="decode_encode&#39;vc.1.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="133285"/></proof>
   </goal>
   <goal name="decode_encode&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="76"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.3" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Ensures1" arg2="i">
   <goal name="decode_encode&#39;vc.3.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decode_encode&#39;vc.3.0.0" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.37" steps="346"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.3.0.1" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.35" steps="388"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.3.0.2" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.29" steps="481"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.3.0.3" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="214"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.4" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Ensures1" arg2="last">
   <goal name="decode_encode&#39;vc.4.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decode_encode&#39;vc.4.0.0" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="223"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.4.0.1" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.26" steps="362"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.4.0.2" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.07" steps="134"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.4.0.3" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="135"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.4.0.4" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.26" steps="327"/></proof>
    </goal>
    <goal name="decode_encode&#39;vc.4.0.5" expl="VC for decode_encode" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="172"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode_encode&#39;vc.5.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="Assert3" arg2="(div i 4)">
    <goal name="decode_encode&#39;vc.5.0.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.36" steps="509"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="decode_encode&#39;vc.5.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="219"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="27"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="27"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.9" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode_encode&#39;vc.9.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.12" steps="139"/></proof>
   </goal>
   <goal name="decode_encode&#39;vc.9.1" expl="VC for decode_encode" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.10" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode_encode&#39;vc.10.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures" arg2="i">
    <goal name="decode_encode&#39;vc.10.0.0" expl="assertion" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
     <goal name="decode_encode&#39;vc.10.0.0.0" expl="assertion" proved="true">
     <proof prover="2"><result status="valid" time="0.75" steps="513"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="decode_encode&#39;vc.10.1" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures" arg2="i">
    <goal name="decode_encode&#39;vc.10.1.0" expl="assertion" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
     <goal name="decode_encode&#39;vc.10.1.0.0" expl="assertion" proved="true">
     <proof prover="2"><result status="valid" time="4.20" steps="5599"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="decode_encode&#39;vc.10.2" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures" arg2="i">
    <goal name="decode_encode&#39;vc.10.2.0" expl="assertion" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
     <goal name="decode_encode&#39;vc.10.2.0.0" expl="assertion" proved="true">
     <proof prover="2"><result status="valid" time="0.70" steps="548"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.11" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Assert" arg2="(div i 3)">
   <goal name="decode_encode&#39;vc.11.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.38" steps="497"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.37" steps="494"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
