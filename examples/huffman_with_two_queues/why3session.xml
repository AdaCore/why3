<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.11.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="huffman_with_two_queues.mlw"/>
<theory name="Top" proved="true">
 <goal name="add_last" proved="true">
 <proof prover="1"><result status="valid" time="0.020000" steps="59"/></proof>
 </goal>
 <goal name="sorted_tail" proved="true">
 <proof prover="1"><result status="valid" time="0.070000" steps="78"/></proof>
 <proof prover="4"><result status="valid" time="0.690000" steps="73398"/></proof>
 </goal>
 <goal name="sorted_tail_tail" proved="true">
 <proof prover="1"><result status="valid" time="0.060000" steps="82"/></proof>
 <proof prover="4"><result status="valid" time="0.580000" steps="68466"/></proof>
 </goal>
 <goal name="huffman_coding&#39;vc" expl="VC for huffman_coding" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="huffman_coding&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="6"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="13706"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="19"/></proof>
  <proof prover="4"><result status="valid" time="0.080000" steps="17098"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="8"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="13588"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="46"/></proof>
  <proof prover="4"><result status="valid" time="0.080000" steps="17093"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="16"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="13979"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="16"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14061"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="17"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14120"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="22"/></proof>
  <proof prover="4"><result status="valid" time="0.080000" steps="14563"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.8" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="68"/></proof>
  <proof prover="4"><result status="valid" time="0.130000" steps="23878"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="28"/></proof>
  <proof prover="4"><result status="valid" time="0.080000" steps="16994"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17192"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="32"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17045"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="82"/></proof>
  <proof prover="4"><result status="valid" time="0.090000" steps="17168"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="3.080806" steps="1251"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="34"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14592"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="33"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14645"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="18"/></proof>
  <proof prover="4"><result status="valid" time="0.070000" steps="14418"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.17" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="70"/></proof>
  <proof prover="4"><result status="valid" time="0.120000" steps="23894"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="16924"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="32"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="16994"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="28"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14305"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.21" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(sorted y1[2..])">
   <goal name="huffman_coding&#39;vc.21.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(length y1 &gt;= 2)">
    <goal name="huffman_coding&#39;vc.21.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.010000" steps="28"/></proof>
    <proof prover="4"><result status="valid" time="0.070000" steps="14562"/></proof>
    </goal>
    <goal name="huffman_coding&#39;vc.21.0.1" expl="asserted formula" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="huffman_coding&#39;vc.21.0.1.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.020000" steps="36"/></proof>
     <proof prover="4"><result status="valid" time="0.100000" steps="19141"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="huffman_coding&#39;vc.21.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.240000" steps="184"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="huffman_coding&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14405"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14474"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="2.460391" steps="1052"/></proof>
  <proof prover="4"><result status="valid" time="1.481814" steps="198986"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="34"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14615"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.26" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="107"/></proof>
  <proof prover="4"><result status="valid" time="0.130000" steps="23618"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="40"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17190"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="42"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17329"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="44"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17225"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="76"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17319"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="3.130000" steps="2042"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.310000" steps="783638"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.420000" steps="261"/></proof>
  <proof prover="4"><result status="valid" time="0.320000" steps="55292"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.090000" steps="16388"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="34"/></proof>
  <proof prover="4"><result status="valid" time="0.090000" steps="17064"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.36" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="342"/></proof>
  <proof prover="4"><result status="valid" time="0.140000" steps="25860"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="35"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17427"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.38" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="huffman_coding&#39;vc.38.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="huffman_coding&#39;vc.38.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.030000" steps="157"/></proof>
    <proof prover="4"><result status="valid" time="0.110000" steps="20073"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="huffman_coding&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="39"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17488"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.40" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="huffman_coding&#39;vc.40.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="1.330000" steps="1856"/></proof>
   <proof prover="4"><result status="valid" time="2.170000" steps="220100"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="huffman_coding&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.940000" steps="846"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.680000" steps="537"/></proof>
  <proof prover="4"><result status="valid" time="2.550000" steps="235173"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="2.650000" steps="1734"/></proof>
  <proof prover="4"><result status="valid" time="2.880000" steps="288623"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14521"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.45" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="102"/></proof>
  <proof prover="4"><result status="valid" time="0.120000" steps="23820"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="39"/></proof>
  <proof prover="4"><result status="valid" time="0.100000" steps="17112"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.47" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="huffman_coding&#39;vc.47.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.020000" steps="41"/></proof>
   <proof prover="4"><result status="valid" time="0.090000" steps="19727"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="huffman_coding&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="40"/></proof>
  <proof prover="4"><result status="valid" time="0.060000" steps="14421"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.49" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="huffman_coding&#39;vc.49.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.300000" steps="258"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="huffman_coding&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.310000" steps="192"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.51" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="1.600000" steps="1185"/></proof>
  <proof prover="4"><result status="valid" time="1.470000" steps="167234"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.52" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="2.540000" steps="1605"/></proof>
  <proof prover="4"><result status="valid" time="1.450000" steps="165476"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="26"/></proof>
  <proof prover="4"><result status="valid" time="0.090000" steps="16391"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.54" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="38"/></proof>
  <proof prover="4"><result status="valid" time="0.090000" steps="17084"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.55" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="352"/></proof>
  <proof prover="4"><result status="valid" time="0.130000" steps="25921"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.56" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="35"/></proof>
  <proof prover="4"><result status="valid" time="0.090000" steps="17488"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.57" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="huffman_coding&#39;vc.57.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.020000" steps="81"/></proof>
   <proof prover="4"><result status="valid" time="0.090000" steps="20118"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="huffman_coding&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="47"/></proof>
  <proof prover="4"><result status="valid" time="0.080000" steps="17549"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.59" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="huffman_coding&#39;vc.59.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.530000" steps="648"/></proof>
   <proof prover="4"><result status="valid" time="1.950000" steps="216649"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="huffman_coding&#39;vc.60" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="2.330000" steps="2134"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.61" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.620000" steps="541"/></proof>
  <proof prover="4"><result status="valid" time="2.217285" steps="223641"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.62" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="1.190000" steps="1660"/></proof>
  </goal>
  <goal name="huffman_coding&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.190000" steps="323"/></proof>
  <proof prover="4"><result status="valid" time="0.140000" steps="24937"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
