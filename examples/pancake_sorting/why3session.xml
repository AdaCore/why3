<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="2" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="pancake_sorting.mlw"/>
<theory name="Top" proved="true">
 <goal name="VC flip" expl="VC for flip" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC flip.0" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC flip.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC flip.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC flip.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC flip.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC flip.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC flip.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC flip.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC flip.8" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC flip.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC flip.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC flip.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC flip.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC flip.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC flip.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC flip.15" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC pancake_sort" expl="VC for pancake_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC pancake_sort.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.5" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.6" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.8" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC pancake_sort.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC pancake_sort.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC pancake_sort.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC pancake_sort.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC pancake_sort.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC pancake_sort.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.23" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.24" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC pancake_sort.25" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pancake_sort.26" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
