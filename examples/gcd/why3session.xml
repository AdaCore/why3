<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Coq" version="8.7.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.3.1" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="4" name="Eprover" version="1.8-001" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="0.95.2" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.3" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="0.99.1" timelimit="6" steplimit="0" memlimit="1000"/>
<file name="../gcd.mlw" proved="true">
<theory name="EuclideanAlgorithm" proved="true">
 <goal name="WP_parameter euclid" expl="VC for euclid" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="WP_parameter euclid.0" expl="postcondition" proved="true">
  <proof prover="1" memlimit="0"><result status="valid" time="0.02"/></proof>
  <proof prover="5" timelimit="2" memlimit="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter euclid.1" expl="check modulo by zero" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="WP_parameter euclid.2" expl="variant decrease" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.02"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="WP_parameter euclid.3" expl="precondition" proved="true">
  <proof prover="1" memlimit="0"><result status="valid" time="0.02"/></proof>
  <proof prover="5" timelimit="10" memlimit="0"><result status="valid" time="0.02" steps="7"/></proof>
  </goal>
  <goal name="WP_parameter euclid.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="10" edited="gcd_WP_EuclideanAlgorithm_WP_parameter_gcd_1.v"><result status="valid" time="0.28"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  <proof prover="5" timelimit="10"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="EuclideanAlgorithmIterative" proved="true">
 <goal name="WP_parameter euclid" expl="VC for euclid" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="WP_parameter euclid.0" expl="loop invariant init" proved="true">
  <proof prover="5" timelimit="10"><result status="valid" time="0.01" steps="2"/></proof>
  </goal>
  <goal name="WP_parameter euclid.1" expl="check modulo by zero" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter euclid.2" expl="loop invariant preservation" proved="true">
  <proof prover="5" timelimit="10"><result status="valid" time="0.06" steps="20"/></proof>
  </goal>
  <goal name="WP_parameter euclid.3" expl="loop invariant preservation" proved="true">
  <proof prover="5" timelimit="10"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter euclid.4" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3" timelimit="30"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter euclid.5" expl="postcondition" proved="true">
  <proof prover="5" timelimit="10"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BinaryGcd" proved="true">
 <goal name="even1" proved="true">
 <proof prover="5"><result status="valid" time="0.06" steps="18"/></proof>
 </goal>
 <goal name="odd1" proved="true">
 <proof prover="5"><result status="valid" time="0.06" steps="14"/></proof>
 </goal>
 <goal name="div_nonneg" proved="true">
 <proof prover="5"><result status="valid" time="0.02" steps="4"/></proof>
 </goal>
 <goal name="gcd_even_even" proved="true">
 <proof prover="5"><result status="valid" time="0.03" steps="28"/></proof>
 </goal>
 <goal name="gcd_even_odd" proved="true">
 <proof prover="0" edited="gcd_BinaryGcd_gcd_even_odd_2.v"><result status="valid" time="0.28"/></proof>
 </goal>
 <goal name="gcd_even_odd2" proved="true">
 <proof prover="5"><result status="valid" time="0.17" steps="28"/></proof>
 </goal>
 <goal name="odd_odd_div2" proved="true">
 <proof prover="3"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="WP_parameter gcd_odd_odd" expl="VC for gcd_odd_odd" proved="true">
 <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.05" steps="31"/></proof>
 </goal>
 <goal name="gcd_odd_odd2" proved="true">
 <proof prover="5"><result status="valid" time="0.12" steps="24"/></proof>
 </goal>
 <goal name="WP_parameter binary_gcd" expl="VC for binary_gcd" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="WP_parameter binary_gcd.0" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="5"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="5"><result status="valid" time="0.02" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  <proof prover="5"><result status="valid" time="0.03" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="5"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.4" expl="check division by zero" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.5" expl="check division by zero" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.6" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="24"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  <proof prover="5"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.8" expl="postcondition" proved="true">
  <proof prover="1" timelimit="6"><result status="valid" time="0.02"/></proof>
  <proof prover="4"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.9" expl="check division by zero" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.10" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  <proof prover="5"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.12" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23"/></proof>
  <proof prover="6"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.13" expl="check division by zero" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.14" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  <proof prover="5"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.16" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24"/></proof>
  <proof prover="6"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.17" expl="check division by zero" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.18" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="35"/></proof>
  <proof prover="6"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="3.49"/></proof>
  <proof prover="5"><result status="valid" time="0.03" steps="13"/></proof>
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter binary_gcd.20" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.34"/></proof>
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="EuclideanAlgorithm31" proved="true">
 <goal name="WP_parameter euclid" expl="VC for euclid" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="WP_parameter euclid.0" expl="integer overflow" proved="true">
  <proof prover="5" timelimit="5" memlimit="4000"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="WP_parameter euclid.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter euclid.2" expl="division by zero" proved="true">
  <proof prover="7"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="WP_parameter euclid.3" expl="integer overflow" proved="true">
  <proof prover="7"><result status="valid" time="0.07" steps="50"/></proof>
  </goal>
  <goal name="WP_parameter euclid.4" expl="variant decrease" proved="true">
  <proof prover="7"><result status="valid" time="0.50" steps="169"/></proof>
  </goal>
  <goal name="WP_parameter euclid.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="WP_parameter euclid.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.11" steps="41"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
