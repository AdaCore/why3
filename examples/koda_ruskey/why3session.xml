<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="koda_ruskey.mlw"/>
<theory name="KodaRuskey_Spec" proved="true">
 <goal name="eq_color&#39;vc" expl="VC for eq_color" proved="true">
 <proof prover="3"><result status="valid" time="0.000000" steps="8"/></proof>
 <proof prover="6"><result status="valid" time="0.030000" steps="2751"/></proof>
 </goal>
 <goal name="size_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_forest_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="13"/></proof>
  <proof prover="6"><result status="valid" time="0.030000" steps="2967"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_forest_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="27"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="3533"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemmas" proved="true">
 <goal name="mem_app" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="mem_app.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="71"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="7004"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_stack_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="35"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="5865"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_forest_equiv" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_forest_equiv.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="222"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="6652"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_forest_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_forest_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="358"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="12962"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_stack_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_stack_frame.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="any_stack_frame.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.000000" steps="19"/></proof>
   <proof prover="6"><result status="valid" time="0.050000" steps="5993"/></proof>
   </goal>
   <goal name="any_stack_frame.0.1" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="any_stack_frame.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="any_stack_frame.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.020000" steps="172"/></proof>
     <proof prover="6"><result status="valid" time="0.070000" steps="7971"/></proof>
     </goal>
     <goal name="any_stack_frame.0.1.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.080000"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="229"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame2" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame2.0" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="225"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_any&#39;vc" expl="VC for inverse_any" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_any&#39;vc.0" expl="VC for inverse_any" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="75"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="7787"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_final" proved="true">
 <proof prover="3"><result status="valid" time="0.150000" steps="683"/></proof>
 </goal>
 <goal name="inverse_white" proved="true">
 <proof prover="3"><result status="valid" time="0.010000" steps="69"/></proof>
 <proof prover="6"><result status="valid" time="0.060000" steps="7653"/></proof>
 </goal>
 <goal name="white_final_exclusive&#39;vc" expl="VC for white_final_exclusive" proved="true">
 <proof prover="3"><result status="valid" time="0.020000" steps="29"/></proof>
 </goal>
 <goal name="final_unique" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_unique.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="510"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="8804"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_inverse&#39;vc" expl="VC for inverse_inverse" proved="true">
 <proof prover="3"><result status="valid" time="0.163746" steps="3154"/></proof>
 <proof prover="6"><result status="valid" time="0.450000" steps="38955"/></proof>
 </goal>
 <goal name="sub_not_nil" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_not_nil.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="21"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="7382"/></proof>
  </goal>
  <goal name="sub_not_nil.1" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="10"/></proof>
  <proof prover="6"><result status="valid" time="0.040000" steps="7624"/></proof>
  </goal>
  <goal name="sub_not_nil.2" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="60"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="10336"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_empty" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_empty.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="28"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="8596"/></proof>
  </goal>
  <goal name="sub_empty.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="29"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="9222"/></proof>
  </goal>
  <goal name="sub_empty.2" proved="true">
  <proof prover="6"><result status="valid" time="0.150000" steps="17072"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_mem" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_mem.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="38"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="8604"/></proof>
  </goal>
  <goal name="sub_mem.1" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="25"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="7410"/></proof>
  </goal>
  <goal name="sub_mem.2" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="191"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="11067"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken1" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken1.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="333"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="9920"/></proof>
  </goal>
  <goal name="sub_weaken1.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="35"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9350"/></proof>
  </goal>
  <goal name="sub_weaken1.2" proved="true">
  <proof prover="6"><result status="valid" time="0.160000" steps="19247"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken2.0" proved="true">
  <proof prover="6"><result status="valid" time="0.100000" steps="14475"/></proof>
  </goal>
  <goal name="sub_weaken2.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="39"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9737"/></proof>
  </goal>
  <goal name="sub_weaken2.2" proved="true">
  <proof prover="6"><result status="valid" time="0.270000" steps="29588"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_st" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="not_mem_st.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="38"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="8910"/></proof>
  </goal>
  <goal name="not_mem_st.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="25"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="7781"/></proof>
  </goal>
  <goal name="not_mem_st.2" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="221"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="11379"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_frame" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="8902"/></proof>
  </goal>
  <goal name="sub_frame.1" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="352"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="9779"/></proof>
  </goal>
  <goal name="sub_frame.2" proved="true">
  <proof prover="6"><result status="valid" time="0.130000" steps="17653"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="31"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9467"/></proof>
  </goal>
  <goal name="sub_no_rep.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="32"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9110"/></proof>
  </goal>
  <goal name="sub_no_rep.2" proved="true">
  <proof prover="6"><result status="valid" time="0.110000" steps="15493"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep2.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="73"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9739"/></proof>
  </goal>
  <goal name="sub_no_rep2.1" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="31"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9289"/></proof>
  </goal>
  <goal name="sub_no_rep2.2" proved="true">
  <proof prover="1"><result status="valid" time="0.317668" steps="44059"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_valid.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="118"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9617"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="final_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_valid.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="110"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="9837"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="649"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="14084"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_set" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_set.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="100"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="10534"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="head_and_tail" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="head_and_tail.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="93"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="13578"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_valid_coloring_f1" proved="true">
 <proof prover="3"><result status="valid" time="0.040000" steps="302"/></proof>
 <proof prover="6"><result status="valid" time="0.070000" steps="10843"/></proof>
 </goal>
 <goal name="sub_valid_coloring" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_valid_coloring.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="529"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="13205"/></proof>
  </goal>
  <goal name="sub_valid_coloring.1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sub_valid_coloring.1.0" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="sub_valid_coloring.1.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sub_valid_coloring.1.0.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.160000" steps="3173"/></proof>
     <proof prover="6"><result status="valid" time="0.160000" steps="25222"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.0.0.1" proved="true">
     <proof prover="2"><result status="valid" time="2.290000"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="1.760000"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.2" proved="true">
  <proof prover="3"><result status="valid" time="0.153095" steps="4820"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_Cons_N" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_Cons_N.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="61"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="11601"/></proof>
  </goal>
  <goal name="sub_Cons_N.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="106"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="12256"/></proof>
  </goal>
  <goal name="sub_Cons_N.2" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="1163"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="13307"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_white" proved="true">
 <proof prover="3"><result status="valid" time="0.020000" steps="52"/></proof>
 <proof prover="6"><result status="valid" time="0.070000" steps="10284"/></proof>
 </goal>
 <goal name="sub_valid_coloring_white&#39;vc" expl="VC for sub_valid_coloring_white" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sub_valid_coloring_white&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="242"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="10734"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="29"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="9766"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="57"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="10347"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.040000" steps="9504"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="244"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="11745"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="29"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="10706"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="28"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="10728"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.040000" steps="10409"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.8" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="sub_valid_coloring_white&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sub_valid_coloring_white&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="3.500000"/></proof>
    </goal>
    <goal name="sub_valid_coloring_white&#39;vc.8.0.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.376082" steps="12128"/></proof>
    </goal>
    <goal name="sub_valid_coloring_white&#39;vc.8.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="2.990000"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="count_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_stack_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="73"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="16704"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="stored_trans1&#39;vc" expl="VC for stored_trans1" proved="true">
 <proof prover="3"><result status="valid" time="0.266409" steps="4317"/></proof>
 </goal>
 <goal name="stored_trans2&#39;vc" expl="VC for stored_trans2" proved="true">
 <proof prover="3"><result status="valid" time="0.400000" steps="4267"/></proof>
 </goal>
</theory>
<theory name="KodaRuskey" proved="true">
 <goal name="enum&#39;vc" expl="VC for enum" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="enum&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15267"/></proof>
  </goal>
  <goal name="enum&#39;vc.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="17"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="15369"/></proof>
  </goal>
  <goal name="enum&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="14303"/></proof>
  </goal>
  <goal name="enum&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="104"/></proof>
  <proof prover="6"><result status="valid" time="0.140000" steps="19800"/></proof>
  </goal>
  <goal name="enum&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="17"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="17857"/></proof>
  </goal>
  <goal name="enum&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="785"/></proof>
  </goal>
  <goal name="enum&#39;vc.6" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="411"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="17530"/></proof>
  </goal>
  <goal name="enum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="30"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15433"/></proof>
  </goal>
  <goal name="enum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="30"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15446"/></proof>
  </goal>
  <goal name="enum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="78"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="16159"/></proof>
  </goal>
  <goal name="enum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="43"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="16128"/></proof>
  </goal>
  <goal name="enum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="46"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="16176"/></proof>
  </goal>
  <goal name="enum&#39;vc.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="30"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15572"/></proof>
  </goal>
  <goal name="enum&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="58"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="18096"/></proof>
  </goal>
  <goal name="enum&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="306"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="18301"/></proof>
  </goal>
  <goal name="enum&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15544"/></proof>
  </goal>
  <goal name="enum&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.501783" steps="17448"/></proof>
  </goal>
  <goal name="enum&#39;vc.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.107344" steps="4256"/></proof>
  <proof prover="6"><result status="valid" time="0.200000" steps="30374"/></proof>
  </goal>
  <goal name="enum&#39;vc.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.108005" steps="4169"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="30239"/></proof>
  </goal>
  <goal name="enum&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.480000"/></proof>
  </goal>
  <goal name="enum&#39;vc.20" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="1016"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="22053"/></proof>
  </goal>
  <goal name="enum&#39;vc.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="15507"/></proof>
  </goal>
  <goal name="enum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15524"/></proof>
  </goal>
  <goal name="enum&#39;vc.23" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="54"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="16222"/></proof>
  </goal>
  <goal name="enum&#39;vc.24" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="14303"/></proof>
  </goal>
  <goal name="enum&#39;vc.25" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="1365"/></proof>
  <proof prover="6"><result status="valid" time="0.130000" steps="17982"/></proof>
  </goal>
  <goal name="enum&#39;vc.26" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15621"/></proof>
  </goal>
  <goal name="enum&#39;vc.27" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.275794" steps="11019"/></proof>
  <proof prover="6"><result status="valid" time="0.260000" steps="36614"/></proof>
  </goal>
  <goal name="enum&#39;vc.28" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.500000"/></proof>
  </goal>
  <goal name="enum&#39;vc.29" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.237250" steps="9975"/></proof>
  <proof prover="6"><result status="valid" time="0.360000" steps="52303"/></proof>
  </goal>
  <goal name="enum&#39;vc.30" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.180000"/></proof>
  <proof prover="6"><result status="valid" time="0.580000" steps="71352"/></proof>
  </goal>
  <goal name="enum&#39;vc.31" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.239148" steps="6305"/></proof>
  <proof prover="6"><result status="valid" time="0.140000" steps="20346"/></proof>
  </goal>
  <goal name="enum&#39;vc.32" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="85"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="17721"/></proof>
  </goal>
  <goal name="enum&#39;vc.33" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="365"/></proof>
  <proof prover="6"><result status="valid" time="0.130000" steps="20718"/></proof>
  </goal>
  <goal name="enum&#39;vc.34" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="44"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="17767"/></proof>
  </goal>
  <goal name="enum&#39;vc.35" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="44"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="17841"/></proof>
  </goal>
  <goal name="enum&#39;vc.36" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="93"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="18222"/></proof>
  </goal>
  <goal name="enum&#39;vc.37" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="14303"/></proof>
  </goal>
  <goal name="enum&#39;vc.38" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.160000" steps="2118"/></proof>
  <proof prover="6"><result status="valid" time="0.140000" steps="21127"/></proof>
  </goal>
  <goal name="enum&#39;vc.39" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="99"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="20814"/></proof>
  </goal>
  <goal name="enum&#39;vc.40" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.730939" steps="11878"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="22474"/></proof>
  </goal>
  <goal name="enum&#39;vc.41" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="104"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="18853"/></proof>
  </goal>
  <goal name="enum&#39;vc.42" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.160000" steps="24126"/></proof>
  </goal>
  <goal name="enum&#39;vc.43" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="72"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="19420"/></proof>
  </goal>
  <goal name="enum&#39;vc.44" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.620000"/></proof>
  </goal>
  <goal name="enum&#39;vc.45" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.569241" steps="14186"/></proof>
  <proof prover="6"><result status="valid" time="0.280000" steps="40813"/></proof>
  </goal>
  <goal name="enum&#39;vc.46" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.508180" steps="12104"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="32924"/></proof>
  </goal>
  <goal name="enum&#39;vc.47" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.606703" steps="13922"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="33197"/></proof>
  </goal>
  <goal name="enum&#39;vc.48" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="72"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="17155"/></proof>
  </goal>
  <goal name="enum&#39;vc.49" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="72"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="16449"/></proof>
  </goal>
  <goal name="enum&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.690039" steps="84428"/></proof>
  <proof prover="6"><result status="valid" time="0.915018" steps="86082"/></proof>
  </goal>
  <goal name="enum&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.740000" steps="66790"/></proof>
  </goal>
  <goal name="enum&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="72"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="16345"/></proof>
  </goal>
  <goal name="enum&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="72"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="19032"/></proof>
  </goal>
  <goal name="enum&#39;vc.54" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.100000" steps="1712"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="17673"/></proof>
  </goal>
  <goal name="enum&#39;vc.55" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="322"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="18482"/></proof>
  </goal>
  <goal name="enum&#39;vc.56" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15584"/></proof>
  </goal>
  <goal name="enum&#39;vc.57" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="15601"/></proof>
  </goal>
  <goal name="enum&#39;vc.58" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="297"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="17920"/></proof>
  </goal>
  <goal name="enum&#39;vc.59" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="14303"/></proof>
  </goal>
  <goal name="enum&#39;vc.60" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.170000" steps="2047"/></proof>
  <proof prover="6"><result status="valid" time="0.130000" steps="18637"/></proof>
  </goal>
  <goal name="enum&#39;vc.61" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="15709"/></proof>
  </goal>
  <goal name="enum&#39;vc.62" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.300000" steps="41249"/></proof>
  </goal>
  <goal name="enum&#39;vc.63" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.400000"/></proof>
  <proof prover="6"><result status="valid" time="3.962274" steps="260082"/></proof>
  </goal>
  <goal name="enum&#39;vc.64" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.473888" steps="13033"/></proof>
  <proof prover="6"><result status="valid" time="0.170000" steps="28441"/></proof>
  </goal>
  <goal name="enum&#39;vc.65" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="88"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="17704"/></proof>
  </goal>
  <goal name="enum&#39;vc.66" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.355536" steps="10128"/></proof>
  <proof prover="6"><result status="valid" time="0.280000" steps="40941"/></proof>
  </goal>
  <goal name="enum&#39;vc.67" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="1.752637" steps="53899"/></proof>
  <proof prover="6"><result status="valid" time="0.730000" steps="72875"/></proof>
  </goal>
  <goal name="enum&#39;vc.68" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.090985" steps="2742"/></proof>
  <proof prover="6"><result status="valid" time="0.180000" steps="27882"/></proof>
  </goal>
  <goal name="enum&#39;vc.69" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="46"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="18055"/></proof>
  </goal>
  <goal name="enum&#39;vc.70" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="46"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="18129"/></proof>
  </goal>
  <goal name="enum&#39;vc.71" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="101"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="18238"/></proof>
  </goal>
  <goal name="enum&#39;vc.72" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="14500"/></proof>
  </goal>
  <goal name="enum&#39;vc.73" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.527075" steps="12131"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="32411"/></proof>
  </goal>
  <goal name="enum&#39;vc.74" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.229607" steps="4540"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="22488"/></proof>
  </goal>
  <goal name="enum&#39;vc.75" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.125821" steps="2929"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="23109"/></proof>
  </goal>
  <goal name="enum&#39;vc.76" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="2.538846" steps="160966"/></proof>
  </goal>
  <goal name="enum&#39;vc.77" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="19276"/></proof>
  </goal>
  <goal name="enum&#39;vc.78" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.680000"/></proof>
  </goal>
  <goal name="enum&#39;vc.79" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.603513" steps="15839"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="36119"/></proof>
  </goal>
  <goal name="enum&#39;vc.80" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.210000" steps="31792"/></proof>
  </goal>
  <goal name="enum&#39;vc.81" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.668203" steps="14299"/></proof>
  <proof prover="6"><result status="valid" time="0.230000" steps="32181"/></proof>
  </goal>
  <goal name="enum&#39;vc.82" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="17077"/></proof>
  </goal>
  <goal name="enum&#39;vc.83" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="16453"/></proof>
  </goal>
  <goal name="enum&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.220000" steps="35433"/></proof>
  </goal>
  <goal name="enum&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.668277" steps="62457"/></proof>
  </goal>
  <goal name="enum&#39;vc.86" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="16349"/></proof>
  </goal>
  <goal name="enum&#39;vc.87" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="18892"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="3"><result status="valid" time="0.060000" steps="230"/></proof>
 </goal>
</theory>
</file>
</why3session>
