<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="8" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="koda_ruskey.mlw"/>
<theory name="KodaRuskey_Spec" proved="true">
 <goal name="eq_color&#39;vc" expl="VC for eq_color" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="9"/></proof>
 <proof prover="4"><result status="valid" time="0.01" steps="3213"/></proof>
 </goal>
 <goal name="size_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_forest_nonneg.0" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="3860"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_forest_nonneg.0" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="6162"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemmas" proved="true">
 <goal name="mem_app" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="mem_app.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="mem_app.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="7154"/></proof>
   </goal>
   <goal name="mem_app.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="8514"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="size_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_stack_nonneg.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="size_stack_nonneg.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="6284"/></proof>
   </goal>
   <goal name="size_stack_nonneg.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="7774"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="white_forest_equiv" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_forest_equiv.0" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="8455"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_forest_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_forest_frame.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="any_forest_frame.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="6212"/></proof>
   </goal>
   <goal name="any_forest_frame.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="6304"/></proof>
   </goal>
   <goal name="any_forest_frame.0.2" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="10858"/></proof>
   </goal>
   <goal name="any_forest_frame.0.3" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="8585"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="any_stack_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_stack_frame.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="any_stack_frame.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="7553"/></proof>
   </goal>
   <goal name="any_stack_frame.0.1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="any_stack_frame.0.1.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="any_stack_frame.0.1.0.0" proved="true">
     <transf name="split_goal_right" proved="true" >
      <goal name="any_stack_frame.0.1.0.0.0" proved="true">
      <proof prover="4"><result status="valid" time="0.04" steps="9697"/></proof>
      </goal>
      <goal name="any_stack_frame.0.1.0.0.1" proved="true">
      <proof prover="2" timelimit="36"><result status="valid" time="0.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame.0" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.04" steps="193"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame2" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame2.0" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.06" steps="198"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_any&#39;vc" expl="VC for inverse_any" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_any&#39;vc.0" expl="VC for inverse_any" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="65"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="9246"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_final" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="inverse_final.0" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="12545"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_white" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="inverse_white.0" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="12832"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_final_exclusive&#39;vc" expl="VC for white_final_exclusive" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="27"/></proof>
 <proof prover="4"><result status="valid" time="0.03" steps="7850"/></proof>
 </goal>
 <goal name="final_unique" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_unique.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="final_unique.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="7466"/></proof>
   </goal>
   <goal name="final_unique.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="9608"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_inverse&#39;vc" expl="VC for inverse_inverse" proved="true">
 <proof prover="1"><result status="valid" time="0.26" steps="739"/></proof>
 <proof prover="4"><result status="valid" time="0.35" steps="46543"/></proof>
 </goal>
 <goal name="sub_not_nil" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_not_nil.0" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="9216"/></proof>
  </goal>
  <goal name="sub_not_nil.1" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="8551"/></proof>
  <proof prover="8"><result status="valid" time="0.95" steps="1681044"/></proof>
  </goal>
  <goal name="sub_not_nil.2" proved="true">
  <proof prover="0" timelimit="6"><result status="valid" time="0.01"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="11696"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_empty" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_empty.0" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="9894"/></proof>
  </goal>
  <goal name="sub_empty.1" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="10539"/></proof>
  </goal>
  <goal name="sub_empty.2" proved="true">
  <proof prover="0"><result status="valid" time="0.67"/></proof>
  <proof prover="4"><result status="valid" time="0.10" steps="19983"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_mem" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_mem.0" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="9901"/></proof>
  </goal>
  <goal name="sub_mem.1" proved="true">
  <transf name="simplify_trivial_quantification" proved="true" >
   <goal name="sub_mem.1.0" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="8277"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_mem.2" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="12634"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken1" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken1.0" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="11655"/></proof>
  </goal>
  <goal name="sub_weaken1.1" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="10720"/></proof>
  </goal>
  <goal name="sub_weaken1.2" proved="true">
  <proof prover="0"><result status="valid" time="0.88"/></proof>
  <proof prover="4"><result status="valid" time="0.15" steps="25304"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken2.0" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="16148"/></proof>
  </goal>
  <goal name="sub_weaken2.1" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="11121"/></proof>
  </goal>
  <goal name="sub_weaken2.2" proved="true">
  <proof prover="0"><result status="valid" time="2.36"/></proof>
  <proof prover="4"><result status="valid" time="0.34" steps="44211"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_st" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="not_mem_st.0" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="10204"/></proof>
  </goal>
  <goal name="not_mem_st.1" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="9013"/></proof>
  </goal>
  <goal name="not_mem_st.2" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="12943"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_frame" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_frame.0" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="9964"/></proof>
  </goal>
  <goal name="sub_frame.1" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="10931"/></proof>
  </goal>
  <goal name="sub_frame.2" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="16463"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep.0" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="10627"/></proof>
  </goal>
  <goal name="sub_no_rep.1" proved="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="10191"/></proof>
  </goal>
  <goal name="sub_no_rep.2" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.07" steps="16778"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep2.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="sub_no_rep2.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   <proof prover="1" timelimit="1"><result status="valid" time="0.01" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.1" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="sub_no_rep2.1.0" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="10279"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.2" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.63"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_valid.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="white_valid.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="9188"/></proof>
   </goal>
   <goal name="white_valid.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="10055"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="final_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_valid.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="final_valid.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="9238"/></proof>
   </goal>
   <goal name="final_valid.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="10220"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_frame.0" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="15268"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_set" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_set.0" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="11075"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="head_and_tail" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="head_and_tail.0" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="14025"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_valid_coloring_f1" proved="true">
 <proof prover="4"><result status="valid" time="0.04" steps="11345"/></proof>
 </goal>
 <goal name="sub_valid_coloring" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_valid_coloring.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="sub_valid_coloring.0.0" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="sub_valid_coloring.0.0.0" proved="true">
    <transf name="split_goal_right" proved="true" >
     <goal name="sub_valid_coloring.0.0.0.0" proved="true">
     <proof prover="1" timelimit="1"><result status="valid" time="0.04" steps="171"/></proof>
     </goal>
     <goal name="sub_valid_coloring.0.0.0.1" proved="true">
     <proof prover="1" timelimit="1"><result status="valid" time="0.01" steps="25"/></proof>
     </goal>
     <goal name="sub_valid_coloring.0.0.0.2" proved="true">
     <proof prover="1" timelimit="1"><result status="valid" time="0.06" steps="209"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.1" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="sub_valid_coloring.1.0" proved="true">
   <transf name="simplify_trivial_quantification" proved="true" >
    <goal name="sub_valid_coloring.1.0.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="sub_valid_coloring.1.0.0.0" proved="true">
     <transf name="split_goal_right" proved="true" >
      <goal name="sub_valid_coloring.1.0.0.0.0" proved="true">
      <proof prover="0"><result status="valid" time="0.16"/></proof>
      <proof prover="1"><result status="valid" time="0.26" steps="341"/></proof>
      <proof prover="4"><result status="valid" time="0.14" steps="24286"/></proof>
      </goal>
      <goal name="sub_valid_coloring.1.0.0.0.1" proved="true">
      <proof prover="4"><result status="valid" time="0.90" steps="103825"/></proof>
      </goal>
      <goal name="sub_valid_coloring.1.0.0.0.2" proved="true">
      <proof prover="4"><result status="valid" time="1.13" steps="112918"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.2" proved="true">
  <proof prover="4"><result status="valid" time="1.20" steps="132281"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_Cons_N" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_Cons_N.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="12102"/></proof>
  </goal>
  <goal name="sub_Cons_N.1" proved="true">
  <proof prover="0" timelimit="26"><result status="valid" time="0.13"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="15"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="12668"/></proof>
  </goal>
  <goal name="sub_Cons_N.2" proved="true">
  <proof prover="0" timelimit="26"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.05" steps="103"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="13787"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_white" proved="true">
 <proof prover="4"><result status="valid" time="0.04" steps="10839"/></proof>
 </goal>
 <goal name="sub_valid_coloring_white&#39;vc" expl="VC for sub_valid_coloring_white" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="sub_valid_coloring_white&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="35"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="11468"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="23"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="10363"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="61"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="11044"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="9724"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="12565"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="23"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="11369"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="55"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="11420"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="10589"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="sub_valid_coloring_white&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="11265"/></proof>
   </goal>
   <goal name="sub_valid_coloring_white&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="sub_valid_coloring_white&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="destruct_term" proved="true" arg1="f0">
     <goal name="sub_valid_coloring_white&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="compute_in_goal" proved="true" >
      <goal name="sub_valid_coloring_white&#39;vc.8.1.0.0.0" expl="postcondition" proved="true">
      <transf name="split_goal_right" proved="true" >
       <goal name="sub_valid_coloring_white&#39;vc.8.1.0.0.0.0" expl="VC for sub_valid_coloring_white" proved="true">
       <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="1.37" steps="135118"/></proof>
       </goal>
       <goal name="sub_valid_coloring_white&#39;vc.8.1.0.0.0.1" expl="VC for sub_valid_coloring_white" proved="true">
       <proof prover="2"><result status="valid" time="2.21"/></proof>
       <transf name="remove" proved="true" arg1="real,bool,tuple0,unit,tuple2,map,coloring,stack,zero,one,(-_),(+),( * ),(&lt;),(-),(&gt;),(&lt;=),(&gt;=),get,set,([&lt;-]),is_nil,length,mem,size_forest,between_range_forest,valid_nums_forest,count_forest,eq_coloring,size_stack,even_forest,final_forest,any_forest,unchanged,inverse,any_stack,disjoint_stack,x,x1,x2,Assoc,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm,Assoc1,Mul_distr_l,Mul_distr_r,Comm1,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,is_nil&#39;spec,Length_nonnegative,Length_nil,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,size_forest_nonneg,count_forest_nonneg,mem_app,size_stack_nonneg,any_forest_frame,any_stack_frame,inverse_frame,inverse_frame2,inverse_any,inverse_final,inverse_white,white_final_exclusive,final_unique,inverse_inverse,sub_not_nil,sub_empty,sub_weaken1,sub_weaken2,not_mem_st,sub_frame,sub_no_rep2,white_valid,final_valid,valid_coloring_set,head_and_tail,sub_valid_coloring_f1,sub_valid_coloring,white_white,Ensures,Ensures1,H1">
        <goal name="sub_valid_coloring_white&#39;vc.8.1.0.0.0.1.0" expl="VC for sub_valid_coloring_white" proved="true">
        <proof prover="2"><result status="valid" time="0.16"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sub_valid_coloring_white&#39;vc.8.1.0.0.0.2" expl="VC for sub_valid_coloring_white" proved="true">
       <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="7.73" steps="522464"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sub_valid_coloring_white&#39;vc.8.1.0.1" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.03" steps="10572"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="count_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_stack_nonneg.0" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="16310"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="stored_trans1&#39;vc" expl="VC for stored_trans1" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.39" steps="438"/></proof>
 </goal>
 <goal name="stored_trans2&#39;vc" expl="VC for stored_trans2" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.39" steps="438"/></proof>
 </goal>
</theory>
<theory name="KodaRuskey" proved="true">
 <goal name="enum&#39;vc" expl="VC for enum" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="enum&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21037"/></proof>
  </goal>
  <goal name="enum&#39;vc.1" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21116"/></proof>
  </goal>
  <goal name="enum&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="8"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="18995"/></proof>
  </goal>
  <goal name="enum&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="53"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="27957"/></proof>
  </goal>
  <goal name="enum&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="24992"/></proof>
  </goal>
  <goal name="enum&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.04" steps="108"/></proof>
  </goal>
  <goal name="enum&#39;vc.6" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="24107"/></proof>
  </goal>
  <goal name="enum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21180"/></proof>
  </goal>
  <goal name="enum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="17"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21193"/></proof>
  </goal>
  <goal name="enum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="43"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="22486"/></proof>
  </goal>
  <goal name="enum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="23"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="22467"/></proof>
  </goal>
  <goal name="enum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="45"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="22512"/></proof>
  </goal>
  <goal name="enum&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21319"/></proof>
  </goal>
  <goal name="enum&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="56"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="24690"/></proof>
  </goal>
  <goal name="enum&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="94"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="24869"/></proof>
  </goal>
  <goal name="enum&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21291"/></proof>
  </goal>
  <goal name="enum&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.08" steps="217"/></proof>
  </goal>
  <goal name="enum&#39;vc.17" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="333"/></proof>
  <proof prover="4"><result status="valid" time="0.16" steps="38270"/></proof>
  </goal>
  <goal name="enum&#39;vc.18" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="101"/></proof>
  <proof prover="4"><result status="valid" time="0.18" steps="38117"/></proof>
  </goal>
  <goal name="enum&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="9"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="enum&#39;vc.20" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="80"/></proof>
  <proof prover="4"><result status="valid" time="0.10" steps="29221"/></proof>
  </goal>
  <goal name="enum&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="19"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21254"/></proof>
  </goal>
  <goal name="enum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="19"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21271"/></proof>
  </goal>
  <goal name="enum&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="60"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="22562"/></proof>
  </goal>
  <goal name="enum&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="8"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="18995"/></proof>
  </goal>
  <goal name="enum&#39;vc.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="321"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="24575"/></proof>
  </goal>
  <goal name="enum&#39;vc.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="21"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21368"/></proof>
  </goal>
  <goal name="enum&#39;vc.27" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="661"/></proof>
  <proof prover="4"><result status="valid" time="0.23" steps="48084"/></proof>
  </goal>
  <goal name="enum&#39;vc.28" expl="index in array bounds" proved="true">
  <proof prover="9"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="enum&#39;vc.29" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="405"/></proof>
  <proof prover="4"><result status="valid" time="0.42" steps="68173"/></proof>
  </goal>
  <goal name="enum&#39;vc.30" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.48" steps="75518"/></proof>
  <proof prover="9"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="enum&#39;vc.31" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="145"/></proof>
  <proof prover="4"><result status="valid" time="0.09" steps="26777"/></proof>
  </goal>
  <goal name="enum&#39;vc.32" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
  <proof prover="4"><result status="valid" time="0.07" steps="23744"/></proof>
  </goal>
  <goal name="enum&#39;vc.33" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="47"/></proof>
  <proof prover="4"><result status="valid" time="0.09" steps="27138"/></proof>
  </goal>
  <goal name="enum&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="23784"/></proof>
  </goal>
  <goal name="enum&#39;vc.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="23858"/></proof>
  </goal>
  <goal name="enum&#39;vc.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  <proof prover="4"><result status="valid" time="0.07" steps="24222"/></proof>
  </goal>
  <goal name="enum&#39;vc.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="8"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="18995"/></proof>
  </goal>
  <goal name="enum&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.10" steps="27510"/></proof>
  </goal>
  <goal name="enum&#39;vc.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="4"><result status="valid" time="0.10" steps="27364"/></proof>
  </goal>
  <goal name="enum&#39;vc.40" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="330"/></proof>
  <proof prover="4"><result status="valid" time="0.11" steps="28927"/></proof>
  </goal>
  <goal name="enum&#39;vc.41" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="160"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="24876"/></proof>
  </goal>
  <goal name="enum&#39;vc.42" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="4"><result status="valid" time="0.12" steps="31367"/></proof>
  </goal>
  <goal name="enum&#39;vc.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="37"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="25445"/></proof>
  </goal>
  <goal name="enum&#39;vc.44" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="enum&#39;vc.45" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="44007"/></proof>
  </goal>
  <goal name="enum&#39;vc.46" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.18" steps="44390"/></proof>
  </goal>
  <goal name="enum&#39;vc.47" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="4"><result status="valid" time="0.17" steps="44547"/></proof>
  </goal>
  <goal name="enum&#39;vc.48" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="40"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="26523"/></proof>
  </goal>
  <goal name="enum&#39;vc.49" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="40"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="25817"/></proof>
  </goal>
  <goal name="enum&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.41"/></proof>
  <proof prover="4"><result status="valid" time="0.32" steps="57929"/></proof>
  </goal>
  <goal name="enum&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.42" steps="65017"/></proof>
  </goal>
  <goal name="enum&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="21780"/></proof>
  </goal>
  <goal name="enum&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="24471"/></proof>
  </goal>
  <goal name="enum&#39;vc.54" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="389"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="24311"/></proof>
  </goal>
  <goal name="enum&#39;vc.55" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="41"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="25166"/></proof>
  </goal>
  <goal name="enum&#39;vc.56" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="19"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21335"/></proof>
  </goal>
  <goal name="enum&#39;vc.57" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21352"/></proof>
  </goal>
  <goal name="enum&#39;vc.58" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="76"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="24600"/></proof>
  </goal>
  <goal name="enum&#39;vc.59" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="8"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="18995"/></proof>
  </goal>
  <goal name="enum&#39;vc.60" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="699"/></proof>
  <proof prover="4"><result status="valid" time="0.08" steps="25170"/></proof>
  </goal>
  <goal name="enum&#39;vc.61" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="21"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21460"/></proof>
  </goal>
  <goal name="enum&#39;vc.62" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.90" steps="118606"/></proof>
  </goal>
  <goal name="enum&#39;vc.63" expl="index in array bounds" proved="true">
  <proof prover="9"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="enum&#39;vc.64" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="216"/></proof>
  <proof prover="4"><result status="valid" time="0.13" steps="34225"/></proof>
  </goal>
  <goal name="enum&#39;vc.65" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
  <proof prover="4"><result status="valid" time="0.07" steps="23735"/></proof>
  </goal>
  <goal name="enum&#39;vc.66" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="657"/></proof>
  <proof prover="4"><result status="valid" time="0.27" steps="49369"/></proof>
  </goal>
  <goal name="enum&#39;vc.67" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="3.21" steps="2381"/></proof>
  <proof prover="4"><result status="valid" time="0.40" steps="68700"/></proof>
  </goal>
  <goal name="enum&#39;vc.68" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="133"/></proof>
  <proof prover="4"><result status="valid" time="0.12" steps="34699"/></proof>
  </goal>
  <goal name="enum&#39;vc.69" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="24080"/></proof>
  </goal>
  <goal name="enum&#39;vc.70" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31"/></proof>
  <proof prover="4"><result status="valid" time="0.07" steps="24154"/></proof>
  </goal>
  <goal name="enum&#39;vc.71" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="88"/></proof>
  <proof prover="4"><result status="valid" time="0.07" steps="24271"/></proof>
  </goal>
  <goal name="enum&#39;vc.72" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="18995"/></proof>
  </goal>
  <goal name="enum&#39;vc.73" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="39812"/></proof>
  </goal>
  <goal name="enum&#39;vc.74" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="29018"/></proof>
  </goal>
  <goal name="enum&#39;vc.75" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="172"/></proof>
  <proof prover="4"><result status="valid" time="0.10" steps="29331"/></proof>
  </goal>
  <goal name="enum&#39;vc.76" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.39" steps="137666"/></proof>
  </goal>
  <goal name="enum&#39;vc.77" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="36"/></proof>
  <proof prover="4"><result status="valid" time="0.07" steps="25301"/></proof>
  </goal>
  <goal name="enum&#39;vc.78" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.61"/></proof>
  </goal>
  <goal name="enum&#39;vc.79" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.46"/></proof>
  <proof prover="4"><result status="valid" time="0.22" steps="44280"/></proof>
  </goal>
  <goal name="enum&#39;vc.80" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="4"><result status="valid" time="0.16" steps="42578"/></proof>
  </goal>
  <goal name="enum&#39;vc.81" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1"><result status="valid" time="0.44" steps="331"/></proof>
  <proof prover="4"><result status="valid" time="0.17" steps="42967"/></proof>
  </goal>
  <goal name="enum&#39;vc.82" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="26445"/></proof>
  </goal>
  <goal name="enum&#39;vc.83" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="25821"/></proof>
  </goal>
  <goal name="enum&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.23"/></proof>
  <proof prover="4"><result status="valid" time="0.17" steps="40873"/></proof>
  </goal>
  <goal name="enum&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.40"/></proof>
  <proof prover="1"><result status="valid" time="2.42" steps="1598"/></proof>
  <proof prover="4"><result status="valid" time="0.39" steps="64121"/></proof>
  </goal>
  <goal name="enum&#39;vc.86" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="38"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="21784"/></proof>
  </goal>
  <goal name="enum&#39;vc.87" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="38"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="24331"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.03" steps="135"/></proof>
 </goal>
</theory>
</file>
</why3session>
