<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="36" steplimit="0" memlimit="1000"/>
<prover id="1" name="Coq" version="8.6.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.4.1" alternative="noBV" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Eprover" version="1.8-001" timelimit="36" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../koda_ruskey.mlw" proved="true">
<theory name="KodaRuskey_Spec" proved="true" sum="5610b955c7ce4dfe99ceff63113fcab2">
 <goal name="size_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_forest_nonneg.0" proved="true">
  <proof prover="7"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_forest_nonneg.0" proved="true">
  <proof prover="7"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemmas" proved="true" sum="b7249c0a53125424177c4ff578966cf1">
 <goal name="mem_app" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="mem_app.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="mem_app.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
   <goal name="mem_app.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="66"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="size_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_stack_nonneg.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="size_stack_nonneg.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.00" steps="7"/></proof>
   </goal>
   <goal name="size_stack_nonneg.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="white_forest_equiv" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_forest_equiv.0" proved="true">
  <proof prover="7"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_forest_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_forest_frame.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="any_forest_frame.0.0" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="any_forest_frame.0.1" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="any_forest_frame.0.2" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.04" steps="163"/></proof>
   </goal>
   <goal name="any_forest_frame.0.3" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.08" steps="85"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="any_stack_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_stack_frame.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="any_stack_frame.0.0" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.01" steps="11"/></proof>
   </goal>
   <goal name="any_stack_frame.0.1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="any_stack_frame.0.1.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="any_stack_frame.0.1.0.0" proved="true">
     <transf name="split_goal_wp" proved="true" >
      <goal name="any_stack_frame.0.1.0.0.0" proved="true">
      <proof prover="4" timelimit="36"><result status="valid" time="0.02" steps="115"/></proof>
      </goal>
      <goal name="any_stack_frame.0.1.0.0.1" proved="true">
      <proof prover="0"><result status="valid" time="0.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.04" steps="198"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame2" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame2.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.11" steps="230"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter inverse_any" expl="VC for inverse_any" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="WP_parameter inverse_any.0" expl="VC for inverse_any" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="104"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_final" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="inverse_final.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.44" steps="751"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_white" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="inverse_white.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="1.10" steps="1747"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter white_final_exclusive" expl="VC for white_final_exclusive" proved="true">
 <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="43"/></proof>
 </goal>
 <goal name="final_unique" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_unique.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="final_unique.0.0" proved="true">
   <proof prover="4" timelimit="6"><result status="valid" time="0.00" steps="12"/></proof>
   </goal>
   <goal name="final_unique.0.1" proved="true">
   <proof prover="4" timelimit="6"><result status="valid" time="0.30" steps="662"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter inverse_inverse" expl="VC for inverse_inverse" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter inverse_inverse.0" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.1" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.2" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.3" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.4" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.5" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.18" steps="425"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.6" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.7" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.8" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="WP_parameter inverse_inverse.9" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.18" steps="387"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_not_nil" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_not_nil.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="sub_not_nil.1" proved="true">
  <proof prover="6"><result status="valid" time="0.76"/></proof>
  </goal>
  <goal name="sub_not_nil.2" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_empty" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_empty.0" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="sub_empty.1" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_empty.2" proved="true">
  <proof prover="6"><result status="valid" time="2.54"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_mem" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_mem.0" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="23"/></proof>
  </goal>
  <goal name="sub_mem.1" proved="true">
  <transf name="simplify_trivial_quantification" proved="true" >
   <goal name="sub_mem.1.0" proved="true">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_mem.2" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken1" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken1.0" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_weaken1.1" proved="true">
  <proof prover="7"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_weaken1.2" proved="true">
  <proof prover="2"><result status="valid" time="1.33"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken2.0" proved="true">
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="sub_weaken2.1" proved="true">
  <proof prover="7"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_weaken2.2" proved="true">
  <transf name="simplify_trivial_quantification_in_goal" proved="true" >
   <goal name="sub_weaken2.2.0" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="sub_weaken2.2.0.0" proved="true">
    <proof prover="6" timelimit="30" memlimit="4000"><result status="valid" time="0.88"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_st" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="not_mem_st.0" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="not_mem_st.1" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="not_mem_st.2" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="88"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_frame" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_frame.0" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="sub_frame.1" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_frame.2" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep.0" proved="true">
  <proof prover="4" steplimit="-1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="sub_no_rep.1" proved="true">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="sub_no_rep.2" proved="true">
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep2.0" proved="true">
  <proof prover="7"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_no_rep2.1" proved="true">
  <proof prover="7"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_no_rep2.2" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.85"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_valid.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="white_valid.0.0" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
   <goal name="white_valid.0.1" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.01" steps="79"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="final_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_valid.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="final_valid.0.0" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="final_valid.0.1" proved="true">
   <proof prover="4" steplimit="-1"><result status="valid" time="0.01" steps="73"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_frame.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.18" steps="310"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_set" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_set.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="head_and_tail" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="head_and_tail.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_valid_coloring_f1" proved="true">
 <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="69"/></proof>
 </goal>
 <goal name="sub_valid_coloring" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_valid_coloring.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="sub_valid_coloring.0.0" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="sub_valid_coloring.0.0.0" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="sub_valid_coloring.0.0.0.0" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.03" steps="86"/></proof>
     </goal>
     <goal name="sub_valid_coloring.0.0.0.1" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="19"/></proof>
     </goal>
     <goal name="sub_valid_coloring.0.0.0.2" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.03" steps="130"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.1" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="sub_valid_coloring.1.0" proved="true">
   <transf name="simplify_trivial_quantification" proved="true" >
    <goal name="sub_valid_coloring.1.0.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="sub_valid_coloring.1.0.0.0" proved="true">
     <transf name="split_goal_wp" proved="true" >
      <goal name="sub_valid_coloring.1.0.0.0.0" proved="true">
      <proof prover="4"><result status="valid" time="0.04" steps="98"/></proof>
      </goal>
      <goal name="sub_valid_coloring.1.0.0.0.1" proved="true">
      <proof prover="2" timelimit="6"><result status="valid" time="0.18"/></proof>
      </goal>
      <goal name="sub_valid_coloring.1.0.0.0.2" proved="true">
      <proof prover="2"><result status="valid" time="0.20"/></proof>
      <proof prover="5" timelimit="5"><result status="valid" time="0.04"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.2" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="sub_valid_coloring.2.0" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="sub_valid_coloring.2.0.0" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="sub_valid_coloring.2.0.0.0" proved="true">
     <transf name="introduce_premises" proved="true" >
      <goal name="sub_valid_coloring.2.0.0.0.0" proved="true">
      <proof prover="5" timelimit="30" memlimit="4000"><result status="valid" time="12.19"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sub_valid_coloring.2.0.0.1" proved="true">
     <proof prover="6" timelimit="1"><result status="valid" time="0.03"/></proof>
     </goal>
     <goal name="sub_valid_coloring.2.0.0.2" proved="true">
     <proof prover="4" timelimit="1"><result status="valid" time="0.18" steps="326"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_Cons_N" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_Cons_N.0" proved="true">
  <proof prover="4" timelimit="26"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="sub_Cons_N.1" proved="true">
  <proof prover="2" timelimit="26"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="sub_Cons_N.2" proved="true">
  <proof prover="2" timelimit="26"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_white" proved="true">
 <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="43"/></proof>
 </goal>
 <goal name="WP_parameter sub_valid_coloring_white" expl="VC for sub_valid_coloring_white" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter sub_valid_coloring_white.0" expl="postcondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.1" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.2" expl="precondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.3" expl="precondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.4" expl="precondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.5" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.6" expl="precondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.7" expl="precondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.8" expl="precondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter sub_valid_coloring_white.9" expl="postcondition" proved="true">
  <proof prover="1" edited="koda_ruskey_KodaRuskey_Spec_WP_parameter_sub_valid_coloring_white_1.v"><result status="valid" time="2.37"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_stack_nonneg.0" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter stored_trans1" expl="VC for stored_trans1" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="WP_parameter stored_trans1.0" expl="VC for stored_trans1" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter stored_trans1.0.0" expl="VC for stored_trans1" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter stored_trans1.0.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="WP_parameter stored_trans1.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="38"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans1.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.24" steps="146"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans1.0.0.0.2" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.29" steps="151"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans1.0.0.0.3" expl="postcondition" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.16" steps="146"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans1.0.0.0.4" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.34" steps="270"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter stored_trans2" expl="VC for stored_trans2" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="WP_parameter stored_trans2.0" expl="VC for stored_trans2" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter stored_trans2.0.0" expl="VC for stored_trans2" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter stored_trans2.0.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="WP_parameter stored_trans2.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="38"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans2.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.22" steps="146"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans2.0.0.0.2" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.29" steps="151"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans2.0.0.0.3" expl="postcondition" proved="true">
     <proof prover="4" timelimit="6"><result status="valid" time="0.24" steps="146"/></proof>
     </goal>
     <goal name="WP_parameter stored_trans2.0.0.0.4" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.28" steps="270"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="KodaRuskey" proved="true" sum="625957e68f75377be9ad96b1728ce376">
 <goal name="WP_parameter enum" expl="VC for enum" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter enum.0" expl="unreachable point" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter enum.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="WP_parameter enum.2" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="WP_parameter enum.2.0" expl="postcondition" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="WP_parameter enum.2.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="WP_parameter enum.2.0.0.0" expl="VC for enum" proved="true">
     <proof prover="2"><result status="valid" time="0.15"/></proof>
     </goal>
     <goal name="WP_parameter enum.2.0.0.1" expl="VC for enum" proved="true">
     <proof prover="2"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="WP_parameter enum.2.0.0.2" expl="VC for enum" proved="true">
     <proof prover="2"><result status="valid" time="0.17"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter enum.3" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter enum.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="126"/></proof>
  </goal>
  <goal name="WP_parameter enum.5" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="36"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="WP_parameter enum.6" expl="precondition" proved="true">
  <proof prover="4" timelimit="6" steplimit="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="WP_parameter enum.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="WP_parameter enum.8" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="WP_parameter enum.9" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="WP_parameter enum.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="WP_parameter enum.11" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="WP_parameter enum.12" expl="postcondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter enum.13" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="WP_parameter enum.13.0" expl="postcondition" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="WP_parameter enum.13.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="WP_parameter enum.13.0.0.0" expl="VC for enum" proved="true">
     <proof prover="2"><result status="valid" time="0.12"/></proof>
     </goal>
     <goal name="WP_parameter enum.13.0.0.1" expl="VC for enum" proved="true">
     <proof prover="2" timelimit="25"><result status="valid" time="0.08"/></proof>
     </goal>
     <goal name="WP_parameter enum.13.0.0.2" expl="VC for enum" proved="true">
     <proof prover="2"><result status="valid" time="0.06"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter enum.14" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="WP_parameter enum.15" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.10" steps="299"/></proof>
  </goal>
  <goal name="WP_parameter enum.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.73"/></proof>
  </goal>
  <goal name="WP_parameter enum.17" expl="assertion" proved="true">
  <proof prover="4" timelimit="36"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="WP_parameter enum.18" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="WP_parameter enum.19" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="79"/></proof>
  </goal>
  <goal name="WP_parameter enum.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="WP_parameter enum.21" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="WP_parameter enum.22" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="59"/></proof>
  </goal>
  <goal name="WP_parameter enum.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="WP_parameter enum.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="WP_parameter enum.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="2.14"/></proof>
  </goal>
  <goal name="WP_parameter enum.26" expl="index in array bounds" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="WP_parameter enum.26.0" expl="index in array bounds" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="WP_parameter enum.26.0.0" expl="index in array bounds" proved="true">
    <proof prover="2" timelimit="10" steplimit="-1"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter enum.27" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.57" steps="363"/></proof>
  </goal>
  <goal name="WP_parameter enum.28" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="3.45"/></proof>
  </goal>
  <goal name="WP_parameter enum.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="3.53"/></proof>
  </goal>
  <goal name="WP_parameter enum.30" expl="assertion" proved="true">
  <proof prover="2" timelimit="25"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter enum.31" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter enum.32" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="33"/></proof>
  </goal>
  <goal name="WP_parameter enum.33" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="33"/></proof>
  </goal>
  <goal name="WP_parameter enum.34" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="84"/></proof>
  </goal>
  <goal name="WP_parameter enum.35" expl="precondition" proved="true">
  <proof prover="4" timelimit="25"><result status="valid" time="0.25" steps="137"/></proof>
  </goal>
  <goal name="WP_parameter enum.36" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="90"/></proof>
  </goal>
  <goal name="WP_parameter enum.37" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter enum.38" expl="assertion" proved="true">
  <proof prover="2" timelimit="25"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="WP_parameter enum.39" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="WP_parameter enum.40" expl="precondition" proved="true">
  <proof prover="4" timelimit="6" steplimit="1"><result status="valid" time="0.01" steps="41"/></proof>
  </goal>
  <goal name="WP_parameter enum.41" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="WP_parameter enum.42" expl="precondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter enum.43" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="WP_parameter enum.44" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter enum.45" expl="precondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter enum.45.0" expl="precondition" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter enum.45.0.0" expl="precondition" proved="true">
    <proof prover="4" timelimit="6"><result status="valid" time="0.03" steps="38"/></proof>
    </goal>
    <goal name="WP_parameter enum.45.0.1" expl="precondition" proved="true">
    <proof prover="4" timelimit="6"><result status="valid" time="0.03" steps="45"/></proof>
    </goal>
    <goal name="WP_parameter enum.45.0.2" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.02" steps="42"/></proof>
    </goal>
    <goal name="WP_parameter enum.45.0.3" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="WP_parameter enum.45.0.4" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.24"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter enum.46" expl="precondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter enum.47" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter enum.48" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="WP_parameter enum.48.0" expl="postcondition" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="WP_parameter enum.48.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="WP_parameter enum.48.0.0.0" expl="VC for enum" proved="true">
     <proof prover="2" timelimit="16"><result status="valid" time="0.22"/></proof>
     </goal>
     <goal name="WP_parameter enum.48.0.0.1" expl="VC for enum" proved="true">
     <proof prover="2" timelimit="16"><result status="valid" time="4.92"/></proof>
     </goal>
     <goal name="WP_parameter enum.48.0.0.2" expl="VC for enum" proved="true">
     <proof prover="2" timelimit="16"><result status="valid" time="0.20"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter enum.49" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
  <goal name="WP_parameter enum.50" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="WP_parameter enum.50.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="WP_parameter enum.50.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="WP_parameter enum.50.0.0.0" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.01" steps="45"/></proof>
     </goal>
     <goal name="WP_parameter enum.50.0.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
     <goal name="WP_parameter enum.50.0.0.2" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.01" steps="54"/></proof>
     </goal>
     <goal name="WP_parameter enum.50.0.0.3" expl="postcondition" proved="true">
     <proof prover="2" timelimit="6"><result status="valid" time="0.10"/></proof>
     </goal>
     <goal name="WP_parameter enum.50.0.0.4" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter enum.51" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.18" steps="442"/></proof>
  </goal>
  <goal name="WP_parameter enum.52" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="42"/></proof>
  </goal>
  <goal name="WP_parameter enum.53" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="WP_parameter enum.54" expl="precondition" proved="true">
  <proof prover="4" timelimit="6" steplimit="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="WP_parameter enum.55" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="74"/></proof>
  </goal>
  <goal name="WP_parameter enum.56" expl="precondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="WP_parameter enum.57" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter enum.58" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter enum.59" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter enum.60" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.33" steps="203"/></proof>
  </goal>
  <goal name="WP_parameter enum.61" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="WP_parameter enum.62" expl="assertion" proved="true">
  <proof prover="4" timelimit="36"><result status="valid" time="1.27" steps="603"/></proof>
  </goal>
  <goal name="WP_parameter enum.63" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="3.63" steps="1696"/></proof>
  </goal>
  <goal name="WP_parameter enum.64" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="124"/></proof>
  </goal>
  <goal name="WP_parameter enum.65" expl="precondition" proved="true">
  <proof prover="4" timelimit="6" steplimit="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="WP_parameter enum.66" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="WP_parameter enum.67" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="76"/></proof>
  </goal>
  <goal name="WP_parameter enum.68" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter enum.69" expl="precondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter enum.70" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter enum.71" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="5.30"/></proof>
  </goal>
  <goal name="WP_parameter enum.72" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="WP_parameter enum.73" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="WP_parameter enum.74" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter enum.75" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="WP_parameter enum.76" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter enum.77" expl="precondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter enum.78" expl="precondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="WP_parameter enum.79" expl="postcondition" proved="true">
  <proof prover="2" timelimit="6" steplimit="-1"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter enum.80" expl="postcondition" proved="true">
  <proof prover="2" timelimit="6"><result status="valid" time="5.98"/></proof>
  </goal>
  <goal name="WP_parameter enum.81" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="43"/></proof>
  </goal>
  <goal name="WP_parameter enum.82" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="43"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter main" expl="VC for main" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter main.0" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter main.1" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter main.2" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter main.3" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.00" steps="39"/></proof>
  </goal>
  <goal name="WP_parameter main.4" expl="precondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="WP_parameter main.5" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="WP_parameter main.6" expl="postcondition" proved="true">
  <proof prover="4" timelimit="6"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
