<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="koda_ruskey.mlw"/>
<theory name="KodaRuskey_Spec" proved="true">
 <goal name="eq_color&#39;vc" expl="VC for eq_color" proved="true">
 <proof prover="3"><result status="valid" time="0.000000" steps="6"/></proof>
 <proof prover="6"><result status="valid" time="0.030000" steps="2912"/></proof>
 </goal>
 <goal name="size_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_forest_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="12"/></proof>
  <proof prover="6"><result status="valid" time="0.030000" steps="3128"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_forest_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_forest_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="16"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="3694"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemmas" proved="true">
 <goal name="mem_app" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="mem_app.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="75"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="7423"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="size_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="size_stack_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="32"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="6230"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_forest_equiv" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_forest_equiv.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="141"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="6836"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_forest_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_forest_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="179"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="13148"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_stack_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="any_stack_frame.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="any_stack_frame.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.000000" steps="20"/></proof>
   <proof prover="6"><result status="valid" time="0.050000" steps="6309"/></proof>
   </goal>
   <goal name="any_stack_frame.0.1" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="any_stack_frame.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="any_stack_frame.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.020000" steps="153"/></proof>
     <proof prover="6"><result status="valid" time="0.070000" steps="8227"/></proof>
     </goal>
     <goal name="any_stack_frame.0.1.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.080000"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="234"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame2" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_frame2.0" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="256"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_any&#39;vc" expl="VC for inverse_any" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inverse_any&#39;vc.0" expl="VC for inverse_any" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="72"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="8094"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_final" proved="true">
 <proof prover="3"><result status="valid" time="0.150000" steps="837"/></proof>
 </goal>
 <goal name="inverse_white" proved="true">
 <proof prover="3"><result status="valid" time="0.010000" steps="73"/></proof>
 <proof prover="6"><result status="valid" time="0.060000" steps="7919"/></proof>
 </goal>
 <goal name="white_final_exclusive&#39;vc" expl="VC for white_final_exclusive" proved="true">
 <proof prover="3"><result status="valid" time="0.020000" steps="22"/></proof>
 </goal>
 <goal name="final_unique" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_unique.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="258"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="8982"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_inverse&#39;vc" expl="VC for inverse_inverse" proved="true">
 <proof prover="3"><result status="valid" time="0.320000" steps="1153"/></proof>
 <proof prover="6"><result status="valid" time="0.450000" steps="39465"/></proof>
 </goal>
 <goal name="sub_not_nil" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_not_nil.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="20"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="7656"/></proof>
  </goal>
  <goal name="sub_not_nil.1" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.040000" steps="7893"/></proof>
  </goal>
  <goal name="sub_not_nil.2" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="65"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="10737"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_empty" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_empty.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="8915"/></proof>
  </goal>
  <goal name="sub_empty.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="9529"/></proof>
  </goal>
  <goal name="sub_empty.2" proved="true">
  <proof prover="6"><result status="valid" time="0.150000" steps="17834"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_mem" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_mem.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="42"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="8911"/></proof>
  </goal>
  <goal name="sub_mem.1" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="26"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="7571"/></proof>
  </goal>
  <goal name="sub_mem.2" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="106"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="11470"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken1" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken1.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="135"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="10329"/></proof>
  </goal>
  <goal name="sub_weaken1.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9603"/></proof>
  </goal>
  <goal name="sub_weaken1.2" proved="true">
  <proof prover="6"><result status="valid" time="0.160000" steps="20012"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_weaken2.0" proved="true">
  <proof prover="6"><result status="valid" time="0.100000" steps="15021"/></proof>
  </goal>
  <goal name="sub_weaken2.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="10002"/></proof>
  </goal>
  <goal name="sub_weaken2.2" proved="true">
  <proof prover="6"><result status="valid" time="0.270000" steps="30834"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_st" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="not_mem_st.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="42"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="9217"/></proof>
  </goal>
  <goal name="not_mem_st.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="26"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="7942"/></proof>
  </goal>
  <goal name="not_mem_st.2" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="105"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="11782"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_frame" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9176"/></proof>
  </goal>
  <goal name="sub_frame.1" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="138"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="9952"/></proof>
  </goal>
  <goal name="sub_frame.2" proved="true">
  <proof prover="6"><result status="valid" time="0.130000" steps="18197"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9786"/></proof>
  </goal>
  <goal name="sub_no_rep.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9330"/></proof>
  </goal>
  <goal name="sub_no_rep.2" proved="true">
  <proof prover="6"><result status="valid" time="0.110000" steps="16098"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep2" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_no_rep2.0" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="55"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="10058"/></proof>
  </goal>
  <goal name="sub_no_rep2.1" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9509"/></proof>
  </goal>
  <goal name="sub_no_rep2.2" proved="true">
  <proof prover="1"><result status="valid" time="0.317668" steps="44557"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="white_valid.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="72"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="9790"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="final_valid" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="final_valid.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="10010"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_frame.0" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="339"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="14268"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_set" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="valid_coloring_set.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="59"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="10707"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="head_and_tail" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="head_and_tail.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="88"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="14043"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_valid_coloring_f1" proved="true">
 <proof prover="3"><result status="valid" time="0.040000" steps="140"/></proof>
 <proof prover="6"><result status="valid" time="0.070000" steps="11023"/></proof>
 </goal>
 <goal name="sub_valid_coloring" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_valid_coloring.0" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="171"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="13570"/></proof>
  </goal>
  <goal name="sub_valid_coloring.1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sub_valid_coloring.1.0" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="sub_valid_coloring.1.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sub_valid_coloring.1.0.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.160000" steps="366"/></proof>
     <proof prover="6"><result status="valid" time="0.160000" steps="25558"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.0.0.1" proved="true">
     <proof prover="2"><result status="valid" time="2.290000"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="1.760000"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.2" proved="true">
  <proof prover="3"><result status="valid" time="0.320000" steps="885"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_Cons_N" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="sub_Cons_N.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="11920"/></proof>
  </goal>
  <goal name="sub_Cons_N.1" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="12497"/></proof>
  </goal>
  <goal name="sub_Cons_N.2" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="259"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="13626"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_white" proved="true">
 <proof prover="3"><result status="valid" time="0.020000" steps="47"/></proof>
 <proof prover="6"><result status="valid" time="0.070000" steps="10457"/></proof>
 </goal>
 <goal name="sub_valid_coloring_white&#39;vc" expl="VC for sub_valid_coloring_white" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sub_valid_coloring_white&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="85"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="10907"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.050000" steps="9927"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="10520"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.040000" steps="9659"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="85"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="11972"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="22"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="10926"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="10948"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="24"/></proof>
  <proof prover="6"><result status="valid" time="0.040000" steps="10618"/></proof>
  </goal>
  <goal name="sub_valid_coloring_white&#39;vc.8" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="sub_valid_coloring_white&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sub_valid_coloring_white&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="3.500000"/></proof>
    </goal>
    <goal name="sub_valid_coloring_white&#39;vc.8.0.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.760000" steps="2213"/></proof>
    </goal>
    <goal name="sub_valid_coloring_white&#39;vc.8.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="2.990000"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="count_stack_nonneg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="count_stack_nonneg.0" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="39"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="17202"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="stored_trans1&#39;vc" expl="VC for stored_trans1" proved="true">
 <proof prover="3"><result status="valid" time="0.420000" steps="426"/></proof>
 </goal>
 <goal name="stored_trans2&#39;vc" expl="VC for stored_trans2" proved="true">
 <proof prover="3"><result status="valid" time="0.400000" steps="423"/></proof>
 </goal>
</theory>
<theory name="KodaRuskey" proved="true">
 <goal name="enum&#39;vc" expl="VC for enum" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="enum&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="26"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22350"/></proof>
  </goal>
  <goal name="enum&#39;vc.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="32"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="22445"/></proof>
  </goal>
  <goal name="enum&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.060000" steps="20097"/></proof>
  </goal>
  <goal name="enum&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="131"/></proof>
  <proof prover="6"><result status="valid" time="0.140000" steps="29299"/></proof>
  </goal>
  <goal name="enum&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="32"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="26932"/></proof>
  </goal>
  <goal name="enum&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="208"/></proof>
  </goal>
  <goal name="enum&#39;vc.6" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="162"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="24928"/></proof>
  </goal>
  <goal name="enum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22509"/></proof>
  </goal>
  <goal name="enum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="34"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22522"/></proof>
  </goal>
  <goal name="enum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="23323"/></proof>
  </goal>
  <goal name="enum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="38"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="23282"/></proof>
  </goal>
  <goal name="enum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="40"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="23330"/></proof>
  </goal>
  <goal name="enum&#39;vc.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="40"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22648"/></proof>
  </goal>
  <goal name="enum&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="46"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="25482"/></proof>
  </goal>
  <goal name="enum&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="111"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="25687"/></proof>
  </goal>
  <goal name="enum&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="44"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22620"/></proof>
  </goal>
  <goal name="enum&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.800000" steps="1710"/></proof>
  </goal>
  <goal name="enum&#39;vc.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.420000" steps="688"/></proof>
  <proof prover="6"><result status="valid" time="0.200000" steps="38691"/></proof>
  </goal>
  <goal name="enum&#39;vc.18" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.400000" steps="681"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="38573"/></proof>
  </goal>
  <goal name="enum&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.480000"/></proof>
  </goal>
  <goal name="enum&#39;vc.20" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="165"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="29745"/></proof>
  </goal>
  <goal name="enum&#39;vc.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="22583"/></proof>
  </goal>
  <goal name="enum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22600"/></proof>
  </goal>
  <goal name="enum&#39;vc.23" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="38"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="23376"/></proof>
  </goal>
  <goal name="enum&#39;vc.24" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="20097"/></proof>
  </goal>
  <goal name="enum&#39;vc.25" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080000" steps="213"/></proof>
  <proof prover="6"><result status="valid" time="0.130000" steps="25368"/></proof>
  </goal>
  <goal name="enum&#39;vc.26" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22697"/></proof>
  </goal>
  <goal name="enum&#39;vc.27" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.460000" steps="572"/></proof>
  <proof prover="6"><result status="valid" time="0.260000" steps="44894"/></proof>
  </goal>
  <goal name="enum&#39;vc.28" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.500000"/></proof>
  </goal>
  <goal name="enum&#39;vc.29" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.450000" steps="635"/></proof>
  <proof prover="6"><result status="valid" time="0.360000" steps="59851"/></proof>
  </goal>
  <goal name="enum&#39;vc.30" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.180000"/></proof>
  <proof prover="6"><result status="valid" time="0.580000" steps="78922"/></proof>
  </goal>
  <goal name="enum&#39;vc.31" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.410000" steps="774"/></proof>
  <proof prover="6"><result status="valid" time="0.140000" steps="27374"/></proof>
  </goal>
  <goal name="enum&#39;vc.32" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="64"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="24541"/></proof>
  </goal>
  <goal name="enum&#39;vc.33" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.130000" steps="27770"/></proof>
  </goal>
  <goal name="enum&#39;vc.34" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="40"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="24587"/></proof>
  </goal>
  <goal name="enum&#39;vc.35" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="40"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="24661"/></proof>
  </goal>
  <goal name="enum&#39;vc.36" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="70"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="25052"/></proof>
  </goal>
  <goal name="enum&#39;vc.37" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="20097"/></proof>
  </goal>
  <goal name="enum&#39;vc.38" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.160000" steps="226"/></proof>
  <proof prover="6"><result status="valid" time="0.140000" steps="28167"/></proof>
  </goal>
  <goal name="enum&#39;vc.39" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="76"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="27854"/></proof>
  </goal>
  <goal name="enum&#39;vc.40" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.290000" steps="372"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="29514"/></proof>
  </goal>
  <goal name="enum&#39;vc.41" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="82"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="25673"/></proof>
  </goal>
  <goal name="enum&#39;vc.42" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="1.090000" steps="1322"/></proof>
  <proof prover="6"><result status="valid" time="0.160000" steps="31166"/></proof>
  </goal>
  <goal name="enum&#39;vc.43" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="68"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="26240"/></proof>
  </goal>
  <goal name="enum&#39;vc.44" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.620000"/></proof>
  </goal>
  <goal name="enum&#39;vc.45" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.970000" steps="2092"/></proof>
  <proof prover="6"><result status="valid" time="0.280000" steps="48097"/></proof>
  </goal>
  <goal name="enum&#39;vc.46" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.080000" steps="1208"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="44962"/></proof>
  </goal>
  <goal name="enum&#39;vc.47" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.130000" steps="1385"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="45235"/></proof>
  </goal>
  <goal name="enum&#39;vc.48" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="68"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="28475"/></proof>
  </goal>
  <goal name="enum&#39;vc.49" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="68"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="27769"/></proof>
  </goal>
  <goal name="enum&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.420000" steps="1478"/></proof>
  <proof prover="6"><result status="valid" time="0.915018" steps="92801"/></proof>
  </goal>
  <goal name="enum&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.740000" steps="73760"/></proof>
  </goal>
  <goal name="enum&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="68"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="23092"/></proof>
  </goal>
  <goal name="enum&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="68"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="25779"/></proof>
  </goal>
  <goal name="enum&#39;vc.54" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.100000" steps="325"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="25047"/></proof>
  </goal>
  <goal name="enum&#39;vc.55" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="44"/></proof>
  <proof prover="6"><result status="valid" time="0.120000" steps="25892"/></proof>
  </goal>
  <goal name="enum&#39;vc.56" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22660"/></proof>
  </goal>
  <goal name="enum&#39;vc.57" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="22677"/></proof>
  </goal>
  <goal name="enum&#39;vc.58" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="40"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="25318"/></proof>
  </goal>
  <goal name="enum&#39;vc.59" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="20097"/></proof>
  </goal>
  <goal name="enum&#39;vc.60" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.170000" steps="370"/></proof>
  <proof prover="6"><result status="valid" time="0.130000" steps="26035"/></proof>
  </goal>
  <goal name="enum&#39;vc.61" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="36"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="22785"/></proof>
  </goal>
  <goal name="enum&#39;vc.62" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.300000" steps="49319"/></proof>
  </goal>
  <goal name="enum&#39;vc.63" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.400000"/></proof>
  <proof prover="6"><result status="valid" time="5.368798" steps="389606"/></proof>
  </goal>
  <goal name="enum&#39;vc.64" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="4.700000" steps="2911"/></proof>
  <proof prover="6"><result status="valid" time="0.170000" steps="35647"/></proof>
  </goal>
  <goal name="enum&#39;vc.65" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="62"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="24524"/></proof>
  </goal>
  <goal name="enum&#39;vc.66" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="4.131193" steps="2517"/></proof>
  <proof prover="6"><result status="valid" time="0.280000" steps="48039"/></proof>
  </goal>
  <goal name="enum&#39;vc.67" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="3.170386" steps="2060"/></proof>
  <proof prover="6"><result status="valid" time="0.730000" steps="78800"/></proof>
  </goal>
  <goal name="enum&#39;vc.68" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.220000" steps="267"/></proof>
  <proof prover="6"><result status="valid" time="0.180000" steps="35247"/></proof>
  </goal>
  <goal name="enum&#39;vc.69" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="40"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="24875"/></proof>
  </goal>
  <goal name="enum&#39;vc.70" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="40"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="24949"/></proof>
  </goal>
  <goal name="enum&#39;vc.71" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="71"/></proof>
  <proof prover="6"><result status="valid" time="0.100000" steps="25058"/></proof>
  </goal>
  <goal name="enum&#39;vc.72" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="14"/></proof>
  <proof prover="6"><result status="valid" time="0.070000" steps="20097"/></proof>
  </goal>
  <goal name="enum&#39;vc.73" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.740000" steps="1651"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="39653"/></proof>
  </goal>
  <goal name="enum&#39;vc.74" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.480000" steps="711"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="29528"/></proof>
  </goal>
  <goal name="enum&#39;vc.75" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.290000" steps="296"/></proof>
  <proof prover="6"><result status="valid" time="0.150000" steps="30149"/></proof>
  </goal>
  <goal name="enum&#39;vc.76" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="2.130893" steps="167566"/></proof>
  </goal>
  <goal name="enum&#39;vc.77" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="66"/></proof>
  <proof prover="6"><result status="valid" time="0.110000" steps="26096"/></proof>
  </goal>
  <goal name="enum&#39;vc.78" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.680000"/></proof>
  </goal>
  <goal name="enum&#39;vc.79" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.260000" steps="1875"/></proof>
  <proof prover="6"><result status="valid" time="0.220000" steps="43353"/></proof>
  </goal>
  <goal name="enum&#39;vc.80" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.210000" steps="43842"/></proof>
  </goal>
  <goal name="enum&#39;vc.81" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.800000" steps="1810"/></proof>
  <proof prover="6"><result status="valid" time="0.230000" steps="44231"/></proof>
  </goal>
  <goal name="enum&#39;vc.82" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="66"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="28397"/></proof>
  </goal>
  <goal name="enum&#39;vc.83" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="66"/></proof>
  <proof prover="6"><result status="valid" time="0.090000" steps="27773"/></proof>
  </goal>
  <goal name="enum&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.220000" steps="42597"/></proof>
  </goal>
  <goal name="enum&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.668277" steps="69408"/></proof>
  </goal>
  <goal name="enum&#39;vc.86" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="66"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="23096"/></proof>
  </goal>
  <goal name="enum&#39;vc.87" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="66"/></proof>
  <proof prover="6"><result status="valid" time="0.080000" steps="25639"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="3"><result status="valid" time="0.060000" steps="281"/></proof>
 </goal>
</theory>
</file>
</why3session>
