<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.01" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="36" steplimit="0" memlimit="1000"/>
<prover id="4" name="Coq" version="8.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../koda_ruskey.mlw" expanded="true">
<theory name="KodaRuskey_Spec" sum="12abe0c86d2eff62135af61b3187494b">
 <goal name="VC eq_color" expl="VC for eq_color">
 </goal>
 <goal name="size_forest_nonneg">
 <transf name="induction_ty_lex">
  <goal name="size_forest_nonneg.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_forest_nonneg">
 <transf name="induction_ty_lex">
  <goal name="count_forest_nonneg.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemmas" sum="31c14df1c7c4d5092027db43fbd437cc" expanded="true">
 <goal name="mem_app">
 <transf name="induction_ty_lex">
  <goal name="mem_app.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="mem_app.1.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.00" steps="9"/></proof>
   </goal>
   <goal name="mem_app.1.2" expl="2.">
   <proof prover="1"><result status="valid" time="0.05" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="size_stack_nonneg">
 <transf name="induction_ty_lex">
  <goal name="size_stack_nonneg.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="size_stack_nonneg.1.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.00" steps="6"/></proof>
   </goal>
   <goal name="size_stack_nonneg.1.2" expl="2.">
   <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="white_forest_equiv">
 <transf name="induction_ty_lex">
  <goal name="white_forest_equiv.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="102"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="any_forest_frame">
 <transf name="induction_ty_lex">
  <goal name="any_forest_frame.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="any_forest_frame.1.1" expl="1.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="9"/></proof>
   </goal>
   <goal name="any_forest_frame.1.2" expl="2.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="9"/></proof>
   </goal>
   <goal name="any_forest_frame.1.3" expl="3.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.04" steps="167"/></proof>
   </goal>
   <goal name="any_forest_frame.1.4" expl="4.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.08" steps="74"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="any_stack_frame">
 <transf name="induction_ty_lex">
  <goal name="any_stack_frame.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="any_stack_frame.1.1" expl="1.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="any_stack_frame.1.2" expl="2.">
   <transf name="introduce_premises">
    <goal name="any_stack_frame.1.2.1" expl="1.">
    <transf name="compute_in_goal">
     <goal name="any_stack_frame.1.2.1.1" expl="1.">
     <transf name="split_goal_wp">
      <goal name="any_stack_frame.1.2.1.1.1" expl="1.">
      <proof prover="1" timelimit="36"><result status="valid" time="0.02" steps="104"/></proof>
      </goal>
      <goal name="any_stack_frame.1.2.1.1.2" expl="2.">
      <proof prover="2"><result status="valid" time="0.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame">
 <transf name="induction_ty_lex">
  <goal name="inverse_frame.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.07" steps="266"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_frame2">
 <transf name="induction_ty_lex">
  <goal name="inverse_frame2.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.11" steps="330"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC inverse_any" expl="VC for inverse_any">
 </goal>
 <goal name="inverse_final">
 <transf name="compute_in_goal">
  <goal name="inverse_final.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.18" steps="124"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inverse_white">
 <transf name="compute_in_goal">
  <goal name="inverse_white.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.53" steps="268"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC white_final_exclusive" expl="VC for white_final_exclusive">
 </goal>
 <goal name="final_unique">
 <transf name="induction_ty_lex">
  <goal name="final_unique.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="final_unique.1.1" expl="1.">
   <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="11"/></proof>
   </goal>
   <goal name="final_unique.1.2" expl="2.">
   <proof prover="1" timelimit="6"><result status="valid" time="0.81" steps="736"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC inverse_inverse" expl="VC for inverse_inverse">
 </goal>
 <goal name="sub_not_nil">
 <transf name="induction_pr">
  <goal name="sub_not_nil.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="sub_not_nil.2" expl="2.">
  <proof prover="0" timelimit="6"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="sub_not_nil.3" expl="3.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_empty">
 <transf name="induction_pr">
  <goal name="sub_empty.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="sub_empty.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="sub_empty.3" expl="3.">
  <proof prover="0"><result status="valid" time="0.98"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_mem">
 <transf name="induction_pr">
  <goal name="sub_mem.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="sub_mem.2" expl="2.">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="sub_mem.3" expl="3.">
  <transf name="simplify_trivial_quantification">
   <goal name="sub_mem.3.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken1">
 <transf name="induction_pr">
  <goal name="sub_weaken1.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_weaken1.2" expl="2.">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="sub_weaken1.3" expl="3.">
  <transf name="induction_ty_lex">
   <goal name="sub_weaken1.3.1" expl="1.">
   <proof prover="1"><result status="valid" time="1.42" steps="999"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_weaken2">
 <transf name="induction_pr">
  <goal name="sub_weaken2.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="sub_weaken2.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="sub_weaken2.3" expl="3.">
  <transf name="induction_ty_lex">
   <goal name="sub_weaken2.3.1" expl="1.">
   <transf name="split_goal_wp">
    <goal name="sub_weaken2.3.1.1" expl="1.">
    <proof prover="5"><result status="valid" time="0.02"/></proof>
    </goal>
    <goal name="sub_weaken2.3.1.2" expl="2.">
    <proof prover="0"><result status="valid" time="0.20"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_st">
 <transf name="induction_pr">
  <goal name="not_mem_st.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="not_mem_st.2" expl="2.">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="not_mem_st.3" expl="3.">
  <proof prover="1"><result status="valid" time="0.01" steps="68"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_frame">
 <transf name="induction_pr">
  <goal name="sub_frame.1" expl="1.">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="sub_frame.2" expl="2.">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="sub_frame.3" expl="3.">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep">
 <transf name="induction_pr">
  <goal name="sub_no_rep.1" expl="1.">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="sub_no_rep.2" expl="2.">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="sub_no_rep.3" expl="3.">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_no_rep2">
 <transf name="induction_pr">
  <goal name="sub_no_rep2.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="sub_no_rep2.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.2" expl="2.">
  <transf name="split_goal_wp">
   <goal name="sub_no_rep2.2.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sub_no_rep2.3" expl="3.">
  <transf name="split_goal_wp">
   <goal name="sub_no_rep2.3.1" expl="1.">
   <proof prover="0"><result status="valid" time="1.36"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="white_valid">
 <transf name="induction_ty_lex">
  <goal name="white_valid.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="white_valid.1.1" expl="1.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.00" steps="9"/></proof>
   </goal>
   <goal name="white_valid.1.2" expl="2.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="51"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="final_valid">
 <transf name="induction_ty_lex">
  <goal name="final_valid.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="final_valid.1.1" expl="1.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="9"/></proof>
   </goal>
   <goal name="final_valid.1.2" expl="2.">
   <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="58"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_frame">
 <transf name="induction_ty_lex">
  <goal name="valid_coloring_frame.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.04" steps="241"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="valid_coloring_set">
 <transf name="induction_ty_lex">
  <goal name="valid_coloring_set.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="head_and_tail">
 <transf name="induction_ty_lex">
  <goal name="head_and_tail.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_valid_coloring_f1">
 <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="60"/></proof>
 </goal>
 <goal name="sub_valid_coloring">
 <transf name="induction_pr">
  <goal name="sub_valid_coloring.1" expl="1.">
  <transf name="introduce_premises">
   <goal name="sub_valid_coloring.1.1" expl="1.">
   <transf name="compute_in_goal">
    <goal name="sub_valid_coloring.1.1.1" expl="1.">
    <transf name="split_goal_wp">
     <goal name="sub_valid_coloring.1.1.1.1" expl="1.">
     <proof prover="1" timelimit="6"><result status="valid" time="0.03" steps="74"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.1.1.2" expl="2.">
     <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="19"/></proof>
     </goal>
     <goal name="sub_valid_coloring.1.1.1.3" expl="3.">
     <proof prover="1" timelimit="6"><result status="valid" time="0.03" steps="92"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.2" expl="2.">
  <transf name="introduce_premises">
   <goal name="sub_valid_coloring.2.1" expl="1.">
   <transf name="compute_in_goal">
    <goal name="sub_valid_coloring.2.1.1" expl="1.">
    <proof prover="0" timelimit="6"><result status="valid" time="0.10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sub_valid_coloring.3" expl="3.">
  <transf name="introduce_premises">
   <goal name="sub_valid_coloring.3.1" expl="1.">
   <transf name="simplify_trivial_quantification">
    <goal name="sub_valid_coloring.3.1.1" expl="1.">
    <transf name="compute_in_goal">
     <goal name="sub_valid_coloring.3.1.1.1" expl="1.">
     <transf name="split_goal_wp">
      <goal name="sub_valid_coloring.3.1.1.1.1" expl="1.">
      <proof prover="4" edited="koda_ruskey_KodaRuskey_Spec_sub_valid_coloring_1.v"><result status="timeout" time="10.63"/></proof>
      </goal>
      <goal name="sub_valid_coloring.3.1.1.1.2" expl="2.">
      <proof prover="0" timelimit="6"><result status="valid" time="0.04"/></proof>
      <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="21"/></proof>
      </goal>
      <goal name="sub_valid_coloring.3.1.1.1.3" expl="3.">
      <proof prover="1" timelimit="6"><result status="valid" time="0.61" steps="511"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sub_Cons_N">
 <transf name="induction_pr">
  <goal name="sub_Cons_N.1" expl="1.">
  <proof prover="1" timelimit="26"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="sub_Cons_N.2" expl="2.">
  <proof prover="0" timelimit="26"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="sub_Cons_N.3" expl="3.">
  <proof prover="0" timelimit="26"><result status="valid" time="0.13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="white_white">
 <proof prover="1" timelimit="6"><result status="valid" time="0.02" steps="34"/></proof>
 </goal>
 <goal name="VC sub_valid_coloring_white" expl="VC for sub_valid_coloring_white">
 </goal>
 <goal name="count_stack_nonneg">
 <transf name="induction_ty_lex">
  <goal name="count_stack_nonneg.1" expl="1.">
  <proof prover="1" timelimit="6"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC stored_trans1" expl="VC for stored_trans1">
 </goal>
 <goal name="VC stored_trans2" expl="VC for stored_trans2">
 </goal>
</theory>
<theory name="KodaRuskey" sum="356c68b3d8606db2040f6f7dd16872c8">
 <goal name="VC enum" expl="VC for enum">
 </goal>
 <goal name="VC main" expl="VC for main">
 </goal>
</theory>
</file>
</why3session>
