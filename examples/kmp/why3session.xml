<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Coq" version="8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../kmp.mlw" expanded="true">
<theory name="KnuthMorrisPratt" sum="9ebb3f725b3626f95bec46b3d0e68fbc" expanded="true">
 <goal name="matches_empty">
 <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
 <goal name="matches_right_extension">
 <proof prover="6"><result status="valid" time="0.01" steps="21"/></proof>
 </goal>
 <goal name="matches_contradiction_at_first">
 <proof prover="7"><result status="valid" time="0.18"/></proof>
 </goal>
 <goal name="matches_contradiction_at_i">
 <proof prover="6"><result status="valid" time="0.00" steps="18"/></proof>
 </goal>
 <goal name="matches_right_weakening">
 <proof prover="6"><result status="valid" time="0.00" steps="17"/></proof>
 </goal>
 <goal name="matches_left_weakening">
 <proof prover="0" edited="kmp_WP_KnuthMorrisPratt_matches_left_weakening_1.v"><result status="valid" time="0.34"/></proof>
 </goal>
 <goal name="matches_sym">
 <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
 <goal name="matches_trans">
 <proof prover="6"><result status="valid" time="0.00" steps="15"/></proof>
 </goal>
 <goal name="next_iteration">
 <proof prover="2"><result status="valid" time="0.04"/></proof>
 <proof prover="7"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="next_is_maximal">
 <proof prover="0" edited="kmp_WP_KnuthMorrisPratt_next_is_maximal_1.v"><result status="valid" time="0.36"/></proof>
 </goal>
 <goal name="next_1_0">
 <proof prover="6"><result status="valid" time="0.00" steps="8"/></proof>
 </goal>
 <goal name="VC initnext" expl="VC for initnext" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC initnext.1" expl="1. array creation size">
  <proof prover="6"><result status="valid" time="0.00" steps="2"/></proof>
  </goal>
  <goal name="VC initnext.2" expl="2. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="VC initnext.3" expl="3. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC initnext.4" expl="4. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC initnext.5" expl="5. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC initnext.6" expl="6. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="VC initnext.7" expl="7. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC initnext.8" expl="8. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC initnext.9" expl="9. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="VC initnext.10" expl="10. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC initnext.11" expl="11. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC initnext.12" expl="12. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="VC initnext.13" expl="13. loop invariant preservation">
  <proof prover="7"><result status="valid" time="3.02"/></proof>
  </goal>
  <goal name="VC initnext.14" expl="14. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.23" steps="374"/></proof>
  </goal>
  <goal name="VC initnext.15" expl="15. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="VC initnext.16" expl="16. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC initnext.17" expl="17. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC initnext.18" expl="18. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC initnext.19" expl="19. loop invariant preservation" expanded="true">
  </goal>
  <goal name="VC initnext.20" expl="20. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.17" steps="331"/></proof>
  </goal>
  <goal name="VC initnext.21" expl="21. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC initnext.22" expl="22. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="VC initnext.23" expl="23. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="56"/></proof>
  </goal>
  <goal name="VC initnext.24" expl="24. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.03" steps="104"/></proof>
  </goal>
  <goal name="VC initnext.25" expl="25. loop invariant preservation" expanded="true">
  </goal>
  <goal name="VC initnext.26" expl="26. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.00" steps="23"/></proof>
  </goal>
  <goal name="VC initnext.27" expl="27. postcondition">
  <proof prover="6"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC initnext.28" expl="28. postcondition">
  <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC kmp" expl="VC for kmp" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC kmp.1" expl="1. precondition">
  <proof prover="6"><result status="valid" time="0.00" steps="2"/></proof>
  </goal>
  <goal name="VC kmp.2" expl="2. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="VC kmp.3" expl="3. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC kmp.4" expl="4. loop invariant init">
  <proof prover="6"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="VC kmp.5" expl="5. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC kmp.6" expl="6. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC kmp.7" expl="7. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC kmp.8" expl="8. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC kmp.9" expl="9. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
  <goal name="VC kmp.10" expl="10. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC kmp.11" expl="11. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC kmp.12" expl="12. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC kmp.13" expl="13. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="VC kmp.14" expl="14. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC kmp.15" expl="15. index in array bounds">
  <proof prover="6"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC kmp.16" expl="16. loop variant decrease">
  <proof prover="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="VC kmp.17" expl="17. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.02" steps="62"/></proof>
  </goal>
  <goal name="VC kmp.18" expl="18. loop invariant preservation">
  <proof prover="6"><result status="valid" time="0.02" steps="102"/></proof>
  </goal>
  <goal name="VC kmp.19" expl="19. loop invariant preservation" expanded="true">
  </goal>
  <goal name="VC kmp.20" expl="20. postcondition">
  <proof prover="6"><result status="valid" time="0.02" steps="107"/></proof>
  <proof prover="7"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
