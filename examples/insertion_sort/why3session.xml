<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.12.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="insertion_sort.mlw"/>
<theory name="InsertionSort" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="205235"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="35242"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="34881"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.120000" steps="324"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="40141"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36343"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="37458"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="38114"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="38097"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="57384"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="18876"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="49110"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="13939"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="76802"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="53624"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="41888"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="38250"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="58536"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="9832"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="34906"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="35516"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <proof prover="4"><result status="valid" time="0.010000" steps="47453"/></proof>
 </goal>
 <goal name="test2&#39;vc" expl="VC for test2" proved="true">
 <proof prover="4"><result status="valid" time="0.020000" steps="54130"/></proof>
 </goal>
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="4"><result status="valid" time="0.010000" steps="34345"/></proof>
 </goal>
</theory>
<theory name="InsertionSortGen" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="10282"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36162"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36405"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36032"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.090000" steps="310"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="78"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="37395"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="38487"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="39073"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="39062"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="56858"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="19338"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="50095"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.070000" steps="13431"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="73611"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="56219"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.010000" steps="67"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="39167"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.020000" steps="55170"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="19406"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="10141"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36039"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.010000" steps="36665"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InsertionSortSwaps" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="8792"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="9659"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="8979"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="8691"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="9929"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="9288"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="9302"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.040000" steps="9492"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="9075"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="9565"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.060000" steps="11741"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.100000" steps="467"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="12623"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="9186"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.030000" steps="9828"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="8787"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="10148"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
