<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.8.10" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="insertion_sort.mlw"/>
<theory name="InsertionSort" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="48296"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="40793"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="41303"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="324"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="48859"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="43389"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="44937"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="45600"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="45022"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="77198"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="58801"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="59893"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="17876"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.13" steps="102781"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="78915"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="47809"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="45835"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.13" steps="74622"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9832"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="40371"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="40605"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="55769"/></proof>
 </goal>
 <goal name="test2&#39;vc" expl="VC for test2" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="68910"/></proof>
 </goal>
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="39726"/></proof>
 </goal>
</theory>
<theory name="InsertionSortGen" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10282"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="41744"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="42032"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="42642"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="310"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="78"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="44483"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="46022"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="46490"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="46057"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="68518"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="59009"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="59938"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="17840"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="94397"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.05" steps="92190"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="30299"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="46675"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.03" steps="69663"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="59248"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10141"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="41658"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="41954"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InsertionSortSwaps" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="8792"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9659"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8979"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="8691"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9929"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9317"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9331"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9594"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9148"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9677"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11853"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="449"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="12736"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9263"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9828"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8787"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10148"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
