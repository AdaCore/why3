<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="1.30" timelimit="36" steplimit="0" memlimit="1000"/>
<file name="../insertion_sort.mlw" proved="true">
<theory name="InsertionSort" proved="true" sum="7d409220b2aeb21118af4d3b09cba578">
 <goal name="VC insertion_sort" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC insertion_sort.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC insertion_sort.1" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC insertion_sort.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC insertion_sort.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="130"/></proof>
  </goal>
  <goal name="VC insertion_sort.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC insertion_sort.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC insertion_sort.6" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC insertion_sort.7" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC insertion_sort.8" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC insertion_sort.9" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="VC insertion_sort.10" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="VC insertion_sort.11" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="VC insertion_sort.12" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.22" steps="243"/></proof>
  </goal>
  <goal name="VC insertion_sort.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.13" steps="182"/></proof>
  </goal>
  <goal name="VC insertion_sort.14" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="100"/></proof>
  </goal>
  <goal name="VC insertion_sort.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC insertion_sort.16" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC insertion_sort.17" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.13" steps="155"/></proof>
  </goal>
  <goal name="VC insertion_sort.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC insertion_sort.19" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC test1" expl="VC for test1" proved="true">
 <proof prover="3"><result status="valid" time="0.00" steps="11"/></proof>
 </goal>
 <goal name="VC test2" expl="VC for test2" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="38"/></proof>
 </goal>
 <goal name="VC bench" expl="VC for bench" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="28"/></proof>
 </goal>
</theory>
<theory name="InsertionSortGen" proved="true" sum="c44c33bed0cc21d37f76c87132b82598">
 <goal name="VC insertion_sort" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC insertion_sort.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.3" expl="loop invariant init" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.04" steps="130"/></proof>
  </goal>
  <goal name="VC insertion_sort.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.6" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.7" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC insertion_sort.10" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.12" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.12" steps="241"/></proof>
  </goal>
  <goal name="VC insertion_sort.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insertion_sort.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC insertion_sort.15" expl="assertion" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="VC insertion_sort.16" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insertion_sort.18" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insertion_sort.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
