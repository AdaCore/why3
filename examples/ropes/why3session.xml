<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="1" name="CVC4" version="1.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="1.30" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../ropes.mlw" proved="true">
<<<<<<< HEAD
<theory name="String" proved="true" sum="07d9d0f3e492f325ffbd6a5edfc0223d">
 <goal name="VC empty" expl="VC for empty" proved="true">
 <proof prover="5"><result status="valid" time="0.00"/></proof>
 </goal>
=======
<theory name="String" proved="true">
>>>>>>> new_ide
 <goal name="app_assoc" proved="true">
 <proof prover="5"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
<theory name="Sig" proved="true">
</theory>
<<<<<<< HEAD
<theory name="Rope" proved="true" sum="af6ab81cc6074d528eb4d87eee9c5785">
 <goal name="VC length" expl="VC for length" proved="true">
 <proof prover="5"><result status="valid" time="0.00"/></proof>
 </goal>
=======
<theory name="Rope" proved="true">
>>>>>>> new_ide
 <goal name="rope_length_is_string_length" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="rope_length_is_string_length.0" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC empty" expl="VC for empty" proved="true">
 <proof prover="5"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC is_empty" expl="VC for is_empty" proved="true">
 <proof prover="5"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC of_string" expl="VC for of_string" proved="true">
 <proof prover="5"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="VC get" expl="VC for get" proved="true">
 <proof prover="3"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC concat" expl="VC for concat" proved="true">
 <proof prover="5"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="VC sub" expl="VC for sub" proved="true">
 <proof prover="3"><result status="valid" time="0.04"/></proof>
 </goal>
</theory>
<<<<<<< HEAD
<theory name="Balance" proved="true" sum="0befed5a432231810bbeef01cda58f1e">
 <goal name="VC max" expl="VC for max" proved="true">
 <proof prover="5"><result status="valid" time="0.01"/></proof>
=======
<theory name="Balance" proved="true">
 <goal name="WP_parameter string_of_array_concat" expl="VC for string_of_array_concat" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter string_of_array_concat.0" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="30"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter string_of_array_concat.1" expl="precondition" proved="true">
  <proof prover="4" timelimit="30"><result status="valid" time="0.04" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter string_of_array_concat.2" expl="postcondition" proved="true">
  <proof prover="3" timelimit="10"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter string_of_array_concat.3" expl="postcondition" proved="true">
  <proof prover="4" timelimit="10"><result status="valid" time="0.06" steps="33"/></proof>
  </goal>
 </transf>
>>>>>>> new_ide
 </goal>
 <goal name="VC string_of_array_concat" expl="VC for string_of_array_concat" proved="true">
 <proof prover="5"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="VC string_of_array_concat_right" expl="VC for string_of_array_concat_right" proved="true">
 <proof prover="3"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC string_of_array_length" expl="VC for string_of_array_length" proved="true">
 <proof prover="5"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="VC string_of_array_eq" expl="VC for string_of_array_eq" proved="true">
 <proof prover="5"><result status="valid" time="0.07"/></proof>
 </goal>
 <goal name="string_of_array_frame" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="67"/></proof>
 </goal>
 <goal name="VC string_of_array_concat_empty" expl="VC for string_of_array_concat_empty" proved="true">
 <proof prover="5"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC insert" expl="VC for insert" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC insert.0" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insert.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insert.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insert.3" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insert.4" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC insert.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="VC insert.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="VC insert.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC insert.8" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insert.9" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.99"/></proof>
  </goal>
  <goal name="VC insert.10" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC insert.11" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insert.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC insert.13" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC insert.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="VC insert.15" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC insert.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC insert.17" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC insert.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="64"/></proof>
  </goal>
  <goal name="VC insert.19" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="VC insert.19.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="VC insert.19.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="VC insert.19.0.0.0" expl="VC for insert" proved="true">
     <proof prover="5"><result status="valid" time="0.05"/></proof>
     </goal>
     <goal name="VC insert.19.0.0.1" expl="VC for insert" proved="true">
     <proof prover="5"><result status="valid" time="0.05"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC insert_leaves" expl="VC for insert_leaves" proved="true">
 <proof prover="3"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC balance" expl="VC for balance" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="664"/></proof>
 </goal>
</theory>
</file>
</why3session>
