<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.7.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Z3" version="4.8.10" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="ropes.mlw"/>
<theory name="String" proved="true">
 <goal name="empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="app_assoc" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="53"/></proof>
 </goal>
</theory>
<theory name="Sig" proved="true">
 <goal name="empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Rope" proved="true">
 <goal name="rope_length_is_string_length" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="rope_length_is_string_length.0" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="100"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
 </goal>
 <goal name="is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="113"/></proof>
 </goal>
 <goal name="of_string&#39;vc" expl="VC for of_string" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="138"/></proof>
 </goal>
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="440"/></proof>
 </goal>
 <goal name="concat&#39;vc" expl="VC for concat" proved="true">
 <proof prover="0"><result status="valid" time="0.09" steps="669"/></proof>
 </goal>
 <goal name="sub&#39;vc" expl="VC for sub" proved="true">
 <proof prover="0"><result status="valid" time="0.29" steps="1503"/></proof>
 </goal>
</theory>
<theory name="Balance" proved="true">
 <goal name="max&#39;vc" expl="VC for max" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="18"/></proof>
 </goal>
 <goal name="string_of_array_concat&#39;vc" expl="VC for string_of_array_concat" proved="true">
 <proof prover="0"><result status="valid" time="0.76" steps="1053"/></proof>
 </goal>
 <goal name="string_of_array_concat_right&#39;vc" expl="VC for string_of_array_concat_right" proved="true">
 <proof prover="7"><result status="valid" time="0.02" steps="47051"/></proof>
 </goal>
 <goal name="string_of_array_length&#39;vc" expl="VC for string_of_array_length" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="102"/></proof>
 </goal>
 <goal name="string_of_array_eq&#39;vc" expl="VC for string_of_array_eq" proved="true">
 <proof prover="0"><result status="valid" time="0.26" steps="279"/></proof>
 </goal>
 <goal name="string_of_array_frame" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="128"/></proof>
 </goal>
 <goal name="string_of_array_concat_empty&#39;vc" expl="VC for string_of_array_concat_empty" proved="true">
 <proof prover="0"><result status="valid" time="0.16" steps="300"/></proof>
 </goal>
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="insert&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="insert&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="34"/></proof>
  </goal>
  <goal name="insert&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="insert&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="159"/></proof>
  </goal>
  <goal name="insert&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="189"/></proof>
  </goal>
  <goal name="insert&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="119"/></proof>
  </goal>
  <goal name="insert&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="13191"/></proof>
  </goal>
  <goal name="insert&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="38"/></proof>
  </goal>
  <goal name="insert&#39;vc.9" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.47" steps="893314"/></proof>
  </goal>
  <goal name="insert&#39;vc.10" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.94" steps="466"/></proof>
  </goal>
  <goal name="insert&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="48"/></proof>
  </goal>
  <goal name="insert&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="133"/></proof>
  </goal>
  <goal name="insert&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="insert&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="216"/></proof>
  </goal>
  <goal name="insert&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="194"/></proof>
  </goal>
  <goal name="insert&#39;vc.16" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="insert&#39;vc.16.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.16.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="1.04" steps="575"/></proof>
    </goal>
    <goal name="insert&#39;vc.16.0.1" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.04" steps="77795"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="insert&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="239"/></proof>
  </goal>
  <goal name="insert&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="236"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="insert_leaves&#39;vc" expl="VC for insert_leaves" proved="true">
 <proof prover="0"><result status="valid" time="0.50" steps="2199"/></proof>
 </goal>
 <goal name="balance&#39;vc" expl="VC for balance" proved="true">
 <proof prover="0"><result status="valid" time="0.43" steps="1270"/></proof>
 </goal>
</theory>
</file>
</why3session>
