<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Eprover" version="2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="1.30" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../verifythis_2017_odd_even_sort_rearranging.mlw">
<theory name="Top" sum="17f5c420fc0ebac775390c87a44f56a9">
 <goal name="VC array_max" expl="VC for array_max" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC array_max.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC array_max.1" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC array_max.2" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC array_max.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC array_max.4" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC array_max.5" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC array_max.6" expl="loop variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC array_max.7" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC array_max.8" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC array_max.9" expl="loop variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC array_max.10" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC array_max.11" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC array_max.12" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="aux_pos" proved="true">
 <proof prover="5"><result status="valid" time="0.12"/></proof>
 </goal>
 <goal name="VC decompose_entropy" expl="VC for decompose_entropy" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC decompose_entropy.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC decompose_entropy.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC decompose_entropy.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC decompose_entropy.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC decompose_entropy.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC decompose_entropy.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC inst_ext" expl="VC for inst_ext">
 <proof prover="2"><result status="unknown" time="1.01"/></proof>
 <proof prover="3"><result status="timeout" time="2.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <proof prover="5"><result status="unknown" time="1.00"/></proof>
 </goal>
 <goal name="VC my_swap" expl="VC for my_swap" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC my_swap.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC my_swap.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC my_swap.2" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC my_swap.2.0" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC my_swap.2.1" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC my_swap.2.2" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC my_swap.2.3" expl="VC for my_swap" proved="true">
   <proof prover="0"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC my_swap.2.4" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC my_swap.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC my_swap.4" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC my_swap.4.0" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC my_swap.4.1" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC my_swap.4.2" expl="VC for my_swap" proved="true">
   <proof prover="3"><result status="valid" time="0.02" steps="25"/></proof>
   </goal>
   <goal name="VC my_swap.4.3" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC my_swap.4.4" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC my_swap.4.5" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC my_swap.4.6" expl="VC for my_swap" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="25"/></proof>
   </goal>
   <goal name="VC my_swap.4.7" expl="VC for my_swap" proved="true">
   <proof prover="5"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC my_swap.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC my_swap.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC my_swap.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC my_swap.8" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC my_swap.9" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC local_order_implies_sort_sub" expl="VC for local_order_implies_sort_sub" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC local_order_implies_sort_sub.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC local_order_implies_sort_sub.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC local_order_implies_sort_sub.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC local_order_implies_sort_sub.3" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC local_order_implies_sort_sub.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC odd_even_sort" expl="VC for odd_even_sort">
 <transf name="split_goal_wp" >
  <goal name="VC odd_even_sort.0" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.1" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.2" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.4" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.5" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC odd_even_sort.6" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.7" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.8" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.9" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.10" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.11" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.12" expl="loop variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.13" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC odd_even_sort.14" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.15" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC odd_even_sort.16" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.17" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.18" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.19" expl="loop variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.20" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.21" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.22" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.23" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.24" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.25" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.26" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.27" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC odd_even_sort.28" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.29" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.30" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.31" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC odd_even_sort.32" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.33" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.34" expl="index in array bounds" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.35" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.36" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.37" expl="loop variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.38" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC odd_even_sort.39" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC odd_even_sort.40" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC odd_even_sort.41" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.42" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.43" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.44" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC odd_even_sort.45" expl="loop variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.46" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC odd_even_sort.47" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC odd_even_sort.48" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC odd_even_sort.49" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.50" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC odd_even_sort.51" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC odd_even_sort.52" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.53" expl="loop variant decrease">
  <proof prover="1"><result status="timeout" time="0.98"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="unknown" time="1.99"/></proof>
  </goal>
  <goal name="VC odd_even_sort.54" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.55" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC odd_even_sort.56" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC odd_even_sort.57" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
