<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="4" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="base_info.mlw"/>
<theory name="BaseInfo" proved="true">
 <goal name="wmpn_base_power_of_two_p&#39;vc" expl="VC for wmpn_base_power_of_two_p" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="wmpn_base_power_of_two_p&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.02" steps="154442"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.16" steps="22386"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.15" steps="23762"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.17" steps="25294"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.80" steps="180930"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="15403"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="15664"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="14674"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="15601"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="28535"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="14873"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="15809"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.23" steps="27924"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="15077"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="16022"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.20" steps="27962"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="15286"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="16241"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.10" steps="16369"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="15501"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="16466"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.07" steps="16594"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="15722"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="16697"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.07" steps="16825"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="15949"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="16934"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.07" steps="17062"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.06" steps="16182"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="16736"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="15790"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.30" steps="55406"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wmpn_base_info&#39;vc" expl="VC for wmpn_base_info" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wmpn_base_info&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12384"/></proof>
  </goal>
  <goal name="wmpn_base_info&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12418"/></proof>
  </goal>
  <goal name="wmpn_base_info&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12444"/></proof>
  </goal>
  <goal name="wmpn_base_info&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="18410"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pow_compat&#39;vc" expl="VC for pow_compat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pow_compat&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="13731"/></proof>
  </goal>
  <goal name="pow_compat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12613"/></proof>
  </goal>
  <goal name="pow_compat&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="13805"/></proof>
  </goal>
  <goal name="pow_compat&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pow_compat&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="12665"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.1" expl="VC for pow_compat" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="15889"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.2" expl="VC for pow_compat" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="29"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.3" expl="VC for pow_compat" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="29"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.4" expl="VC for pow_compat" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="15862"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.5" expl="VC for pow_compat" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="13995"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pow_compat&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="14057"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wmpn_get_base_info&#39;vc" expl="VC for wmpn_get_base_info" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wmpn_get_base_info&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="13823"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="16575"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="124"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_get_base_info&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="16900"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="18877"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.2" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.3" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="12854"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.4" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="12861"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.5" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="14078"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="13989"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="12831"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.6" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_get_base_info&#39;vc.6.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="37"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.6.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.6.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="12869"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.6.3" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="14126"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="18072"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.9" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="43"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="45"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.12" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_get_base_info&#39;vc.12.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="12893"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.1" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="12897"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.2" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="12911"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.3" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="38"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.4" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="14157"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12889"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="17525"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="17732"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12945"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12928"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wmpn_limb_size_in_base_2&#39;vc" expl="VC for wmpn_limb_size_in_base_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wmpn_limb_size_in_base_2&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12724"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12821"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="17133"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.2" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="12950"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.3" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="12948"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.4" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="36"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.5" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="14151"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.6" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="39"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.7" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="14213"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.8" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.9" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="0"><result status="valid" time="0.14" steps="16849"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.10" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="13067"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="14200"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12950"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
