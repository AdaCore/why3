<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="4" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="base_info.mlw"/>
<theory name="BaseInfo" proved="true">
 <goal name="wmpn_base_power_of_two_p&#39;vc" expl="VC for wmpn_base_power_of_two_p" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="wmpn_base_power_of_two_p&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.783457" steps="74772"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.1" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.160000" steps="17159"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.2" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.150000" steps="17554"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.170000" steps="17967"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="1.078150" steps="74385"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="12129"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.110000" steps="12731"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="8741"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="12288"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.160000" steps="19553"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="8893"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="12453"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="19645"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="9055"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="12624"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.200000" steps="19928"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="9223"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="12801"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.100000" steps="12916"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="9397"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="12984"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.070000" steps="13099"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="9577"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="13173"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.070000" steps="13288"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="9763"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="13368"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.070000" steps="13483"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.060000" steps="9955"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.120000" steps="13133"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="9507"/></proof>
  </goal>
  <goal name="wmpn_base_power_of_two_p&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.635508" steps="70179"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wmpn_base_info&#39;vc" expl="VC for wmpn_base_info" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wmpn_base_info&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="6874"/></proof>
  </goal>
  <goal name="wmpn_base_info&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="6895"/></proof>
  </goal>
  <goal name="wmpn_base_info&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="6905"/></proof>
  </goal>
  <goal name="wmpn_base_info&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="14253"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pow_compat&#39;vc" expl="VC for pow_compat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pow_compat&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="10244"/></proof>
  </goal>
  <goal name="pow_compat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="7157"/></proof>
  </goal>
  <goal name="pow_compat&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="10319"/></proof>
  </goal>
  <goal name="pow_compat&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pow_compat&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="7191"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.1" expl="VC for pow_compat" proved="true">
   <proof prover="1"><result status="valid" time="0.120000" steps="14503"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.2" expl="VC for pow_compat" proved="true">
   <proof prover="4"><result status="valid" time="0.010000" steps="29"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.3" expl="VC for pow_compat" proved="true">
   <proof prover="4"><result status="valid" time="0.010000" steps="29"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.4" expl="VC for pow_compat" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="14473"/></proof>
   </goal>
   <goal name="pow_compat&#39;vc.3.5" expl="VC for pow_compat" proved="true">
   <proof prover="1"><result status="valid" time="0.080000" steps="10468"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pow_compat&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="10880"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wmpn_get_base_info&#39;vc" expl="VC for wmpn_get_base_info" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wmpn_get_base_info&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="10299"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.120000" steps="15217"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.060000" steps="124"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_get_base_info&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.120000" steps="15454"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.189863" steps="18978"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.2" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="4"><result status="valid" time="0.020000" steps="31"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.3" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1"><result status="valid" time="0.030000" steps="8461"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.4" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="8462"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.3.5" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="11674"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="11890"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="8429"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.6" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_get_base_info&#39;vc.6.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.040000" steps="37"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.6.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.020000" steps="35"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.6.2" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.040000" steps="8470"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.6.3" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="11666"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="39"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.130000" steps="16760"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.9" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.040000"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="43"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.020000" steps="45"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.12" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_get_base_info&#39;vc.12.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.070000" steps="8475"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.1" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1"><result status="valid" time="0.070000" steps="8480"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.2" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="8485"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.3" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="4"><result status="valid" time="0.050000" steps="38"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.12.4" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="11692"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.13" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_get_base_info&#39;vc.13.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="3.071489" steps="479541"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.13.1" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.130000" steps="17496"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.13.2" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.070000" steps="8516"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.13.3" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.090000" steps="17139"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.13.4" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.445693" steps="53268"/></proof>
   </goal>
   <goal name="wmpn_get_base_info&#39;vc.13.5" expl="VC for wmpn_get_base_info" proved="true">
   <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="1.010000" steps="277"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="8508"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="16037"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="16164"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="8560"/></proof>
  </goal>
  <goal name="wmpn_get_base_info&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="8539"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="wmpn_limb_size_in_base_2&#39;vc" expl="VC for wmpn_limb_size_in_base_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wmpn_limb_size_in_base_2&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="7217"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="7290"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="14480"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.020000" steps="31"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.020000" steps="31"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.2" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="7389"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.3" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="1"><result status="valid" time="0.050000" steps="7387"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.4" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="4"><result status="valid" time="0.030000" steps="36"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.5" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="1"><result status="valid" time="0.080000" steps="10542"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.6" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="4"><result status="valid" time="0.040000" steps="39"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.7" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="1"><result status="valid" time="0.060000" steps="10614"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.8" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="2"><result status="valid" time="0.050000"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.9" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="1"><result status="valid" time="0.140000" steps="15787"/></proof>
   </goal>
   <goal name="wmpn_limb_size_in_base_2&#39;vc.3.10" expl="VC for wmpn_limb_size_in_base_2" proved="true">
   <proof prover="1"><result status="valid" time="0.070000" steps="7511"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100000" steps="10857"/></proof>
  </goal>
  <goal name="wmpn_limb_size_in_base_2&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="7434"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
