<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Eprover" version="1.9.1-001" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="lemmas.mlw"/>
<theory name="Lemmas" proved="true">
 <goal name="map_eq_shift&#39;vc" expl="VC for map_eq_shift" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="map_eq_shift&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="map_eq_shift_zero&#39;vc" expl="VC for map_eq_shift_zero" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="map_eq_shift_zero&#39;vc.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="6"/></proof>
  </goal>
  <goal name="map_eq_shift_zero&#39;vc.1" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="map_eq_shift_zero&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="3"/></proof>
  </goal>
  <goal name="map_eq_shift_zero&#39;vc.3" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="map_eq_shift_zero&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="map_eq_shift_zero&#39;vc.3.0.0" expl="precondition" proved="true">
    <proof prover="5" timelimit="1"><result status="valid" time="0.00" steps="10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="map_eq_shift_zero&#39;vc.4" expl="postcondition" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="map_eq_shift_zero&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="5" memlimit="2000"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="limb_max_bound" proved="true">
 <proof prover="5"><result status="valid" time="0.02" steps="7"/></proof>
 </goal>
 <goal name="prod_compat_strict_r&#39;vc" expl="VC for prod_compat_strict_r" proved="true">
 <proof prover="1"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="prod_compat_r&#39;vc" expl="VC for prod_compat_r" proved="true">
 <proof prover="5" memlimit="2000"><result status="valid" time="0.02" steps="12"/></proof>
 </goal>
 <goal name="prod_compat_strict_lr&#39;vc" expl="VC for prod_compat_strict_lr" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13085"/></proof>
 </goal>
 <goal name="prod_compat_lr&#39;vc" expl="VC for prod_compat_lr" proved="true">
 <proof prover="4"><result status="valid" time="0.30" steps="37193"/></proof>
 </goal>
 <goal name="simp_compat_strict_l&#39;vc" expl="VC for simp_compat_strict_l" proved="true">
 <proof prover="4"><result status="valid" time="0.24" steps="26633"/></proof>
 </goal>
 <goal name="value_sub&#39;vc" expl="VC for value_sub" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_frame&#39;vc" expl="VC for value_sub_frame" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_frame&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="value_sub_frame&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="25"/></proof>
  </goal>
  <goal name="value_sub_frame&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="54"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_frame_shift&#39;vc" expl="VC for value_sub_frame_shift" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_frame_shift&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="value_sub_frame_shift&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="10"/></proof>
  </goal>
  <goal name="value_sub_frame_shift&#39;vc.2" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="value_sub_frame_shift&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="11"/></proof>
  </goal>
  <goal name="value_sub_frame_shift&#39;vc.4" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="value_sub_frame_shift&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="value_sub_frame_shift&#39;vc.4.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    <proof prover="3"><result status="valid" time="0.02" steps="2034"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="value_sub_frame_shift&#39;vc.5" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="value_sub_frame_shift&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_tail&#39;vc" expl="VC for value_sub_tail" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_tail&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="value_sub_tail&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="10"/></proof>
  </goal>
  <goal name="value_sub_tail&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="48"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_concat&#39;vc" expl="VC for value_sub_concat" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_concat&#39;vc.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
  <goal name="value_sub_concat&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="11"/></proof>
  </goal>
  <goal name="value_sub_concat&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="11"/></proof>
  </goal>
  <goal name="value_sub_concat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_head&#39;vc" expl="VC for value_sub_head" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_head&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="9"/></proof>
  </goal>
  <goal name="value_sub_head&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_update&#39;vc" expl="VC for value_sub_update" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_update&#39;vc.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="value_sub_update&#39;vc.1" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="15"/></proof>
  </goal>
  <goal name="value_sub_update&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
  <goal name="value_sub_update&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="13"/></proof>
  </goal>
  <goal name="value_sub_update&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5" timelimit="20" memlimit="2000"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="value_sub_update&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5" timelimit="20" memlimit="2000"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="value_sub_update&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1" memlimit="2000"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_zero&#39;vc" expl="VC for value_zero" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_zero&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="10"/></proof>
  </goal>
  <goal name="value_zero&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="27"/></proof>
  </goal>
  <goal name="value_zero&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="28615"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_update_no_change&#39;vc" expl="VC for value_sub_update_no_change" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_update_no_change&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="value_sub_update_no_change&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_shift_no_change&#39;vc" expl="VC for value_sub_shift_no_change" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_shift_no_change&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="23"/></proof>
  </goal>
  <goal name="value_sub_shift_no_change&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_lower_bound&#39;vc" expl="VC for value_sub_lower_bound" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_lower_bound&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="9"/></proof>
  </goal>
  <goal name="value_sub_lower_bound&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="value_sub_lower_bound&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.06" steps="14237"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_upper_bound&#39;vc" expl="VC for value_sub_upper_bound" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_upper_bound&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="value_sub_upper_bound&#39;vc.1" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="value_sub_upper_bound&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="12"/></proof>
  </goal>
  <goal name="value_sub_upper_bound&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
  <goal name="value_sub_upper_bound&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="25"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_lower_bound_tight&#39;vc" expl="VC for value_sub_lower_bound_tight" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_lower_bound_tight&#39;vc.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="15"/></proof>
  </goal>
  <goal name="value_sub_lower_bound_tight&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_sub_upper_bound_tight&#39;vc" expl="VC for value_sub_upper_bound_tight" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="value_sub_upper_bound_tight&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="9"/></proof>
  </goal>
  <goal name="value_sub_upper_bound_tight&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="23905"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="value_tail&#39;vc" expl="VC for value_tail" proved="true">
 <proof prover="5" timelimit="1"><result status="valid" time="0.01" steps="11"/></proof>
 </goal>
 <goal name="value_concat&#39;vc" expl="VC for value_concat" proved="true">
 <proof prover="5" timelimit="1"><result status="valid" time="0.04" steps="28"/></proof>
 </goal>
 <goal name="value_sub_eq&#39;vc" expl="VC for value_sub_eq" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="12905"/></proof>
 </goal>
</theory>
</file>
</why3session>
