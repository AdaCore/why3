<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="0.99.1" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="3" name="Spass" version="3.7" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="4" name="Eprover" version="1.8-001" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="6" name="Coq" version="8.4pl6" timelimit="5" steplimit="1" memlimit="4000"/>
<file name="../../../theories/list.why" expanded="true">
<theory name="List" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Length" sum="05caecc0d3ea8074e1ba80a75530a754">
 <goal name="Length_nonnegative">
 <transf name="induction_ty_lex">
  <goal name="Length_nonnegative.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Length_nil">
 <transf name="split_goal_wp">
  <goal name="Length_nil.1" expl="1.">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="Length_nil.2" expl="2.">
  <proof prover="0"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Mem" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Elements" sum="9cccc6673c270c379e44a00d296242c8">
 <goal name="elements_Nil">
 <proof prover="3"><result status="valid" time="0.51"/></proof>
 <proof prover="4"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
<theory name="Nth" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthNoOpt" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthLength" sum="9df36b3cf6313d38366bfd7427521f0d">
 <goal name="nth_none_1">
 <transf name="induction_ty_lex">
  <goal name="nth_none_1.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_2">
 <transf name="induction_ty_lex">
  <goal name="nth_none_2.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_3">
 <transf name="induction_ty_lex">
  <goal name="nth_none_3.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HdTl" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="HdTlNoOpt" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthHdTl" sum="605b4f2f29860acc4d58392b8e6b8e95">
 <goal name="Nth_tl">
 <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
 </goal>
 <goal name="Nth0_head">
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="Append" sum="23c9caac5f459c7810a5c31001d09327">
 <goal name="Append_assoc">
 <transf name="induction_ty_lex">
  <goal name="Append_assoc.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="Append_assoc.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.01" steps="3"/></proof>
   </goal>
   <goal name="Append_assoc.1.2" expl="2.">
   <proof prover="0"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_l_nil">
 <transf name="induction_ty_lex">
  <goal name="Append_l_nil.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Append_length">
 <transf name="induction_ty_lex">
  <goal name="Append_length.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_append">
 <transf name="induction_ty_lex">
  <goal name="mem_append.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.06" steps="184"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_decomp">
 <transf name="induction_ty_lex">
  <goal name="mem_decomp.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="mem_decomp.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.01" steps="2"/></proof>
   </goal>
   <goal name="mem_decomp.1.2" expl="2.">
   <proof prover="3"><result status="valid" time="0.31"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NthLengthAppend" sum="f3c686209d40076fa7f8e64ec02f92be">
 <goal name="nth_append_1">
 <transf name="induction_ty_lex">
  <goal name="nth_append_1.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_append_2">
 <transf name="induction_ty_lex">
  <goal name="nth_append_2.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.11" steps="42"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Reverse" sum="bc1b8b026b77ef2c52577c6ef9cc53d0">
 <goal name="reverse_append">
 <transf name="induction_ty_lex">
  <goal name="reverse_append.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.29" steps="254"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_cons">
 <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="cons_reverse">
 <transf name="induction_ty_lex">
  <goal name="cons_reverse.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_reverse">
 <transf name="induction_ty_lex">
  <goal name="reverse_reverse.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_mem">
 <transf name="induction_ty_lex">
  <goal name="reverse_mem.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.08" steps="191"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Reverse_length">
 <transf name="induction_ty_lex">
  <goal name="Reverse_length.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="RevAppend" sum="9da10df4b75652aa79e575c6cf846dc2">
 <goal name="rev_append_append_l">
 <transf name="induction_ty_lex">
  <goal name="rev_append_append_l.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_length">
 <transf name="induction_ty_lex">
  <goal name="rev_append_length.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_def">
 <transf name="induction_ty_lex">
  <goal name="rev_append_def.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_append_r">
 <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
 </goal>
</theory>
<theory name="Combine" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Sorted" sum="aedc51a4d5f32e1722b9b8d9b080a402">
 <goal name="sorted_mem">
 <transf name="split_goal_wp">
  <goal name="sorted_mem.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.07" steps="41"/></proof>
  </goal>
  <goal name="sorted_mem.2" expl="2.">
  <transf name="induction_pr">
   <goal name="sorted_mem.2.1" expl="1.">
   <proof prover="2"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="sorted_mem.2.2" expl="2.">
   <proof prover="2"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="sorted_mem.2.3" expl="3.">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sorted_mem.3" expl="3.">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sorted_append">
 <transf name="induction_ty_lex">
  <goal name="sorted_append.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="sorted_append.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="sorted_append.1.2" expl="2.">
   <proof prover="0"><result status="valid" time="0.01" steps="3"/></proof>
   </goal>
   <goal name="sorted_append.1.3" expl="3.">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="sorted_append.1.4" expl="4.">
   <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
   <goal name="sorted_append.1.5" expl="5.">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="sorted_append.1.6" expl="6.">
   <proof prover="2"><result status="valid" time="1.62"/></proof>
   </goal>
   <goal name="sorted_append.1.7" expl="7.">
   <proof prover="0"><result status="valid" time="0.03" steps="80"/></proof>
   </goal>
   <goal name="sorted_append.1.8" expl="8.">
   <proof prover="1"><result status="valid" time="1.63"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SortedInt" sum="06ce40f504085478e9252d4d73c60488">
 <goal name="Transitive.Trans">
 <proof prover="0"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="RevSorted" sum="19294c1c9d872edacfaf8b426b74d395">
 <goal name="Incr.Transitive.Trans">
 <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
 </goal>
 <goal name="Decr.Transitive.Trans">
 <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="rev_append_sorted_incr">
 <transf name="induction_ty_lex">
  <goal name="rev_append_sorted_incr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="rev_append_sorted_incr.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.02" steps="4"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.2" expl="2.">
   <proof prover="0"><result status="valid" time="0.02" steps="8"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.3" expl="3.">
   <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.4" expl="4.">
   <proof prover="0"><result status="valid" time="0.02" steps="9"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.5" expl="5.">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.6" expl="6.">
   <proof prover="0"><result status="valid" time="0.15" steps="142"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.7" expl="7.">
   <proof prover="4"><result status="valid" time="0.54"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.8" expl="8.">
   <proof prover="4"><result status="valid" time="1.13"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_sorted_decr">
 <transf name="induction_ty_lex">
  <goal name="rev_append_sorted_decr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="rev_append_sorted_decr.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
   <proof prover="2"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.2" expl="2.">
   <proof prover="0"><result status="valid" time="0.02" steps="8"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.3" expl="3.">
   <proof prover="0"><result status="valid" time="0.05" steps="53"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.4" expl="4.">
   <proof prover="0"><result status="valid" time="0.01" steps="9"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.5" expl="5.">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.6" expl="6.">
   <proof prover="0"><result status="valid" time="0.22" steps="216"/></proof>
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.7" expl="7.">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.8" expl="8.">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NumOcc" sum="1fa86aeaf6e01c2101b90807733540ed">
 <goal name="Num_Occ_NonNeg">
 <transf name="induction_ty_lex">
  <goal name="Num_Occ_NonNeg.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Mem_Num_Occ">
 <transf name="induction_ty_lex">
  <goal name="Mem_Num_Occ.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="Mem_Num_Occ.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.2" expl="2.">
   <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.3" expl="3.">
   <proof prover="0"><result status="valid" time="0.03" steps="16"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.4" expl="4.">
   <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_Num_Occ">
 <transf name="induction_ty_lex">
  <goal name="Append_Num_Occ.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.11" steps="196"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_num_occ">
 <transf name="induction_ty_lex">
  <goal name="reverse_num_occ.1" expl="1.">
  <proof prover="0"><result status="valid" time="0.20" steps="468"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Permut" sum="1a14fb9d73e92e6b22113b100c71c846">
 <goal name="Permut_refl">
 <proof prover="0"><result status="valid" time="0.01" steps="1"/></proof>
 </goal>
 <goal name="Permut_sym">
 <proof prover="0"><result status="valid" time="0.02" steps="7"/></proof>
 </goal>
 <goal name="Permut_trans">
 <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="Permut_cons">
 <proof prover="0"><result status="valid" time="0.02" steps="67"/></proof>
 </goal>
 <goal name="Permut_swap">
 <proof prover="0"><result status="valid" time="0.08" steps="380"/></proof>
 </goal>
 <goal name="Permut_cons_append">
 <proof prover="0"><result status="valid" time="0.16" steps="165"/></proof>
 </goal>
 <goal name="Permut_assoc">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="Permut_append">
 <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
 </goal>
 <goal name="Permut_append_swap">
 <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="Permut_mem">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="Permut_length">
 <proof prover="6" edited="list_Permut_Permut_length_2.v"><result status="valid" time="2.25"/></proof>
 </goal>
</theory>
<theory name="Distinct" sum="e56aed12f61edef3656befad5f86e1ba">
 <goal name="distinct_append">
 <transf name="induction_ty_lex">
  <goal name="distinct_append.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="distinct_append.1.1" expl="1.">
   <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="distinct_append.1.2" expl="2.">
   <proof prover="2"><result status="valid" time="0.91"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Prefix" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Sum" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Induction" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Map" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FoldLeft" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FoldRight" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="ListRich" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
</file>
</why3session>
