<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="0.99.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Spass" version="3.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="1.01" timelimit="6" steplimit="0" memlimit="1000"/>
<prover id="6" name="Coq" version="8.6.1" timelimit="5" steplimit="0" memlimit="4000"/>
<file name="../../../theories/list.why">
<theory name="List" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Length" sum="0183bae77fb00174594c26708209e9b9">
 <goal name="Length_nonnegative" expl="">
 <transf name="induction_ty_lex">
  <goal name="Length_nonnegative.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Length_nil" expl="">
 <transf name="split_goal_wp">
  <goal name="Length_nil.1" expl="">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="Length_nil.2" expl="">
  <proof prover="0"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Mem" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Elements" sum="2bb05058c030fb70cae5ff5af2133229">
 <goal name="elements_mem" expl="">
 <transf name="induction_ty_lex">
  <goal name="elements_mem.1" expl="">
  <proof prover="5"><result status="valid" time="0.00" steps="57"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Nth" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthNoOpt" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthLength" sum="d9266a45e6affefee2f608ac92e02b74">
 <goal name="nth_none_1" expl="">
 <transf name="induction_ty_lex">
  <goal name="nth_none_1.1" expl="">
  <proof prover="0"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_2" expl="">
 <transf name="induction_ty_lex">
  <goal name="nth_none_2.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_3" expl="">
 <transf name="induction_ty_lex">
  <goal name="nth_none_3.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HdTl" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="HdTlNoOpt" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthHdTl" sum="d0bd530661af4a2e238c9274e7a40b77">
 <goal name="Nth_tl" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
 </goal>
 <goal name="Nth0_head" expl="">
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="Append" sum="ce7e370a8681125ff4fd9b422f6b088a">
 <goal name="Append_assoc" expl="">
 <transf name="induction_ty_lex">
  <goal name="Append_assoc.1" expl="">
  <transf name="split_goal_wp">
   <goal name="Append_assoc.1.1" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="3"/></proof>
   </goal>
   <goal name="Append_assoc.1.2" expl="">
   <proof prover="0"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_l_nil" expl="">
 <transf name="induction_ty_lex">
  <goal name="Append_l_nil.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Append_length" expl="">
 <transf name="induction_ty_lex">
  <goal name="Append_length.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_append" expl="">
 <transf name="induction_ty_lex">
  <goal name="mem_append.1" expl="">
  <proof prover="0"><result status="valid" time="0.06" steps="184"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_decomp" expl="">
 <transf name="induction_ty_lex">
  <goal name="mem_decomp.1" expl="">
  <transf name="split_goal_wp">
   <goal name="mem_decomp.1.1" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="2"/></proof>
   </goal>
   <goal name="mem_decomp.1.2" expl="">
   <proof prover="3"><result status="valid" time="0.31"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NthLengthAppend" sum="bd72d274f3e891e3862464aaf7265892">
 <goal name="nth_append_1" expl="">
 <transf name="induction_ty_lex">
  <goal name="nth_append_1.1" expl="">
  <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_append_2" expl="">
 <transf name="induction_ty_lex">
  <goal name="nth_append_2.1" expl="">
  <proof prover="0"><result status="valid" time="0.11" steps="42"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Reverse" sum="51d1e12e40b71fcd43d58286748cb060">
 <goal name="reverse_append" expl="">
 <transf name="induction_ty_lex">
  <goal name="reverse_append.1" expl="">
  <proof prover="0"><result status="valid" time="0.29" steps="254"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_cons" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="cons_reverse" expl="">
 <transf name="induction_ty_lex">
  <goal name="cons_reverse.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_reverse" expl="">
 <transf name="induction_ty_lex">
  <goal name="reverse_reverse.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_mem" expl="">
 <transf name="induction_ty_lex">
  <goal name="reverse_mem.1" expl="">
  <proof prover="0"><result status="valid" time="0.08" steps="191"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Reverse_length" expl="">
 <transf name="induction_ty_lex">
  <goal name="Reverse_length.1" expl="">
  <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="RevAppend" sum="c05c678fdccd20043127873fca4db5a1">
 <goal name="rev_append_append_l" expl="">
 <transf name="induction_ty_lex">
  <goal name="rev_append_append_l.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_length" expl="">
 <transf name="induction_ty_lex">
  <goal name="rev_append_length.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_def" expl="">
 <transf name="induction_ty_lex">
  <goal name="rev_append_def.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_append_r" expl="">
 <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
 </goal>
</theory>
<theory name="Combine" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Sorted" sum="7facdde18584fcb12d85b5e72024425d">
 <goal name="sorted_mem" expl="">
 <transf name="split_goal_wp">
  <goal name="sorted_mem.1" expl="">
  <proof prover="0"><result status="valid" time="0.07" steps="41"/></proof>
  </goal>
  <goal name="sorted_mem.2" expl="">
  <transf name="induction_pr">
   <goal name="sorted_mem.2.1" expl="">
   <proof prover="2"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="sorted_mem.2.2" expl="">
   <proof prover="2"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="sorted_mem.2.3" expl="">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sorted_mem.3" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sorted_append" expl="">
 <transf name="induction_ty_lex">
  <goal name="sorted_append.1" expl="">
  <transf name="split_goal_wp">
   <goal name="sorted_append.1.1" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="sorted_append.1.2" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="3"/></proof>
   </goal>
   <goal name="sorted_append.1.3" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="sorted_append.1.4" expl="">
   <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
   <goal name="sorted_append.1.5" expl="">
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="sorted_append.1.6" expl="">
   <proof prover="2"><result status="valid" time="1.87"/></proof>
   </goal>
   <goal name="sorted_append.1.7" expl="">
   <proof prover="0"><result status="valid" time="0.03" steps="80"/></proof>
   </goal>
   <goal name="sorted_append.1.8" expl="">
   <proof prover="1"><result status="valid" time="1.84"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SortedInt" sum="26f2416c3c2d009f4bb97f381d2111ff">
 <goal name="Transitive.Trans" expl="">
 <proof prover="0"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="RevSorted" sum="944df680e56b869538da44233e876bcc">
 <goal name="Incr.Transitive.Trans" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
 </goal>
 <goal name="Decr.Transitive.Trans" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="rev_append_sorted_incr" expl="">
 <transf name="induction_ty_lex">
  <goal name="rev_append_sorted_incr.1" expl="">
  <transf name="split_goal_wp">
   <goal name="rev_append_sorted_incr.1.1" expl="">
   <proof prover="0"><result status="valid" time="0.02" steps="4"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.2" expl="">
   <proof prover="0"><result status="valid" time="0.02" steps="8"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.3" expl="">
   <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.4" expl="">
   <proof prover="0"><result status="valid" time="0.02" steps="9"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.5" expl="">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.6" expl="">
   <proof prover="0"><result status="valid" time="0.15" steps="142"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.7" expl="">
   <proof prover="4"><result status="valid" time="0.54"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.8" expl="">
   <proof prover="4"><result status="valid" time="1.20"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_sorted_decr" expl="">
 <transf name="induction_ty_lex">
  <goal name="rev_append_sorted_decr.1" expl="">
  <transf name="split_goal_wp">
   <goal name="rev_append_sorted_decr.1.1" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
   <proof prover="2"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.2" expl="">
   <proof prover="0"><result status="valid" time="0.02" steps="8"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.3" expl="">
   <proof prover="0"><result status="valid" time="0.05" steps="53"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.4" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="9"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.5" expl="">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.6" expl="">
   <proof prover="0"><result status="valid" time="0.22" steps="216"/></proof>
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.7" expl="">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.8" expl="">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NumOcc" sum="2a391d96e7ca5dfac33753f8c52b74de">
 <goal name="Num_Occ_NonNeg" expl="">
 <transf name="induction_ty_lex">
  <goal name="Num_Occ_NonNeg.1" expl="">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Mem_Num_Occ" expl="">
 <transf name="induction_ty_lex">
  <goal name="Mem_Num_Occ.1" expl="">
  <transf name="split_goal_wp">
   <goal name="Mem_Num_Occ.1.1" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.2" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.3" expl="">
   <proof prover="0"><result status="valid" time="0.03" steps="16"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.4" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_Num_Occ" expl="">
 <transf name="induction_ty_lex">
  <goal name="Append_Num_Occ.1" expl="">
  <proof prover="0"><result status="valid" time="0.11" steps="196"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_num_occ" expl="">
 <transf name="induction_ty_lex">
  <goal name="reverse_num_occ.1" expl="">
  <proof prover="0"><result status="valid" time="0.20" steps="468"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Permut" sum="a56cdb92510e540c6d266fec38bbb8ce">
 <goal name="Permut_refl" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="1"/></proof>
 </goal>
 <goal name="Permut_sym" expl="">
 <proof prover="0"><result status="valid" time="0.02" steps="7"/></proof>
 </goal>
 <goal name="Permut_trans" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="Permut_cons" expl="">
 <proof prover="0"><result status="valid" time="0.02" steps="67"/></proof>
 </goal>
 <goal name="Permut_swap" expl="">
 <proof prover="0"><result status="valid" time="0.08" steps="380"/></proof>
 </goal>
 <goal name="Permut_cons_append" expl="">
 <proof prover="0"><result status="valid" time="0.16" steps="165"/></proof>
 </goal>
 <goal name="Permut_assoc" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="Permut_append" expl="">
 <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
 </goal>
 <goal name="Permut_append_swap" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="Permut_mem" expl="">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="Permut_length" expl="">
 <proof prover="6" edited="list_Permut_Permut_length_2.v"><result status="valid" time="1.57"/></proof>
 </goal>
</theory>
<theory name="Distinct" sum="ad94f6328865dad5f532a625bdf96b79">
 <goal name="distinct_append" expl="">
 <transf name="induction_ty_lex">
  <goal name="distinct_append.1" expl="">
  <transf name="split_goal_wp">
   <goal name="distinct_append.1.1" expl="">
   <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="distinct_append.1.2" expl="">
   <proof prover="2"><result status="valid" time="0.99"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Prefix" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Sum" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Induction" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Map" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FoldLeft" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FoldRight" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="ListRich" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
</file>
</why3session>
