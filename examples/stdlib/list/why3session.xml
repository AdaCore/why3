<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="1" name="Coq" version="8.7.1" timelimit="5" steplimit="0" memlimit="4000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Spass" version="3.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../../../stdlib/list.mlw" proved="true">
<theory name="List" proved="true" sum="0837e0e504ae2d2a2dc07ff388fab3e5">
 <goal name="VC is_nil" expl="VC for is_nil" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Length" proved="true" sum="905c13f3b9a1d5b3685ef4b619a14b01">
 <goal name="VC length" expl="VC for length" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="Length_nonnegative" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Length_nonnegative.0" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Length_nil" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="Length_nil.0" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="Length_nil.1" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Quant" proved="true" sum="cbe49ff1e6c76878e96cfcfaac826ecd">
 <goal name="VC for_all" expl="VC for for_all" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC for_some" expl="VC for for_some" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC mem" expl="VC for mem" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Mem" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Elements" proved="true" sum="bafb86c9c17211367a70c46cfeab34af">
 <goal name="elements_mem" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="elements_mem.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Nth" proved="true" sum="89ead29d253e40980e405711b3bd3eb0">
 <goal name="VC nth" expl="VC for nth" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="NthNoOpt" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthLength" proved="true" sum="42dfb805196b03e25377b2c3e6c00a32">
 <goal name="nth_none_1" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="nth_none_1.0" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_2" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="nth_none_2.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_3" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="nth_none_3.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HdTl" proved="true" sum="6a7bb36d89529a0f0ca85a317461a161">
 <goal name="VC hd" expl="VC for hd" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC tl" expl="VC for tl" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="HdTlNoOpt" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthHdTl" proved="true" sum="766fb30d8551f2889072f5e06361ef9e">
 <goal name="Nth_tl" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="21"/></proof>
 </goal>
 <goal name="Nth0_head" proved="true">
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="Append" proved="true" sum="8b0fff794e6413ab8a5089b3e2554084">
 <goal name="VC infix ++" expl="VC for infix ++" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="Append_assoc" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Append_assoc.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="Append_assoc.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="3"/></proof>
   </goal>
   <goal name="Append_assoc.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_l_nil" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Append_l_nil.0" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Append_length" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Append_length.0" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="mem_append.0" proved="true">
  <proof prover="6"><result status="valid" time="0.06" steps="272"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_decomp" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="mem_decomp.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="mem_decomp.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="3"/></proof>
   </goal>
   <goal name="mem_decomp.0.1" proved="true">
   <proof prover="3"><result status="valid" time="0.42"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NthLengthAppend" proved="true" sum="bed742aff2cd233b49310681fa413394">
 <goal name="nth_append_1" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="nth_append_1.0" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="61"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_append_2" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="nth_append_2.0" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Reverse" proved="true" sum="858eb8666f3cd57b232b01c6443f2a9c">
 <goal name="VC reverse" expl="VC for reverse" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="reverse_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="reverse_append.0" proved="true">
  <proof prover="6"><result status="valid" time="0.09" steps="240"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_cons" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
 <goal name="cons_reverse" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="cons_reverse.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_reverse" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="reverse_reverse.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_mem" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="reverse_mem.0" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="192"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Reverse_length" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Reverse_length.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="RevAppend" proved="true" sum="36f85557bbc717b5b32f39741cfb6f20">
 <goal name="VC rev_append" expl="VC for rev_append" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="rev_append_append_l" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="rev_append_append_l.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_length" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="rev_append_length.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_def" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="rev_append_def.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_append_r" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="40"/></proof>
 </goal>
</theory>
<theory name="Combine" proved="true" sum="fd1c76819779fd0bd76baa52457d5ac3">
 <goal name="VC combine" expl="VC for combine" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Sorted" proved="true" sum="80571a008a6734ad8ebd9e35ecb9c0f3">
 <goal name="sorted_mem" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="sorted_mem.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="51"/></proof>
  </goal>
  <goal name="sorted_mem.1" proved="true">
  <transf name="induction_pr" proved="true" >
   <goal name="sorted_mem.1.0" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="sorted_mem.1.1" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="13"/></proof>
   </goal>
   <goal name="sorted_mem.1.2" proved="true">
   <proof prover="6"><result status="valid" time="0.03" steps="117"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sorted_mem.2" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sorted_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="sorted_append.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="sorted_append.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="sorted_append.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
   </goal>
   <goal name="sorted_append.0.2" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="sorted_append.0.3" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
   </goal>
   <goal name="sorted_append.0.4" proved="true">
   <proof prover="6"><result status="valid" time="0.11" steps="373"/></proof>
   </goal>
   <goal name="sorted_append.0.5" proved="true">
   <proof prover="6"><result status="valid" time="0.12" steps="406"/></proof>
   </goal>
   <goal name="sorted_append.0.6" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="49"/></proof>
   </goal>
   <goal name="sorted_append.0.7" proved="true">
   <proof prover="6"><result status="valid" time="0.98" steps="3498"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SortedInt" proved="true" sum="420fd9523aa8f4e7f3fc4144239e8ace">
 <goal name="Transitive.Trans" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="3"/></proof>
 </goal>
</theory>
<theory name="RevSorted" proved="true" sum="d990cfc38eff35d4b5ee6eeea2be6a44">
 <goal name="Incr.Transitive.Trans" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
 </goal>
 <goal name="Decr.Transitive.Trans" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
 </goal>
 <goal name="rev_append_sorted_incr" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="rev_append_sorted_incr.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="rev_append_sorted_incr.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.0.2" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="25"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.0.3" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.0.4" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.0.5" proved="true">
   <proof prover="6"><result status="valid" time="0.03" steps="63"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.0.6" proved="true">
   <proof prover="6"><result status="valid" time="0.94" steps="2697"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.0.7" proved="true">
   <proof prover="4"><result status="valid" time="0.92"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_sorted_decr" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="rev_append_sorted_decr.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="rev_append_sorted_decr.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.0.2" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="25"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.0.3" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.0.4" proved="true">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.0.5" proved="true">
   <proof prover="6"><result status="valid" time="0.03" steps="75"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.0.6" proved="true">
   <proof prover="6"><result status="valid" time="0.85" steps="2409"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.0.7" proved="true">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NumOcc" proved="true" sum="e5f20933ce7d0d92ce5290373d639f03">
 <goal name="Num_Occ_NonNeg" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Num_Occ_NonNeg.0" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Mem_Num_Occ" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Mem_Num_Occ.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="Mem_Num_Occ.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="6"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.0.2" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.0.3" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_Num_Occ" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="Append_Num_Occ.0" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_num_occ" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="reverse_num_occ.0" proved="true">
  <proof prover="6"><result status="valid" time="0.11" steps="459"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Permut" proved="true" sum="be179f9416f3dbffd7c5989459df9e5d">
 <goal name="Permut_refl" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
 <goal name="Permut_sym" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
 </goal>
 <goal name="Permut_trans" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="Permut_cons" proved="true">
 <proof prover="6"><result status="valid" time="0.06" steps="156"/></proof>
 </goal>
 <goal name="Permut_swap" proved="true">
 <proof prover="6"><result status="valid" time="0.11" steps="402"/></proof>
 </goal>
 <goal name="Permut_cons_append" proved="true">
 <proof prover="6"><result status="valid" time="0.11" steps="169"/></proof>
 </goal>
 <goal name="Permut_assoc" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
 </goal>
 <goal name="Permut_append" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
 </goal>
 <goal name="Permut_append_swap" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
 </goal>
 <goal name="Permut_mem" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="11"/></proof>
 </goal>
 <goal name="Permut_length" proved="true">
 <proof prover="1" edited="list_Permut_Permut_length_2.v"><result status="valid" time="1.48"/></proof>
 </goal>
</theory>
<theory name="Distinct" proved="true" sum="2d43c8315958770c1d8477e3b5e70cae">
 <goal name="distinct_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="distinct_append.0" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="distinct_append.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="distinct_append.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="1067"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Prefix" proved="true" sum="5915981e098f39d20fd1e5fbf18b376d">
 <goal name="VC prefix" expl="VC for prefix" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Sum" proved="true" sum="5915981e098f39d20fd1e5fbf18b376d">
 <goal name="VC sum" expl="VC for sum" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Map" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FoldLeft" proved="true" sum="661a0a492e1d321d242ee343d62bb649">
 <goal name="fold_left_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="fold_left_append.0" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FoldRight" proved="true" sum="9487d024f4d395375d20c6e19d6d450a">
 <goal name="fold_right_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="fold_right_append.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListRich" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
</file>
</why3session>
