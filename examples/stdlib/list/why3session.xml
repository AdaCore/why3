<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Spass" version="3.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Coq" version="8.6" timelimit="5" steplimit="0" memlimit="4000"/>
<file name="../../../theories/list.why" expanded="true">
<theory name="List" sum="0837e0e504ae2d2a2dc07ff388fab3e5">
 <goal name="VC is_nil" expl="VC for is_nil">
 <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Length" sum="c836170b4eda4e34d46c7076259ef108">
 <goal name="VC length" expl="VC for length">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="Length_nonnegative">
 <transf name="induction_ty_lex">
  <goal name="Length_nonnegative.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Length_nil">
 <transf name="split_goal_wp">
  <goal name="Length_nil.1" expl="1.">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="Length_nil.2" expl="2.">
  <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Quant" sum="cbe49ff1e6c76878e96cfcfaac826ecd">
 <goal name="VC for_all" expl="VC for for_all">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC for_some" expl="VC for for_some">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC mem" expl="VC for mem">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Mem" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Elements" sum="26546cc0b3612c14b51d5935ff3a45f9">
 <goal name="elements_mem">
 <transf name="induction_ty_lex">
  <goal name="elements_mem.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Nth" sum="47a0a8b24dfb020f9c4bf623590c6125">
 <goal name="VC nth" expl="VC for nth">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="NthNoOpt" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthLength" sum="88b9cc7ba70744fcb32e3989c12b15e7">
 <goal name="nth_none_1">
 <transf name="induction_ty_lex">
  <goal name="nth_none_1.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_2">
 <transf name="induction_ty_lex">
  <goal name="nth_none_2.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_none_3">
 <transf name="induction_ty_lex">
  <goal name="nth_none_3.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HdTl" sum="6a7bb36d89529a0f0ca85a317461a161">
 <goal name="VC hd" expl="VC for hd">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC tl" expl="VC for tl">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="HdTlNoOpt" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="NthHdTl" sum="3d14df5fb64a9db0c86e94f99cbc6759">
 <goal name="Nth_tl">
 <proof prover="6"><result status="valid" time="0.00" steps="21"/></proof>
 </goal>
 <goal name="Nth0_head">
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
<theory name="Append" sum="cd9221d7e491d871dece8021cb6c5451">
 <goal name="VC infix ++" expl="VC for infix ++">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="Append_assoc">
 <transf name="induction_ty_lex">
  <goal name="Append_assoc.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="Append_assoc.1.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.00" steps="3"/></proof>
   </goal>
   <goal name="Append_assoc.1.2" expl="2.">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_l_nil">
 <transf name="induction_ty_lex">
  <goal name="Append_l_nil.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Append_length">
 <transf name="induction_ty_lex">
  <goal name="Append_length.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.00" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_append">
 <transf name="induction_ty_lex">
  <goal name="mem_append.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.06" steps="272"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_decomp">
 <transf name="induction_ty_lex">
  <goal name="mem_decomp.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="mem_decomp.1.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.00" steps="3"/></proof>
   </goal>
   <goal name="mem_decomp.1.2" expl="2.">
   <proof prover="3"><result status="valid" time="0.83"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NthLengthAppend" sum="7318e3e7234e906a5e0115e643b4b46e">
 <goal name="nth_append_1">
 <transf name="induction_ty_lex">
  <goal name="nth_append_1.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.02" steps="61"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nth_append_2">
 <transf name="induction_ty_lex">
  <goal name="nth_append_2.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Reverse" sum="b03b90e920b1f860b0f941f5922fccec">
 <goal name="VC reverse" expl="VC for reverse">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="reverse_append">
 <transf name="induction_ty_lex">
  <goal name="reverse_append.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.09" steps="240"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_cons">
 <proof prover="6"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
 <goal name="cons_reverse">
 <transf name="induction_ty_lex">
  <goal name="cons_reverse.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_reverse">
 <transf name="induction_ty_lex">
  <goal name="reverse_reverse.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_mem">
 <transf name="induction_ty_lex">
  <goal name="reverse_mem.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.03" steps="192"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Reverse_length">
 <transf name="induction_ty_lex">
  <goal name="Reverse_length.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="RevAppend" sum="7e7c0334da40a0255ac15033d4dd86f2">
 <goal name="VC rev_append" expl="VC for rev_append">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="rev_append_append_l">
 <transf name="induction_ty_lex">
  <goal name="rev_append_append_l.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_length">
 <transf name="induction_ty_lex">
  <goal name="rev_append_length.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_def">
 <transf name="induction_ty_lex">
  <goal name="rev_append_def.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_append_r">
 <proof prover="6"><result status="valid" time="0.01" steps="40"/></proof>
 </goal>
</theory>
<theory name="Combine" sum="fd1c76819779fd0bd76baa52457d5ac3">
 <goal name="VC combine" expl="VC for combine">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Sorted" sum="7ec0006f0f77f4b6679680c6ad677646">
 <goal name="sorted_mem">
 <transf name="split_goal_wp">
  <goal name="sorted_mem.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="51"/></proof>
  </goal>
  <goal name="sorted_mem.2" expl="2.">
  <transf name="induction_pr">
   <goal name="sorted_mem.2.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="sorted_mem.2.2" expl="2.">
   <proof prover="6"><result status="valid" time="0.00" steps="13"/></proof>
   </goal>
   <goal name="sorted_mem.2.3" expl="3.">
   <proof prover="6"><result status="valid" time="0.03" steps="116"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sorted_mem.3" expl="3.">
  <proof prover="6"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sorted_append">
 <transf name="induction_ty_lex">
  <goal name="sorted_append.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="sorted_append.1.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="sorted_append.1.2" expl="2.">
   <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
   </goal>
   <goal name="sorted_append.1.3" expl="3.">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="sorted_append.1.4" expl="4.">
   <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
   </goal>
   <goal name="sorted_append.1.5" expl="5.">
   <proof prover="6"><result status="valid" time="0.11" steps="373"/></proof>
   </goal>
   <goal name="sorted_append.1.6" expl="6.">
   <proof prover="6"><result status="valid" time="0.12" steps="406"/></proof>
   </goal>
   <goal name="sorted_append.1.7" expl="7.">
   <proof prover="6"><result status="valid" time="0.01" steps="49"/></proof>
   </goal>
   <goal name="sorted_append.1.8" expl="8.">
   <proof prover="6"><result status="valid" time="1.31" steps="3142"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SortedInt" sum="d364ac24e753ef3281f6f98fe0bdd059">
 <goal name="Transitive.Trans">
 <proof prover="6"><result status="valid" time="0.00" steps="3"/></proof>
 </goal>
</theory>
<theory name="RevSorted" sum="b379759278409cf4a274452ce863435e">
 <goal name="Incr.Transitive.Trans">
 <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
 </goal>
 <goal name="Decr.Transitive.Trans">
 <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
 </goal>
 <goal name="rev_append_sorted_incr">
 <transf name="induction_ty_lex">
  <goal name="rev_append_sorted_incr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="rev_append_sorted_incr.1.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.2" expl="2.">
   <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.3" expl="3.">
   <proof prover="6"><result status="valid" time="0.01" steps="25"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.4" expl="4.">
   <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.5" expl="5.">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.6" expl="6.">
   <proof prover="6"><result status="valid" time="0.03" steps="63"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.7" expl="7.">
   <proof prover="6"><result status="valid" time="1.58" steps="2697"/></proof>
   </goal>
   <goal name="rev_append_sorted_incr.1.8" expl="8.">
   <proof prover="4"><result status="valid" time="1.59"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rev_append_sorted_decr">
 <transf name="induction_ty_lex">
  <goal name="rev_append_sorted_decr.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="rev_append_sorted_decr.1.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.2" expl="2.">
   <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.3" expl="3.">
   <proof prover="6"><result status="valid" time="0.01" steps="25"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.4" expl="4.">
   <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.5" expl="5.">
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.6" expl="6.">
   <proof prover="6"><result status="valid" time="0.03" steps="75"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.7" expl="7.">
   <proof prover="6"><result status="valid" time="1.47" steps="2409"/></proof>
   </goal>
   <goal name="rev_append_sorted_decr.1.8" expl="8.">
   <proof prover="2"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NumOcc" sum="15348822180de3fce8d7603470622b2c">
 <goal name="Num_Occ_NonNeg">
 <transf name="induction_ty_lex">
  <goal name="Num_Occ_NonNeg.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Mem_Num_Occ">
 <transf name="induction_ty_lex">
  <goal name="Mem_Num_Occ.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="Mem_Num_Occ.1.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.00" steps="6"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.2" expl="2.">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.3" expl="3.">
   <proof prover="6"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
   <goal name="Mem_Num_Occ.1.4" expl="4.">
   <proof prover="6"><result status="valid" time="0.00" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Append_Num_Occ">
 <transf name="induction_ty_lex">
  <goal name="Append_Num_Occ.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_num_occ">
 <transf name="induction_ty_lex">
  <goal name="reverse_num_occ.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.11" steps="459"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Permut" sum="b57252b28d37278020570b3fa83a555b">
 <goal name="Permut_refl">
 <proof prover="6"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
 <goal name="Permut_sym">
 <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
 </goal>
 <goal name="Permut_trans">
 <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="Permut_cons">
 <proof prover="6"><result status="valid" time="0.06" steps="156"/></proof>
 </goal>
 <goal name="Permut_swap">
 <proof prover="6"><result status="valid" time="0.11" steps="402"/></proof>
 </goal>
 <goal name="Permut_cons_append">
 <proof prover="6"><result status="valid" time="0.11" steps="169"/></proof>
 </goal>
 <goal name="Permut_assoc">
 <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
 </goal>
 <goal name="Permut_append">
 <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
 </goal>
 <goal name="Permut_append_swap">
 <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
 </goal>
 <goal name="Permut_mem">
 <proof prover="6"><result status="valid" time="0.01" steps="11"/></proof>
 </goal>
 <goal name="Permut_length">
 <proof prover="7" edited="list_Permut_Permut_length_2.v"><result status="valid" time="2.14"/></proof>
 </goal>
</theory>
<theory name="Distinct" sum="12ed45bbf4afe5f5deaa62646cbf49f3">
 <goal name="distinct_append">
 <transf name="induction_ty_lex">
  <goal name="distinct_append.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="distinct_append.1.1" expl="1.">
   <proof prover="6"><result status="valid" time="0.00" steps="5"/></proof>
   </goal>
   <goal name="distinct_append.1.2" expl="2.">
   <proof prover="6"><result status="valid" time="0.31" steps="1067"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Prefix" sum="289c8ca4542cb4ff69bb7220b699c600">
 <goal name="VC prefix" expl="VC for prefix">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Sum" sum="289c8ca4542cb4ff69bb7220b699c600">
 <goal name="VC sum" expl="VC for sum">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Map" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FoldLeft" sum="d5549dfcafe055d266a1c77f55d9fb9f">
 <goal name="fold_left_append">
 <transf name="induction_ty_lex">
  <goal name="fold_left_append.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FoldRight" sum="852794e7feb280d72e1713e8aaae9210">
 <goal name="fold_right_append">
 <transf name="induction_ty_lex">
  <goal name="fold_right_append.1" expl="1.">
  <proof prover="6"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListRich" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
</file>
</why3session>
