<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.5.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.8.15" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="7" name="Alt-Ergo" version="2.5.2" alternative="FPA" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="whyml">
<path name=".."/><path name=".."/><path name=".."/><path name="stdlib"/>
<path name="ufloat.mlw"/>
<theory name="RealLemmas" proved="true">
 <goal name="div_order_compat&#39;vc" expl="VC for div_order_compat" proved="true">
 <proof prover="2" memlimit="2000"><result status="valid" time="0.087280" steps="11620"/></proof>
 </goal>
 <goal name="mult_err&#39;vc" expl="VC for mult_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.511388" steps="60517"/></proof>
  </goal>
  <goal name="mult_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.305259" steps="35435"/></proof>
  </goal>
  <goal name="mult_err&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.040419" steps="437"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_err_combine&#39;vc" expl="VC for mult_err_combine" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_err_combine&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.003570" steps="16"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.006610" steps="16"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.009237" steps="21"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.007409" steps="24"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.012350" steps="28"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.002971" steps="28"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.006493" steps="33"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.012756" steps="36"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.8" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.006590" steps="39"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.006526" steps="39"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.10" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.003388" steps="45"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.11" expl="precondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.009682" steps="48"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.163257" steps="99417"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.13" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mult_err_combine&#39;vc.13.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.421707" steps="78001"/></proof>
   </goal>
   <goal name="mult_err_combine&#39;vc.13.1" expl="VC for mult_err_combine" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.206831" steps="126530"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="mult_err_combine&#39;vc.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.879688" steps="99000"/></proof>
  </goal>
  <goal name="mult_err_combine&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.013021" steps="172"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_approx_err&#39;vc" expl="VC for exp_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_approx_err&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_approx_err&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.184765" steps="1467"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.0.1" expl="VC for exp_approx_err" proved="true">
   <proof prover="7"><result status="valid" time="0.021437" steps="11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_approx_err&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_approx_err&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.192739" steps="2402"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.1" expl="VC for exp_approx_err" proved="true">
   <proof prover="7"><result status="valid" time="0.021256" steps="13"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.2" expl="VC for exp_approx_err" proved="true">
   <proof prover="7"><result status="valid" time="0.053778" steps="96"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.3" expl="VC for exp_approx_err" proved="true">
   <proof prover="7"><result status="valid" time="0.029154" steps="15"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.4" expl="VC for exp_approx_err" proved="true">
   <proof prover="7"><result status="valid" time="0.849326" steps="11264"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.5" expl="VC for exp_approx_err" proved="true">
   <proof prover="7"><result status="valid" time="0.030408" steps="18"/></proof>
   </goal>
   <goal name="exp_approx_err&#39;vc.1.6" expl="VC for exp_approx_err" proved="true">
   <proof prover="7"><result status="valid" time="0.032356" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_approx_err&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.036013" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log_1_minus_x&#39;vc" expl="VC for log_1_minus_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_1_minus_x&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.054787" steps="14084"/></proof>
  </goal>
  <goal name="log_1_minus_x&#39;vc.1" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.031270" steps="7940"/></proof>
  </goal>
  <goal name="log_1_minus_x&#39;vc.2" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.032277" steps="115"/></proof>
  </goal>
  <goal name="log_1_minus_x&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.069403" steps="435"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_1_minus_x&#39;vc" expl="VC for log2_1_minus_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_1_minus_x&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.027524" steps="63"/></proof>
  </goal>
  <goal name="log2_1_minus_x&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.032278" steps="61"/></proof>
  </goal>
  <goal name="log2_1_minus_x&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.024493" steps="49"/></proof>
  </goal>
  <goal name="log2_1_minus_x&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.077146" steps="156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_1_minus_x&#39;vc" expl="VC for log10_1_minus_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_1_minus_x&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.046321" steps="63"/></proof>
  </goal>
  <goal name="log10_1_minus_x&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.024969" steps="28770"/></proof>
  </goal>
  <goal name="log10_1_minus_x&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.021293" steps="49"/></proof>
  </goal>
  <goal name="log10_1_minus_x&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.026106" steps="135"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log_approx_err&#39;vc" expl="VC for log_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_approx_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.017864" steps="9039"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.056043" steps="582"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.030399" steps="52"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.065932" steps="421"/></proof>
  </goal>
  <goal name="log_approx_err&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.069506" steps="819"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_approx_err&#39;vc" expl="VC for log2_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_approx_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.015859" steps="9039"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.062967" steps="520"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.042341" steps="52"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.061951" steps="407"/></proof>
  </goal>
  <goal name="log2_approx_err&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.085059" steps="31552"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_approx_err&#39;vc" expl="VC for log10_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_approx_err&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.020255" steps="9039"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.1" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.072297" steps="520"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.039236" steps="52"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.063416" steps="407"/></proof>
  </goal>
  <goal name="log10_approx_err&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="5.055074" steps="32075"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_approx_err&#39;vc" expl="VC for sum_approx_err" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_approx_err&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.024443" steps="8"/></proof>
  </goal>
  <goal name="sum_approx_err&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.022642" steps="8"/></proof>
  </goal>
  <goal name="sum_approx_err&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.030270" steps="10775"/></proof>
  </goal>
  <goal name="sum_approx_err&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.156315" steps="673"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="USingle">
 <goal name="uadd&#39;vc" expl="VC for uadd">
 </goal>
 <goal name="usub&#39;vc" expl="VC for usub">
 </goal>
 <goal name="umul&#39;vc" expl="VC for umul">
 </goal>
 <goal name="udiv&#39;vc" expl="VC for udiv">
 </goal>
 <goal name="uminus&#39;vc" expl="VC for uminus">
 </goal>
 <goal name="infix ++.&#39;vc" expl="VC for infix ++." proved="true">
 <proof prover="5"><result status="valid" time="0.062818" steps="229"/></proof>
 </goal>
 <goal name="infix --.&#39;vc" expl="VC for infix --." proved="true">
 <proof prover="5"><result status="valid" time="0.032864" steps="229"/></proof>
 </goal>
 <goal name="infix **.&#39;vc" expl="VC for infix **." proved="true">
 <proof prover="5"><result status="valid" time="0.039345" steps="229"/></proof>
 </goal>
 <goal name="infix //.&#39;vc" expl="VC for infix //." proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.025073" steps="229"/></proof>
 </goal>
 <goal name="prefix --.&#39;vc" expl="VC for prefix --." proved="true">
 <proof prover="5"><result status="valid" time="0.042917" steps="229"/></proof>
 </goal>
 <goal name="uadd_single_error_propagation&#39;vc" expl="VC for uadd_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="uadd_single_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="uadd_single_error_propagation&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.445642" steps="2309"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.493149" steps="2839"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.2" expl="assertion" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.133601" steps="543"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.3" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.371210" steps="1998"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.4" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.211626" steps="344"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.5" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.386900" steps="1882"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.6" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.171612" steps="362"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.7" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.223017" steps="2148"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.8" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.294139" steps="2156"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.9" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.206442" steps="102067"/></proof>
   </goal>
   <goal name="uadd_single_error_propagation&#39;vc.0.10" expl="VC for uadd_single_error_propagation" proved="true">
   <proof prover="0"><result status="valid" time="0.153253" steps="4526"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="uadd_single_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.136008" steps="450"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="usub_single_error_propagation&#39;vc" expl="VC for usub_single_error_propagation" proved="true">
 <proof prover="5"><result status="valid" time="0.880560" steps="5474"/></proof>
 </goal>
 <goal name="umul_single_error_propagation&#39;vc" expl="VC for umul_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="umul_single_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="1.361741" steps="5286"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="umul_single_error_propagation&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.715920" steps="3599"/></proof>
   </goal>
   <goal name="umul_single_error_propagation&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.067929" steps="317"/></proof>
   </goal>
   <goal name="umul_single_error_propagation&#39;vc.1.2" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.507491" steps="2631"/></proof>
   </goal>
   <goal name="umul_single_error_propagation&#39;vc.1.3" expl="VC for umul_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.096073" steps="523"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.073354" steps="312"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.084476" steps="312"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.077386" steps="312"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.047100" steps="312"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.049247" steps="319"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.087762" steps="321"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.8" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.058715" steps="324"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.052911" steps="327"/></proof>
  </goal>
  <goal name="umul_single_error_propagation&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.315250" steps="611"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log_single_error_propagation&#39;vc" expl="VC for log_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.058493" steps="299"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.057746" steps="295"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.063178" steps="295"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.649675" steps="3435"/></proof>
  </goal>
  <goal name="log_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.117760" steps="589"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_single_error_propagation&#39;vc" expl="VC for log2_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.078061" steps="299"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.063536" steps="295"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.069745" steps="295"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.473607" steps="3473"/></proof>
  </goal>
  <goal name="log2_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.243094" steps="588"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_single_error_propagation&#39;vc" expl="VC for log10_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.068263" steps="299"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.070894" steps="295"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.066481" steps="295"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.571580" steps="3473"/></proof>
  </goal>
  <goal name="log10_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.231387" steps="588"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_single_error_propagation&#39;vc" expl="VC for exp_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.067733" steps="296"/></proof>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.065544" steps="292"/></proof>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_single_error_propagation&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.070965" steps="311"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.2.1" expl="VC for exp_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.648592" steps="2822"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_single_error_propagation&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.060438" steps="314"/></proof>
   <proof prover="7"><result status="valid" time="0.064796" steps="314"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.3.1" expl="VC for exp_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.071996" steps="302"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.3.2" expl="VC for exp_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.280698" steps="1646"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.3.3" expl="VC for exp_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.414784" steps="1831"/></proof>
   </goal>
   <goal name="exp_single_error_propagation&#39;vc.3.4" expl="VC for exp_single_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="5.379381" steps="29538"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.059459" steps="301"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_single_error_propagation&#39;vc" expl="VC for sum_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.037441" steps="284"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.410967" steps="1771"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.072847" steps="288"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.186280" steps="1315"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.4" expl="assertion" proved="true">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.382639" steps="1614"/></proof>
  </goal>
  <goal name="sum_single_error_propagation&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.079177" steps="375"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="udiv_pow_of_2_single_error_propagation&#39;vc" expl="VC for udiv_pow_of_2_single_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="udiv_pow_of_2_single_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.065857" steps="298"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_single_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.162812" steps="1395"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_single_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.072041" steps="323"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_single_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.320967" steps="2255"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_single_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.898975" steps="13121"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="UDouble">
 <goal name="uadd&#39;vc" expl="VC for uadd">
 </goal>
 <goal name="usub&#39;vc" expl="VC for usub">
 </goal>
 <goal name="umul&#39;vc" expl="VC for umul">
 </goal>
 <goal name="udiv&#39;vc" expl="VC for udiv">
 </goal>
 <goal name="uminus&#39;vc" expl="VC for uminus">
 </goal>
 <goal name="infix ++.&#39;vc" expl="VC for infix ++." proved="true">
 <proof prover="5"><result status="valid" time="0.040797" steps="229"/></proof>
 </goal>
 <goal name="infix --.&#39;vc" expl="VC for infix --." proved="true">
 <proof prover="5"><result status="valid" time="0.041995" steps="229"/></proof>
 </goal>
 <goal name="infix **.&#39;vc" expl="VC for infix **." proved="true">
 <proof prover="5"><result status="valid" time="0.047986" steps="229"/></proof>
 </goal>
 <goal name="infix //.&#39;vc" expl="VC for infix //." proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.019452" steps="229"/></proof>
 </goal>
 <goal name="prefix --.&#39;vc" expl="VC for prefix --." proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.035050" steps="229"/></proof>
 </goal>
 <goal name="uadd_double_error_propagation&#39;vc" expl="VC for uadd_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="uadd_double_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="uadd_double_error_propagation&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.304790" steps="2312"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.373409" steps="2841"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.2" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.145458" steps="544"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.3" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="5"><result status="valid" time="0.316100" steps="1988"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.4" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="5"><result status="valid" time="0.118363" steps="344"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.5" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="5"><result status="valid" time="0.477756" steps="1890"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.6" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="5"><result status="valid" time="0.075563" steps="362"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.7" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="5"><result status="valid" time="0.338519" steps="2146"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.8" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="5"><result status="valid" time="0.331131" steps="2156"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.9" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="2" memlimit="2000"><result status="valid" time="1.650102" steps="102067"/></proof>
   </goal>
   <goal name="uadd_double_error_propagation&#39;vc.0.10" expl="VC for uadd_double_error_propagation" proved="true">
   <proof prover="0"><result status="valid" time="0.139548" steps="4526"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="uadd_double_error_propagation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.201092" steps="450"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="usub_double_error_propagation&#39;vc" expl="VC for usub_double_error_propagation" proved="true">
 <proof prover="5"><result status="valid" time="0.778239" steps="5472"/></proof>
 </goal>
 <goal name="umul_double_error_propagation&#39;vc" expl="VC for umul_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="umul_double_error_propagation&#39;vc.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="1.303616" steps="5260"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="umul_double_error_propagation&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.523399" steps="3550"/></proof>
   </goal>
   <goal name="umul_double_error_propagation&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.044021" steps="317"/></proof>
   </goal>
   <goal name="umul_double_error_propagation&#39;vc.1.2" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.575552" steps="2663"/></proof>
   </goal>
   <goal name="umul_double_error_propagation&#39;vc.1.3" expl="VC for umul_double_error_propagation" proved="true">
   <proof prover="5"><result status="valid" time="0.057189" steps="523"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.042911" steps="312"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.050305" steps="312"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.039403" steps="312"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.058492" steps="312"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.054374" steps="319"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.044815" steps="321"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.8" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.047434" steps="326"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.044432" steps="327"/></proof>
  </goal>
  <goal name="umul_double_error_propagation&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.154112" steps="611"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log_double_error_propagation&#39;vc" expl="VC for log_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.067128" steps="299"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.077907" steps="295"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.059724" steps="295"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.556515" steps="3439"/></proof>
  </goal>
  <goal name="log_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.138604" steps="589"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log2_double_error_propagation&#39;vc" expl="VC for log2_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log2_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.061128" steps="299"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.073401" steps="295"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.064584" steps="295"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.565589" steps="3473"/></proof>
  </goal>
  <goal name="log2_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.249671" steps="591"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="log10_double_error_propagation&#39;vc" expl="VC for log10_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="log10_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.073933" steps="299"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.067675" steps="295"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.065799" steps="295"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.429985" steps="3476"/></proof>
  </goal>
  <goal name="log10_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.246455" steps="588"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_double_error_propagation&#39;vc" expl="VC for exp_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.063908" steps="296"/></proof>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.072264" steps="292"/></proof>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_double_error_propagation&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.076227" steps="311"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.2.1" expl="VC for exp_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.772170" steps="2826"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_double_error_propagation&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="7"><result status="valid" time="0.073841" steps="314"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.3.1" expl="VC for exp_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.068983" steps="302"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.3.2" expl="VC for exp_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.251155" steps="1646"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.3.3" expl="VC for exp_double_error_propagation" proved="true">
   <proof prover="7"><result status="valid" time="0.334552" steps="1805"/></proof>
   </goal>
   <goal name="exp_double_error_propagation&#39;vc.3.4" expl="VC for exp_double_error_propagation" proved="true">
   <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="1.732909" steps="15142"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.077159" steps="301"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_double_error_propagation&#39;vc" expl="VC for sum_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.072431" steps="284"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.395151" steps="1762"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.076527" steps="288"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.211303" steps="1315"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.4" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.254564" steps="1613"/></proof>
  </goal>
  <goal name="sum_double_error_propagation&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.090382" steps="375"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="udiv_pow_of_2_double_error_propagation&#39;vc" expl="VC for udiv_pow_of_2_double_error_propagation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="udiv_pow_of_2_double_error_propagation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.073169" steps="298"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_double_error_propagation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.209624" steps="1301"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_double_error_propagation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.076445" steps="323"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_double_error_propagation&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.197405" steps="2203"/></proof>
  </goal>
  <goal name="udiv_pow_of_2_double_error_propagation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.582198" steps="13210"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
