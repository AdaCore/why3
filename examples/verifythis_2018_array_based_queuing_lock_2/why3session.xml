<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Eprover" version="1.9.1-001" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="verifythis_2018_array_based_queuing_lock_2.mlw"/>
<theory name="ABQL" proved="true">
 <goal name="VC tick" expl="VC for tick" proved="true">
 <proof prover="3"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC fetch_and_add" expl="VC for fetch_and_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC fetch_and_add.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC fetch_and_add.0.0" expl="assertion" proved="true">
   <transf name="subst" proved="true" arg1="a">
    <goal name="VC fetch_and_add.0.0.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="Div_mod">
     <goal name="VC fetch_and_add.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC fetch_and_add.0.1" expl="VC for fetch_and_add" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC fetch_and_add.0.2" expl="VC for fetch_and_add" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC fetch_and_add.0.3" expl="VC for fetch_and_add" proved="true">
   <proof prover="4"><result status="valid" time="0.00" steps="6"/></proof>
   </goal>
   <goal name="VC fetch_and_add.0.4" expl="VC for fetch_and_add" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC fetch_and_add.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC fetch_and_add.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC fetch_and_add.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC fetch_and_add.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Sorted.Transitive.Trans" proved="true">
 <proof prover="3"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="VC last_push" expl="VC for last_push" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC last_push.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC last_push.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC consecutive_last_push" expl="VC for consecutive_last_push" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC consecutive_last_push.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC consecutive_last_push.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="VC consecutive_last_push.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="163"/></proof>
  </goal>
  <goal name="VC consecutive_last_push.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.47"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="hd_push" proved="true">
 <proof prover="3"><result status="valid" time="0.17"/></proof>
 </goal>
 <goal name="VC consecutive_implies_sorted" expl="VC for consecutive_implies_sorted" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC consecutive_implies_sorted.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC consecutive_implies_sorted.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="VC consecutive_implies_sorted.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="51"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC numof_equiv" expl="VC for numof_equiv" proved="true">
 <proof prover="3"><result status="valid" time="0.35"/></proof>
 </goal>
 <goal name="VC numof_add" expl="VC for numof_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC numof_add.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="157"/></proof>
  </goal>
  <goal name="VC numof_add.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.15" steps="251"/></proof>
  </goal>
  <goal name="VC numof_add.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="226"/></proof>
  </goal>
  <goal name="VC numof_add.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.44"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mod_diff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mod_diff.0" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="mod_diff.1" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="mod_diff.2" proved="true">
  <proof prover="3"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="mod_diff.3" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="mod_diff.4" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="mod_diff.5" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC main" expl="VC for main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC main.0" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC main.1" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC main.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC main.3" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.4" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC main.5" expl="array creation size" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC main.6" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="VC main.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC main.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.10" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="113"/></proof>
  </goal>
  <goal name="VC main.12" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.13" expl="loop invariant init" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="VC main.14" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.14.0" expl="loop invariant init" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="46"/></proof>
   </goal>
   <goal name="VC main.14.1" expl="loop invariant init" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="VC main.16" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.17" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC main.18" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="20"/></proof>
  </goal>
  <goal name="VC main.19" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="142"/></proof>
  </goal>
  <goal name="VC main.20" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="VC main.21" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.22" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.23" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.24" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.25" expl="liveness" proved="true">
  <transf name="right" proved="true" >
   <goal name="VC main.25.0" expl="right case" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC main.25.0.0" expl="right case" proved="true">
    <transf name="exists" proved="true" arg1="0">
     <goal name="VC main.25.0.0.0" proved="true">
     <proof prover="4"><result status="valid" time="0.01" steps="29"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC main.25.0.1" expl="right case" proved="true">
    <proof prover="3"><result status="valid" time="0.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.26" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.27" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.28" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="118"/></proof>
  </goal>
  <goal name="VC main.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.30" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.32" steps="348"/></proof>
  </goal>
  <goal name="VC main.31" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="VC main.32" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.33" steps="972"/></proof>
  </goal>
  <goal name="VC main.33" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="VC main.34" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="59"/></proof>
  </goal>
  <goal name="VC main.35" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.35.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.05" steps="80"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.36" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.16" steps="325"/></proof>
  </goal>
  <goal name="VC main.37" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.37.0" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="43"/></proof>
   </goal>
   <goal name="VC main.37.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.43" steps="721"/></proof>
   </goal>
   <goal name="VC main.37.2" expl="VC for main" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.06" steps="257"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.38" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC main.39" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="1.71"/></proof>
  </goal>
  <goal name="VC main.40" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="34"/></proof>
  </goal>
  <goal name="VC main.41" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="140"/></proof>
  </goal>
  <goal name="VC main.42" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.42.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="47"/></proof>
   </goal>
   <goal name="VC main.42.1" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.43" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.44" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.44.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.03" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.45" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.45.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC main.45.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="78"/></proof>
   </goal>
   <goal name="VC main.45.2" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="100"/></proof>
   </goal>
   <goal name="VC main.45.3" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="76"/></proof>
   </goal>
   <goal name="VC main.45.4" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC main.45.5" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC main.45.6" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.46" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="35"/></proof>
  </goal>
  <goal name="VC main.47" expl="liveness" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.47.0" expl="liveness" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="43"/></proof>
   </goal>
   <goal name="VC main.47.1" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.47.2" expl="liveness" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.12" steps="142"/></proof>
   </goal>
   <goal name="VC main.47.3" expl="liveness" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.48" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.48.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="33"/></proof>
   </goal>
   <goal name="VC main.48.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="33"/></proof>
   </goal>
   <goal name="VC main.48.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="38"/></proof>
   </goal>
   <goal name="VC main.48.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="47"/></proof>
   </goal>
   <goal name="VC main.48.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
   <goal name="VC main.48.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="118"/></proof>
   </goal>
   <goal name="VC main.48.6" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="115"/></proof>
   </goal>
   <goal name="VC main.48.7" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="54"/></proof>
   </goal>
   <goal name="VC main.48.8" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="148"/></proof>
   </goal>
   <goal name="VC main.48.9" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC main.48.10" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="104"/></proof>
   </goal>
   <goal name="VC main.48.11" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="328"/></proof>
   </goal>
   <goal name="VC main.48.12" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
   <goal name="VC main.48.13" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
   <goal name="VC main.48.14" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="246"/></proof>
   </goal>
   <goal name="VC main.48.15" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="134"/></proof>
   </goal>
   <goal name="VC main.48.16" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="46"/></proof>
   </goal>
   <goal name="VC main.48.17" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="36"/></proof>
   </goal>
   <goal name="VC main.48.18" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.49" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="144"/></proof>
  </goal>
  <goal name="VC main.50" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.51" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.52" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.53" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.54" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.55" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.55.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="109"/></proof>
   </goal>
   <goal name="VC main.55.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.39" steps="248"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.56" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.56.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="114"/></proof>
   </goal>
   <goal name="VC main.56.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="125"/></proof>
   </goal>
   <goal name="VC main.56.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="49"/></proof>
   </goal>
   <goal name="VC main.56.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="50"/></proof>
   </goal>
   <goal name="VC main.56.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="197"/></proof>
   </goal>
   <goal name="VC main.56.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="205"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.57" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.57.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.57.1" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="VC main.57.1.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="consecutive_last_push">
     <goal name="VC main.57.1.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.01"/></proof>
     </goal>
     <goal name="VC main.57.1.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.58" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.58.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="49"/></proof>
   </goal>
   <goal name="VC main.58.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.41" steps="593"/></proof>
   </goal>
   <goal name="VC main.58.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="271"/></proof>
   </goal>
   <goal name="VC main.58.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="61"/></proof>
   </goal>
   <goal name="VC main.58.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="138"/></proof>
   </goal>
   <goal name="VC main.58.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="50"/></proof>
   </goal>
   <goal name="VC main.58.6" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="59"/></proof>
   </goal>
   <goal name="VC main.58.7" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="282"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.59" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.59.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="52"/></proof>
   </goal>
   <goal name="VC main.59.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="57"/></proof>
   </goal>
   <goal name="VC main.59.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="162"/></proof>
   </goal>
   <goal name="VC main.59.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="57"/></proof>
   </goal>
   <goal name="VC main.59.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="51"/></proof>
   </goal>
   <goal name="VC main.59.5" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC main.59.6" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="336"/></proof>
   </goal>
   <goal name="VC main.59.7" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="51"/></proof>
   </goal>
   <goal name="VC main.59.8" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.60" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.60.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC main.60.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.60" steps="814"/></proof>
   </goal>
   <goal name="VC main.60.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="64"/></proof>
   </goal>
   <goal name="VC main.60.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="50"/></proof>
   </goal>
   <goal name="VC main.60.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="57"/></proof>
   </goal>
   <goal name="VC main.60.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="66"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.61" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="0.53" steps="744"/></proof>
  </goal>
  <goal name="VC main.62" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.63" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(b = tick.b1)">
   <goal name="VC main.63.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="369"/></proof>
   </goal>
   <goal name="VC main.63.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="replace" proved="true" arg1="owners[b]" arg2="owners1[b]">
    <goal name="VC main.63.1.0" expl="false case (loop invariant preservation)" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC main.63.1.0.0" expl="VC for main" proved="true">
     <proof prover="3"><result status="valid" time="0.07"/></proof>
     </goal>
     <goal name="VC main.63.1.0.1" expl="VC for main" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     </goal>
     <goal name="VC main.63.1.0.2" expl="VC for main" proved="true">
     <proof prover="4"><result status="valid" time="0.24" steps="346"/></proof>
     </goal>
     <goal name="VC main.63.1.0.3" expl="VC for main" proved="true">
     <transf name="assert" proved="true" arg1="( x1 &lt;&gt; th )">
      <goal name="VC main.63.1.0.3.0" expl="asserted formula" proved="true">
      <proof prover="3"><result status="valid" time="0.08"/></proof>
      </goal>
      <goal name="VC main.63.1.0.3.1" expl="VC for main" proved="true">
      <transf name="replace" proved="true" arg1="memo[x1]" arg2="memo1[x1]" arg3="in" arg4="H">
       <goal name="VC main.63.1.0.3.1.0" expl="VC for main" proved="true">
       <proof prover="3"><result status="valid" time="0.06"/></proof>
       </goal>
       <goal name="VC main.63.1.0.3.1.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.05" steps="70"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC main.63.1.1" expl="equality hypothesis" proved="true">
    <proof prover="4"><result status="valid" time="0.04" steps="51"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.64" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.30" steps="734"/></proof>
  </goal>
  <goal name="VC main.65" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.82" steps="1711"/></proof>
  </goal>
  <goal name="VC main.66" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.67" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.18" steps="244"/></proof>
  </goal>
  <goal name="VC main.68" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.68.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.92" steps="363"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.69" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="1.09" steps="1246"/></proof>
  </goal>
  <goal name="VC main.70" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.70.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.86" steps="294"/></proof>
   </goal>
   <goal name="VC main.70.1" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="1.09" steps="1291"/></proof>
   </goal>
   <goal name="VC main.70.2" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="1.12" steps="1351"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.71" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(th = th1)">
   <goal name="VC main.71.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="320"/></proof>
   </goal>
   <goal name="VC main.71.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="replace" proved="true" arg1="memo[th]" arg2="memo1[th]">
    <goal name="VC main.71.1.0" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="5"><result status="valid" time="0.41"/></proof>
    </goal>
    <goal name="VC main.71.1.1" expl="equality hypothesis" proved="true">
    <proof prover="2"><result status="valid" time="0.07" steps="107"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.72" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.72.0" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC main.72.1" expl="VC for main" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="11.92" steps="3776"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.73" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="47"/></proof>
  </goal>
  <goal name="VC main.74" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="55"/></proof>
  </goal>
  <goal name="VC main.75" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="1.54" steps="569"/></proof>
  </goal>
  <goal name="VC main.76" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="VC main.77" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.77.0" expl="loop invariant preservation" proved="true">
   <transf name="assert" proved="true" arg1="(elts waiting_list &lt;&gt; Nil)">
    <goal name="VC main.77.0.0" expl="asserted formula" proved="true">
    <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="72"/></proof>
    </goal>
    <goal name="VC main.77.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="58"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.78" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.78.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="51"/></proof>
   </goal>
   <goal name="VC main.78.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="207"/></proof>
   </goal>
   <goal name="VC main.78.2" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="61"/></proof>
   </goal>
   <goal name="VC main.78.3" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="56"/></proof>
   </goal>
   <goal name="VC main.78.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="123"/></proof>
   </goal>
   <goal name="VC main.78.5" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="49"/></proof>
   </goal>
   <goal name="VC main.78.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="195"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.79" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.13" steps="219"/></proof>
  </goal>
  <goal name="VC main.80" expl="liveness" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.81" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.82" expl="unreachable point" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="110"/></proof>
  </goal>
  <goal name="VC main.83" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.84" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.85" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.86" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.87" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="1.06" steps="731"/></proof>
  </goal>
  <goal name="VC main.88" expl="fairness" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.88.0" expl="fairness" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC main.88.1" expl="fairness" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC main.88.2" expl="fairness" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="268"/></proof>
   </goal>
   <goal name="VC main.88.3" expl="fairness" proved="true">
   <proof prover="4"><result status="valid" time="0.33" steps="424"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.89" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.89.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.48" steps="1060"/></proof>
   </goal>
   <goal name="VC main.89.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="41"/></proof>
   </goal>
   <goal name="VC main.89.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="1.71" steps="803"/></proof>
   </goal>
   <goal name="VC main.89.3" expl="assertion" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.07" steps="154"/></proof>
   </goal>
   <goal name="VC main.89.4" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC main.89.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="65"/></proof>
   </goal>
   <goal name="VC main.89.6" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC main.89.7" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="109"/></proof>
   </goal>
   <goal name="VC main.89.8" expl="assertion" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.90" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.90.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="44"/></proof>
   </goal>
   <goal name="VC main.90.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="44"/></proof>
   </goal>
   <goal name="VC main.90.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="50"/></proof>
   </goal>
   <goal name="VC main.90.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="46"/></proof>
   </goal>
   <goal name="VC main.90.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="91"/></proof>
   </goal>
   <goal name="VC main.90.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="120"/></proof>
   </goal>
   <goal name="VC main.90.6" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="131"/></proof>
   </goal>
   <goal name="VC main.90.7" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.91" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.91.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="280"/></proof>
   </goal>
   <goal name="VC main.91.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="43"/></proof>
   </goal>
   <goal name="VC main.91.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="2.44" steps="1514"/></proof>
   </goal>
   <goal name="VC main.91.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.60" steps="634"/></proof>
   </goal>
   <goal name="VC main.91.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="48"/></proof>
   </goal>
   <goal name="VC main.91.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
   <goal name="VC main.91.6" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="307"/></proof>
   </goal>
   <goal name="VC main.91.7" expl="assertion" proved="true">
   <proof prover="2" timelimit="20"><result status="valid" time="8.39" steps="4299"/></proof>
   <transf name="split_all_full" proved="true" >
    <goal name="VC main.91.7.0" expl="assertion" proved="true">
    <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="6.19" steps="2968"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.92" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.92.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="424"/></proof>
   </goal>
   <goal name="VC main.92.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="225"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.93" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.93.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="340"/></proof>
   </goal>
   <goal name="VC main.93.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="44"/></proof>
   </goal>
   <goal name="VC main.93.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="1.16" steps="1475"/></proof>
   </goal>
   <goal name="VC main.93.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="221"/></proof>
   </goal>
   <goal name="VC main.93.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="201"/></proof>
   </goal>
   <goal name="VC main.93.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="53"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.94" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.94.0" expl="assertion" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="3.58" steps="3734"/></proof>
   </goal>
   <goal name="VC main.94.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="44"/></proof>
   </goal>
   <goal name="VC main.94.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="2.73" steps="1097"/></proof>
   </goal>
   <goal name="VC main.94.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="53"/></proof>
   </goal>
   <goal name="VC main.94.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="168"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.95" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.22" steps="286"/></proof>
  </goal>
  <goal name="VC main.96" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.97" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.63" steps="609"/></proof>
  </goal>
  <goal name="VC main.98" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.18" steps="547"/></proof>
  </goal>
  <goal name="VC main.99" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.09" steps="104"/></proof>
  </goal>
  <goal name="VC main.100" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.101" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="VC main.102" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.102.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.04" steps="109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.103" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.38" steps="691"/></proof>
  </goal>
  <goal name="VC main.104" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.104.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="54"/></proof>
   </goal>
   <goal name="VC main.104.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="284"/></proof>
   </goal>
   <goal name="VC main.104.2" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="289"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.105" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="3.30" steps="1678"/></proof>
  </goal>
  <goal name="VC main.106" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.33" steps="564"/></proof>
  </goal>
  <goal name="VC main.107" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="328"/></proof>
  </goal>
  <goal name="VC main.108" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.56" steps="900"/></proof>
  </goal>
  <goal name="VC main.109" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.79" steps="544"/></proof>
  </goal>
  <goal name="VC main.110" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.72" steps="494"/></proof>
  </goal>
  <goal name="VC main.111" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.111.0" expl="loop invariant preservation" proved="true">
   <transf name="assert" proved="true" arg1="(elts waiting_list &lt;&gt; Nil)">
    <goal name="VC main.111.0.0" expl="asserted formula" proved="true">
    <proof prover="4"><result status="valid" time="0.06" steps="185"/></proof>
    </goal>
    <goal name="VC main.111.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="4" memlimit="2000"><result status="valid" time="1.68" steps="881"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.112" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.112.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.10" steps="47"/></proof>
   </goal>
   <goal name="VC main.112.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="1.52" steps="1070"/></proof>
   </goal>
   <goal name="VC main.112.2" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="4.29" steps="1227"/></proof>
   </goal>
   <goal name="VC main.112.3" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="1.75" steps="1016"/></proof>
   </goal>
   <goal name="VC main.112.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.10" steps="47"/></proof>
   </goal>
   <goal name="VC main.112.5" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.11" steps="47"/></proof>
   </goal>
   <goal name="VC main.112.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.113" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="185"/></proof>
  </goal>
  <goal name="VC main.114" expl="liveness" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.114.0" expl="liveness" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="VC main.114.1" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.114.2" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.114.3" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.115" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="VC main.116" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.117" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.118" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="VC main.119" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="177"/></proof>
  </goal>
  <goal name="VC main.120" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.121" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="51"/></proof>
  </goal>
  <goal name="VC main.122" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="VC main.123" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC main.124" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.06" steps="172"/></proof>
  </goal>
  <goal name="VC main.125" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC main.126" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.126.0" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC main.126.1" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.127" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="33"/></proof>
  </goal>
  <goal name="VC main.128" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="33"/></proof>
  </goal>
  <goal name="VC main.129" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.129.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.03" steps="45"/></proof>
   </goal>
   <goal name="VC main.129.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="45"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.130" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="45"/></proof>
  </goal>
  <goal name="VC main.131" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.132" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.132.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC main.132.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.08" steps="35"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC main.132.1" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC main.132.2" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.132.3" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC main.132.4" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC main.132.4.0" expl="loop invariant preservation" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.04" steps="78"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC main.132.5" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC main.132.5.0" expl="loop invariant preservation" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.05" steps="34"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC main.132.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="102"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.133" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="33"/></proof>
  </goal>
  <goal name="VC main.134" expl="liveness" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.06" steps="246"/></proof>
  </goal>
  <goal name="VC main.135" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.136" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.15" steps="313"/></proof>
  </goal>
  <goal name="VC main.137" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.138" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.139" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="VC main.140" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="973"/></proof>
  </goal>
  <goal name="VC main.141" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="86"/></proof>
  </goal>
  <goal name="VC main.142" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="59"/></proof>
  </goal>
  <goal name="VC main.143" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="80"/></proof>
  </goal>
  <goal name="VC main.144" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="1.24"/></proof>
  </goal>
  <goal name="VC main.145" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.145.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.03" steps="43"/></proof>
   </goal>
   <goal name="VC main.145.1" expl="VC for main" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.94" steps="2180"/></proof>
   </goal>
   <goal name="VC main.145.2" expl="VC for main" proved="true">
   <proof prover="2"><result status="valid" time="0.08" steps="257"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.146" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="th=th1">
   <goal name="VC main.146.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="183"/></proof>
   </goal>
   <goal name="VC main.146.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="5"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.147" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10" memlimit="1000"><result status="valid" time="1.62"/></proof>
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.147.0" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC main.147.1" expl="VC for main" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC main.147.1.0" expl="VC for main" proved="true">
    <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="1.37" steps="775"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.148" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="VC main.149" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="140"/></proof>
  </goal>
  <goal name="VC main.150" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="VC main.151" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="47"/></proof>
  </goal>
  <goal name="VC main.152" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="76"/></proof>
  </goal>
  <goal name="VC main.153" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.153.0" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC main.153.1" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.05" steps="52"/></proof>
   </goal>
   <goal name="VC main.153.2" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.153.3" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.153.4" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC main.153.5" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC main.153.6" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="114"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.154" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="35"/></proof>
  </goal>
  <goal name="VC main.155" expl="liveness" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.156" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.157" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="311"/></proof>
  </goal>
  <goal name="VC main.158" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.159" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC main.160" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="54"/></proof>
  </goal>
  <goal name="VC main.161" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.34" steps="1065"/></proof>
  </goal>
  <goal name="VC main.162" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.163" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.13" steps="59"/></proof>
  </goal>
  <goal name="VC main.164" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.164.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.06" steps="80"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.165" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.97" steps="2366"/></proof>
  </goal>
  <goal name="VC main.166" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.166.0" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="43"/></proof>
   </goal>
   <goal name="VC main.166.1" expl="VC for main" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.60" steps="1350"/></proof>
   </goal>
   <goal name="VC main.166.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="351"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.167" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.167.0" expl="VC for main" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.06" steps="171"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.168" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC main.169" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="VC main.170" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="140"/></proof>
  </goal>
  <goal name="VC main.171" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.172" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="VC main.173" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.174" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.174.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="37"/></proof>
   </goal>
   <goal name="VC main.174.1" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC main.174.2" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC main.174.3" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="47"/></proof>
   </goal>
   <goal name="VC main.174.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="69"/></proof>
   </goal>
   <goal name="VC main.174.5" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06" steps="36"/></proof>
   </goal>
   <goal name="VC main.174.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="100"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.175" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="35"/></proof>
  </goal>
  <goal name="VC main.176" expl="liveness" proved="true">
  <transf name="revert" proved="true" arg1="H41">
   <goal name="VC main.176.0" expl="liveness" proved="true">
   <transf name="split_goal_full" proved="true" >
    <goal name="VC main.176.0.0" expl="liveness" proved="true">
    <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="50"/></proof>
    </goal>
    <goal name="VC main.176.0.1" expl="liveness" proved="true">
    <proof prover="3"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC main.176.0.2" expl="liveness" proved="true">
    <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="146"/></proof>
    </goal>
    <goal name="VC main.176.0.3" expl="liveness" proved="true">
    <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="111"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.177" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.178" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.179" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="H22">
   <goal name="VC main.179.0" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC main.179.1" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC main.179.2" expl="apply premises" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.15" steps="329"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.180" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.181" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.182" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.20" steps="410"/></proof>
  </goal>
  <goal name="VC main.183" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="VC main.184" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC main.185" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="175"/></proof>
  </goal>
  <goal name="VC main.186" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="2.28" steps="2226"/></proof>
  </goal>
  <goal name="VC main.187" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.29" steps="931"/></proof>
  </goal>
  <goal name="VC main.188" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="65"/></proof>
  </goal>
  <goal name="VC main.189" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="96"/></proof>
  </goal>
  <goal name="VC main.190" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="1.44" steps="3517"/></proof>
  </goal>
  <goal name="VC main.191" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.191.0" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="49"/></proof>
   </goal>
   <goal name="VC main.191.1" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.86" steps="2009"/></proof>
   </goal>
   <goal name="VC main.191.2" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.54" steps="1506"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.192" expl="loop invariant preservation" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC main.193" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="1.37" steps="2214"/></proof>
  </goal>
  <goal name="VC main.194" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="VC main.195" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="174"/></proof>
  </goal>
  <goal name="VC main.196" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.196.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="53"/></proof>
   </goal>
   <goal name="VC main.196.1" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="53"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.197" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.198" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC main.199" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.199.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="41"/></proof>
   </goal>
   <goal name="VC main.199.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="86"/></proof>
   </goal>
   <goal name="VC main.199.2" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="108"/></proof>
   </goal>
   <goal name="VC main.199.3" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="84"/></proof>
   </goal>
   <goal name="VC main.199.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="84"/></proof>
   </goal>
   <goal name="VC main.199.5" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="40"/></proof>
   </goal>
   <goal name="VC main.199.6" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.200" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="39"/></proof>
  </goal>
  <goal name="VC main.201" expl="liveness" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="117"/></proof>
  </goal>
  <goal name="VC main.202" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.203" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.204" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC main.205" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.205.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC main.205.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.206" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="74"/></proof>
  </goal>
  <goal name="VC main.207" expl="assertion" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.62" steps="434"/></proof>
  </goal>
  <goal name="VC main.208" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.209" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.210" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.211" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.212" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.212.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="56"/></proof>
   </goal>
   <goal name="VC main.212.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="48"/></proof>
   </goal>
   <goal name="VC main.212.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="53"/></proof>
   </goal>
   <goal name="VC main.212.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="VC main.212.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.213" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.213.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="284"/></proof>
   </goal>
   <goal name="VC main.213.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="1.18" steps="734"/></proof>
   </goal>
   <goal name="VC main.213.2" expl="assertion" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="66"/></proof>
   </goal>
   <goal name="VC main.213.3" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="413"/></proof>
   </goal>
   <goal name="VC main.213.4" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="59"/></proof>
   </goal>
   <goal name="VC main.213.5" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="66"/></proof>
   </goal>
   <goal name="VC main.213.6" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="58"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.214" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.76" steps="550"/></proof>
  </goal>
  <goal name="VC main.215" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.216" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="b=x.b1">
   <goal name="VC main.216.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="63"/></proof>
   </goal>
   <goal name="VC main.216.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="replace" proved="true" arg1="owners[b]" arg2="owners1[b]">
    <goal name="VC main.216.1.0" expl="false case (loop invariant preservation)" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC main.216.1.0.0" expl="VC for main" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     <proof prover="4" memlimit="2000"><result status="valid" time="0.43" steps="529"/></proof>
     </goal>
     <goal name="VC main.216.1.0.1" expl="VC for main" proved="true">
     <proof prover="3"><result status="valid" time="0.04"/></proof>
     <proof prover="4" memlimit="2000"><result status="valid" time="0.44" steps="529"/></proof>
     </goal>
     <goal name="VC main.216.1.0.2" expl="VC for main" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC main.216.1.0.2.0" expl="VC for main" proved="true">
      <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="4.83" steps="987"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC main.216.1.0.3" expl="VC for main" proved="true">
     <transf name="assert" proved="true" arg1="( x1 &lt;&gt; th )">
      <goal name="VC main.216.1.0.3.0" expl="asserted formula" proved="true">
      <proof prover="3"><result status="valid" time="0.09"/></proof>
      <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="72"/></proof>
      </goal>
      <goal name="VC main.216.1.0.3.1" expl="VC for main" proved="true">
      <transf name="replace" proved="true" arg1="memo[x1]" arg2="memo1[x1]" arg3="in" arg4="H">
       <goal name="VC main.216.1.0.3.1.0" expl="VC for main" proved="true">
       <proof prover="3"><result status="valid" time="0.05"/></proof>
       </goal>
       <goal name="VC main.216.1.0.3.1.1" expl="equality hypothesis" proved="true">
       <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="66"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC main.216.1.1" expl="equality hypothesis" proved="true">
    <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="54"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.217" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="56"/></proof>
  </goal>
  <goal name="VC main.218" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="50"/></proof>
  </goal>
  <goal name="VC main.219" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.220" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="50"/></proof>
  </goal>
  <goal name="VC main.221" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.221.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="2.30" steps="323"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.222" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(th=th1)">
   <goal name="VC main.222.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="62"/></proof>
   </goal>
   <goal name="VC main.222.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="2.01" steps="1419"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.223" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.223.0" expl="VC for main" proved="true">
   <proof prover="2"><result status="valid" time="0.67" steps="884"/></proof>
   </goal>
   <goal name="VC main.223.1" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.75"/></proof>
   </goal>
   <goal name="VC main.223.2" expl="VC for main" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="1.64" steps="1003"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.224" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.224.0" expl="VC for main" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC main.224.0.0" expl="VC for main" proved="true">
    <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="10.20" steps="3252"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.225" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="3"><result status="valid" time="1.59"/></proof>
  </goal>
  <goal name="VC main.226" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="50"/></proof>
  </goal>
  <goal name="VC main.227" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC main.227.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="296"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.228" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC main.228.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="65"/></proof>
   </goal>
   <goal name="VC main.228.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="65"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC main.229" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="116"/></proof>
  </goal>
  <goal name="VC main.230" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.231" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.232" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.233" expl="liveness" proved="true">
  <proof prover="5"><result status="valid" time="0.38"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
