<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Eprover" version="1.9.1-001" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.3.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_2018_array_based_queuing_lock_2.mlw"/>
<theory name="ABQL" proved="true">
 <goal name="tick&#39;vc" expl="VC for tick" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="7541"/></proof>
 </goal>
 <goal name="fetch_and_add&#39;vc" expl="VC for fetch_and_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fetch_and_add&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fetch_and_add&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="subst" proved="true" arg1="a">
    <goal name="fetch_and_add&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="Div_mod">
     <goal name="fetch_and_add&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.02" steps="7363"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="fetch_and_add&#39;vc.0.1" expl="VC for fetch_and_add" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="7773"/></proof>
   </goal>
   <goal name="fetch_and_add&#39;vc.0.2" expl="VC for fetch_and_add" proved="true">
   <proof prover="3"><result status="valid" time="0.02" steps="8935"/></proof>
   </goal>
   <goal name="fetch_and_add&#39;vc.0.3" expl="VC for fetch_and_add" proved="true">
   <proof prover="4"><result status="valid" time="0.00" steps="6"/></proof>
   </goal>
   <goal name="fetch_and_add&#39;vc.0.4" expl="VC for fetch_and_add" proved="true">
   <proof prover="3"><result status="valid" time="0.02" steps="8603"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fetch_and_add&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="7680"/></proof>
  </goal>
  <goal name="fetch_and_add&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9967"/></proof>
  </goal>
  <goal name="fetch_and_add&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="752"/></proof>
  </goal>
  <goal name="fetch_and_add&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="752"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="last_push&#39;vc" expl="VC for last_push" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="last_push&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="consecutive_last_push&#39;vc" expl="VC for consecutive_last_push" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="consecutive_last_push&#39;vc.0" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="consecutive">
   <goal name="consecutive_last_push&#39;vc.0.0" expl="VC for consecutive_last_push" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="156"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="hd_push" proved="true">
 <proof prover="3"><result status="valid" time="0.04" steps="68304"/></proof>
 </goal>
 <goal name="consecutive_implies_sorted&#39;vc" expl="VC for consecutive_implies_sorted" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="120"/></proof>
 </goal>
 <goal name="numof_equiv&#39;vc" expl="VC for numof_equiv" proved="true">
 <proof prover="5"><result status="valid" time="0.38" steps="47781"/></proof>
 </goal>
 <goal name="numof_add&#39;vc" expl="VC for numof_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="numof_add&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="137"/></proof>
  </goal>
  <goal name="numof_add&#39;vc.1" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.15" steps="222"/></proof>
  </goal>
  <goal name="numof_add&#39;vc.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="206"/></proof>
  </goal>
  <goal name="numof_add&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.54" steps="115257"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mod_diff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mod_diff.0" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="32517"/></proof>
  </goal>
  <goal name="mod_diff.1" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="32598"/></proof>
  </goal>
  <goal name="mod_diff.2" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="33463"/></proof>
  </goal>
  <goal name="mod_diff.3" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="11"/></proof>
  </goal>
  <goal name="mod_diff.4" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="33504"/></proof>
  </goal>
  <goal name="mod_diff.5" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="33636"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="main&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="32684"/></proof>
  </goal>
  <goal name="main&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="34225"/></proof>
  </goal>
  <goal name="main&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="main&#39;vc.3" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="33418"/></proof>
  </goal>
  <goal name="main&#39;vc.4" expl="array creation size" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="34316"/></proof>
  </goal>
  <goal name="main&#39;vc.5" expl="array creation size" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="main&#39;vc.6" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="main&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="main&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="43375"/></proof>
  </goal>
  <goal name="main&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="3748"/></proof>
  </goal>
  <goal name="main&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="4316"/></proof>
  </goal>
  <goal name="main&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="99"/></proof>
  </goal>
  <goal name="main&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="4318"/></proof>
  </goal>
  <goal name="main&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="main&#39;vc.14" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.14.0" expl="loop invariant init" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
   <goal name="main&#39;vc.14.1" expl="loop invariant init" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="41"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="main&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="44770"/></proof>
  </goal>
  <goal name="main&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="main&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="38"/></proof>
  </goal>
  <goal name="main&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="155"/></proof>
  </goal>
  <goal name="main&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="33"/></proof>
  </goal>
  <goal name="main&#39;vc.21" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="47011"/></proof>
  </goal>
  <goal name="main&#39;vc.22" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="50285"/></proof>
  </goal>
  <goal name="main&#39;vc.23" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="4338"/></proof>
  </goal>
  <goal name="main&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="49571"/></proof>
  </goal>
  <goal name="main&#39;vc.25" expl="liveness" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.25.0" expl="liveness" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="3.44" steps="987"/></proof>
   </goal>
   <goal name="main&#39;vc.25.1" expl="liveness" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="21"/></proof>
   </goal>
   <goal name="main&#39;vc.25.2" expl="liveness" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="36"/></proof>
   </goal>
   <goal name="main&#39;vc.25.3" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="6322"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.26" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54658"/></proof>
  </goal>
  <goal name="main&#39;vc.27" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54897"/></proof>
  </goal>
  <goal name="main&#39;vc.28" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.15" steps="109"/></proof>
  </goal>
  <goal name="main&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="23994"/></proof>
  </goal>
  <goal name="main&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.25" steps="33278"/></proof>
  </goal>
  <goal name="main&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="main&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.35" steps="826"/></proof>
  </goal>
  <goal name="main&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="46907"/></proof>
  </goal>
  <goal name="main&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="65"/></proof>
  </goal>
  <goal name="main&#39;vc.35" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.35.0" expl="VC for main" proved="true">
   <proof prover="2"><result status="valid" time="0.08" steps="207"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.23" steps="286"/></proof>
  </goal>
  <goal name="main&#39;vc.37" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.37.0" expl="VC for main" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.06" steps="69"/></proof>
   </goal>
   <goal name="main&#39;vc.37.1" expl="VC for main" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="main&#39;vc.37.1.0" expl="VC for main" proved="true">
    <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.30" steps="1007"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="main&#39;vc.37.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="123"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.13" steps="42870"/></proof>
  </goal>
  <goal name="main&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.84" steps="140471"/></proof>
  </goal>
  <goal name="main&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="main&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="135"/></proof>
  </goal>
  <goal name="main&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.20" steps="39438"/></proof>
  </goal>
  <goal name="main&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="5294"/></proof>
  </goal>
  <goal name="main&#39;vc.44" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.44.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.26" steps="39539"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="240"/></proof>
  </goal>
  <goal name="main&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="32"/></proof>
  </goal>
  <goal name="main&#39;vc.47" expl="liveness" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="37545"/></proof>
  </goal>
  <goal name="main&#39;vc.48" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.48.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
   <goal name="main&#39;vc.48.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
   <goal name="main&#39;vc.48.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="35"/></proof>
   </goal>
   <goal name="main&#39;vc.48.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="50"/></proof>
   </goal>
   <goal name="main&#39;vc.48.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="50"/></proof>
   </goal>
   <goal name="main&#39;vc.48.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="113"/></proof>
   </goal>
   <goal name="main&#39;vc.48.6" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="121"/></proof>
   </goal>
   <goal name="main&#39;vc.48.7" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="50"/></proof>
   </goal>
   <goal name="main&#39;vc.48.8" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="133"/></proof>
   </goal>
   <goal name="main&#39;vc.48.9" expl="VC for main" proved="true">
   <proof prover="7"><result status="valid" time="0.17" steps="40327"/></proof>
   </goal>
   <goal name="main&#39;vc.48.10" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="141"/></proof>
   </goal>
   <goal name="main&#39;vc.48.11" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="305"/></proof>
   </goal>
   <goal name="main&#39;vc.48.12" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="main&#39;vc.48.13" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="48"/></proof>
   </goal>
   <goal name="main&#39;vc.48.14" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="233"/></proof>
   </goal>
   <goal name="main&#39;vc.48.15" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="171"/></proof>
   </goal>
   <goal name="main&#39;vc.48.16" expl="VC for main" proved="true">
   <proof prover="7"><result status="valid" time="0.13" steps="31814"/></proof>
   </goal>
   <goal name="main&#39;vc.48.17" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="33"/></proof>
   </goal>
   <goal name="main&#39;vc.48.18" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.01" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.49" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="130"/></proof>
  </goal>
  <goal name="main&#39;vc.50" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="57290"/></proof>
  </goal>
  <goal name="main&#39;vc.51" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="57539"/></proof>
  </goal>
  <goal name="main&#39;vc.52" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="58518"/></proof>
  </goal>
  <goal name="main&#39;vc.53" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="65268"/></proof>
  </goal>
  <goal name="main&#39;vc.54" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="48871"/></proof>
  </goal>
  <goal name="main&#39;vc.55" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.55.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="118"/></proof>
   </goal>
   <goal name="main&#39;vc.55.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.54" steps="285"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.56" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.56.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="119"/></proof>
   </goal>
   <goal name="main&#39;vc.56.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="119"/></proof>
   </goal>
   <goal name="main&#39;vc.56.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="52"/></proof>
   </goal>
   <goal name="main&#39;vc.56.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="53"/></proof>
   </goal>
   <goal name="main&#39;vc.56.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="190"/></proof>
   </goal>
   <goal name="main&#39;vc.56.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="235"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.57" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.57.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="64604"/></proof>
   </goal>
   <goal name="main&#39;vc.57.1" expl="VC for main" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="main&#39;vc.57.1.0" expl="VC for main" proved="true">
    <transf name="apply" proved="true" arg1="consecutive_last_push">
     <goal name="main&#39;vc.57.1.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.01" steps="4952"/></proof>
     </goal>
     <goal name="main&#39;vc.57.1.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.03" steps="59732"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.58" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.58.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="46"/></proof>
   </goal>
   <goal name="main&#39;vc.58.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.22" steps="49944"/></proof>
   </goal>
   <goal name="main&#39;vc.58.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="345"/></proof>
   </goal>
   <goal name="main&#39;vc.58.3" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.19" steps="35438"/></proof>
   </goal>
   <goal name="main&#39;vc.58.4" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.20" steps="47891"/></proof>
   </goal>
   <goal name="main&#39;vc.58.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
   <goal name="main&#39;vc.58.6" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.15" steps="33935"/></proof>
   </goal>
   <goal name="main&#39;vc.58.7" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="3.90" steps="589"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.59" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.59.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.25" steps="37723"/></proof>
   </goal>
   <goal name="main&#39;vc.59.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.09" steps="99"/></proof>
   </goal>
   <goal name="main&#39;vc.59.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="52"/></proof>
   </goal>
   <goal name="main&#39;vc.59.3" expl="VC for main" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="101"/></proof>
   </goal>
   <goal name="main&#39;vc.59.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="48"/></proof>
   </goal>
   <goal name="main&#39;vc.59.5" expl="VC for main" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.08" steps="49"/></proof>
   </goal>
   <goal name="main&#39;vc.59.6" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.17" steps="32473"/></proof>
   </goal>
   <goal name="main&#39;vc.59.7" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="49"/></proof>
   </goal>
   <goal name="main&#39;vc.59.8" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.60" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.60.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="84314"/></proof>
   </goal>
   <goal name="main&#39;vc.60.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.13" steps="34187"/></proof>
   </goal>
   <goal name="main&#39;vc.60.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="63"/></proof>
   </goal>
   <goal name="main&#39;vc.60.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="47"/></proof>
   </goal>
   <goal name="main&#39;vc.60.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="54"/></proof>
   </goal>
   <goal name="main&#39;vc.60.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.61" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="221"/></proof>
  </goal>
  <goal name="main&#39;vc.62" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="25857"/></proof>
  </goal>
  <goal name="main&#39;vc.63" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(b = tick.b1)">
   <goal name="main&#39;vc.63.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="0.30" steps="909"/></proof>
   </goal>
   <goal name="main&#39;vc.63.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="replace" proved="true" arg1="owners[b]&#39;" arg2="owners1[b]&#39;">
    <goal name="main&#39;vc.63.1.0" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="2"><result status="valid" time="0.92" steps="1182"/></proof>
    </goal>
    <goal name="main&#39;vc.63.1.1" expl="equality hypothesis" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="108"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.64" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.32" steps="416"/></proof>
  </goal>
  <goal name="main&#39;vc.65" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.74" steps="1498"/></proof>
  </goal>
  <goal name="main&#39;vc.66" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="main&#39;vc.67" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="218"/></proof>
  </goal>
  <goal name="main&#39;vc.68" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="4.48" steps="1340"/></proof>
  </goal>
  <goal name="main&#39;vc.69" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.99" steps="1056"/></proof>
  </goal>
  <goal name="main&#39;vc.70" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.70.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.61" steps="323"/></proof>
   </goal>
   <goal name="main&#39;vc.70.1" expl="VC for main" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.62" steps="898"/></proof>
   </goal>
   <goal name="main&#39;vc.70.2" expl="VC for main" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.60" steps="717"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.71" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(th=th1)">
   <goal name="main&#39;vc.71.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="614"/></proof>
   </goal>
   <goal name="main&#39;vc.71.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="replace" proved="true" arg1="memo[th]&#39;" arg2="memo1[th]&#39;">
    <goal name="main&#39;vc.71.1.0" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="2"><result status="valid" time="0.27" steps="622"/></proof>
    </goal>
    <goal name="main&#39;vc.71.1.1" expl="equality hypothesis" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="101"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.72" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.72.0" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.17" steps="48685"/></proof>
   </goal>
   <goal name="main&#39;vc.72.1" expl="VC for main" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="main&#39;vc.72.1.0" expl="VC for main" proved="true">
    <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="11.02" steps="3422"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.73" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="44"/></proof>
  </goal>
  <goal name="main&#39;vc.74" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="45"/></proof>
  </goal>
  <goal name="main&#39;vc.75" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.75.0" expl="loop invariant preservation" proved="true">
   <proof prover="5" timelimit="10" memlimit="4000"><result status="valid" time="0.96" steps="155149"/></proof>
   </goal>
   <goal name="main&#39;vc.75.1" expl="loop invariant preservation" proved="true">
   <proof prover="5" timelimit="10" memlimit="4000"><result status="valid" time="0.65" steps="114757"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.76" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.44" steps="66849"/></proof>
  </goal>
  <goal name="main&#39;vc.77" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="main&#39;vc.78" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.78.0" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="30857"/></proof>
   </goal>
   <goal name="main&#39;vc.78.1" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.08" steps="201"/></proof>
   </goal>
   <goal name="main&#39;vc.78.2" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="6802"/></proof>
   </goal>
   <goal name="main&#39;vc.78.3" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="78009"/></proof>
   </goal>
   <goal name="main&#39;vc.78.4" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="6854"/></proof>
   </goal>
   <goal name="main&#39;vc.78.5" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.03" steps="6858"/></proof>
   </goal>
   <goal name="main&#39;vc.78.6" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="191"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.79" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="195"/></proof>
  </goal>
  <goal name="main&#39;vc.80" expl="liveness" proved="true">
  <transf name="revert" proved="true" arg1="H6">
   <goal name="main&#39;vc.80.0" expl="liveness" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.07" steps="35761"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.81" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54915"/></proof>
  </goal>
  <goal name="main&#39;vc.82" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="45168"/></proof>
  </goal>
  <goal name="main&#39;vc.83" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="54885"/></proof>
  </goal>
  <goal name="main&#39;vc.84" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="58360"/></proof>
  </goal>
  <goal name="main&#39;vc.85" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54473"/></proof>
  </goal>
  <goal name="main&#39;vc.86" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="58451"/></proof>
  </goal>
  <goal name="main&#39;vc.87" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.40" steps="280"/></proof>
  </goal>
  <goal name="main&#39;vc.88" expl="fairness" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.88.0" expl="fairness" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="61946"/></proof>
   </goal>
   <goal name="main&#39;vc.88.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="110"/></proof>
   </goal>
   <goal name="main&#39;vc.88.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="49"/></proof>
   </goal>
   <goal name="main&#39;vc.88.3" expl="VC for main" proved="true">
   <proof prover="6"><result status="valid" time="0.23" steps="480"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.89" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.89.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="220"/></proof>
   <proof prover="5"><result status="valid" time="0.14" steps="33380"/></proof>
   </goal>
   <goal name="main&#39;vc.89.1" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.07" steps="23279"/></proof>
   </goal>
   <goal name="main&#39;vc.89.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="timeout" time="5.00"/></proof>
   <proof prover="7"><result status="valid" time="0.40" steps="72560"/></proof>
   </goal>
   <goal name="main&#39;vc.89.3" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.20" steps="33662"/></proof>
   </goal>
   <goal name="main&#39;vc.89.4" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.37" steps="74644"/></proof>
   </goal>
   <goal name="main&#39;vc.89.5" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.19" steps="47725"/></proof>
   </goal>
   <goal name="main&#39;vc.89.6" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="155935"/></proof>
   </goal>
   <goal name="main&#39;vc.89.7" expl="VC for main" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="202"/></proof>
   </goal>
   <goal name="main&#39;vc.89.8" expl="VC for main" proved="true">
   <proof prover="2"><result status="valid" time="0.35" steps="730"/></proof>
   </goal>
   <goal name="main&#39;vc.89.9" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.08" steps="26708"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.90" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.90.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="41"/></proof>
   </goal>
   <goal name="main&#39;vc.90.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="41"/></proof>
   </goal>
   <goal name="main&#39;vc.90.2" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="58"/></proof>
   </goal>
   <goal name="main&#39;vc.90.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="43"/></proof>
   </goal>
   <goal name="main&#39;vc.90.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="95"/></proof>
   </goal>
   <goal name="main&#39;vc.90.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="122"/></proof>
   </goal>
   <goal name="main&#39;vc.90.6" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="130"/></proof>
   </goal>
   <goal name="main&#39;vc.90.7" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="63"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.91" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.91.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.32" steps="242"/></proof>
   </goal>
   <goal name="main&#39;vc.91.1" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="40"/></proof>
   </goal>
   <goal name="main&#39;vc.91.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="1.20" steps="608"/></proof>
   </goal>
   <goal name="main&#39;vc.91.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="394"/></proof>
   </goal>
   <goal name="main&#39;vc.91.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
   </goal>
   <goal name="main&#39;vc.91.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="269"/></proof>
   </goal>
   <goal name="main&#39;vc.91.6" expl="VC for main" proved="true">
   <proof prover="2" timelimit="20"><result status="valid" time="0.09" steps="236"/></proof>
   <transf name="split_all_full" proved="true" >
    <goal name="main&#39;vc.91.6.0" expl="VC for main" proved="true">
    <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.10" steps="225"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.92" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.92.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.28" steps="386"/></proof>
   </goal>
   <goal name="main&#39;vc.92.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="205"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.93" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.93.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="183"/></proof>
   </goal>
   <goal name="main&#39;vc.93.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="41"/></proof>
   </goal>
   <goal name="main&#39;vc.93.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="101"/></proof>
   </goal>
   <goal name="main&#39;vc.93.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="174"/></proof>
   </goal>
   <goal name="main&#39;vc.93.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="1.56" steps="422"/></proof>
   </goal>
   <goal name="main&#39;vc.93.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="63"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.94" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.94.0" expl="assertion" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.33" steps="641"/></proof>
   </goal>
   <goal name="main&#39;vc.94.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="41"/></proof>
   </goal>
   <goal name="main&#39;vc.94.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="timeout" time="5.00"/></proof>
   <proof prover="7"><result status="valid" time="0.45" steps="93442"/></proof>
   </goal>
   <goal name="main&#39;vc.94.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="93"/></proof>
   </goal>
   <goal name="main&#39;vc.94.4" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.17" steps="37845"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.95" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.18" steps="333"/></proof>
  </goal>
  <goal name="main&#39;vc.96" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="61598"/></proof>
  </goal>
  <goal name="main&#39;vc.97" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="76615"/></proof>
  </goal>
  <goal name="main&#39;vc.98" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.34" steps="591"/></proof>
  </goal>
  <goal name="main&#39;vc.99" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.12" steps="98"/></proof>
  </goal>
  <goal name="main&#39;vc.100" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="58376"/></proof>
  </goal>
  <goal name="main&#39;vc.101" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.13" steps="53"/></proof>
  </goal>
  <goal name="main&#39;vc.102" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.102.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.06" steps="105"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.103" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.46" steps="547"/></proof>
  </goal>
  <goal name="main&#39;vc.104" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.104.0" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="58"/></proof>
   </goal>
   <goal name="main&#39;vc.104.1" expl="VC for main" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.19" steps="361"/></proof>
   </goal>
   <goal name="main&#39;vc.104.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="285"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.105" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.105.0" expl="VC for main" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.16" steps="372"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.106" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="main&#39;vc.107" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.48" steps="88159"/></proof>
  </goal>
  <goal name="main&#39;vc.108" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.31" steps="397"/></proof>
  </goal>
  <goal name="main&#39;vc.109" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.109.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="61"/></proof>
   </goal>
   <goal name="main&#39;vc.109.1" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.18" steps="164"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.110" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.48" steps="64488"/></proof>
  </goal>
  <goal name="main&#39;vc.111" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.111.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.33" steps="442"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.112" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.112.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="44"/></proof>
   </goal>
   <goal name="main&#39;vc.112.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="248"/></proof>
   </goal>
   <goal name="main&#39;vc.112.2" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.42" steps="59760"/></proof>
   </goal>
   <goal name="main&#39;vc.112.3" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="155"/></proof>
   </goal>
   <goal name="main&#39;vc.112.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="44"/></proof>
   </goal>
   <goal name="main&#39;vc.112.5" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.06" steps="44"/></proof>
   </goal>
   <goal name="main&#39;vc.112.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="44"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.113" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="62"/></proof>
  </goal>
  <goal name="main&#39;vc.114" expl="liveness" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.06" steps="45"/></proof>
  </goal>
  <goal name="main&#39;vc.115" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.06" steps="43"/></proof>
  </goal>
  <goal name="main&#39;vc.116" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="23692"/></proof>
  </goal>
  <goal name="main&#39;vc.117" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.14" steps="40470"/></proof>
  </goal>
  <goal name="main&#39;vc.118" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="51"/></proof>
  </goal>
  <goal name="main&#39;vc.119" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="157"/></proof>
  </goal>
  <goal name="main&#39;vc.120" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="46383"/></proof>
  </goal>
  <goal name="main&#39;vc.121" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="50"/></proof>
  </goal>
  <goal name="main&#39;vc.122" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.122.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.07" steps="80"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.123" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.123.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.15" steps="33715"/></proof>
   </goal>
   <goal name="main&#39;vc.123.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.17" steps="34264"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.124" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.124.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.06" steps="46"/></proof>
   </goal>
   <goal name="main&#39;vc.124.1" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.08" steps="122"/></proof>
   </goal>
   <goal name="main&#39;vc.124.2" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.06" steps="139"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.125" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(th = th1)">
   <goal name="main&#39;vc.125.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="227"/></proof>
   </goal>
   <goal name="main&#39;vc.125.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="5"><result status="valid" time="0.16" steps="41899"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.126" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.126.0" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.24" steps="42575"/></proof>
   </goal>
   <goal name="main&#39;vc.126.1" expl="VC for main" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.14" steps="207"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.127" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.16" steps="25562"/></proof>
  </goal>
  <goal name="main&#39;vc.128" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="main&#39;vc.129" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.129.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="main&#39;vc.129.1" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.09" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.130" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.19" steps="28898"/></proof>
  </goal>
  <goal name="main&#39;vc.131" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="main&#39;vc.132" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.132.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="main&#39;vc.132.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="47"/></proof>
   </goal>
   <goal name="main&#39;vc.132.2" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="43"/></proof>
   </goal>
   <goal name="main&#39;vc.132.3" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="42"/></proof>
   </goal>
   <goal name="main&#39;vc.132.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="66"/></proof>
   </goal>
   <goal name="main&#39;vc.132.5" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
   <goal name="main&#39;vc.132.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="98"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.133" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="30"/></proof>
  </goal>
  <goal name="main&#39;vc.134" expl="liveness" proved="true">
  <proof prover="5"><result status="valid" time="0.14" steps="37173"/></proof>
  </goal>
  <goal name="main&#39;vc.135" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="54838"/></proof>
  </goal>
  <goal name="main&#39;vc.136" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="292"/></proof>
  </goal>
  <goal name="main&#39;vc.137" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="main&#39;vc.138" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.12" steps="33242"/></proof>
  </goal>
  <goal name="main&#39;vc.139" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="52"/></proof>
  </goal>
  <goal name="main&#39;vc.140" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.35" steps="827"/></proof>
  </goal>
  <goal name="main&#39;vc.141" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.08" steps="84"/></proof>
  </goal>
  <goal name="main&#39;vc.142" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="65"/></proof>
  </goal>
  <goal name="main&#39;vc.143" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.143.0" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.20" steps="51349"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.144" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.71" steps="2176"/></proof>
  </goal>
  <goal name="main&#39;vc.145" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.145.0" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="47"/></proof>
   </goal>
   <goal name="main&#39;vc.145.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.65" steps="1879"/></proof>
   </goal>
   <goal name="main&#39;vc.145.2" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.16" steps="36092"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.146" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.28" steps="42962"/></proof>
  </goal>
  <goal name="main&#39;vc.147" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.147.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.12" steps="34382"/></proof>
   </goal>
   <goal name="main&#39;vc.147.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.20" steps="44686"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.148" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="31"/></proof>
  </goal>
  <goal name="main&#39;vc.149" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="135"/></proof>
  </goal>
  <goal name="main&#39;vc.150" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.23" steps="39403"/></proof>
  </goal>
  <goal name="main&#39;vc.151" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.16" steps="29257"/></proof>
  </goal>
  <goal name="main&#39;vc.152" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.09" steps="44"/></proof>
  </goal>
  <goal name="main&#39;vc.153" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.153.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.11" steps="26288"/></proof>
   </goal>
   <goal name="main&#39;vc.153.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="72"/></proof>
   </goal>
   <goal name="main&#39;vc.153.2" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="94"/></proof>
   </goal>
   <goal name="main&#39;vc.153.3" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="70"/></proof>
   </goal>
   <goal name="main&#39;vc.153.4" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.18" steps="34020"/></proof>
   </goal>
   <goal name="main&#39;vc.153.5" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="26314"/></proof>
   </goal>
   <goal name="main&#39;vc.153.6" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="70"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.154" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.13" steps="32"/></proof>
  </goal>
  <goal name="main&#39;vc.155" expl="liveness" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.155.0" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="34245"/></proof>
   </goal>
   <goal name="main&#39;vc.155.1" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.02" steps="32413"/></proof>
   </goal>
   <goal name="main&#39;vc.155.2" expl="liveness" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
   </goal>
   <goal name="main&#39;vc.155.3" expl="liveness" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="33693"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.156" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54838"/></proof>
  </goal>
  <goal name="main&#39;vc.157" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="290"/></proof>
  </goal>
  <goal name="main&#39;vc.158" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="23993"/></proof>
  </goal>
  <goal name="main&#39;vc.159" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.159.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.19" steps="37411"/></proof>
   </goal>
   <goal name="main&#39;vc.159.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.21" steps="37436"/></proof>
   </goal>
   <goal name="main&#39;vc.159.2" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.21" steps="39468"/></proof>
   </goal>
   <goal name="main&#39;vc.159.3" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.23" steps="39548"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.160" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="52"/></proof>
  </goal>
  <goal name="main&#39;vc.161" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.44" steps="907"/></proof>
  </goal>
  <goal name="main&#39;vc.162" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="84"/></proof>
  </goal>
  <goal name="main&#39;vc.163" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="main&#39;vc.164" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.164.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.05" steps="78"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.165" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(th=th1)">
   <goal name="main&#39;vc.165.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="51"/></proof>
   </goal>
   <goal name="main&#39;vc.165.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.52" steps="1021"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.166" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.166.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.14" steps="30117"/></proof>
   </goal>
   <goal name="main&#39;vc.166.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.80" steps="1961"/></proof>
   </goal>
   <goal name="main&#39;vc.166.2" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.16" steps="29685"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.167" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.167.0" expl="VC for main" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="main&#39;vc.167.0.0" expl="VC for main" proved="true">
    <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.11" steps="165"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.168" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="1.01" steps="1364"/></proof>
  </goal>
  <goal name="main&#39;vc.169" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="main&#39;vc.170" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.170.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="137"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.171" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.171.0" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="50"/></proof>
   </goal>
   <goal name="main&#39;vc.171.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="50"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.172" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.12" steps="29257"/></proof>
  </goal>
  <goal name="main&#39;vc.173" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.173.0" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.22" steps="39494"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.174" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.174.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.10" steps="34"/></proof>
   </goal>
   <goal name="main&#39;vc.174.1" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="49"/></proof>
   </goal>
   <goal name="main&#39;vc.174.2" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="45"/></proof>
   </goal>
   <goal name="main&#39;vc.174.3" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="44"/></proof>
   </goal>
   <goal name="main&#39;vc.174.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.10" steps="66"/></proof>
   </goal>
   <goal name="main&#39;vc.174.5" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.11" steps="33"/></proof>
   </goal>
   <goal name="main&#39;vc.174.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="96"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.175" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="30425"/></proof>
  </goal>
  <goal name="main&#39;vc.176" expl="liveness" proved="true">
  <proof prover="5"><result status="valid" time="0.12" steps="37531"/></proof>
  </goal>
  <goal name="main&#39;vc.177" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54831"/></proof>
  </goal>
  <goal name="main&#39;vc.178" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="45086"/></proof>
  </goal>
  <goal name="main&#39;vc.179" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="LoopInvariant13">
   <goal name="main&#39;vc.179.0" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="0.05" steps="23141"/></proof>
   </goal>
   <goal name="main&#39;vc.179.1" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="0.11" steps="29640"/></proof>
   </goal>
   <goal name="main&#39;vc.179.2" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="0.10" steps="33140"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.180" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="55111"/></proof>
  </goal>
  <goal name="main&#39;vc.181" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="56446"/></proof>
  </goal>
  <goal name="main&#39;vc.182" expl="safety" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.23" steps="393"/></proof>
  </goal>
  <goal name="main&#39;vc.183" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="29856"/></proof>
  </goal>
  <goal name="main&#39;vc.184" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="63744"/></proof>
  </goal>
  <goal name="main&#39;vc.185" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="256"/></proof>
  </goal>
  <goal name="main&#39;vc.186" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="1.69" steps="1753"/></proof>
  </goal>
  <goal name="main&#39;vc.187" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.28" steps="977"/></proof>
  </goal>
  <goal name="main&#39;vc.188" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="71"/></proof>
  </goal>
  <goal name="main&#39;vc.189" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.03" steps="93"/></proof>
  </goal>
  <goal name="main&#39;vc.190" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.83"/></proof>
  </goal>
  <goal name="main&#39;vc.191" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.191.0" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="53"/></proof>
   </goal>
   <goal name="main&#39;vc.191.1" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.90" steps="2037"/></proof>
   </goal>
   <goal name="main&#39;vc.191.2" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.25" steps="597"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.192" expl="loop invariant preservation" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="0.24" steps="44900"/></proof>
  </goal>
  <goal name="main&#39;vc.193" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.84" steps="1806"/></proof>
  </goal>
  <goal name="main&#39;vc.194" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.13" steps="26091"/></proof>
  </goal>
  <goal name="main&#39;vc.195" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="169"/></proof>
  </goal>
  <goal name="main&#39;vc.196" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="59"/></proof>
  </goal>
  <goal name="main&#39;vc.197" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="main&#39;vc.198" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="6470"/></proof>
  </goal>
  <goal name="main&#39;vc.199" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.199.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="38"/></proof>
   </goal>
   <goal name="main&#39;vc.199.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="80"/></proof>
   </goal>
   <goal name="main&#39;vc.199.2" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="102"/></proof>
   </goal>
   <goal name="main&#39;vc.199.3" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="78"/></proof>
   </goal>
   <goal name="main&#39;vc.199.4" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.04" steps="81"/></proof>
   </goal>
   <goal name="main&#39;vc.199.5" expl="loop invariant preservation" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="0.05" steps="37"/></proof>
   </goal>
   <goal name="main&#39;vc.199.6" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.03" steps="52811"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.200" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="36"/></proof>
  </goal>
  <goal name="main&#39;vc.201" expl="liveness" proved="true">
  <proof prover="5"><result status="valid" time="0.14" steps="42369"/></proof>
  </goal>
  <goal name="main&#39;vc.202" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54831"/></proof>
  </goal>
  <goal name="main&#39;vc.203" expl="unreachable point" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="75"/></proof>
  </goal>
  <goal name="main&#39;vc.204" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="45489"/></proof>
  </goal>
  <goal name="main&#39;vc.205" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.205.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="54630"/></proof>
   </goal>
   <goal name="main&#39;vc.205.1" expl="VC for main" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="69631"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.206" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="72"/></proof>
  </goal>
  <goal name="main&#39;vc.207" expl="assertion" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.90" steps="596"/></proof>
  </goal>
  <goal name="main&#39;vc.208" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="56651"/></proof>
  </goal>
  <goal name="main&#39;vc.209" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="62841"/></proof>
  </goal>
  <goal name="main&#39;vc.210" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="58066"/></proof>
  </goal>
  <goal name="main&#39;vc.211" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="59078"/></proof>
  </goal>
  <goal name="main&#39;vc.212" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.212.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="53"/></proof>
   </goal>
   <goal name="main&#39;vc.212.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="45"/></proof>
   </goal>
   <goal name="main&#39;vc.212.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
   </goal>
   <goal name="main&#39;vc.212.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="45"/></proof>
   </goal>
   <goal name="main&#39;vc.212.4" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.213" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.213.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="269"/></proof>
   </goal>
   <goal name="main&#39;vc.213.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.24" steps="39564"/></proof>
   </goal>
   <goal name="main&#39;vc.213.2" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="59"/></proof>
   </goal>
   <goal name="main&#39;vc.213.3" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="548"/></proof>
   </goal>
   <goal name="main&#39;vc.213.4" expl="VC for main" proved="true">
   <proof prover="0"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="main&#39;vc.213.5" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.03" steps="55"/></proof>
   </goal>
   <goal name="main&#39;vc.213.6" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="55"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.214" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.214.0" expl="VC for main" proved="true">
   <transf name="replace" proved="true" arg1="memo[th&#39;]&#39;" arg2="memo1[th&#39;]&#39;" arg3="in" arg4="H">
    <goal name="main&#39;vc.214.0.0" expl="VC for main" proved="true">
    <proof prover="5"><result status="valid" time="0.20" steps="42787"/></proof>
    </goal>
    <goal name="main&#39;vc.214.0.1" expl="equality hypothesis" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="112"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="main&#39;vc.214.1" expl="VC for main" proved="true">
   <transf name="assert" proved="true" arg1="(memo1[th]&#39; &lt;&gt; memo1[th&#39;]&#39;)">
    <goal name="main&#39;vc.214.1.0" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="0.54" steps="80333"/></proof>
    </goal>
    <goal name="main&#39;vc.214.1.1" expl="VC for main" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="121"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="main&#39;vc.214.2" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.08" steps="33258"/></proof>
   </goal>
   <goal name="main&#39;vc.214.3" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.16" steps="24669"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.215" expl="safety" proved="true">
  <proof prover="4"><result status="valid" time="1.66" steps="1183"/></proof>
  </goal>
  <goal name="main&#39;vc.216" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="55435"/></proof>
  </goal>
  <goal name="main&#39;vc.217" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(b = x.b1)">
   <goal name="main&#39;vc.217.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="113"/></proof>
   </goal>
   <goal name="main&#39;vc.217.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="replace" proved="true" arg1="owners[b]&#39;" arg2="owners1[b]&#39;">
    <goal name="main&#39;vc.217.1.0" expl="false case (loop invariant preservation)" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="main&#39;vc.217.1.0.0" expl="VC for main" proved="true">
     <proof prover="5"><result status="valid" time="0.29" steps="43652"/></proof>
     </goal>
     <goal name="main&#39;vc.217.1.0.1" expl="VC for main" proved="true">
     <proof prover="5"><result status="valid" time="0.30" steps="43677"/></proof>
     </goal>
     <goal name="main&#39;vc.217.1.0.2" expl="VC for main" proved="true">
     <proof prover="4" memlimit="2000"><result status="valid" time="3.04" steps="1826"/></proof>
     </goal>
     <goal name="main&#39;vc.217.1.0.3" expl="VC for main" proved="true">
     <transf name="assert" proved="true" arg1="(x1 &lt;&gt; th)">
      <goal name="main&#39;vc.217.1.0.3.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.08" steps="116"/></proof>
      </goal>
      <goal name="main&#39;vc.217.1.0.3.1" expl="VC for main" proved="true">
      <transf name="replace" proved="true" arg1="memo[x1]&#39;" arg2="memo1[x1]&#39;" arg3="in" arg4="H">
       <goal name="main&#39;vc.217.1.0.3.1.0" expl="VC for main" proved="true">
       <proof prover="5"><result status="valid" time="0.38" steps="74126"/></proof>
       </goal>
       <goal name="main&#39;vc.217.1.0.3.1.1" expl="equality hypothesis" proved="true">
       <proof prover="2"><result status="valid" time="0.05" steps="118"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="main&#39;vc.217.1.1" expl="equality hypothesis" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="112"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.218" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="main&#39;vc.219" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.06" steps="47"/></proof>
  </goal>
  <goal name="main&#39;vc.220" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="67598"/></proof>
  </goal>
  <goal name="main&#39;vc.221" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="main&#39;vc.222" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.222.0" expl="VC for main" proved="true">
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="4.23" steps="1305"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.223" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(th=th1)">
   <goal name="main&#39;vc.223.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="311"/></proof>
   </goal>
   <goal name="main&#39;vc.223.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="4" memlimit="2000"><result status="valid" time="1.50" steps="1873"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.224" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.224.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.90" steps="886"/></proof>
   </goal>
   <goal name="main&#39;vc.224.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.19" steps="49551"/></proof>
   </goal>
   <goal name="main&#39;vc.224.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.58" steps="1085"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.225" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="590"/></proof>
  </goal>
  <goal name="main&#39;vc.226" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.226.0" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.18" steps="45516"/></proof>
   </goal>
   <goal name="main&#39;vc.226.1" expl="VC for main" proved="true">
   <proof prover="5"><result status="valid" time="0.22" steps="46916"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.227" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="main&#39;vc.228" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.10" steps="298"/></proof>
  </goal>
  <goal name="main&#39;vc.229" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="main&#39;vc.229.0" expl="VC for main" proved="true">
   <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.03" steps="68"/></proof>
   </goal>
   <goal name="main&#39;vc.229.1" expl="VC for main" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="68"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.230" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="5680"/></proof>
  </goal>
  <goal name="main&#39;vc.231" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="6734"/></proof>
  </goal>
  <goal name="main&#39;vc.232" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="main&#39;vc.232.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="main&#39;vc.232.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.08" steps="48"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="main&#39;vc.232.1" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.09" steps="161943"/></proof>
   </goal>
   <goal name="main&#39;vc.232.2" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.12" steps="113"/></proof>
   </goal>
   <goal name="main&#39;vc.232.3" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.12" steps="111"/></proof>
   </goal>
   <goal name="main&#39;vc.232.4" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="main&#39;vc.232.4.0" expl="loop invariant preservation" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.04" steps="67"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="main&#39;vc.232.5" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="main&#39;vc.232.5.0" expl="loop invariant preservation" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="0.05" steps="49"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="main&#39;vc.232.6" expl="loop invariant preservation" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="64"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main&#39;vc.233" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="main&#39;vc.234" expl="liveness" proved="true">
  <proof prover="4" memlimit="2000"><result status="valid" time="1.54" steps="733"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
