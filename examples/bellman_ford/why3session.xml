<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="bellman_ford.mlw"/>
<theory name="Graph" proved="true">
 <goal name="vertices_cardinal_pos" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="5"/></proof>
 </goal>
 <goal name="path_in_vertices" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
 </goal>
 <goal name="long_path_decomposition" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="long_path_decomposition.0" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="797"/></proof>
  </goal>
  <goal name="long_path_decomposition.1" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="541"/></proof>
  </goal>
  <goal name="long_path_decomposition.2" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="488"/></proof>
  </goal>
  <goal name="long_path_decomposition.3" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="454"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="long_path_reduction" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="long_path_reduction.0" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="long_path_reduction.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="long_path_reduction.2" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="simple_path&#39;vc" expl="VC for simple_path" proved="true">
 <proof prover="1"><result status="valid" time="0.87" steps="2569"/></proof>
 </goal>
 <goal name="key_lemma_1&#39;vc" expl="VC for key_lemma_1" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="key_lemma_1&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="key_lemma_1&#39;vc.0.0" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.1" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.13" steps="247"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.2" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.33" steps="733"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.3" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="25"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.4" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="100"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.5" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.09" steps="28"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.6" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.09" steps="39"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.7" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.27" steps="726"/></proof>
   </goal>
   <goal name="key_lemma_1&#39;vc.0.8" expl="VC for key_lemma_1" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="key_lemma_1&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="key_lemma_1&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="key_lemma_1&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="key_lemma_1&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
  <goal name="key_lemma_1&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="4"/></proof>
  </goal>
  <goal name="key_lemma_1&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="key_lemma_1&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BellmanFord" proved="true">
 <goal name="initialize_single_source&#39;vc" expl="VC for initialize_single_source" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="inv2_path&#39;vc" expl="VC for inv2_path" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="inv2_path&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
  <goal name="inv2_path&#39;vc.1" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="345"/></proof>
  </goal>
  <goal name="inv2_path&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="inv2_path&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="inv2_path&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.22" steps="595"/></proof>
  </goal>
  <goal name="inv2_path&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="inv2_path&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="130"/></proof>
   </goal>
   <goal name="inv2_path&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="inv2_path&#39;vc.5.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.09" steps="323"/></proof>
    </goal>
    <goal name="inv2_path&#39;vc.5.1.1" expl="postcondition" proved="true">
    <proof prover="1" timelimit="5"><result status="valid" time="1.38" steps="5571"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="key_lemma_2" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="key_lemma_2.0" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.62" steps="1604"/></proof>
  </goal>
  <goal name="key_lemma_2.1" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="key_lemma_2.2" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="key_lemma_2.3" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="relax&#39;vc" expl="VC for relax" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="relax&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="relax&#39;vc.0.0" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="58"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.1" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="69"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.2" expl="VC for relax" proved="true">
   <proof prover="0"><result status="valid" time="1.84"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.3" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="117"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.4" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="221"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.5" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.07" steps="265"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.6" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.12" steps="486"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.7" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.13" steps="393"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.8" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.9" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="27"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.10" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="158"/></proof>
   </goal>
   <goal name="relax&#39;vc.0.11" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="233"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="relax&#39;vc.1" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="relax&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="relax&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="introduce_premises" proved="true" >
     <goal name="relax&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(v=v1)">
      <goal name="relax&#39;vc.1.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="split_goal_right" proved="true" >
       <goal name="relax&#39;vc.1.0.0.0.0.0" expl="VC for relax" proved="true">
       <proof prover="1"><result status="valid" time="0.04" steps="108"/></proof>
       </goal>
       <goal name="relax&#39;vc.1.0.0.0.0.1" expl="VC for relax" proved="true">
       <proof prover="1"><result status="valid" time="0.15" steps="448"/></proof>
       </goal>
       <goal name="relax&#39;vc.1.0.0.0.0.2" expl="VC for relax" proved="true">
       <proof prover="1" timelimit="5"><result status="valid" time="1.02" steps="3180"/></proof>
       </goal>
       <goal name="relax&#39;vc.1.0.0.0.0.3" expl="VC for relax" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="99"/></proof>
       </goal>
       <goal name="relax&#39;vc.1.0.0.0.0.4" expl="VC for relax" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="107"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="relax&#39;vc.1.0.0.0.1" expl="false case (postcondition)" proved="true">
      <proof prover="1"><result status="valid" time="0.36" steps="1193"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="relax&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="relax&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="101"/></proof>
   </goal>
   <goal name="relax&#39;vc.2.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.09" steps="269"/></proof>
   </goal>
   <goal name="relax&#39;vc.2.2" expl="VC for relax" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="183"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="relax&#39;vc.3" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="relax&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="relax&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="split_goal_right" proved="true" >
     <goal name="relax&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.05" steps="89"/></proof>
     </goal>
     <goal name="relax&#39;vc.3.0.0.1" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.09" steps="181"/></proof>
     </goal>
     <goal name="relax&#39;vc.3.0.0.2" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.09" steps="390"/></proof>
     </goal>
     <goal name="relax&#39;vc.3.0.0.3" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.04" steps="124"/></proof>
     </goal>
     <goal name="relax&#39;vc.3.0.0.4" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.69" steps="2241"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bellman_ford&#39;vc" expl="VC for bellman_ford" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="bellman_ford&#39;vc.0" expl="loop invariant init" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="bellman_ford&#39;vc.0.0" expl="loop invariant init" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="bellman_ford&#39;vc.0.0.0" expl="loop invariant init" proved="true">
    <transf name="split_goal_right" proved="true" >
     <goal name="bellman_ford&#39;vc.0.0.0.0" expl="loop invariant init" proved="true">
     <proof prover="0"><result status="valid" time="0.58"/></proof>
     </goal>
     <goal name="bellman_ford&#39;vc.0.0.0.1" expl="loop invariant init" proved="true">
     <proof prover="1"><result status="valid" time="0.02" steps="76"/></proof>
     </goal>
     <goal name="bellman_ford&#39;vc.0.0.0.2" expl="loop invariant init" proved="true">
     <proof prover="1"><result status="valid" time="0.07" steps="100"/></proof>
     </goal>
     <goal name="bellman_ford&#39;vc.0.0.0.3" expl="loop invariant init" proved="true">
     <proof prover="1"><result status="valid" time="0.02" steps="78"/></proof>
     </goal>
     <goal name="bellman_ford&#39;vc.0.0.0.4" expl="loop invariant init" proved="true">
     <proof prover="1"><result status="valid" time="0.06" steps="82"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bellman_ford&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="161"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="25"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.5" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="41"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.6" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="bellman_ford&#39;vc.6.0" expl="VC for bellman_ford" proved="true">
   <proof prover="3"><result status="valid" time="0.10" steps="31467"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.6.1" expl="VC for bellman_ford" proved="true">
   <proof prover="2"><result status="valid" time="0.99" steps="7429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bellman_ford&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.04" steps="144"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="1052"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.9" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="7"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="29"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.12" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="bellman_ford&#39;vc.12.0" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="109"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.1" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.07" steps="193"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.2" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="117"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.3" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.32" steps="1018"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.4" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="27"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.5" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="175"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.6" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.20" steps="693"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.7" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.14" steps="205"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.8" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.08" steps="29"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.9" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.21" steps="728"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.12.10" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="199"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bellman_ford&#39;vc.13" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="1001"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="20"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.17" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="157"/></proof>
  </goal>
  <goal name="bellman_ford&#39;vc.18" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="bellman_ford&#39;vc.18.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="114"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.18.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.32" steps="1175"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.18.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="115"/></proof>
   </goal>
   <goal name="bellman_ford&#39;vc.18.3" expl="VC for bellman_ford" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bellman_ford&#39;vc.19" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
