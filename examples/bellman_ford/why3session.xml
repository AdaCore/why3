<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Coq" version="8.7.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="15" steplimit="0" memlimit="0"/>
<prover id="4" name="Spass" version="3.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="3.2" timelimit="15" steplimit="0" memlimit="0"/>
<prover id="7" name="Vampire" version="0.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="Alt-Ergo" version="0.99.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="10" name="Z3" version="4.3.2" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="11" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../bellman_ford.mlw" proved="true">
<theory name="Graph" proved="true">
 <goal name="vertices_cardinal_pos" proved="true">
 <proof prover="8" timelimit="10" memlimit="0"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
 <goal name="path_in_vertices" proved="true">
 <proof prover="0" timelimit="10" memlimit="0" edited="bf_Graph_path_in_vertices_2.v"><result status="valid" time="0.35"/></proof>
 </goal>
 <goal name="long_path_decomposition_pigeon1" proved="true">
 <proof prover="0" timelimit="8" edited="bellman_ford_Graph_long_path_decomposition_pigeon1_1.v"><result status="valid" time="0.90"/></proof>
 </goal>
 <goal name="long_path_decomposition_pigeon2" proved="true">
 <proof prover="8"><result status="valid" time="0.06" steps="42"/></proof>
 </goal>
 <goal name="long_path_decomposition_pigeon3" proved="true">
 <proof prover="0" timelimit="7" edited="bellman_ford_Graph_long_path_decomposition_pigeon3_1.v"><result status="valid" time="1.07"/></proof>
 </goal>
 <goal name="long_path_decomposition" proved="true">
 <proof prover="0" edited="bellman_ford_Graph_long_path_decomposition_1.v"><result status="valid" time="0.86"/></proof>
 </goal>
 <goal name="simple_path" proved="true">
 <proof prover="0" timelimit="10" memlimit="0" edited="bf_Graph_simple_path_1.v"><result status="valid" time="1.23"/></proof>
 </goal>
 <goal name="key_lemma_1" proved="true">
 <proof prover="0" timelimit="10" memlimit="0" edited="bf_Graph_key_lemma_1_1.v"><result status="valid" time="1.69"/></proof>
 </goal>
</theory>
<theory name="BellmanFord" proved="true">
 <goal name="key_lemma_2" proved="true">
 <proof prover="0" memlimit="4000" edited="bf_WP_BellmanFord_key_lemma_2_1.v"><result status="valid" time="2.76"/></proof>
 </goal>
 <goal name="WP_parameter relax" expl="VC for relax" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter relax.0" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter relax.0.0" expl="postcondition" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter relax.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="10" memlimit="0" edited="bf_WP_BellmanFord_WP_parameter_relax_7.v"><result status="valid" time="1.00"/></proof>
    </goal>
    <goal name="WP_parameter relax.0.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.22"/></proof>
    </goal>
    <goal name="WP_parameter relax.0.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.34"/></proof>
    </goal>
    <goal name="WP_parameter relax.0.0.3" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.23"/></proof>
    <proof prover="8" timelimit="18" memlimit="0"><result status="valid" time="0.14" steps="227"/></proof>
    </goal>
    <goal name="WP_parameter relax.0.0.4" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.44"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter relax.1" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter relax.1.0" expl="postcondition" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter relax.1.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.12"/></proof>
    <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.04" steps="110"/></proof>
    </goal>
    <goal name="WP_parameter relax.1.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.18"/></proof>
    <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.46" steps="809"/></proof>
    </goal>
    <goal name="WP_parameter relax.1.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.31"/></proof>
    </goal>
    <goal name="WP_parameter relax.1.0.3" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.08"/></proof>
    <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.07" steps="189"/></proof>
    </goal>
    <goal name="WP_parameter relax.1.0.4" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter bellman_ford" expl="VC for bellman_ford" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="WP_parameter bellman_ford.0" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter bellman_ford.0.0" expl="assertion" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter bellman_ford.0.0.0" expl="assertion" proved="true">
    <proof prover="4"><result status="valid" time="2.66"/></proof>
    <proof prover="7"><result status="valid" time="0.16"/></proof>
    <proof prover="11"><result status="valid" time="0.11"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.0.0.1" expl="assertion" proved="true">
    <proof prover="8"><result status="valid" time="0.03" steps="48"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.0.0.2" expl="assertion" proved="true">
    <proof prover="8"><result status="valid" time="0.03" steps="43"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.0.0.3" expl="assertion" proved="true">
    <proof prover="8"><result status="valid" time="0.03" steps="53"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.0.0.4" expl="assertion" proved="true">
    <proof prover="8"><result status="valid" time="0.03" steps="35"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.1" expl="loop invariant init" proved="true">
  <proof prover="8"><result status="valid" time="0.03" steps="41"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.2" expl="precondition" proved="true">
  <proof prover="8" timelimit="10" memlimit="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.3" expl="exceptional postcondition" proved="true">
  <proof prover="0" edited="bf_WP_BellmanFord_WP_parameter_bellman_ford_20.v"><result status="valid" time="1.25"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.4" expl="loop invariant preservation" proved="true">
  <proof prover="8"><result status="valid" time="0.96" steps="676"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.5" expl="loop variant decrease" proved="true">
  <proof prover="8" timelimit="10" memlimit="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.6" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.06" steps="86"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.7" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="WP_parameter bellman_ford.7.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   <proof prover="8"><result status="valid" time="0.06" steps="83"/></proof>
   <proof prover="10"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="WP_parameter bellman_ford.7.1" expl="postcondition" proved="true">
   <proof prover="2" timelimit="30"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter bellman_ford.7.2" expl="postcondition" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="0.04"/></proof>
   <proof prover="10"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.8" expl="loop invariant init" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter bellman_ford.8.0" expl="loop invariant init" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter bellman_ford.8.0.0" expl="loop invariant init" proved="true">
    <proof prover="7"><result status="valid" time="0.16"/></proof>
    <proof prover="11"><result status="valid" time="0.12"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.8.0.1" expl="loop invariant init" proved="true">
    <proof prover="8"><result status="valid" time="0.03" steps="43"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.8.0.2" expl="loop invariant init" proved="true">
    <proof prover="8"><result status="valid" time="0.03" steps="30"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.8.0.3" expl="loop invariant init" proved="true">
    <proof prover="8"><result status="valid" time="0.03" steps="60"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.8.0.4" expl="loop invariant init" proved="true">
    <proof prover="8"><result status="valid" time="0.04" steps="59"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.9" expl="loop invariant init" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="WP_parameter bellman_ford.9.0" expl="VC for bellman_ford" proved="true">
   <proof prover="8" timelimit="10"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="WP_parameter bellman_ford.9.1" expl="VC for bellman_ford" proved="true">
   <proof prover="8" timelimit="10"><result status="valid" time="0.13" steps="140"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.10" expl="precondition" proved="true">
  <proof prover="8" timelimit="10" memlimit="0"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.12" expl="precondition" proved="true">
  <proof prover="8" timelimit="15"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.13" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="WP_parameter bellman_ford.13.0" expl="VC for bellman_ford" proved="true">
   <proof prover="8"><result status="valid" time="0.02" steps="25"/></proof>
   </goal>
   <goal name="WP_parameter bellman_ford.13.1" expl="VC for bellman_ford" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="WP_parameter bellman_ford.13.1.0" expl="VC for bellman_ford" proved="true">
    <transf name="split_goal_wp" proved="true" >
     <goal name="WP_parameter bellman_ford.13.1.0.0" expl="VC for bellman_ford" proved="true">
     <proof prover="2" timelimit="30" memlimit="1000"><result status="valid" time="0.35"/></proof>
     <proof prover="8" timelimit="10"><result status="valid" time="0.48" steps="858"/></proof>
     </goal>
     <goal name="WP_parameter bellman_ford.13.1.0.1" expl="VC for bellman_ford" proved="true">
     <proof prover="2" timelimit="5" memlimit="1000"><result status="valid" time="0.55"/></proof>
     <proof prover="8" timelimit="10"><result status="valid" time="3.33" steps="5046"/></proof>
     </goal>
     <goal name="WP_parameter bellman_ford.13.1.0.2" expl="VC for bellman_ford" proved="true">
     <proof prover="2" memlimit="1000"><result status="valid" time="12.89"/></proof>
     </goal>
     <goal name="WP_parameter bellman_ford.13.1.0.3" expl="VC for bellman_ford" proved="true">
     <proof prover="2" timelimit="33" memlimit="1000"><result status="valid" time="0.13"/></proof>
     <proof prover="8" timelimit="10"><result status="valid" time="1.79" steps="2890"/></proof>
     </goal>
     <goal name="WP_parameter bellman_ford.13.1.0.4" expl="VC for bellman_ford" proved="true">
     <proof prover="2" memlimit="1000"><result status="valid" time="7.93"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.14" expl="loop variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.15" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter bellman_ford.15.0" expl="assertion" proved="true">
   <proof prover="8" timelimit="54"><result status="valid" time="2.72" steps="1147"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.16" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="WP_parameter bellman_ford.16.0" expl="loop invariant preservation" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="WP_parameter bellman_ford.16.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="8"><result status="valid" time="0.16" steps="222"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.16.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="0" timelimit="30" edited="bf_WP_BellmanFord_WP_parameter_bellman_ford_17.v"><result status="valid" time="1.57"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.16.0.2" expl="loop invariant preservation" proved="true">
    <proof prover="2" timelimit="5" memlimit="1000"><result status="valid" time="0.04"/></proof>
    <proof prover="5" timelimit="5" memlimit="1000"><result status="valid" time="0.04"/></proof>
    <proof prover="8"><result status="valid" time="0.07" steps="43"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.16.0.3" expl="loop invariant preservation" proved="true">
    <proof prover="0" timelimit="30" edited="bf_WP_BellmanFord_WP_parameter_bellman_ford_18.v"><result status="valid" time="1.16"/></proof>
    </goal>
    <goal name="WP_parameter bellman_ford.16.0.4" expl="loop invariant preservation" proved="true">
    <proof prover="8" timelimit="15"><result status="valid" time="0.04" steps="32"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.17" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.02" steps="7"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.18" expl="loop invariant init" proved="true">
  <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.06" steps="36"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.20" expl="exceptional postcondition" proved="true">
  <proof prover="0" edited="bf_WP_BellmanFord_WP_parameter_bellman_ford_15.v"><result status="valid" time="1.44"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.21" expl="loop invariant preservation" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="WP_parameter bellman_ford.21.0" expl="VC for bellman_ford" proved="true">
   <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="WP_parameter bellman_ford.21.1" expl="VC for bellman_ford" proved="true">
   <proof prover="8" timelimit="31" memlimit="0"><result status="valid" time="0.23" steps="287"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter bellman_ford.22" expl="loop variant decrease" proved="true">
  <proof prover="8" timelimit="10" memlimit="0"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.23" expl="assertion" proved="true">
  <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.06" steps="73"/></proof>
  </goal>
  <goal name="WP_parameter bellman_ford.24" expl="postcondition" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="WP_parameter bellman_ford.24.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13"/></proof>
   <proof prover="5"><result status="valid" time="0.03"/></proof>
   <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.11" steps="69"/></proof>
   </goal>
   <goal name="WP_parameter bellman_ford.24.1" expl="postcondition" proved="true">
   <proof prover="0" edited="bf_WP_BellmanFord_WP_parameter_bellman_ford_19.v"><result status="valid" time="0.84"/></proof>
   </goal>
   <goal name="WP_parameter bellman_ford.24.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   <proof prover="5"><result status="valid" time="0.03"/></proof>
   <proof prover="8" timelimit="15" memlimit="0"><result status="valid" time="0.82" steps="1157"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
