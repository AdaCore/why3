<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.13.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.12.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="string_search.mlw"/>
<theory name="Occurs" proved="true">
 <goal name="occurs&#39;vc" expl="VC for occurs" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="occurs&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.031848" steps="13117"/></proof>
  </goal>
  <goal name="occurs&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.015037" steps="1316"/></proof>
  </goal>
  <goal name="occurs&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.046367" steps="5119"/></proof>
  </goal>
  <goal name="occurs&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.038416" steps="5152"/></proof>
  </goal>
  <goal name="occurs&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.016733" steps="17077"/></proof>
  </goal>
  <goal name="occurs&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.034906" steps="35"/></proof>
  </goal>
  <goal name="occurs&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.044368" steps="342"/></proof>
  </goal>
  <goal name="occurs&#39;vc.7" expl="loop invariant preservation" proved="true">
  <transf name="rewrite" proved="true" arg1="&lt;-" arg2="concat_substring">
   <goal name="occurs&#39;vc.7.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.159511" steps="2130"/></proof>
   </goal>
   <goal name="occurs&#39;vc.7.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.027231" steps="37"/></proof>
   </goal>
   <goal name="occurs&#39;vc.7.2" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.037664" steps="4913"/></proof>
   </goal>
   <goal name="occurs&#39;vc.7.3" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="0.061915" steps="7648"/></proof>
   </goal>
   <goal name="occurs&#39;vc.7.4" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="0.038934" steps="7439"/></proof>
   </goal>
   <goal name="occurs&#39;vc.7.5" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.026308" steps="17527"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="occurs&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.107428" steps="13091"/></proof>
  </goal>
  <goal name="occurs&#39;vc.9" expl="VC for occurs" proved="true">
  <proof prover="5"><result status="valid" time="0.035432" steps="7487"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Naive" proved="true">
 <goal name="search1&#39;vc" expl="VC for search1" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="search1&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.050885" steps="8011"/></proof>
  </goal>
  <goal name="search1&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.049041" steps="4742"/></proof>
  </goal>
  <goal name="search1&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.056286" steps="7513"/></proof>
  </goal>
  <goal name="search1&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.043016" steps="5174"/></proof>
  </goal>
  <goal name="search1&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.043423" steps="7884"/></proof>
  </goal>
  <goal name="search1&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.081396" steps="6676"/></proof>
  </goal>
  <goal name="search1&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.072132" steps="4988"/></proof>
  </goal>
  <goal name="search1&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.086482" steps="9454"/></proof>
  </goal>
  <goal name="search1&#39;vc.8" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.042799" steps="5122"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="search2&#39;vc" expl="VC for search2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="search2&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.055811" steps="5347"/></proof>
  </goal>
  <goal name="search2&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.026770" steps="24"/></proof>
  </goal>
  <goal name="search2&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="search2&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.015554" steps="1288"/></proof>
   </goal>
   <goal name="search2&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.047415" steps="7493"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="search2&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.068777" steps="7558"/></proof>
  </goal>
  <goal name="search2&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="search2&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.041654" steps="7558"/></proof>
   </goal>
   <goal name="search2&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="unfold" proved="true" arg1="matches">
    <goal name="search2&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="search2&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.031163" steps="16182"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="search2&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.047437" steps="19472"/></proof>
  </goal>
  <goal name="search2&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.052475" steps="6124"/></proof>
  </goal>
  <goal name="search2&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.050277" steps="7433"/></proof>
  </goal>
  <goal name="search2&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.034244" steps="20997"/></proof>
  </goal>
  <goal name="search2&#39;vc.9" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.017813" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BadShiftTable" proved="true">
 <goal name="bad_shift_table&#39;vc" expl="VC for bad_shift_table" proved="true">
 <proof prover="4"><result status="valid" time="0.033032" steps="56819"/></proof>
 </goal>
 <goal name="make_table&#39;vc" expl="VC for make_table" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="make_table&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.069326" steps="11438"/></proof>
  </goal>
  <goal name="make_table&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.022247" steps="21"/></proof>
  </goal>
  <goal name="make_table&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.035493" steps="149"/></proof>
  </goal>
  <goal name="make_table&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.039725" steps="55"/></proof>
  </goal>
  <goal name="make_table&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.117764" steps="19458"/></proof>
  </goal>
  <goal name="make_table&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.037955" steps="25"/></proof>
  </goal>
  <goal name="make_table&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.038861" steps="165"/></proof>
  </goal>
  <goal name="make_table&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.134600" steps="311"/></proof>
  </goal>
  <goal name="make_table&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.127670" steps="14593"/></proof>
  </goal>
  <goal name="make_table&#39;vc.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.034046" steps="67391"/></proof>
  </goal>
  <goal name="make_table&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.026953" steps="44"/></proof>
  </goal>
  <goal name="make_table&#39;vc.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.035598" steps="70034"/></proof>
  </goal>
  <goal name="make_table&#39;vc.12" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.040238" steps="19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="shift&#39;vc" expl="VC for shift" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shift&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.039957" steps="60881"/></proof>
  </goal>
  <goal name="shift&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.143545" steps="528"/></proof>
  </goal>
  <goal name="shift&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.046974" steps="60095"/></proof>
  </goal>
  <goal name="shift&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="shift&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.045130" steps="41"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="no_shift&#39;vc" expl="VC for no_shift" proved="true">
 <proof prover="0"><result status="valid" time="0.343320" steps="37128"/></proof>
 </goal>
 <goal name="search&#39;vc" expl="VC for search" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="search&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.036138" steps="23"/></proof>
  </goal>
  <goal name="search&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.035271" steps="27"/></proof>
  </goal>
  <goal name="search&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.086968" steps="18888"/></proof>
  </goal>
  <goal name="search&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.104668" steps="17843"/></proof>
  </goal>
  <goal name="search&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.035215" steps="33"/></proof>
  </goal>
  <goal name="search&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.083787" steps="18050"/></proof>
  </goal>
  <goal name="search&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.028666" steps="49"/></proof>
  </goal>
  <goal name="search&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.088513" steps="12175"/></proof>
  </goal>
  <goal name="search&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.121131" steps="14411"/></proof>
  </goal>
  <goal name="search&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.041545" steps="72699"/></proof>
  </goal>
  <goal name="search&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.069359" steps="12372"/></proof>
  </goal>
  <goal name="search&#39;vc.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.052961" steps="74693"/></proof>
  </goal>
  <goal name="search&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.028371" steps="44"/></proof>
  </goal>
  <goal name="search&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.055467" steps="12382"/></proof>
  </goal>
  <goal name="search&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="search&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.022251" steps="5483"/></proof>
   </goal>
   <goal name="search&#39;vc.14.1" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.088784" steps="18764"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="search&#39;vc.15" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.129881" steps="18925"/></proof>
  </goal>
  <goal name="search&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.034121" steps="93"/></proof>
  </goal>
  <goal name="search&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.157758" steps="14487"/></proof>
  </goal>
  <goal name="search&#39;vc.18" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.066340" steps="151"/></proof>
  </goal>
  <goal name="search&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.090619" steps="14554"/></proof>
  </goal>
  <goal name="search&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.165533" steps="23272"/></proof>
  </goal>
  <goal name="search&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.044995" steps="31"/></proof>
  </goal>
  <goal name="search&#39;vc.22" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="search&#39;vc.22.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.035692" steps="120"/></proof>
   </goal>
   <goal name="search&#39;vc.22.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.068892" steps="17683"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
