<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="0.99.1" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="1" name="Coq" version="8.4pl6" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="3" name="CVC4" version="1.4" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="4" name="Alt-Ergo" version="1.01" timelimit="5" steplimit="1" memlimit="1000"/>
<prover id="5" name="Z3" version="3.2" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="7" name="Vampire" version="0.6" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="8" name="Eprover" version="1.8-001" timelimit="5" steplimit="1" memlimit="4000"/>
<prover id="10" name="Z3" version="4.3.2" timelimit="5" steplimit="1" memlimit="4000"/>
<file name="../verifythis_fm2012_treedel.mlw" expanded="true">
<theory name="Memory" sum="728d43b1ae0d56a2cc216f80e60d83fa">
 <goal name="VC null" expl="VC for null">
 <proof prover="4"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC get_left" expl="VC for get_left">
 <proof prover="4"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC get_right" expl="VC for get_right">
 <proof prover="4"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC get_data" expl="VC for get_data">
 <proof prover="4"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Treedel" sum="b83d1ded3f7afd059e3f83c0e140d07e" expanded="true">
 <goal name="inorder_zip">
 <transf name="induction_ty_lex">
  <goal name="inorder_zip.1" expl="1.">
  <transf name="split_goal_wp">
   <goal name="inorder_zip.1.1" expl="1.">
   <proof prover="0" obsolete="true"><result status="valid" time="0.01" steps="5"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.02"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.03"/></proof>
   <proof prover="4"><result status="valid" time="0.01" steps="2"/></proof>
   <proof prover="5" obsolete="true"><result status="valid" time="0.02"/></proof>
   <proof prover="7" obsolete="true"><result status="valid" time="0.01"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="0.00"/></proof>
   <proof prover="10" obsolete="true"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="inorder_zip.1.2" expl="2.">
   <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="100"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="1.04"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.12"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="85"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC tree_left" expl="VC for tree_left">
 <proof prover="4"><result status="valid" time="0.01" steps="4"/></proof>
 </goal>
 <goal name="VC tree_right" expl="VC for tree_right">
 <proof prover="4"><result status="valid" time="0.01" steps="4"/></proof>
 </goal>
 <goal name="main_lemma" expanded="true">
 <proof prover="1" edited="verifythis_fm2012_treedel_Treedel_main_lemma_1.v" obsolete="true"><result status="valid" time="12.25"/></proof>
 </goal>
 <goal name="VC search_tree_delete_min" expl="VC for search_tree_delete_min" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC search_tree_delete_min.1" expl="1. precondition">
  <proof prover="4"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.2" expl="2. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.3" expl="3. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.4" expl="4. unreachable point">
  <proof prover="4"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.5" expl="5. assertion">
  <proof prover="4"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.6" expl="6. postcondition">
  <proof prover="4"><result status="valid" time="0.08" steps="130"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.7" expl="7. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.8" expl="8. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.9" expl="9. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.10" expl="10. loop invariant init">
  <proof prover="4"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.11" expl="11. loop invariant init">
  <proof prover="4"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.12" expl="12. loop invariant init">
  <proof prover="4"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.13" expl="13. assertion">
  <proof prover="4"><result status="valid" time="0.02" steps="41"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.14" expl="14. precondition">
  <proof prover="4"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.15" expl="15. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.16" expl="16. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.17" expl="17. loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.18" expl="18. loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.19" expl="19. loop invariant preservation">
  <proof prover="4"><result status="valid" time="0.04" steps="135"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.20" expl="20. loop variant decrease">
  <proof prover="4"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.21" expl="21. assertion">
  <proof prover="4"><result status="valid" time="0.01" steps="41"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.22" expl="22. assertion">
  <proof prover="4"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.23" expl="23. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.24" expl="24. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.25" expl="25. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.26" expl="26. precondition">
  <proof prover="4"><result status="valid" time="0.02" steps="68"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.27" expl="27. assertion">
  <proof prover="4"><result status="valid" time="0.03" steps="138"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.28" expl="28. precondition">
  <proof prover="4"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC search_tree_delete_min.29" expl="29. postcondition" expanded="true">
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
