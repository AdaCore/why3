<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.1.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_fm2012_treedel.mlw"/>
<theory name="Memory" proved="true">
 <goal name="get_left&#39;vc" expl="VC for get_left" proved="true">
 <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
 <goal name="get_right&#39;vc" expl="VC for get_right" proved="true">
 <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
 <goal name="get_data&#39;vc" expl="VC for get_data" proved="true">
 <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
</theory>
<theory name="Treedel" proved="true">
 <goal name="extensionality&#39;vc" expl="VC for extensionality" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="extensionality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="36"/></proof>
  </goal>
  <goal name="extensionality&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="extensionality&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="53"/></proof>
  </goal>
  <goal name="extensionality&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="38"/></proof>
  </goal>
  <goal name="extensionality&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="8"/></proof>
  </goal>
  <goal name="extensionality&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="112"/></proof>
  </goal>
  <goal name="extensionality&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="74"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inorder_zip" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inorder_zip.0" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="89"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="tree_left&#39;vc" expl="VC for tree_left" proved="true">
 <proof prover="0"><result status="valid" time="0.010000" steps="0"/></proof>
 </goal>
 <goal name="tree_right&#39;vc" expl="VC for tree_right" proved="true">
 <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
 <goal name="distinct_break_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="distinct_break_append.0" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="426"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="in_zip_tree&#39;vc" expl="VC for in_zip_tree" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="in_zip_tree&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="in_zip_tree&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="6"/></proof>
  </goal>
  <goal name="in_zip_tree&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="29"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_zip_tree&#39;vc" expl="VC for subst_zip_tree" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_zip_tree&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="12"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="subst_zip_tree&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.020000" steps="15"/></proof>
   </goal>
   <goal name="subst_zip_tree&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.010000" steps="82"/></proof>
   </goal>
   <goal name="subst_zip_tree&#39;vc.1.2" expl="VC for subst_zip_tree" proved="true">
   <proof prover="0"><result status="valid" time="0.010000" steps="132"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subst_zip_tree&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="14"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="76"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="94"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="71"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="22"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="89"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="98"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main_lemma&#39;vc" expl="VC for main_lemma" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="main_lemma&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="4"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="main_lemma&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.020000" steps="43"/></proof>
   </goal>
   <goal name="main_lemma&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.040000" steps="712"/></proof>
   </goal>
   <goal name="main_lemma&#39;vc.1.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.040000" steps="426"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main_lemma&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="62"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="222"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.320000" steps="2202"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="103"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="84"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="217"/></proof>
  </goal>
  <goal name="main_lemma&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="0"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="search_tree_delete_min&#39;vc" expl="VC for search_tree_delete_min" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="search_tree_delete_min&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="8"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="12"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.3" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="22"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.030000"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="0"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="133"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="22"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.070000" steps="133"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.14" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="43"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="124"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="56"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="66"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.18" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="246"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="68"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="70"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.130000" steps="269"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.000000" steps="0"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.23" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="43"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.24" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="44"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="46"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="46"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="48"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="123"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.960000"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="60"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="68"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;vc.32" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="search_tree_delete_min&#39;vc.32.0" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="0"><result status="valid" time="0.060000" steps="513"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;vc.32.1" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="0"><result status="valid" time="0.010000" steps="68"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;vc.32.2" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="0"><result status="valid" time="0.070000" steps="322"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;vc.32.3" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="1"><result status="valid" time="0.310000" steps="54250"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;vc.32.4" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="1"><result status="valid" time="0.490000" steps="98564"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
