<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="1" name="CVC4" version="1.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/><path name="verifythis_fm2012_treedel.mlw"/>
<theory name="Memory" proved="true">
 <goal name="get_left&#39;VC" expl="VC for get_left" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="get_right&#39;VC" expl="VC for get_right" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="get_data&#39;VC" expl="VC for get_data" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Treedel" proved="true">
 <goal name="extensionality&#39;VC" expl="VC for extensionality" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="extensionality&#39;VC.0" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="extensionality&#39;VC.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="extensionality&#39;VC.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="extensionality&#39;VC.3" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="extensionality&#39;VC.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="extensionality&#39;VC.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="extensionality&#39;VC.6" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="53"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inorder_zip" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="inorder_zip.0" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="tree_left&#39;VC" expl="VC for tree_left" proved="true">
 <proof prover="6"><result status="valid" time="0.01" steps="6"/></proof>
 </goal>
 <goal name="tree_right&#39;VC" expl="VC for tree_right" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
 <goal name="distinct_break_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="distinct_break_append.0" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="1225"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="in_zip_tree&#39;VC" expl="VC for in_zip_tree" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="in_zip_tree&#39;VC.0" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="in_zip_tree&#39;VC.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="in_zip_tree&#39;VC.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_zip_tree&#39;VC" expl="VC for subst_zip_tree" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_zip_tree&#39;VC.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.1" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="subst_zip_tree&#39;VC.1.0" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.02" steps="8"/></proof>
   </goal>
   <goal name="subst_zip_tree&#39;VC.1.1" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="434"/></proof>
   </goal>
   <goal name="subst_zip_tree&#39;VC.1.2" expl="VC for subst_zip_tree" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="247"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subst_zip_tree&#39;VC.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.4" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="53"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="subst_zip_tree&#39;VC.9" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="59"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main_lemma&#39;VC" expl="VC for main_lemma" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="main_lemma&#39;VC.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.1" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="main_lemma&#39;VC.1.0" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.02" steps="78"/></proof>
   </goal>
   <goal name="main_lemma&#39;VC.1.1" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.04" steps="112"/></proof>
   </goal>
   <goal name="main_lemma&#39;VC.1.2" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.04" steps="198"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="main_lemma&#39;VC.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="447"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.22" steps="564"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="149"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="139"/></proof>
  </goal>
  <goal name="main_lemma&#39;VC.10" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="search_tree_delete_min&#39;VC" expl="VC for search_tree_delete_min" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="search_tree_delete_min&#39;VC.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.3" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.6" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="131"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.10" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.11" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.12" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.07" steps="250"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.13" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.14" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="67"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.16" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.17" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.18" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.19" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.20" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.21" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.13" steps="489"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.22" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.23" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.24" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.25" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.26" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.27" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.28" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="71"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.90"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.30" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.31" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="search_tree_delete_min&#39;VC.32" expl="postcondition" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="search_tree_delete_min&#39;VC.32.0" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="6"><result status="valid" time="0.27" steps="761"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;VC.32.1" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="6"><result status="valid" time="0.01" steps="88"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;VC.32.2" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="6"><result status="valid" time="0.07" steps="170"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;VC.32.3" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="1"><result status="valid" time="0.31" steps="54615"/></proof>
   </goal>
   <goal name="search_tree_delete_min&#39;VC.32.4" expl="VC for search_tree_delete_min" proved="true">
   <proof prover="1"><result status="valid" time="0.49" steps="98930"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
