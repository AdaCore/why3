<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.1.0" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="binary_search.mlw"/>
<theory name="BinarySearch" proved="true">
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <proof prover="5"><result status="valid" time="0.05" steps="319"/></proof>
 </goal>
</theory>
<theory name="BinarySearchAnyMidPoint" proved="true">
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <proof prover="5"><result status="valid" time="0.01" steps="66"/></proof>
 </goal>
</theory>
<theory name="BinarySearchBranchless" proved="true">
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.31" steps="629"/></proof>
 </goal>
</theory>
<theory name="BinarySearchInt32" proved="true">
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="binary_search&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="1670"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="1576"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="1705"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="2186"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.4" expl="division by zero" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="1771"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="4694"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="4859"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.7" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="4959"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="3845"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="5358"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.10" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="3932"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="3912"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="5496"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="3891"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="5308"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="3961"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="3949"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="6157"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="3985"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.19" expl="exceptional postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BinarySearchBoolean" proved="true">
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <proof prover="5"><result status="valid" time="0.08" steps="349"/></proof>
 </goal>
</theory>
<theory name="Complexity" proved="true">
 <goal name="log2&#39;vc" expl="VC for log2" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="4"/></proof>
 </goal>
 <goal name="log2_monotone&#39;vc" expl="VC for log2_monotone" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="104"/></proof>
 </goal>
 <goal name="upper_bound" proved="true">
 <proof prover="0"><result status="valid" time="0.19" steps="733178"/></proof>
 </goal>
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="binary_search&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.2" expl="loop invariant init" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="binary_search&#39;vc.2.0" expl="loop invariant init" proved="true">
   <proof prover="3"><result status="valid" time="0.00" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="binary_search&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.5" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="64"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="480"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.10" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="6523"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="99"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="59"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
