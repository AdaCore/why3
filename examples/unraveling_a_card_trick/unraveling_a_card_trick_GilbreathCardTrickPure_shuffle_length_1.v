(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require int.Int.
Require list.List.
Require list.Length.
Require list.Mem.
Require list.Nth.
Require option.Option.
Require list.Append.
Require list.Reverse.

Parameter m: Z.

Axiom m_positive : (0%Z < m)%Z.

Parameter n: Z.

Axiom n_nonnegative : (0%Z <= n)%Z.

(* Why3 assumption *)
Inductive shuffle {a:Type} {a_WT:WhyType a} : (list a) -> (list a)
  -> (list a) -> Prop :=
  | Shuffle_nil_left : forall (l:(list a)), ((@shuffle _ _) l nil l)
  | Shuffle_nil_right : forall (l:(list a)), ((@shuffle _ _) nil l l)
  | Shuffle_cons_left : forall (x:a) (a1:(list a)) (b:(list a)) (c:(list a)),
      ((@shuffle _ _) a1 b c) -> ((@shuffle _ _) (cons x a1) b (cons x c))
  | Shuffle_cons_right : forall (x:a) (a1:(list a)) (b:(list a))
      (c:(list a)), ((@shuffle _ _) a1 b c) -> ((@shuffle _ _) a1 (cons x b)
      (cons x c)).

Axiom shuffle_nil_nil_nil : forall {a:Type} {a_WT:WhyType a}, (shuffle nil
  nil nil).

Axiom shuffle_sym : forall {a:Type} {a_WT:WhyType a}, forall (a1:(list a))
  (b:(list a)) (c:(list a)), (shuffle a1 b c) -> (shuffle b a1 c).


(* Why3 goal *)
Theorem shuffle_length : forall {a:Type} {a_WT:WhyType a},
  forall (a1:(list a)) (b:(list a)) (c:(list a)), (shuffle a1 b c) ->
  (((list.Length.length a1) + (list.Length.length b))%Z = (list.Length.length c)).
(* Why3 intros a a_WT a1 b c h1. *)
induction 1; unfold Length.length; fold @Length.length; omega.
Qed.


