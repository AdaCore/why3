<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="Firstorder_term_spec.mlw"/>
<theory name="Spec" proved="true">
 <goal name="size_positive_lemma_fo_term_list&#39;vc" expl="VC for size_positive_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="280"/></proof>
 </goal>
 <goal name="size_positive_lemma_fo_term&#39;vc" expl="VC for size_positive_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="199"/></proof>
 </goal>
 <goal name="renaming_composition_lemma_fo_term_list&#39;vc" expl="VC for renaming_composition_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="175"/></proof>
 </goal>
 <goal name="renaming_composition_lemma_fo_term&#39;vc" expl="VC for renaming_composition_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="406"/></proof>
 </goal>
 <goal name="renaming_identity_lemma_fo_term_list&#39;vc" expl="VC for renaming_identity_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="171"/></proof>
 </goal>
 <goal name="renaming_identity_lemma_fo_term&#39;vc" expl="VC for renaming_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="350"/></proof>
 </goal>
 <goal name="associativity_subst_rename_rename_lemma_fo_term&#39;vc" expl="VC for associativity_subst_rename_rename_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.020000" steps="78"/></proof>
 </goal>
 <goal name="associativity_rename_subst_rename_lemma_fo_term&#39;vc" expl="VC for associativity_rename_subst_rename_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.020000" steps="78"/></proof>
 </goal>
 <goal name="right_rename_subst_by_identity_lemma_fo_term&#39;vc" expl="VC for right_rename_subst_by_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="240"/></proof>
 </goal>
 <goal name="olifts_composition_lemma_rename_subst_fo_term&#39;vc" expl="VC for olifts_composition_lemma_rename_subst_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="1158"/></proof>
 </goal>
 <goal name="olifts_composition_lemma_subst_rename_fo_term&#39;vc" expl="VC for olifts_composition_lemma_subst_rename_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.826889" steps="9435"/></proof>
 </goal>
 <goal name="rename_then_subst_composition_lemma_fo_term_list&#39;vc" expl="VC for rename_then_subst_composition_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.050000" steps="251"/></proof>
 </goal>
 <goal name="rename_then_subst_composition_lemma_fo_term&#39;vc" expl="VC for rename_then_subst_composition_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.070000" steps="448"/></proof>
 </goal>
 <goal name="subst_then_rename_composition_lemma_fo_term_list&#39;vc" expl="VC for subst_then_rename_composition_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="266"/></proof>
 </goal>
 <goal name="subst_then_rename_composition_lemma_fo_term&#39;vc" expl="VC for subst_then_rename_composition_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="575"/></proof>
 </goal>
 <goal name="associativity_rename_subst_subst_lemma_fo_term&#39;vc" expl="VC for associativity_rename_subst_subst_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="80"/></proof>
 </goal>
 <goal name="associativity_subst_rename_subst_lemma_fo_term&#39;vc" expl="VC for associativity_subst_rename_subst_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="80"/></proof>
 </goal>
 <goal name="associativity_subst_subst_rename_lemma_fo_term&#39;vc" expl="VC for associativity_subst_subst_rename_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="80"/></proof>
 </goal>
 <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc" expl="VC for olifts_composition_lemma_subst_subst_fo_term" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.060000" steps="351"/></proof>
  </goal>
  <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.030000" steps="545"/></proof>
  </goal>
  <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.260000" steps="78996"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_composition_lemma_fo_term_list&#39;vc" expl="VC for subst_composition_lemma_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_composition_lemma_fo_term_list&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="49"/></proof>
  </goal>
  <goal name="subst_composition_lemma_fo_term_list&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="181"/></proof>
  </goal>
  <goal name="subst_composition_lemma_fo_term_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="314"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_composition_lemma_fo_term&#39;vc" expl="VC for subst_composition_lemma_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_composition_lemma_fo_term&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="210"/></proof>
  </goal>
  <goal name="subst_composition_lemma_fo_term&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="361"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="associativity_subst_subst_subst_lemma_fo_term&#39;vc" expl="VC for associativity_subst_subst_subst_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="81"/></proof>
 </goal>
 <goal name="olifts_identity_fo_term&#39;vc" expl="VC for olifts_identity_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="olifts_identity_fo_term&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="olifts_identity_fo_term&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.040000" steps="36"/></proof>
   </goal>
   <goal name="olifts_identity_fo_term&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.040000" steps="232"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="olifts_identity_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="55"/></proof>
  </goal>
  <goal name="olifts_identity_fo_term&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="left_rename_subst_identity_lemma_fo_term&#39;vc" expl="VC for left_rename_subst_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="251"/></proof>
 </goal>
 <goal name="subst_identity_lemma_fo_term_list&#39;vc" expl="VC for subst_identity_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.050000" steps="253"/></proof>
 </goal>
 <goal name="subst_identity_lemma_fo_term&#39;vc" expl="VC for subst_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="328"/></proof>
 </goal>
 <goal name="left_subst_subst_identity_lemma_fo_term&#39;vc" expl="VC for left_subst_subst_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="173"/></proof>
 </goal>
 <goal name="right_subst_subst_by_identity_lemma_fo_term&#39;vc" expl="VC for right_subst_subst_by_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="131"/></proof>
 </goal>
 <goal name="renaming_preserve_size_fo_term_list&#39;vc" expl="VC for renaming_preserve_size_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="186"/></proof>
 </goal>
 <goal name="renaming_preserve_size_fo_term&#39;vc" expl="VC for renaming_preserve_size_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="260"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc" expl="VC for rename_free_var_constructive_inversion_symbol_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="37"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="80"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="7"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="83"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="7"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.5" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="58"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rename_free_var_inversion_symbol_fo_term_list&#39;vc" expl="VC for rename_free_var_inversion_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="36"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_fo_term_fo_term_list&#39;vc" expl="VC for rename_free_var_constructive_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="228"/></proof>
 </goal>
 <goal name="rename_free_var_inversion_fo_term_fo_term_list&#39;vc" expl="VC for rename_free_var_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="36"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_symbol_fo_term&#39;vc" expl="VC for rename_free_var_constructive_inversion_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="292"/></proof>
 </goal>
 <goal name="rename_free_var_inversion_symbol_fo_term&#39;vc" expl="VC for rename_free_var_inversion_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="36"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_fo_term_fo_term&#39;vc" expl="VC for rename_free_var_constructive_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="195"/></proof>
 </goal>
 <goal name="rename_free_var_inversion_fo_term_fo_term&#39;vc" expl="VC for rename_free_var_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="36"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_symbol_fo_term_list&#39;vc" expl="VC for rename_free_var_propagation_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="195"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_fo_term_fo_term_list&#39;vc" expl="VC for rename_free_var_propagation_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.050000" steps="196"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_symbol_fo_term&#39;vc" expl="VC for rename_free_var_propagation_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.070000" steps="277"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_fo_term_fo_term&#39;vc" expl="VC for rename_free_var_propagation_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.050000" steps="241"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_constructive_inversion_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.615662" steps="9137"/></proof>
 </goal>
 <goal name="subst_free_var_inversion_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_inversion_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="85"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_fo_term_fo_term_list&#39;vc" expl="VC for subst_free_var_constructive_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="875"/></proof>
 </goal>
 <goal name="subst_free_var_inversion_fo_term_fo_term_list&#39;vc" expl="VC for subst_free_var_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="39"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc" expl="VC for subst_free_var_constructive_inversion_symbol_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="7"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="30"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="30"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="123"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="7"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="350"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="33"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="281"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="33"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.9" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="94"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.220000" steps="3708"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_free_var_inversion_symbol_fo_term&#39;vc" expl="VC for subst_free_var_inversion_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.040000" steps="85"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_fo_term_fo_term&#39;vc" expl="VC for subst_free_var_constructive_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.080000" steps="582"/></proof>
 </goal>
 <goal name="subst_free_var_inversion_fo_term_fo_term&#39;vc" expl="VC for subst_free_var_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.030000" steps="39"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_symbol_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_propagation_symbol_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="369"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_propagation_fo_term_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.150000" steps="340"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc" expl="VC for subst_free_var_propagation_fo_term_fo_term_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="51"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="21"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="61"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="9"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="211"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_free_var_propagation_symbol_symbol_fo_term&#39;vc" expl="VC for subst_free_var_propagation_symbol_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.047385" steps="436"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_symbol_fo_term&#39;vc" expl="VC for subst_free_var_propagation_fo_term_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.090000" steps="268"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term&#39;vc" expl="VC for subst_free_var_propagation_fo_term_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.130000" steps="272"/></proof>
 </goal>
 <goal name="free_var_equivalence_of_subst_fo_term_list&#39;vc" expl="VC for free_var_equivalence_of_subst_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="505"/></proof>
 </goal>
 <goal name="free_var_equivalence_of_subst_fo_term&#39;vc" expl="VC for free_var_equivalence_of_subst_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="22"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="70"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="26"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="28"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="109"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="97"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="102"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="115"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_equivalence_of_rename_fo_term_list&#39;vc" expl="VC for free_var_equivalence_of_rename_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="110"/></proof>
 </goal>
 <goal name="free_var_equivalence_of_rename_fo_term&#39;vc" expl="VC for free_var_equivalence_of_rename_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.060000" steps="111"/></proof>
 </goal>
 <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc" expl="VC for free_var_derive_equivalence_of_subst_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="78"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="91"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.070000" steps="277"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.070000" steps="261"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="81"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="98"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="281"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.7" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.060000" steps="268"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="65"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="67"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc" expl="VC for free_var_derive_equivalence_of_subst_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.070000" steps="105"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="385"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="86"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="102"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.060000" steps="315"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.060000" steps="301"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="78"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="76"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc" expl="VC for free_var_derive_equivalence_of_rename_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030000" steps="20"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="48"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="70"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.370000"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.380000"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc" expl="VC for free_var_derive_equivalence_of_rename_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="21"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.070000" steps="48"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="70"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.400000"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.410000"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
