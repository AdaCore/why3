<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Alt-Ergo" version="2.0.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/><path name="Firstorder_term_spec.mlw"/>
<theory name="Spec" proved="true">
 <goal name="VC size_positive_lemma_fo_term_list" expl="VC for size_positive_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="118"/></proof>
 </goal>
 <goal name="VC size_positive_lemma_fo_term" expl="VC for size_positive_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="72"/></proof>
 </goal>
 <goal name="VC renaming_composition_lemma_fo_term_list" expl="VC for renaming_composition_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="103"/></proof>
 </goal>
 <goal name="VC renaming_composition_lemma_fo_term" expl="VC for renaming_composition_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="118"/></proof>
 </goal>
 <goal name="VC renaming_identity_lemma_fo_term_list" expl="VC for renaming_identity_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="123"/></proof>
 </goal>
 <goal name="VC renaming_identity_lemma_fo_term" expl="VC for renaming_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="156"/></proof>
 </goal>
 <goal name="VC associativity_subst_rename_rename_lemma_fo_term" expl="VC for associativity_subst_rename_rename_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
 </goal>
 <goal name="VC associativity_rename_subst_rename_lemma_fo_term" expl="VC for associativity_rename_subst_rename_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
 </goal>
 <goal name="VC right_rename_subst_by_identity_lemma_fo_term" expl="VC for right_rename_subst_by_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="50"/></proof>
 </goal>
 <goal name="VC olifts_composition_lemma_rename_subst_fo_term" expl="VC for olifts_composition_lemma_rename_subst_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.10" steps="415"/></proof>
 </goal>
 <goal name="VC olifts_composition_lemma_subst_rename_fo_term" expl="VC for olifts_composition_lemma_subst_rename_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.51" steps="1081"/></proof>
 </goal>
 <goal name="VC rename_then_subst_composition_lemma_fo_term_list" expl="VC for rename_then_subst_composition_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="257"/></proof>
 </goal>
 <goal name="VC rename_then_subst_composition_lemma_fo_term" expl="VC for rename_then_subst_composition_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="268"/></proof>
 </goal>
 <goal name="VC subst_then_rename_composition_lemma_fo_term_list" expl="VC for subst_then_rename_composition_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="267"/></proof>
 </goal>
 <goal name="VC subst_then_rename_composition_lemma_fo_term" expl="VC for subst_then_rename_composition_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="286"/></proof>
 </goal>
 <goal name="VC associativity_rename_subst_subst_lemma_fo_term" expl="VC for associativity_rename_subst_subst_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
 </goal>
 <goal name="VC associativity_subst_rename_subst_lemma_fo_term" expl="VC for associativity_subst_rename_subst_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
 </goal>
 <goal name="VC associativity_subst_subst_rename_lemma_fo_term" expl="VC for associativity_subst_subst_rename_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
 </goal>
 <goal name="VC olifts_composition_lemma_subst_subst_fo_term" expl="VC for olifts_composition_lemma_subst_subst_fo_term" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC olifts_composition_lemma_subst_subst_fo_term.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.06" steps="340"/></proof>
  </goal>
  <goal name="VC olifts_composition_lemma_subst_subst_fo_term.1" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="105"/></proof>
  </goal>
  <goal name="VC olifts_composition_lemma_subst_subst_fo_term.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="79683"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC subst_composition_lemma_fo_term_list" expl="VC for subst_composition_lemma_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC subst_composition_lemma_fo_term_list.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="VC subst_composition_lemma_fo_term_list.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="VC subst_composition_lemma_fo_term_list.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="64"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC subst_composition_lemma_fo_term" expl="VC for subst_composition_lemma_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC subst_composition_lemma_fo_term.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="VC subst_composition_lemma_fo_term.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC associativity_subst_subst_subst_lemma_fo_term" expl="VC for associativity_subst_subst_subst_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
 </goal>
 <goal name="VC olifts_identity_fo_term" expl="VC for olifts_identity_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC olifts_identity_fo_term.0" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="VC olifts_identity_fo_term.0.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="8"/></proof>
   </goal>
   <goal name="VC olifts_identity_fo_term.0.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="78"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC olifts_identity_fo_term.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="9"/></proof>
  </goal>
  <goal name="VC olifts_identity_fo_term.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC left_rename_subst_identity_lemma_fo_term" expl="VC for left_rename_subst_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="91"/></proof>
 </goal>
 <goal name="VC subst_identity_lemma_fo_term_list" expl="VC for subst_identity_lemma_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="136"/></proof>
 </goal>
 <goal name="VC subst_identity_lemma_fo_term" expl="VC for subst_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="128"/></proof>
 </goal>
 <goal name="VC left_subst_subst_identity_lemma_fo_term" expl="VC for left_subst_subst_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="58"/></proof>
 </goal>
 <goal name="VC right_subst_subst_by_identity_lemma_fo_term" expl="VC for right_subst_subst_by_identity_lemma_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="45"/></proof>
 </goal>
 <goal name="VC renaming_preserve_size_fo_term_list" expl="VC for renaming_preserve_size_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="107"/></proof>
 </goal>
 <goal name="VC renaming_preserve_size_fo_term" expl="VC for renaming_preserve_size_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="92"/></proof>
 </goal>
 <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list" expl="VC for rename_free_var_constructive_inversion_symbol_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list.0" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="18"/></proof>
  </goal>
  <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="23"/></proof>
  </goal>
  <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7"/></proof>
  </goal>
  <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list.3" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="25"/></proof>
  </goal>
  <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list.5" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term_list.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC rename_free_var_inversion_symbol_fo_term_list" expl="VC for rename_free_var_inversion_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="10"/></proof>
 </goal>
 <goal name="VC rename_free_var_constructive_inversion_fo_term_fo_term_list" expl="VC for rename_free_var_constructive_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="202"/></proof>
 </goal>
 <goal name="VC rename_free_var_inversion_fo_term_fo_term_list" expl="VC for rename_free_var_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="10"/></proof>
 </goal>
 <goal name="VC rename_free_var_constructive_inversion_symbol_fo_term" expl="VC for rename_free_var_constructive_inversion_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="197"/></proof>
 </goal>
 <goal name="VC rename_free_var_inversion_symbol_fo_term" expl="VC for rename_free_var_inversion_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="10"/></proof>
 </goal>
 <goal name="VC rename_free_var_constructive_inversion_fo_term_fo_term" expl="VC for rename_free_var_constructive_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="188"/></proof>
 </goal>
 <goal name="VC rename_free_var_inversion_fo_term_fo_term" expl="VC for rename_free_var_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="10"/></proof>
 </goal>
 <goal name="VC rename_free_var_propagation_symbol_fo_term_list" expl="VC for rename_free_var_propagation_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="235"/></proof>
 </goal>
 <goal name="VC rename_free_var_propagation_fo_term_fo_term_list" expl="VC for rename_free_var_propagation_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="235"/></proof>
 </goal>
 <goal name="VC rename_free_var_propagation_symbol_fo_term" expl="VC for rename_free_var_propagation_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="261"/></proof>
 </goal>
 <goal name="VC rename_free_var_propagation_fo_term_fo_term" expl="VC for rename_free_var_propagation_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="151"/></proof>
 </goal>
 <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term_list" expl="VC for subst_free_var_constructive_inversion_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.30" steps="1819"/></proof>
 </goal>
 <goal name="VC subst_free_var_inversion_symbol_fo_term_list" expl="VC for subst_free_var_inversion_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="26"/></proof>
 </goal>
 <goal name="VC subst_free_var_constructive_inversion_fo_term_fo_term_list" expl="VC for subst_free_var_constructive_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.10" steps="645"/></proof>
 </goal>
 <goal name="VC subst_free_var_inversion_fo_term_fo_term_list" expl="VC for subst_free_var_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="10"/></proof>
 </goal>
 <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term" expl="VC for subst_free_var_constructive_inversion_symbol_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="7"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="14"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.3" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="77"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="19"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="19"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.9" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="98"/></proof>
  </goal>
  <goal name="VC subst_free_var_constructive_inversion_symbol_fo_term.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="675"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC subst_free_var_inversion_symbol_fo_term" expl="VC for subst_free_var_inversion_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="26"/></proof>
 </goal>
 <goal name="VC subst_free_var_constructive_inversion_fo_term_fo_term" expl="VC for subst_free_var_constructive_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.08" steps="404"/></proof>
 </goal>
 <goal name="VC subst_free_var_inversion_fo_term_fo_term" expl="VC for subst_free_var_inversion_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="10"/></proof>
 </goal>
 <goal name="VC subst_free_var_propagation_symbol_symbol_fo_term_list" expl="VC for subst_free_var_propagation_symbol_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.23" steps="949"/></proof>
 </goal>
 <goal name="VC subst_free_var_propagation_fo_term_symbol_fo_term_list" expl="VC for subst_free_var_propagation_fo_term_symbol_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.15" steps="655"/></proof>
 </goal>
 <goal name="VC subst_free_var_propagation_fo_term_fo_term_fo_term_list" expl="VC for subst_free_var_propagation_fo_term_fo_term_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC subst_free_var_propagation_fo_term_fo_term_fo_term_list.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="18"/></proof>
  </goal>
  <goal name="VC subst_free_var_propagation_fo_term_fo_term_fo_term_list.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="VC subst_free_var_propagation_fo_term_fo_term_fo_term_list.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="VC subst_free_var_propagation_fo_term_fo_term_fo_term_list.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="8"/></proof>
  </goal>
  <goal name="VC subst_free_var_propagation_fo_term_fo_term_fo_term_list.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="240"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC subst_free_var_propagation_symbol_symbol_fo_term" expl="VC for subst_free_var_propagation_symbol_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="808"/></proof>
 </goal>
 <goal name="VC subst_free_var_propagation_fo_term_symbol_fo_term" expl="VC for subst_free_var_propagation_fo_term_symbol_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.09" steps="367"/></proof>
 </goal>
 <goal name="VC subst_free_var_propagation_fo_term_fo_term_fo_term" expl="VC for subst_free_var_propagation_fo_term_fo_term_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="367"/></proof>
 </goal>
 <goal name="VC free_var_equivalence_of_subst_fo_term_list" expl="VC for free_var_equivalence_of_subst_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.10" steps="659"/></proof>
 </goal>
 <goal name="VC free_var_equivalence_of_subst_fo_term" expl="VC for free_var_equivalence_of_subst_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC free_var_equivalence_of_subst_fo_term.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7"/></proof>
  </goal>
  <goal name="VC free_var_equivalence_of_subst_fo_term.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="35"/></proof>
  </goal>
  <goal name="VC free_var_equivalence_of_subst_fo_term.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="17"/></proof>
  </goal>
  <goal name="VC free_var_equivalence_of_subst_fo_term.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="8"/></proof>
  </goal>
  <goal name="VC free_var_equivalence_of_subst_fo_term.4" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="VC free_var_equivalence_of_subst_fo_term.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="33"/></proof>
  </goal>
  <goal name="VC free_var_equivalence_of_subst_fo_term.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="41"/></proof>
  </goal>
  <goal name="VC free_var_equivalence_of_subst_fo_term.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC free_var_equivalence_of_rename_fo_term_list" expl="VC for free_var_equivalence_of_rename_fo_term_list" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="116"/></proof>
 </goal>
 <goal name="VC free_var_equivalence_of_rename_fo_term" expl="VC for free_var_equivalence_of_rename_fo_term" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="116"/></proof>
 </goal>
 <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list" expl="VC for free_var_derive_equivalence_of_subst_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="57"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="106"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="116"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.4" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="58"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="107"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.7" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="117"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="39"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term_list.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC free_var_derive_equivalence_of_subst_fo_term" expl="VC for free_var_derive_equivalence_of_subst_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="55"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="106"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="107"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="116"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_subst_fo_term.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="47"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC free_var_derive_equivalence_of_rename_fo_term_list" expl="VC for free_var_derive_equivalence_of_rename_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term_list.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term_list.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="22"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term_list.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term_list.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term_list.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.37"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC free_var_derive_equivalence_of_rename_fo_term" expl="VC for free_var_derive_equivalence_of_rename_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="6"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="22"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="31"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="VC free_var_derive_equivalence_of_rename_fo_term.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
