<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Coq" version="8.11.2" timelimit="0" steplimit="0" memlimit="0"/>
<prover id="2" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.1.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="gcd_vc_sp.mlw"/>
<theory name="EuclideanAlgorithm" proved="true">
 <goal name="euclid&#39;vc" expl="VC for euclid" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="18142"/></proof>
 </goal>
</theory>
<theory name="EuclideanAlgorithmIterative" proved="true">
 <goal name="euclid&#39;vc" expl="VC for euclid" proved="true">
 <proof prover="2"><result status="valid" time="0.09" steps="26708"/></proof>
 </goal>
</theory>
<theory name="BinaryGcd" proved="true">
 <goal name="even1" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="11771"/></proof>
 </goal>
 <goal name="odd1" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="11722"/></proof>
 </goal>
 <goal name="div_nonneg" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="10743"/></proof>
 </goal>
 <goal name="gcd_even_even" proved="true">
 <proof prover="5"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="gcd_even_odd" proved="true">
 <proof prover="0"><path name="gcd_vc_sp_BinaryGcd_gcd_even_odd_1.v"/><result status="valid" time="0.32"/></proof>
 </goal>
 <goal name="gcd_even_odd2" proved="true">
 <proof prover="5"><result status="valid" time="0.75" steps="103"/></proof>
 </goal>
 <goal name="odd_odd_div2" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="15607"/></proof>
 </goal>
 <goal name="gcd_odd_odd&#39;vc" expl="VC for gcd_odd_odd" proved="true">
 <proof prover="5"><result status="valid" time="0.14" steps="59"/></proof>
 </goal>
 <goal name="gcd_odd_odd2" proved="true">
 <proof prover="5"><result status="valid" time="0.97" steps="104"/></proof>
 </goal>
 <goal name="binary_gcd&#39;vc" expl="VC for binary_gcd" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="binary_gcd&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13887"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13809"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13469"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13490"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.4" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13511"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.5" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13511"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.6" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17541"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="17352"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.8" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13515"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.9" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="16842"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16708"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13494"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.12" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13515"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.13" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="16830"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16700"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.15" expl="check division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13519"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.16" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16618"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16453"/></proof>
  </goal>
  <goal name="binary_gcd&#39;vc.18" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="binary_gcd&#39;vc.18.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="binary_gcd&#39;vc.18.1" expl="postcondition" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="18"/></proof>
   </goal>
   <goal name="binary_gcd&#39;vc.18.2" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="1.68"/></proof>
   </goal>
   <goal name="binary_gcd&#39;vc.18.3" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.75"/></proof>
   </goal>
   <goal name="binary_gcd&#39;vc.18.4" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.72"/></proof>
   </goal>
   <goal name="binary_gcd&#39;vc.18.5" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.65" steps="10497"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="EuclideanAlgorithm63" proved="true">
 <goal name="euclid&#39;vc" expl="VC for euclid" proved="true">
 <proof prover="2"><result status="valid" time="0.08" steps="21625"/></proof>
 </goal>
</theory>
</file>
</why3session>
