<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.11.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="hillel_challenge.mlw"/>
<theory name="Leftpad" proved="true">
 <goal name="leftpad&#39;vc" expl="VC for leftpad" proved="true">
 <proof prover="1"><result status="valid" time="0.40" steps="628"/></proof>
 </goal>
</theory>
<theory name="Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unique&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="10256"/></proof>
  </goal>
  <goal name="unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="10008"/></proof>
  </goal>
  <goal name="unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="40"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="12010"/></proof>
  </goal>
  <goal name="unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="43"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="12027"/></proof>
  </goal>
  <goal name="unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="11680"/></proof>
  </goal>
  <goal name="unique&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="11660"/></proof>
  </goal>
  <goal name="unique&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="18"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="11682"/></proof>
  </goal>
  <goal name="unique&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="11869"/></proof>
  </goal>
  <goal name="unique&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="12092"/></proof>
  </goal>
  <goal name="unique&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="13666"/></proof>
  </goal>
  <goal name="unique&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="572"/></proof>
  </goal>
  <goal name="unique&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="721"/></proof>
  </goal>
  <goal name="unique&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="149"/></proof>
  </goal>
  <goal name="unique&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="11873"/></proof>
  </goal>
  <goal name="unique&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="157"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="21371"/></proof>
  </goal>
  <goal name="unique&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="x=a[i]">
   <goal name="unique&#39;vc.15.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
   <proof prover="2"><result status="valid" time="0.08" steps="12777"/></proof>
   </goal>
   <goal name="unique&#39;vc.15.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="assert" proved="true" arg1="(mem x a (i+1) &lt;-&gt; mem x a i)">
    <goal name="unique&#39;vc.15.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.01" steps="36"/></proof>
    <proof prover="2"><result status="valid" time="0.08" steps="12804"/></proof>
    </goal>
    <goal name="unique&#39;vc.15.1.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="1"><result status="valid" time="0.01" steps="37"/></proof>
    <proof prover="2"><result status="valid" time="0.06" steps="12096"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unique&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="12812"/></proof>
  </goal>
  <goal name="unique&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="11874"/></proof>
  </goal>
  <goal name="unique&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="63214"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="23928"/></proof>
  </goal>
  <goal name="unique&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="36"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="13186"/></proof>
  </goal>
  <goal name="unique&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="11513"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4504"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="3823"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5966"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4543"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="6"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="3803"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="7"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="3815"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="51"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5680"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4347"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="18"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4357"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4450"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="50"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="11938"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="54"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8594"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5133"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="36"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8252"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="68"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6303"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="46"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="10998"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="50"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8324"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4840"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4609"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="35"/></proof>
  <proof prover="2"><result status="valid" time="0.55" steps="73795"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4325"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4965"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="4"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4246"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="3"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="9310"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FulcrumNoOverflow" proved="true">
 <goal name="big&#39;vc" expl="VC for big" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 <proof prover="2"><result status="valid" time="0.04" steps="2667"/></proof>
 </goal>
 <goal name="big_zero&#39;vc" expl="VC for big_zero" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 <proof prover="2"><result status="valid" time="0.04" steps="2854"/></proof>
 </goal>
 <goal name="add_big&#39;vc" expl="VC for add_big" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_big&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="48"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="3950"/></proof>
  </goal>
  <goal name="add_big&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="70"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4174"/></proof>
  </goal>
  <goal name="add_big&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4290"/></proof>
  </goal>
  <goal name="add_big&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4475"/></proof>
  </goal>
  <goal name="add_big&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="123"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4860"/></proof>
  </goal>
  <goal name="add_big&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="3330"/></proof>
  </goal>
  <goal name="add_big&#39;vc.6" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_big&#39;vc.6.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
   <proof prover="2"><result status="valid" time="0.04" steps="4060"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
   <proof prover="2"><result status="valid" time="0.05" steps="4056"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
   <proof prover="2"><result status="valid" time="0.03" steps="3119"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
   <proof prover="2"><result status="valid" time="0.05" steps="3999"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
   <proof prover="2"><result status="valid" time="0.05" steps="4534"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_big&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="3231"/></proof>
  </goal>
  <goal name="add_big&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="3844"/></proof>
  </goal>
  <goal name="add_big&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="64"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4100"/></proof>
  </goal>
  <goal name="add_big&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4246"/></proof>
  </goal>
  <goal name="add_big&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4401"/></proof>
  </goal>
  <goal name="add_big&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="120"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4915"/></proof>
  </goal>
  <goal name="add_big&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="3327"/></proof>
  </goal>
  <goal name="add_big&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="91"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4320"/></proof>
  </goal>
  <goal name="add_big&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="143"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5021"/></proof>
  </goal>
  <goal name="add_big&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="3300"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_big&#39;vc" expl="VC for sub_big" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="228"/></proof>
 <proof prover="2"><result status="valid" time="0.06" steps="7283"/></proof>
 </goal>
 <goal name="delta&#39;vc" expl="VC for delta" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="delta&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="69"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4379"/></proof>
  </goal>
  <goal name="delta&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4741"/></proof>
  </goal>
  <goal name="delta&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4906"/></proof>
  </goal>
  <goal name="delta&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5018"/></proof>
  </goal>
  <goal name="delta&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="156"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5172"/></proof>
  </goal>
  <goal name="delta&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="123"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5472"/></proof>
  </goal>
  <goal name="delta&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="209"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="6447"/></proof>
  </goal>
  <goal name="delta&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4750"/></proof>
  </goal>
  <goal name="delta&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="96"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4984"/></proof>
  </goal>
  <goal name="delta&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="110"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5799"/></proof>
  </goal>
  <goal name="delta&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4711"/></proof>
  </goal>
  <goal name="delta&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="139"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5512"/></proof>
  </goal>
  <goal name="delta&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="122"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4872"/></proof>
  </goal>
  <goal name="delta&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4808"/></proof>
  </goal>
  <goal name="delta&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4998"/></proof>
  </goal>
  <goal name="delta&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="147"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5116"/></proof>
  </goal>
  <goal name="delta&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="119"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5348"/></proof>
  </goal>
  <goal name="delta&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="196"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="6292"/></proof>
  </goal>
  <goal name="delta&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="93"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4855"/></proof>
  </goal>
  <goal name="delta&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="105"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="5792"/></proof>
  </goal>
  <goal name="delta&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4560"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="big_lt&#39;vc" expl="VC for big_lt" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="86"/></proof>
 <proof prover="2"><result status="valid" time="0.05" steps="4753"/></proof>
 </goal>
 <goal name="sum_bounds&#39;vc" expl="VC for sum_bounds" proved="true">
 <proof prover="1"><result status="valid" time="1.27" steps="1711"/></proof>
 <proof prover="2"><result status="valid" time="0.07" steps="9191"/></proof>
 </goal>
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4638"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="3946"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5119"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4253"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="53"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="5733"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4379"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="100"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="7727"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="74"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5938"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5904"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4409"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="7150"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4610"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4463"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="7947"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4838"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="60"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5177"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="138"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="7568"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="68"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5498"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="151"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="11292"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="251"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="18314"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="354"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="11611"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="88"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8272"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="89"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="8276"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="94"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5519"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="303"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="20699"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="311"/></proof>
  <proof prover="2"><result status="valid" time="0.49" steps="46132"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="98"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5909"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="102"/></proof>
  <proof prover="2"><result status="valid" time="0.85" steps="85178"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="325"/></proof>
  <proof prover="2"><result status="valid" time="1.00" steps="89828"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="86"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5441"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="276"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="17231"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="284"/></proof>
  <proof prover="2"><result status="valid" time="2.06" steps="226385"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="90"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5763"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="91"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5547"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="2"><result status="valid" time="0.85" steps="99056"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="56"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5174"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="63"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="7395"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.37" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4835"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.38" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="9"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="20148"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
