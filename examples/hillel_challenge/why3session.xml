<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="hillel_challenge.mlw"/>
<theory name="Leftpad" proved="true">
 <goal name="leftpad&#39;vc" expl="VC for leftpad" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="7010"/></proof>
 </goal>
</theory>
<theory name="Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unique&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="10105"/></proof>
  </goal>
  <goal name="unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="9000"/></proof>
  </goal>
  <goal name="unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="11238"/></proof>
  </goal>
  <goal name="unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="10474"/></proof>
  </goal>
  <goal name="unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="10142"/></proof>
  </goal>
  <goal name="unique&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="9892"/></proof>
  </goal>
  <goal name="unique&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="9927"/></proof>
  </goal>
  <goal name="unique&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10119"/></proof>
  </goal>
  <goal name="unique&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="10587"/></proof>
  </goal>
  <goal name="unique&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="10408"/></proof>
  </goal>
  <goal name="unique&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="89939"/></proof>
  </goal>
  <goal name="unique&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.19" steps="952"/></proof>
  </goal>
  <goal name="unique&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.04" steps="151"/></proof>
  </goal>
  <goal name="unique&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="9766"/></proof>
  </goal>
  <goal name="unique&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="163"/></proof>
  </goal>
  <goal name="unique&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="x=a[i]">
   <goal name="unique&#39;vc.15.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
   <goal name="unique&#39;vc.15.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="assert" proved="true" arg1="(mem x a (i+1) &lt;-&gt; mem x a i)">
    <goal name="unique&#39;vc.15.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="10835"/></proof>
    </goal>
    <goal name="unique&#39;vc.15.1.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="2"><result status="valid" time="0.02" steps="18"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unique&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="unique&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="10345"/></proof>
  </goal>
  <goal name="unique&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="42744"/></proof>
  </goal>
  <goal name="unique&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="12140"/></proof>
  </goal>
  <goal name="unique&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="11125"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="3901"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3474"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="4620"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="3927"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3461"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3064"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="4397"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3448"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3683"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3720"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="8089"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6511"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="4089"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6337"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="5213"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7208"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6232"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="3842"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3438"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.37" steps="34817"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="3640"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="4022"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3578"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="8167"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FulcrumNoOverflow" proved="true">
 <goal name="big&#39;vc" expl="VC for big" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="4798"/></proof>
 </goal>
 <goal name="big_zero&#39;vc" expl="VC for big_zero" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="4964"/></proof>
 </goal>
 <goal name="add_big&#39;vc" expl="VC for add_big" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_big&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6087"/></proof>
  </goal>
  <goal name="add_big&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6285"/></proof>
  </goal>
  <goal name="add_big&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6372"/></proof>
  </goal>
  <goal name="add_big&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6513"/></proof>
  </goal>
  <goal name="add_big&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6771"/></proof>
  </goal>
  <goal name="add_big&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="5296"/></proof>
  </goal>
  <goal name="add_big&#39;vc.6" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_big&#39;vc.6.0" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="6165"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.1" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="6162"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.2" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="5134"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.3" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="6099"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.4" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="6589"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_big&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="5227"/></proof>
  </goal>
  <goal name="add_big&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6022"/></proof>
  </goal>
  <goal name="add_big&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6194"/></proof>
  </goal>
  <goal name="add_big&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6307"/></proof>
  </goal>
  <goal name="add_big&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6422"/></proof>
  </goal>
  <goal name="add_big&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6823"/></proof>
  </goal>
  <goal name="add_big&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="5296"/></proof>
  </goal>
  <goal name="add_big&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6387"/></proof>
  </goal>
  <goal name="add_big&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="7021"/></proof>
  </goal>
  <goal name="add_big&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5281"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_big&#39;vc" expl="VC for sub_big" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="9469"/></proof>
 </goal>
 <goal name="delta&#39;vc" expl="VC for delta" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="delta&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6273"/></proof>
  </goal>
  <goal name="delta&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6540"/></proof>
  </goal>
  <goal name="delta&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6666"/></proof>
  </goal>
  <goal name="delta&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6751"/></proof>
  </goal>
  <goal name="delta&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="6869"/></proof>
  </goal>
  <goal name="delta&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7077"/></proof>
  </goal>
  <goal name="delta&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7983"/></proof>
  </goal>
  <goal name="delta&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6565"/></proof>
  </goal>
  <goal name="delta&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6708"/></proof>
  </goal>
  <goal name="delta&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="7454"/></proof>
  </goal>
  <goal name="delta&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6521"/></proof>
  </goal>
  <goal name="delta&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7182"/></proof>
  </goal>
  <goal name="delta&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="6645"/></proof>
  </goal>
  <goal name="delta&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6603"/></proof>
  </goal>
  <goal name="delta&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6745"/></proof>
  </goal>
  <goal name="delta&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6810"/></proof>
  </goal>
  <goal name="delta&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6999"/></proof>
  </goal>
  <goal name="delta&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7860"/></proof>
  </goal>
  <goal name="delta&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6638"/></proof>
  </goal>
  <goal name="delta&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7499"/></proof>
  </goal>
  <goal name="delta&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6599"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="big_lt&#39;vc" expl="VC for big_lt" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="7070"/></proof>
 </goal>
 <goal name="sum_bounds&#39;vc" expl="VC for sum_bounds" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="10964"/></proof>
 </goal>
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6788"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5834"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7219"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6426"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7788"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6030"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="9838"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7753"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="7750"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6035"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="9423"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6547"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6088"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="9762"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6653"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="7023"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="9419"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="7138"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="13013"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.17" steps="19994"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="13074"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="9883"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="9951"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6786"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.20" steps="22014"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="120586"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7516"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="28526"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="58"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6717"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="19389"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.17" steps="529496"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="7347"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="7022"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="9315"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.37" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6691"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.38" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20586"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
