<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.8.10" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="hillel_challenge.mlw"/>
<theory name="Leftpad" proved="true">
 <goal name="leftpad&#39;vc" expl="VC for leftpad" proved="true">
 <proof prover="1"><result status="valid" time="0.40" steps="628"/></proof>
 </goal>
</theory>
<theory name="Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unique&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="10979"/></proof>
  </goal>
  <goal name="unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="10637"/></proof>
  </goal>
  <goal name="unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="40"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="13009"/></proof>
  </goal>
  <goal name="unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="43"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="12996"/></proof>
  </goal>
  <goal name="unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="12446"/></proof>
  </goal>
  <goal name="unique&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="12290"/></proof>
  </goal>
  <goal name="unique&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="12340"/></proof>
  </goal>
  <goal name="unique&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="12527"/></proof>
  </goal>
  <goal name="unique&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="12891"/></proof>
  </goal>
  <goal name="unique&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="14449"/></proof>
  </goal>
  <goal name="unique&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="574"/></proof>
  </goal>
  <goal name="unique&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="1018"/></proof>
  </goal>
  <goal name="unique&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="151"/></proof>
  </goal>
  <goal name="unique&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="12657"/></proof>
  </goal>
  <goal name="unique&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="159"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="23234"/></proof>
  </goal>
  <goal name="unique&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="x=a[i]">
   <goal name="unique&#39;vc.15.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
   <proof prover="2"><result status="valid" time="0.08" steps="13858"/></proof>
   </goal>
   <goal name="unique&#39;vc.15.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="assert" proved="true" arg1="(mem x a (i+1) &lt;-&gt; mem x a i)">
    <goal name="unique&#39;vc.15.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
    <proof prover="2"><result status="valid" time="0.08" steps="13899"/></proof>
    </goal>
    <goal name="unique&#39;vc.15.1.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="1"><result status="valid" time="0.01" steps="39"/></proof>
    <proof prover="2"><result status="valid" time="0.06" steps="12899"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unique&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="13958"/></proof>
  </goal>
  <goal name="unique&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="12642"/></proof>
  </goal>
  <goal name="unique&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="26236"/></proof>
  <proof prover="4"><result status="valid" time="0.35" steps="373090"/></proof>
  </goal>
  <goal name="unique&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="36"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="14356"/></proof>
  </goal>
  <goal name="unique&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="12498"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5462"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4454"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6967"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5742"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="6"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4660"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="7"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4671"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="51"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6438"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5096"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="18"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4988"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="5081"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="12819"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="56"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="9383"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5902"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="9042"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="70"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="7108"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="48"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="11873"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="9109"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5607"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5270"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="37"/></proof>
  <proof prover="2"><result status="valid" time="0.55" steps="77242"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4956"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5717"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="4"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="4876"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="3"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="10236"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FulcrumNoOverflow" proved="true">
 <goal name="big&#39;vc" expl="VC for big" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 <proof prover="2"><result status="valid" time="0.04" steps="3038"/></proof>
 </goal>
 <goal name="big_zero&#39;vc" expl="VC for big_zero" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="2"/></proof>
 <proof prover="2"><result status="valid" time="0.04" steps="3241"/></proof>
 </goal>
 <goal name="add_big&#39;vc" expl="VC for add_big" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_big&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="50"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4463"/></proof>
  </goal>
  <goal name="add_big&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="74"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4723"/></proof>
  </goal>
  <goal name="add_big&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4839"/></proof>
  </goal>
  <goal name="add_big&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5023"/></proof>
  </goal>
  <goal name="add_big&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="128"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5408"/></proof>
  </goal>
  <goal name="add_big&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="3762"/></proof>
  </goal>
  <goal name="add_big&#39;vc.6" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_big&#39;vc.6.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
   <proof prover="2"><result status="valid" time="0.04" steps="4609"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
   <proof prover="2"><result status="valid" time="0.05" steps="4606"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
   <proof prover="2"><result status="valid" time="0.03" steps="3551"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
   <proof prover="2"><result status="valid" time="0.05" steps="4549"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
   <proof prover="2"><result status="valid" time="0.05" steps="5083"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_big&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="3663"/></proof>
  </goal>
  <goal name="add_big&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4357"/></proof>
  </goal>
  <goal name="add_big&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="66"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4612"/></proof>
  </goal>
  <goal name="add_big&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4794"/></proof>
  </goal>
  <goal name="add_big&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="4950"/></proof>
  </goal>
  <goal name="add_big&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="124"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5463"/></proof>
  </goal>
  <goal name="add_big&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="3759"/></proof>
  </goal>
  <goal name="add_big&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="95"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4868"/></proof>
  </goal>
  <goal name="add_big&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="145"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5569"/></proof>
  </goal>
  <goal name="add_big&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="3732"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_big&#39;vc" expl="VC for sub_big" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="229"/></proof>
 <proof prover="2"><result status="valid" time="0.06" steps="7986"/></proof>
 </goal>
 <goal name="delta&#39;vc" expl="VC for delta" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="delta&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="69"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4856"/></proof>
  </goal>
  <goal name="delta&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5285"/></proof>
  </goal>
  <goal name="delta&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5451"/></proof>
  </goal>
  <goal name="delta&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5563"/></proof>
  </goal>
  <goal name="delta&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="160"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5717"/></proof>
  </goal>
  <goal name="delta&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="127"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6017"/></proof>
  </goal>
  <goal name="delta&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="214"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="6992"/></proof>
  </goal>
  <goal name="delta&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5294"/></proof>
  </goal>
  <goal name="delta&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="100"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5529"/></proof>
  </goal>
  <goal name="delta&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="189"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6343"/></proof>
  </goal>
  <goal name="delta&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5237"/></proof>
  </goal>
  <goal name="delta&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="144"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6029"/></proof>
  </goal>
  <goal name="delta&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="126"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5399"/></proof>
  </goal>
  <goal name="delta&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5368"/></proof>
  </goal>
  <goal name="delta&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5558"/></proof>
  </goal>
  <goal name="delta&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="151"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5686"/></proof>
  </goal>
  <goal name="delta&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="123"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5919"/></proof>
  </goal>
  <goal name="delta&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="201"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="6862"/></proof>
  </goal>
  <goal name="delta&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="97"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5425"/></proof>
  </goal>
  <goal name="delta&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="109"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="6362"/></proof>
  </goal>
  <goal name="delta&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="23"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5485"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="big_lt&#39;vc" expl="VC for big_lt" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="90"/></proof>
 <proof prover="2"><result status="valid" time="0.05" steps="5341"/></proof>
 </goal>
 <goal name="sum_bounds&#39;vc" expl="VC for sum_bounds" proved="true">
 <proof prover="1"><result status="valid" time="1.28" steps="1711"/></proof>
 <proof prover="2"><result status="valid" time="0.07" steps="9851"/></proof>
 </goal>
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5071"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4273"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="11"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="5551"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4644"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="53"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="6165"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4706"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="100"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8159"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="74"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6597"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6562"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="4959"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="7767"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5222"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5012"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8564"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5453"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="60"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5795"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="138"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8183"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="68"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6116"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="151"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="11907"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="251"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="19145"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="354"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="12226"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="90"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="8919"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="91"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="8923"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="96"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="6099"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="305"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="21484"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="313"/></proof>
  <proof prover="2"><result status="valid" time="0.49" steps="47700"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="100"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6563"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="104"/></proof>
  <proof prover="2"><result status="valid" time="1.86" steps="166494"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="327"/></proof>
  <proof prover="2"><result status="valid" time="1.00" steps="93748"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="88"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="6021"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="278"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="17988"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="286"/></proof>
  <proof prover="2"><result status="valid" time="2.06" steps="234432"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="92"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="6399"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="93"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="6127"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="99"/></proof>
  <proof prover="2"><result status="valid" time="1.62" steps="127779"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="56"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5792"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="63"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="8012"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.37" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5450"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.38" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="9"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="20806"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
