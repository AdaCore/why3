<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../linear_probing.mlw">
<theory name="HashedTypeWithDummy" sum="33567b37e99bc94929392f49e43eccd3">
 <goal name="VC neq" expl="VC for neq">
 <proof prover="1"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC dummy" expl="VC for dummy">
 <proof prover="1"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="LinearProbing" sum="bc3606b531c7362016bb949c5a4444bd">
 <goal name="VC bucket" expl="VC for bucket">
 <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="NumOfDummy.VC numof_eq" expl="VC for numof_eq">
 <proof prover="2"><result status="valid" time="4.28"/></proof>
 </goal>
 <goal name="NumOfDummy.VC dummy_const" expl="VC for dummy_const">
 <proof prover="1"><result status="valid" time="0.10" steps="251"/></proof>
 </goal>
 <goal name="VC numof_update" expl="VC for numof_update">
 <proof prover="1"><result status="valid" time="0.74" steps="1438"/></proof>
 </goal>
 <goal name="VC create" expl="VC for create">
 <proof prover="1"><result status="valid" time="0.02" steps="56"/></proof>
 </goal>
 <goal name="VC clear" expl="VC for clear">
 <proof prover="1"><result status="valid" time="0.07" steps="187"/></proof>
 </goal>
 <goal name="VC next" expl="VC for next">
 <proof prover="1"><result status="valid" time="0.01" steps="1"/></proof>
 </goal>
 <goal name="VC find" expl="VC for find">
 <transf name="split_goal_wp">
  <goal name="VC find.1" expl="1. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
  <goal name="VC find.2" expl="2. index in array bounds">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC find.3" expl="3. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC find.4" expl="4. variant decrease">
  <proof prover="3"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC find.5" expl="5. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC find.6" expl="6. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC find.7" expl="7. precondition">
  <proof prover="1"><result status="valid" time="0.04" steps="174"/></proof>
  </goal>
  <goal name="VC find.8" expl="8. precondition">
  <proof prover="1"><result status="valid" time="0.04" steps="186"/></proof>
  </goal>
  <goal name="VC find.9" expl="9. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC find.10" expl="10. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC find.11" expl="11. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
  <goal name="VC find.12" expl="12. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC find.13" expl="13. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC find.14" expl="14. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC find.15" expl="15. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC find.16" expl="16. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC find.17" expl="17. postcondition">
  <proof prover="1"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC find.18" expl="18. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mem" expl="VC for mem">
 <proof prover="2"><result status="valid" time="1.98"/></proof>
 </goal>
 <goal name="VC resize" expl="VC for resize">
 <transf name="split_goal_wp">
  <goal name="VC resize.1" expl="1. array creation size">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC resize.2" expl="2. loop bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC resize.3" expl="3. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="VC resize.4" expl="4. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC resize.5" expl="5. loop invariant init">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC resize.6" expl="6. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC resize.7" expl="7. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC resize.8" expl="8. precondition">
  <proof prover="1"><result status="valid" time="0.03" steps="79"/></proof>
  </goal>
  <goal name="VC resize.9" expl="9. assertion">
  <proof prover="2"><result status="valid" time="2.82"/></proof>
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC resize.10" expl="10. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC resize.11" expl="11. assertion">
  <proof prover="3"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC resize.12" expl="12. loop invariant preservation">
  <proof prover="3"><result status="valid" time="0.99"/></proof>
  </goal>
  <goal name="VC resize.13" expl="13. loop invariant preservation">
  <proof prover="3"><result status="valid" time="1.21"/></proof>
  </goal>
  <goal name="VC resize.14" expl="14. loop invariant preservation">
  <transf name="split_goal_wp">
   <goal name="VC resize.14.1" expl="1. loop invariant preservation">
   <proof prover="3"><result status="valid" time="0.46"/></proof>
   </goal>
   <goal name="VC resize.14.2" expl="2. loop invariant preservation">
   <proof prover="0"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC resize.14.3" expl="3. loop invariant preservation">
   <proof prover="0"><result status="valid" time="0.47"/></proof>
   </goal>
   <goal name="VC resize.14.4" expl="4. loop invariant preservation">
   <proof prover="3"><result status="valid" time="1.68"/></proof>
   </goal>
   <goal name="VC resize.14.5" expl="5. loop invariant preservation">
   <proof prover="0"><result status="valid" time="4.48"/></proof>
   </goal>
   <goal name="VC resize.14.6" expl="6. loop invariant preservation">
   <proof prover="3"><result status="valid" time="1.28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC resize.15" expl="15. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="VC resize.16" expl="16. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC resize.17" expl="17. loop invariant preservation">
  <proof prover="3"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC resize.18" expl="18. type invariant">
  <transf name="split_goal_wp">
   <goal name="VC resize.18.1" expl="1. VC for resize">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC resize.18.2" expl="2. VC for resize">
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC resize.18.3" expl="3. VC for resize">
   <proof prover="2"><result status="valid" time="0.03"/></proof>
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC resize.18.4" expl="4. VC for resize">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   <metas>
    <ts_pos name="real" arity="0" id="real" ip_theory="BuiltIn">
     <ip_library name="why3"/>
     <ip_library name="BuiltIn"/>
     <ip_qualid name="real"/>
    </ts_pos>
    <ts_pos name="tuple0" arity="0" id="tuple0" ip_theory="Tuple0">
     <ip_library name="why3"/>
     <ip_library name="Tuple0"/>
     <ip_qualid name="tuple0"/>
    </ts_pos>
    <ts_pos name="unit" arity="0" id="unit" ip_theory="Unit">
     <ip_library name="why3"/>
     <ip_library name="Unit"/>
     <ip_qualid name="unit"/>
    </ts_pos>
    <ts_pos name="option" arity="1" id="option" ip_theory="Option">
     <ip_library name="option"/>
     <ip_qualid name="option"/>
    </ts_pos>
    <ts_pos name="list" arity="1" id="list" ip_theory="List">
     <ip_library name="list"/>
     <ip_qualid name="list"/>
    </ts_pos>
    <ts_pos name="map" arity="2" id="map" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="map"/>
    </ts_pos>
    <ts_pos name="ref" arity="1" id="ref" ip_theory="Ref">
     <ip_library name="ref"/>
     <ip_qualid name="ref"/>
    </ts_pos>
    <ls_pos name="infix =" id="infix =" ip_theory="BuiltIn">
     <ip_library name="why3"/>
     <ip_library name="BuiltIn"/>
     <ip_qualid name="infix ="/>
    </ls_pos>
    <ls_pos name="infix @" id="infix @" ip_theory="HighOrd">
     <ip_library name="why3"/>
     <ip_library name="HighOrd"/>
     <ip_qualid name="infix @"/>
    </ls_pos>
    <ls_pos name="zero" id="zero" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="zero"/>
    </ls_pos>
    <ls_pos name="one" id="one" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="one"/>
    </ls_pos>
    <ls_pos name="prefix -" id="prefix -" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="prefix -"/>
    </ls_pos>
    <ls_pos name="infix +" id="infix +" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix +"/>
    </ls_pos>
    <ls_pos name="infix *" id="infix *" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix *"/>
    </ls_pos>
    <ls_pos name="infix &lt;" id="infix &lt;" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix &lt;"/>
    </ls_pos>
    <ls_pos name="infix &gt;" id="infix &gt;" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix &gt;"/>
    </ls_pos>
    <ls_pos name="infix &gt;=" id="infix &gt;=" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix &gt;="/>
    </ls_pos>
    <ls_pos name="abs" id="abs" ip_theory="Abs">
     <ip_library name="int"/>
     <ip_qualid name="abs"/>
    </ls_pos>
    <ls_pos name="div" id="div" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="div"/>
    </ls_pos>
    <ls_pos name="mod" id="mod" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="mod"/>
    </ls_pos>
    <ls_pos name="numof" id="numof" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="numof"/>
    </ls_pos>
    <ls_pos name="keym" id="keym" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="keym"/>
    </ls_pos>
    <ls_pos name="eq" id="eq" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="eq"/>
    </ls_pos>
    <ls_pos name="hash" id="hash" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="hash"/>
    </ls_pos>
    <ls_pos name="dummy" id="dummy" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="dummy"/>
    </ls_pos>
    <ls_pos name="is_none" id="is_none" ip_theory="Option">
     <ip_library name="option"/>
     <ip_qualid name="is_none"/>
    </ls_pos>
    <ls_pos name="is_nil" id="is_nil" ip_theory="List">
     <ip_library name="list"/>
     <ip_qualid name="is_nil"/>
    </ls_pos>
    <ls_pos name="mem" id="mem" ip_theory="Mem">
     <ip_library name="list"/>
     <ip_qualid name="mem"/>
    </ls_pos>
    <ls_pos name="set" id="set" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="set"/>
    </ls_pos>
    <ls_pos name="mixfix []" id="mixfix []" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="mixfix []"/>
    </ls_pos>
    <ls_pos name="mixfix [&lt;-]" id="mixfix [&lt;-]" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="mixfix [&lt;-]"/>
    </ls_pos>
    <ls_pos name="const" id="const" ip_theory="Const">
     <ip_library name="map"/>
     <ip_qualid name="const"/>
    </ls_pos>
    <ls_pos name="prefix !" id="prefix !" ip_theory="Ref">
     <ip_library name="ref"/>
     <ip_qualid name="prefix !"/>
    </ls_pos>
    <ls_pos name="elts" id="elts" ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="elts"/>
    </ls_pos>
    <ls_pos name="length" id="length" ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="length"/>
    </ls_pos>
    <ls_pos name="mixfix [&lt;-]" id="mixfix [&lt;-]1" ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="mixfix [&lt;-]"/>
    </ls_pos>
    <ls_pos name="bucket" id="bucket" ip_theory="LinearProbing">
     <ip_qualid name="bucket"/>
    </ls_pos>
    <ls_pos name="size" id="size" ip_theory="LinearProbing">
     <ip_qualid name="size"/>
    </ls_pos>
    <ls_pos name="data" id="data" ip_theory="LinearProbing">
     <ip_qualid name="data"/>
    </ls_pos>
    <ls_pos name="view" id="view" ip_theory="LinearProbing">
     <ip_qualid name="view"/>
    </ls_pos>
    <ls_pos name="loc" id="loc" ip_theory="LinearProbing">
     <ip_qualid name="loc"/>
    </ls_pos>
    <ls_pos name="next" id="next" ip_theory="LinearProbing">
     <ip_qualid name="next"/>
    </ls_pos>
    <pr_pos name="Assoc" id="Assoc" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Assoc"/>
    </pr_pos>
    <pr_pos name="Unit_def_l" id="Unit_def_l" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Unit_def_l"/>
    </pr_pos>
    <pr_pos name="Unit_def_r" id="Unit_def_r" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Unit_def_r"/>
    </pr_pos>
    <pr_pos name="Inv_def_l" id="Inv_def_l" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Inv_def_l"/>
    </pr_pos>
    <pr_pos name="Inv_def_r" id="Inv_def_r" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Inv_def_r"/>
    </pr_pos>
    <pr_pos name="Comm" id="Comm" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Comm"/>
    </pr_pos>
    <pr_pos name="Assoc" id="Assoc1" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="MulAssoc"/>
     <ip_qualid name="Assoc"/>
    </pr_pos>
    <pr_pos name="Mul_distr_l" id="Mul_distr_l" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Mul_distr_l"/>
    </pr_pos>
    <pr_pos name="Mul_distr_r" id="Mul_distr_r" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Mul_distr_r"/>
    </pr_pos>
    <pr_pos name="Comm" id="Comm1" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="MulComm"/>
     <ip_qualid name="Comm"/>
    </pr_pos>
    <pr_pos name="Unitary" id="Unitary" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Unitary"/>
    </pr_pos>
    <pr_pos name="NonTrivialRing" id="NonTrivialRing" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="NonTrivialRing"/>
    </pr_pos>
    <pr_pos name="Refl" id="Refl" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Refl"/>
    </pr_pos>
    <pr_pos name="Trans" id="Trans" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Trans"/>
    </pr_pos>
    <pr_pos name="Antisymm" id="Antisymm" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Antisymm"/>
    </pr_pos>
    <pr_pos name="Total" id="Total" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Total"/>
    </pr_pos>
    <pr_pos name="ZeroLessOne" id="ZeroLessOne" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="ZeroLessOne"/>
    </pr_pos>
    <pr_pos name="CompatOrderAdd" id="CompatOrderAdd" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="CompatOrderAdd"/>
    </pr_pos>
    <pr_pos name="CompatOrderMult" id="CompatOrderMult" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="CompatOrderMult"/>
    </pr_pos>
    <pr_pos name="Abs_le" id="Abs_le" ip_theory="Abs">
     <ip_library name="int"/>
     <ip_qualid name="Abs_le"/>
    </pr_pos>
    <pr_pos name="Abs_pos" id="Abs_pos" ip_theory="Abs">
     <ip_library name="int"/>
     <ip_qualid name="Abs_pos"/>
    </pr_pos>
    <pr_pos name="Div_mod" id="Div_mod" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Div_mod"/>
    </pr_pos>
    <pr_pos name="Div_bound" id="Div_bound" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Div_bound"/>
    </pr_pos>
    <pr_pos name="Mod_bound" id="Mod_bound" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Mod_bound"/>
    </pr_pos>
    <pr_pos name="Div_sign_pos" id="Div_sign_pos"
     ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Div_sign_pos"/>
    </pr_pos>
    <pr_pos name="Div_sign_neg" id="Div_sign_neg"
     ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Div_sign_neg"/>
    </pr_pos>
    <pr_pos name="Mod_sign_pos" id="Mod_sign_pos"
     ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Mod_sign_pos"/>
    </pr_pos>
    <pr_pos name="Mod_sign_neg" id="Mod_sign_neg"
     ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Mod_sign_neg"/>
    </pr_pos>
    <pr_pos name="Rounds_toward_zero" id="Rounds_toward_zero"
     ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Rounds_toward_zero"/>
    </pr_pos>
    <pr_pos name="Div_1" id="Div_1" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Div_1"/>
    </pr_pos>
    <pr_pos name="Mod_1" id="Mod_1" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Mod_1"/>
    </pr_pos>
    <pr_pos name="Div_inf" id="Div_inf" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Div_inf"/>
    </pr_pos>
    <pr_pos name="Mod_inf" id="Mod_inf" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Mod_inf"/>
    </pr_pos>
    <pr_pos name="Div_mult" id="Div_mult" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Div_mult"/>
    </pr_pos>
    <pr_pos name="Mod_mult" id="Mod_mult" ip_theory="ComputerDivision">
     <ip_library name="int"/>
     <ip_qualid name="Mod_mult"/>
    </pr_pos>
    <pr_pos name="numof_def" id="numof_def" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="numof_def"/>
    </pr_pos>
    <pr_pos name="Numof_bounds" id="Numof_bounds" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="Numof_bounds"/>
    </pr_pos>
    <pr_pos name="Numof_append" id="Numof_append" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="Numof_append"/>
    </pr_pos>
    <pr_pos name="Numof_left_no_add" id="Numof_left_no_add"
     ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="Numof_left_no_add"/>
    </pr_pos>
    <pr_pos name="Numof_left_add" id="Numof_left_add" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="Numof_left_add"/>
    </pr_pos>
    <pr_pos name="Empty" id="Empty" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="Empty"/>
    </pr_pos>
    <pr_pos name="Full" id="Full" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="Full"/>
    </pr_pos>
    <pr_pos name="numof_increasing" id="numof_increasing" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="numof_increasing"/>
    </pr_pos>
    <pr_pos name="numof_strictly_increasing" id="numof_strictly_increasing"
     ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="numof_strictly_increasing"/>
    </pr_pos>
    <pr_pos name="numof_change_any" id="numof_change_any" ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="numof_change_any"/>
    </pr_pos>
    <pr_pos name="numof_change_some" id="numof_change_some"
     ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="numof_change_some"/>
    </pr_pos>
    <pr_pos name="numof_change_equiv" id="numof_change_equiv"
     ip_theory="NumOf">
     <ip_library name="int"/>
     <ip_qualid name="numof_change_equiv"/>
    </pr_pos>
    <pr_pos name="eq_spec" id="eq_spec" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="eq_spec"/>
    </pr_pos>
    <pr_pos name="neq_spec" id="neq_spec" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="neq_spec"/>
    </pr_pos>
    <pr_pos name="hash_nonneg" id="hash_nonneg" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="hash_nonneg"/>
    </pr_pos>
    <pr_pos name="hash_eq" id="hash_eq" ip_theory="LinearProbing">
     <ip_qualid name="HashedTypeWithDummy"/>
     <ip_qualid name="hash_eq"/>
    </pr_pos>
    <pr_pos name="is_none_spec" id="is_none_spec" ip_theory="Option">
     <ip_library name="option"/>
     <ip_qualid name="is_none_spec"/>
    </pr_pos>
    <pr_pos name="is_nil_spec" id="is_nil_spec" ip_theory="List">
     <ip_library name="list"/>
     <ip_qualid name="is_nil_spec"/>
    </pr_pos>
    <pr_pos name="set_def" id="set_def" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="set_def"/>
    </pr_pos>
    <pr_pos name="const_def" id="const_def" ip_theory="Const">
     <ip_library name="map"/>
     <ip_qualid name="const_def"/>
    </pr_pos>
    <pr_pos name="array&apos;invariant" id="array&apos;invariant"
     ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="array&apos;invariant"/>
    </pr_pos>
    <pr_pos name="mixfix [&lt;-]_spec" id="mixfix [&lt;-]_spec"
     ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="mixfix [&lt;-]_spec"/>
    </pr_pos>
    <pr_pos name="bucket_spec" id="bucket_spec" ip_theory="LinearProbing">
     <ip_qualid name="bucket_spec"/>
    </pr_pos>
    <pr_pos name="bucket_def" id="bucket_def" ip_theory="LinearProbing">
     <ip_qualid name="bucket_def"/>
    </pr_pos>
    <pr_pos name="numof_eq" id="numof_eq" ip_theory="LinearProbing">
     <ip_qualid name="NumOfDummy"/>
     <ip_qualid name="numof_eq"/>
    </pr_pos>
    <pr_pos name="dummy_const" id="dummy_const" ip_theory="LinearProbing">
     <ip_qualid name="NumOfDummy"/>
     <ip_qualid name="dummy_const"/>
    </pr_pos>
    <meta name="remove_logic">
     <meta_arg_ls id="infix ="/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix @"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="zero"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="one"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="prefix -"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix +"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix *"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix &lt;"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix &gt;"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix &gt;="/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="abs"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="div"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mod"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="numof"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="keym"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="eq"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="hash"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="dummy"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="is_none"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="is_nil"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mem"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="set"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mixfix []"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mixfix [&lt;-]"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="const"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="prefix !"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="elts"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="length"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mixfix [&lt;-]1"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="bucket"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="size"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="data"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="view"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="loc"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="next"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Assoc"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Unit_def_l"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Unit_def_r"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Inv_def_l"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Inv_def_r"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Comm"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Assoc1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mul_distr_l"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mul_distr_r"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Comm1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Unitary"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="NonTrivialRing"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Refl"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Trans"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Antisymm"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Total"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="ZeroLessOne"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="CompatOrderAdd"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="CompatOrderMult"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Abs_le"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Abs_pos"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Div_mod"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Div_bound"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mod_bound"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Div_sign_pos"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Div_sign_neg"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mod_sign_pos"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mod_sign_neg"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Rounds_toward_zero"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Div_1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mod_1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Div_inf"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mod_inf"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Div_mult"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mod_mult"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="numof_def"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Numof_bounds"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Numof_append"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Numof_left_no_add"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Numof_left_add"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Empty"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Full"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="numof_increasing"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="numof_strictly_increasing"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="numof_change_any"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="numof_change_some"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="numof_change_equiv"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="eq_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="neq_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="hash_nonneg"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="hash_eq"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="is_none_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="is_nil_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="set_def"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="const_def"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="array&apos;invariant"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="mixfix [&lt;-]_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="bucket_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="bucket_def"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="numof_eq"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="dummy_const"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="real"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="tuple0"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="unit"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="option"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="list"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="map"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="ref"/>
    </meta>
    <goal name="VC resize.18.4" expl="4. VC for resize">
    <transf name="eliminate_builtin">
     <goal name="VC resize.18.4.1" expl="1. VC for resize">
     <proof prover="0"><result status="valid" time="0.06"/></proof>
     <proof prover="3"><result status="valid" time="0.02"/></proof>
     </goal>
    </transf>
    </goal>
   </metas>
   </goal>
  </transf>
  </goal>
  <goal name="VC resize.19" expl="19. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC add" expl="VC for add">
 <transf name="split_goal_wp">
  <goal name="VC add.1" expl="1. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC add.2" expl="2. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC add.3" expl="3. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC add.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC add.5" expl="5. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC add.6" expl="6. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC add.7" expl="7. assertion">
  <proof prover="3"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC add.8" expl="8. type invariant">
  <transf name="split_goal_wp">
   <goal name="VC add.8.1" expl="1. VC for add">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add.8.2" expl="2. VC for add">
   <proof prover="3"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC add.8.3" expl="3. VC for add">
   <proof prover="3"><result status="valid" time="0.99"/></proof>
   </goal>
   <goal name="VC add.8.4" expl="4. VC for add">
   <transf name="introduce_premises">
    <goal name="VC add.8.4.1" expl="1. VC for add">
    <transf name="inline_goal">
     <goal name="VC add.8.4.1.1" expl="1. VC for add">
     <transf name="split_goal_wp">
      <goal name="VC add.8.4.1.1.1" expl="1. VC for add">
      <proof prover="1"><result status="valid" time="0.03" steps="117"/></proof>
      </goal>
      <goal name="VC add.8.4.1.1.2" expl="2. VC for add">
      <proof prover="1"><result status="valid" time="0.14" steps="217"/></proof>
      </goal>
      <goal name="VC add.8.4.1.1.3" expl="3. VC for add">
      <transf name="inline_all">
       <goal name="VC add.8.4.1.1.3.1" expl="1. VC for add">
       <proof prover="1"><result status="valid" time="0.79" steps="764"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC add.8.4.1.1.4" expl="4. VC for add">
      <proof prover="3"><result status="valid" time="0.37"/></proof>
      </goal>
      <goal name="VC add.8.4.1.1.5" expl="5. VC for add">
      <proof prover="3"><result status="valid" time="0.16"/></proof>
      </goal>
      <goal name="VC add.8.4.1.1.6" expl="6. VC for add">
      <transf name="inline_all">
       <goal name="VC add.8.4.1.1.6.1" expl="1. VC for add">
       <proof prover="1"><result status="valid" time="0.19" steps="238"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC add.8.4.1.1.7" expl="7. VC for add">
      <proof prover="1"><result status="valid" time="1.73" steps="1339"/></proof>
      </goal>
      <goal name="VC add.8.4.1.1.8" expl="8. VC for add">
      <proof prover="1"><result status="valid" time="0.36" steps="360"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add.9" expl="9. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="VC add.10" expl="10. type invariant">
  <proof prover="2"><result status="valid" time="2.26"/></proof>
  </goal>
  <goal name="VC add.11" expl="11. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC copy" expl="VC for copy">
 <proof prover="2"><result status="valid" time="2.61"/></proof>
 </goal>
 <goal name="VC find_dummy" expl="VC for find_dummy">
 <proof prover="1"><result status="valid" time="0.42" steps="1062"/></proof>
 </goal>
 <goal name="VC delete" expl="VC for delete">
 <transf name="split_goal_wp">
  <goal name="VC delete.1" expl="1. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC delete.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC delete.3" expl="3. variant decrease">
  <proof prover="1"><result status="valid" time="0.03" steps="115"/></proof>
  </goal>
  <goal name="VC delete.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC delete.5" expl="5. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC delete.6" expl="6. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="VC delete.7" expl="7. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC delete.8" expl="8. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC delete.9" expl="9. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC delete.10" expl="10. precondition">
  <proof prover="1"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
  <goal name="VC delete.11" expl="11. precondition">
  <proof prover="1"><result status="valid" time="0.10" steps="423"/></proof>
  </goal>
  <goal name="VC delete.12" expl="12. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC delete.13" expl="13. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC delete.14" expl="14. precondition">
  <proof prover="1"><result status="valid" time="1.42" steps="1543"/></proof>
  </goal>
  <goal name="VC delete.15" expl="15. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC delete.16" expl="16. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC delete.17" expl="17. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC delete.18" expl="18. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC delete.19" expl="19. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC delete.20" expl="20. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC delete.21" expl="21. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="VC delete.22" expl="22. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="90"/></proof>
  </goal>
  <goal name="VC delete.23" expl="23. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC delete.24" expl="24. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC delete.25" expl="25. index in array bounds">
  <proof prover="1"><result status="valid" time="0.06" steps="201"/></proof>
  </goal>
  <goal name="VC delete.26" expl="26. precondition">
  <proof prover="1"><result status="valid" time="0.08" steps="233"/></proof>
  </goal>
  <goal name="VC delete.27" expl="27. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="VC delete.28" expl="28. precondition">
  <proof prover="1"><result status="valid" time="0.12" steps="317"/></proof>
  </goal>
  <goal name="VC delete.29" expl="29. variant decrease">
  <proof prover="1"><result status="valid" time="0.07" steps="178"/></proof>
  </goal>
  <goal name="VC delete.30" expl="30. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC delete.31" expl="31. precondition">
  <proof prover="1"><result status="valid" time="0.08" steps="240"/></proof>
  </goal>
  <goal name="VC delete.32" expl="32. precondition">
  <proof prover="1"><result status="valid" time="0.08" steps="240"/></proof>
  </goal>
  <goal name="VC delete.33" expl="33. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="VC delete.34" expl="34. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="VC delete.35" expl="35. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="62"/></proof>
  </goal>
  <goal name="VC delete.36" expl="36. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="VC delete.37" expl="37. precondition">
  <proof prover="3"><result status="valid" time="0.43"/></proof>
  </goal>
  <goal name="VC delete.38" expl="38. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC delete.39" expl="39. precondition">
  <transf name="split_goal_wp">
   <goal name="VC delete.39.1" expl="1. precondition">
   <proof prover="0"><result status="valid" time="0.44"/></proof>
   </goal>
   <goal name="VC delete.39.2" expl="2. precondition">
   <proof prover="0"><result status="valid" time="0.90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC delete.40" expl="40. precondition">
  <proof prover="3"><result status="valid" time="3.24"/></proof>
  </goal>
  <goal name="VC delete.41" expl="41. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="VC delete.42" expl="42. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="VC delete.43" expl="43. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC delete.44" expl="44. postcondition">
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  <proof prover="3"><result status="valid" time="0.15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC remove" expl="VC for remove">
 <transf name="split_goal_wp">
  <goal name="VC remove.1" expl="1. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC remove.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC remove.3" expl="3. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC remove.4" expl="4. index in array bounds">
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC remove.5" expl="5. assertion">
  <proof prover="3"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC remove.6" expl="6. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC remove.7" expl="7. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC remove.8" expl="8. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="VC remove.9" expl="9. precondition">
  <proof prover="3"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="VC remove.10" expl="10. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="109"/></proof>
  </goal>
  <goal name="VC remove.11" expl="11. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC remove.12" expl="12. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC remove.13" expl="13. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC remove.14" expl="14. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC remove.15" expl="15. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC remove.16" expl="16. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC remove.17" expl="17. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC remove.18" expl="18. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="VC remove.19" expl="19. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="70"/></proof>
  </goal>
  <goal name="VC remove.20" expl="20. precondition">
  <proof prover="1"><result status="valid" time="0.45" steps="601"/></proof>
  </goal>
  <goal name="VC remove.21" expl="21. precondition">
  <proof prover="1"><result status="valid" time="2.91" steps="1614"/></proof>
  </goal>
  <goal name="VC remove.22" expl="22. type invariant">
  <proof prover="3"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC remove.23" expl="23. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="VC remove.24" expl="24. postcondition">
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  <proof prover="3"><result status="valid" time="1.93"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
