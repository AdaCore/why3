<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Z3" version="4.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.1.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Coq" version="8.11.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="vstte12_tree_reconstruction.mlw"/>
<theory name="Tree" proved="true">
 <goal name="depths_head" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="depths_head.0" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="131"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="depths_unique&#39;vc" expl="VC for depths_unique" proved="true">
 <proof prover="3"><result status="valid" time="0.09" steps="864"/></proof>
 </goal>
 <goal name="depths_prefix" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="depths_prefix.0" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="175"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="depths_prefix_simple" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="88827"/></proof>
 </goal>
 <goal name="depths_subtree&#39;vc" expl="VC for depths_subtree" proved="true">
 <proof prover="3"><result status="valid" time="0.08" steps="442"/></proof>
 </goal>
 <goal name="depths_unique2" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
<theory name="TreeReconstruction" proved="true">
 <goal name="build_rec&#39;vc" expl="VC for build_rec" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="build_rec&#39;vc.0" expl="exceptional postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="build_rec&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="9378"/></proof>
  </goal>
  <goal name="build_rec&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="64"/></proof>
  </goal>
  <goal name="build_rec&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="build_rec&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="build_rec&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="build_rec&#39;vc.6" expl="exceptional postcondition" proved="true">
  <proof prover="5"><path name="vstte12_tree_reconstruction_TreeReconstruction_VC_build_rec_1.v"/><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="build_rec&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="5"><path name="vstte12_tree_reconstruction_TreeReconstruction_VC_build_rec_2.v"/><result status="valid" time="0.32"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="build&#39;vc" expl="VC for build" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
</theory>
<theory name="Harness" proved="true">
 <goal name="harness&#39;vc" expl="VC for harness" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="harness&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><path name="vstte12_tree_reconstruction_Harness_VC_harness_1.v"/><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="harness&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="5"><path name="vstte12_tree_reconstruction_Harness_VC_harness_2.v"/><result status="valid" time="0.28"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="harness2&#39;vc" expl="VC for harness2" proved="true">
 <proof prover="5"><path name="vstte12_tree_reconstruction_Harness_VC_harness2_1.v"/><result status="valid" time="0.45"/></proof>
 </goal>
</theory>
<theory name="ZipperBasedTermination" proved="true">
 <goal name="tc&#39;vc" expl="VC for tc" proved="true">
 <proof prover="4" timelimit="1"><result status="valid" time="0.56" steps="85717"/></proof>
 </goal>
</theory>
<theory name="ZipperBased" proved="true">
 <goal name="forest_depths_append" proved="true">
 <proof prover="5" timelimit="10" memlimit="0"><path name="vstte12_tree_reconstruction_WP_ZipperBased_forest_depths_append_1.v"/><result status="valid" time="0.29"/></proof>
 </goal>
 <goal name="g_append" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="g_append.0" proved="true">
  <proof prover="3"><result status="valid" time="0.14" steps="569"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="depths_length" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="depths_length.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.04" steps="7902"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="forest_depths_length" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="forest_depths_length.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.06" steps="8968"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="g_tail" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="g_tail.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.08" steps="14072"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="key_lemma" proved="true">
 <proof prover="5"><path name="vstte12_tree_reconstruction_ZipperBased_key_lemma_2.v"/><result status="valid" time="0.52"/></proof>
 </goal>
 <goal name="right_nil" proved="true">
 <proof prover="5" timelimit="29" memlimit="0"><path name="vstte12_tree_reconstruction_WP_ZipperBased_right_nil_1.v"/><result status="valid" time="0.33"/></proof>
 </goal>
 <goal name="main_lemma" proved="true">
 <proof prover="4" timelimit="1"><result status="valid" time="0.07" steps="13066"/></proof>
 </goal>
 <goal name="tc&#39;vc" expl="VC for tc" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="tc&#39;vc.0" expl="exceptional postcondition" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.16" steps="16820"/></proof>
  </goal>
  <goal name="tc&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.04" steps="13638"/></proof>
  </goal>
  <goal name="tc&#39;vc.2" expl="exceptional postcondition" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.05" steps="13765"/></proof>
  </goal>
  <goal name="tc&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.04" steps="14600"/></proof>
  </goal>
  <goal name="tc&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.11" steps="14768"/></proof>
  </goal>
  <goal name="tc&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="30690"/></proof>
  </goal>
  <goal name="tc&#39;vc.6" expl="exceptional postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.33" steps="59891"/></proof>
  </goal>
  <goal name="tc&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="14351"/></proof>
  </goal>
  <goal name="tc&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.98" steps="2919"/></proof>
  </goal>
  <goal name="tc&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="11578"/></proof>
  </goal>
  <goal name="tc&#39;vc.10" expl="exceptional postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="13956"/></proof>
  </goal>
  <goal name="tc&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="12945"/></proof>
  </goal>
  <goal name="tc&#39;vc.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="14198"/></proof>
  </goal>
  <goal name="tc&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="10952"/></proof>
  </goal>
  <goal name="tc&#39;vc.14" expl="exceptional postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="12680"/></proof>
  </goal>
  <goal name="tc&#39;vc.15" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="14747"/></proof>
  </goal>
  <goal name="tc&#39;vc.16" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="15119"/></proof>
  </goal>
  <goal name="tc&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="39937"/></proof>
  </goal>
  <goal name="tc&#39;vc.18" expl="exceptional postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.51" steps="73250"/></proof>
  </goal>
  <goal name="tc&#39;vc.19" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="14561"/></proof>
  </goal>
  <goal name="tc&#39;vc.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.74" steps="2227"/></proof>
  </goal>
  <goal name="tc&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="11620"/></proof>
  </goal>
  <goal name="tc&#39;vc.22" expl="exceptional postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="14088"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="map_leaf_depths" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="map_leaf_depths.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.05" steps="17290"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="map_leaf_only_leaf" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="map_leaf_only_leaf.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.05" steps="16157"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="build&#39;vc" expl="VC for build" proved="true">
 <proof prover="4" timelimit="1"><result status="valid" time="0.06" steps="19817"/></proof>
 </goal>
</theory>
</file>
</why3session>
