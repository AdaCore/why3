<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.8.10" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_2021_lexicographic_permutations_2.mlw"/>
<theory name="ArrayListConversions" proved="true">
 <goal name="to_list_from&#39;vc" expl="VC for to_list_from" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.15" steps="15266"/></proof>
 </goal>
 <goal name="to_list&#39;vc" expl="VC for to_list" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="5153"/></proof>
 </goal>
 <goal name="to_list_array_eq&#39;vc" expl="VC for to_list_array_eq" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.05" steps="10820"/></proof>
 </goal>
 <goal name="of_list&#39;vc" expl="VC for of_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="of_list&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="5340"/></proof>
  </goal>
  <goal name="of_list&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.05" steps="7297"/></proof>
  </goal>
  <goal name="of_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="6637"/></proof>
  </goal>
  <goal name="of_list&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.06" steps="7560"/></proof>
  </goal>
  <goal name="of_list&#39;vc.4" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="of_list&#39;vc.4.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="7958"/></proof>
   </goal>
   <goal name="of_list&#39;vc.4.1" expl="VC for of_list" proved="true">
   <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="7999"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="of_list&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="8302"/></proof>
  </goal>
  <goal name="of_list&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="7282"/></proof>
  </goal>
  <goal name="of_list&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="7893"/></proof>
  </goal>
  <goal name="of_list&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.08" steps="874"/></proof>
  </goal>
  <goal name="of_list&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.08" steps="9985"/></proof>
  </goal>
  <goal name="of_list&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.08" steps="9413"/></proof>
  </goal>
  <goal name="of_list&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="5573"/></proof>
  </goal>
  <goal name="of_list&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="5591"/></proof>
  </goal>
  <goal name="of_list&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="5869"/></proof>
  </goal>
  <goal name="of_list&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="6645"/></proof>
  </goal>
  <goal name="of_list&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.05" steps="7246"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eq_nth&#39;vc" expl="VC for eq_nth" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eq_nth&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.04" steps="815"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eq_nth&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="7563"/></proof>
   </goal>
   <goal name="eq_nth&#39;vc.1.1" expl="VC for eq_nth" proved="true">
   <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="7561"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eq_nth&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="6248"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.05" steps="7477"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="6950"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="6988"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.24" steps="1654283"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="of_to_list" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.45" steps="6093"/></proof>
 </goal>
 <goal name="to_of_list" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.01" steps="89"/></proof>
 </goal>
</theory>
<theory name="BoxedIntArrays" proved="true">
 <goal name="boxed_permut" proved="true">
 <proof prover="0"><result status="valid" time="0.22" steps="49095"/></proof>
 </goal>
 <goal name="greater&#39;vc" expl="VC for greater" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="18941"/></proof>
 </goal>
 <goal name="boxed_greater" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="10647"/></proof>
 </goal>
 <goal name="maxi&#39;vc" expl="VC for maxi" proved="true">
 <proof prover="3"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Permut" proved="true">
 <goal name="find_eq&#39;vc" expl="VC for find_eq" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="79"/></proof>
 </goal>
 <goal name="lt_trans" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="342"/></proof>
 </goal>
 <goal name="find_le&#39;vc" expl="VC for find_le" proved="true">
 <proof prover="0"><result status="valid" time="0.15" steps="28320"/></proof>
 </goal>
 <goal name="eq_le_compat" proved="true">
 <proof prover="0"><result status="valid" time="0.21" steps="44971"/></proof>
 </goal>
 <goal name="eq_lt_compat" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="23253"/></proof>
 </goal>
 <goal name="le_or_lt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="le_or_lt.0" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="15733"/></proof>
  </goal>
  <goal name="le_or_lt.1" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="15806"/></proof>
  </goal>
  <goal name="le_or_lt.2" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="15934"/></proof>
  </goal>
  <goal name="le_or_lt.3" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="37386"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="lt_not_le" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lt_not_le.0" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="15692"/></proof>
  </goal>
  <goal name="lt_not_le.1" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="12398"/></proof>
  </goal>
  <goal name="lt_not_le.2" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="15806"/></proof>
  </goal>
  <goal name="lt_not_le.3" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="24902"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eq_sub_permut&#39;vc" expl="VC for eq_sub_permut" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="4537"/></proof>
 </goal>
 <goal name="le_permut_sorted" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="le_permut_sorted.0" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="17069"/></proof>
  </goal>
  <goal name="le_permut_sorted.1" proved="true">
  <proof prover="0"><result status="valid" time="0.25" steps="46350"/></proof>
  </goal>
  <goal name="le_permut_sorted.2" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="85037"/></proof>
  </goal>
  <goal name="le_permut_sorted.3" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="18657"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="le_permut_decr_sorted" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="le_permut_decr_sorted.0" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="18443"/></proof>
  </goal>
  <goal name="le_permut_decr_sorted.1" proved="true">
  <proof prover="0"><result status="valid" time="0.32" steps="57896"/></proof>
  </goal>
  <goal name="le_permut_decr_sorted.2" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="252"/></proof>
  </goal>
  <goal name="le_permut_decr_sorted.3" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="20873"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="next&#39;vc" expl="VC for next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="next&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="11847"/></proof>
  </goal>
  <goal name="next&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="13394"/></proof>
  </goal>
  <goal name="next&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12424"/></proof>
  </goal>
  <goal name="next&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12431"/></proof>
  </goal>
  <goal name="next&#39;vc.4" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="12659"/></proof>
  </goal>
  <goal name="next&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12603"/></proof>
  </goal>
  <goal name="next&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="16416"/></proof>
  </goal>
  <goal name="next&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="14129"/></proof>
  </goal>
  <goal name="next&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="444930"/></proof>
  </goal>
  <goal name="next&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12125"/></proof>
  </goal>
  <goal name="next&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="11978"/></proof>
  </goal>
  <goal name="next&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="12045"/></proof>
  </goal>
  <goal name="next&#39;vc.12" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="12671"/></proof>
  </goal>
  <goal name="next&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12706"/></proof>
  </goal>
  <goal name="next&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="12931"/></proof>
  </goal>
  <goal name="next&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12963"/></proof>
  </goal>
  <goal name="next&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="14188"/></proof>
  </goal>
  <goal name="next&#39;vc.17" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12164"/></proof>
  </goal>
  <goal name="next&#39;vc.18" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="17224"/></proof>
  </goal>
  <goal name="next&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="12860"/></proof>
  </goal>
  <goal name="next&#39;vc.20" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="12909"/></proof>
  </goal>
  <goal name="next&#39;vc.21" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12860"/></proof>
  </goal>
  <goal name="next&#39;vc.22" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="15934"/></proof>
  </goal>
  <goal name="next&#39;vc.23" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="20493"/></proof>
  </goal>
  <goal name="next&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="16161"/></proof>
  </goal>
  <goal name="next&#39;vc.25" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="16165"/></proof>
  </goal>
  <goal name="next&#39;vc.26" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="19086"/></proof>
  </goal>
  <goal name="next&#39;vc.27" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="19251"/></proof>
  </goal>
  <goal name="next&#39;vc.28" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="16389"/></proof>
  </goal>
  <goal name="next&#39;vc.29" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="335904"/></proof>
  </goal>
  <goal name="next&#39;vc.30" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="16896"/></proof>
  </goal>
  <goal name="next&#39;vc.31" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="16022"/></proof>
  </goal>
  <goal name="next&#39;vc.32" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="17227"/></proof>
  </goal>
  <goal name="next&#39;vc.33" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="16334"/></proof>
  </goal>
  <goal name="next&#39;vc.34" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="17322"/></proof>
  </goal>
  <goal name="next&#39;vc.35" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="17343"/></proof>
  </goal>
  <goal name="next&#39;vc.36" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="17343"/></proof>
  </goal>
  <goal name="next&#39;vc.37" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="17492"/></proof>
  </goal>
  <goal name="next&#39;vc.38" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="24184"/></proof>
  </goal>
  <goal name="next&#39;vc.39" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="18251"/></proof>
  </goal>
  <goal name="next&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="18299"/></proof>
  </goal>
  <goal name="next&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="18391"/></proof>
  </goal>
  <goal name="next&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="24713"/></proof>
  </goal>
  <goal name="next&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="31163"/></proof>
  </goal>
  <goal name="next&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="467688"/></proof>
  </goal>
  <goal name="next&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="127298"/></proof>
  </goal>
  <goal name="next&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="3284"/></proof>
  </goal>
  <goal name="next&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="1847"/></proof>
  </goal>
  <goal name="next&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="184923"/></proof>
  </goal>
  <goal name="next&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="1.02" steps="3008671"/></proof>
  </goal>
  <goal name="next&#39;vc.50" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="1920"/></proof>
  </goal>
  <goal name="next&#39;vc.51" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="next&#39;vc.51.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.18" steps="31527"/></proof>
   </goal>
   <goal name="next&#39;vc.51.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="20186"/></proof>
   </goal>
   <goal name="next&#39;vc.51.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.33" steps="57618"/></proof>
   </goal>
   <goal name="next&#39;vc.51.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.22" steps="34110"/></proof>
   </goal>
   <goal name="next&#39;vc.51.4" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="17520"/></proof>
   </goal>
   <goal name="next&#39;vc.51.5" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="17345"/></proof>
   </goal>
   <goal name="next&#39;vc.51.6" expl="VC for next" proved="true">
   <proof prover="4"><result status="valid" time="2.48" steps="6487411"/></proof>
   </goal>
   <goal name="next&#39;vc.51.7" expl="VC for next" proved="true">
   <proof prover="2"><result status="valid" time="0.05" steps="145289"/></proof>
   </goal>
   <goal name="next&#39;vc.51.8" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="20983"/></proof>
   </goal>
   <goal name="next&#39;vc.51.9" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.32" steps="61920"/></proof>
   </goal>
   <goal name="next&#39;vc.51.10" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.21" steps="33976"/></proof>
   </goal>
   <goal name="next&#39;vc.51.11" expl="VC for next" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="156240"/></proof>
   </goal>
   <goal name="next&#39;vc.51.12" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.87" steps="111885"/></proof>
   </goal>
   <goal name="next&#39;vc.51.13" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.13" steps="39016"/></proof>
   </goal>
   <goal name="next&#39;vc.51.14" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.18" steps="42936"/></proof>
   </goal>
   <goal name="next&#39;vc.51.15" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="21440"/></proof>
   </goal>
   <goal name="next&#39;vc.51.16" expl="VC for next" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="17640"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="next&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="22378"/></proof>
  </goal>
  <goal name="next&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="16789"/></proof>
  </goal>
  <goal name="next&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.47" steps="97795"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="as_num&#39;vc" expl="VC for as_num" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="as_num&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="20078"/></proof>
  </goal>
  <goal name="as_num&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="20026"/></proof>
  </goal>
  <goal name="as_num&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="20973"/></proof>
  </goal>
  <goal name="as_num&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="as_num&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="20"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.1" expl="VC for as_num" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.2" expl="VC for as_num" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="20282"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.3" expl="VC for as_num" proved="true">
   <proof prover="1"><result status="valid" time="0.10" steps="426"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.4" expl="VC for as_num" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="20342"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.5" expl="VC for as_num" proved="true">
   <proof prover="1"><result status="valid" time="1.17" steps="9764"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.6" expl="VC for as_num" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="23251"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="as_num&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="21198"/></proof>
  </goal>
  <goal name="as_num&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="102"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="as_number&#39;vc" expl="VC for as_number" proved="true">
 <proof prover="0"><result status="valid" time="0.11" steps="23617"/></proof>
 </goal>
 <goal name="as_number_ind&#39;vc" expl="VC for as_number_ind" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="as_number_ind&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.21" steps="32683"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="20639"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="21533"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="20633"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="20636"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="20639"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="20657"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="8447"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="308"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="as_number_strict&#39;vc" expl="VC for as_number_strict" proved="true">
 <proof prover="0"><result status="valid" time="3.85" steps="347008"/></proof>
 </goal>
 <goal name="seq_snoc_mem" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="185092"/></proof>
 </goal>
 <goal name="permut&#39;vc" expl="VC for permut" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="29446"/></proof>
  </goal>
  <goal name="permut&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="33162"/></proof>
  </goal>
  <goal name="permut&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="30717"/></proof>
  </goal>
  <goal name="permut&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.23" steps="36922"/></proof>
   </goal>
   <goal name="permut&#39;vc.3.1" expl="VC for permut" proved="true">
   <proof prover="0"><result status="valid" time="0.14" steps="27845"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="24632"/></proof>
  </goal>
  <goal name="permut&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.86" steps="106755"/></proof>
  </goal>
  <goal name="permut&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="24644"/></proof>
  </goal>
  <goal name="permut&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="26256"/></proof>
  </goal>
  <goal name="permut&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="25202"/></proof>
  </goal>
  <goal name="permut&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="49"/></proof>
  </goal>
  <goal name="permut&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="25171"/></proof>
  </goal>
  <goal name="permut&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="30365"/></proof>
  </goal>
  <goal name="permut&#39;vc.12" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.12.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.02" steps="50"/></proof>
   </goal>
   <goal name="permut&#39;vc.12.1" expl="VC for permut" proved="true">
   <proof prover="0" timelimit="1"><result status="valid" time="0.45" steps="64322"/></proof>
   </goal>
   <goal name="permut&#39;vc.12.2" expl="VC for permut" proved="true">
   <proof prover="3"><result status="valid" time="0.22" steps="737"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.13" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.14" steps="40773"/></proof>
  </goal>
  <goal name="permut&#39;vc.14" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.43" steps="58220"/></proof>
  </goal>
  <goal name="permut&#39;vc.15" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.15.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.03" steps="119"/></proof>
   </goal>
   <goal name="permut&#39;vc.15.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.15" steps="309"/></proof>
   </goal>
   <goal name="permut&#39;vc.15.2" expl="VC for permut" proved="true">
   <proof prover="3"><result status="valid" time="0.20" steps="462"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.16" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.20" steps="335"/></proof>
  </goal>
  <goal name="permut&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="105"/></proof>
  </goal>
  <goal name="permut&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="permut&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="permut&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="permut&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="50"/></proof>
  </goal>
  <goal name="permut&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="permut&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="permut&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="permut&#39;vc.25" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="permut&#39;vc.26" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.26.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="111"/></proof>
   </goal>
   <goal name="permut&#39;vc.26.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.12" steps="275"/></proof>
   </goal>
   <goal name="permut&#39;vc.26.2" expl="VC for permut" proved="true">
   <proof prover="3"><result status="valid" time="0.15" steps="408"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.27" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="permut&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="permut&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="permut&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="permut&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="permut&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.16" steps="623"/></proof>
  </goal>
  <goal name="permut&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="51"/></proof>
  </goal>
  <goal name="permut&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="57"/></proof>
  </goal>
  <goal name="permut&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="61"/></proof>
  </goal>
  <goal name="permut&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="33328"/></proof>
  </goal>
  <goal name="permut&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="50417"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
