<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="8" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="10" name="CVC5" version="1.1.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="12" name="Z3" version="4.13.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="13" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_2021_lexicographic_permutations_2.mlw"/>
<theory name="ArrayListConversions" proved="true">
 <goal name="to_list_from&#39;vc" expl="VC for to_list_from" proved="true">
 <proof prover="8"><result status="valid" time="0.081177" steps="12954"/></proof>
 </goal>
 <goal name="to_list&#39;vc" expl="VC for to_list" proved="true">
 <proof prover="8"><result status="valid" time="0.034055" steps="4275"/></proof>
 </goal>
 <goal name="to_list_array_eq&#39;vc" expl="VC for to_list_array_eq" proved="true">
 <proof prover="10"><result status="valid" time="0.061618" steps="8445"/></proof>
 </goal>
 <goal name="of_list&#39;vc" expl="VC for of_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="of_list&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="12"><result status="valid" time="0.008087" steps="18338"/></proof>
  </goal>
  <goal name="of_list&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.034623" steps="3862"/></proof>
  </goal>
  <goal name="of_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.000001" steps="2004"/></proof>
  </goal>
  <goal name="of_list&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.011779" steps="25295"/></proof>
  </goal>
  <goal name="of_list&#39;vc.4" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="of_list&#39;vc.4.0" expl="assertion" proved="true">
   <proof prover="12"><result status="valid" time="0.011179" steps="27710"/></proof>
   </goal>
   <goal name="of_list&#39;vc.4.1" expl="VC for of_list" proved="true">
   <proof prover="8"><result status="valid" time="0.054891" steps="7712"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="of_list&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.005191" steps="7019"/></proof>
  </goal>
  <goal name="of_list&#39;vc.6" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.009890" steps="27015"/></proof>
  </goal>
  <goal name="of_list&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.054984" steps="7594"/></proof>
  </goal>
  <goal name="of_list&#39;vc.8" expl="precondition" proved="true">
  <proof prover="13"><result status="valid" time="0.092956" steps="864"/></proof>
  </goal>
  <goal name="of_list&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.063872" steps="9473"/></proof>
  </goal>
  <goal name="of_list&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.014232" steps="34644"/></proof>
  </goal>
  <goal name="of_list&#39;vc.11" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.031691" steps="3045"/></proof>
  </goal>
  <goal name="of_list&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.034789" steps="5118"/></proof>
  </goal>
  <goal name="of_list&#39;vc.13" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.025897" steps="3358"/></proof>
  </goal>
  <goal name="of_list&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.039581" steps="5940"/></proof>
  </goal>
  <goal name="of_list&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.046298" steps="3967"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eq_nth&#39;vc" expl="VC for eq_nth" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eq_nth&#39;vc.0" expl="assertion" proved="true">
  <proof prover="13"><result status="valid" time="0.044757" steps="261"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eq_nth&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="8"><result status="valid" time="0.047862" steps="6742"/></proof>
   </goal>
   <goal name="eq_nth&#39;vc.1.1" expl="VC for eq_nth" proved="true">
   <proof prover="10"><result status="valid" time="0.045368" steps="4507"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eq_nth&#39;vc.2" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.030013" steps="3535"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.035767" steps="6652"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.4" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.008090" steps="23717"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.5" expl="assertion" proved="true">
  <proof prover="12"><result status="valid" time="0.012626" steps="24683"/></proof>
  </goal>
  <goal name="eq_nth&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.037337" steps="3919"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="of_to_list" proved="true">
 <proof prover="13"><result status="valid" time="0.497976" steps="5162"/></proof>
 </goal>
 <goal name="to_of_list" proved="true">
 <proof prover="13"><result status="valid" time="0.033565" steps="90"/></proof>
 </goal>
</theory>
<theory name="BoxedIntArrays" proved="true">
 <goal name="boxed_permut" proved="true">
 <proof prover="12"><result status="valid" time="0.018831" steps="32696"/></proof>
 </goal>
 <goal name="greater&#39;vc" expl="VC for greater" proved="true">
 <proof prover="12"><result status="valid" time="0.020501" steps="55705"/></proof>
 </goal>
 <goal name="boxed_greater" proved="true">
 <proof prover="8"><result status="valid" time="0.054100" steps="9818"/></proof>
 </goal>
 <goal name="maxi&#39;vc" expl="VC for maxi" proved="true">
 <proof prover="10"><result status="valid" time="0.036551" steps="5702"/></proof>
 </goal>
</theory>
<theory name="Permut" proved="true">
 <goal name="find_eq&#39;vc" expl="VC for find_eq" proved="true">
 <proof prover="13"><result status="valid" time="0.037066" steps="77"/></proof>
 </goal>
 <goal name="lt_trans" proved="true">
 <proof prover="13"><result status="valid" time="0.072813" steps="332"/></proof>
 </goal>
 <goal name="find_le&#39;vc" expl="VC for find_le" proved="true">
 <proof prover="8"><result status="valid" time="0.162399" steps="28056"/></proof>
 </goal>
 <goal name="eq_le_compat" proved="true">
 <proof prover="12"><result status="valid" time="0.058942" steps="107925"/></proof>
 </goal>
 <goal name="eq_lt_compat" proved="true">
 <proof prover="13"><result status="valid" time="0.035568" steps="94"/></proof>
 </goal>
 <goal name="le_or_lt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="le_or_lt.0" proved="true">
  <proof prover="8"><result status="valid" time="0.141307" steps="27685"/></proof>
  </goal>
  <goal name="le_or_lt.1" proved="true">
  <proof prover="13"><result status="valid" time="0.094282" steps="359"/></proof>
  </goal>
  <goal name="le_or_lt.2" proved="true">
  <proof prover="8"><result status="valid" time="0.087268" steps="15552"/></proof>
  </goal>
  <goal name="le_or_lt.3" proved="true">
  <proof prover="12"><result status="valid" time="0.046455" steps="92817"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="lt_not_le" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lt_not_le.0" proved="true">
  <proof prover="8"><result status="valid" time="0.078119" steps="14312"/></proof>
  </goal>
  <goal name="lt_not_le.1" proved="true">
  <proof prover="8"><result status="valid" time="0.088509" steps="16964"/></proof>
  </goal>
  <goal name="lt_not_le.2" proved="true">
  <proof prover="10"><result status="valid" time="0.060166" steps="10167"/></proof>
  </goal>
  <goal name="lt_not_le.3" proved="true">
  <proof prover="12"><result status="valid" time="0.054999" steps="109433"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eq_sub_permut&#39;vc" expl="VC for eq_sub_permut" proved="true">
 <proof prover="13"><result status="valid" time="0.125038" steps="601"/></proof>
 </goal>
 <goal name="le_permut_sorted" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="le_permut_sorted.0" proved="true">
  <proof prover="8"><result status="valid" time="0.085962" steps="16893"/></proof>
  </goal>
  <goal name="le_permut_sorted.1" proved="true">
  <proof prover="12"><result status="valid" time="0.073688" steps="146534"/></proof>
  </goal>
  <goal name="le_permut_sorted.2" proved="true">
  <proof prover="12"><result status="valid" time="0.025385" steps="63518"/></proof>
  </goal>
  <goal name="le_permut_sorted.3" proved="true">
  <proof prover="10"><result status="valid" time="0.182598" steps="29573"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="le_permut_decr_sorted" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="le_permut_decr_sorted.0" proved="true">
  <proof prover="10"><result status="valid" time="0.123812" steps="19559"/></proof>
  </goal>
  <goal name="le_permut_decr_sorted.1" proved="true">
  <proof prover="12"><result status="valid" time="0.039291" steps="84012"/></proof>
  </goal>
  <goal name="le_permut_decr_sorted.2" proved="true">
  <proof prover="13"><result status="valid" time="0.070086" steps="270"/></proof>
  </goal>
  <goal name="le_permut_decr_sorted.3" proved="true">
  <proof prover="10"><result status="valid" time="0.178446" steps="27156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="next&#39;vc" expl="VC for next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="next&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.024677" steps="0"/></proof>
  </goal>
  <goal name="next&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="10"><result status="valid" time="0.043173" steps="7348"/></proof>
  </goal>
  <goal name="next&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="10"><result status="valid" time="0.046190" steps="7135"/></proof>
  </goal>
  <goal name="next&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="13"><result status="valid" time="0.027178" steps="6"/></proof>
  </goal>
  <goal name="next&#39;vc.4" expl="loop variant decrease" proved="true">
  <proof prover="10"><result status="valid" time="0.047371" steps="7376"/></proof>
  </goal>
  <goal name="next&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.025136" steps="47383"/></proof>
  </goal>
  <goal name="next&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="8"><result status="valid" time="0.081980" steps="13481"/></proof>
  </goal>
  <goal name="next&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.054823" steps="12460"/></proof>
  </goal>
  <goal name="next&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.021491" steps="57935"/></proof>
  </goal>
  <goal name="next&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.003491" steps="2083"/></proof>
  </goal>
  <goal name="next&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.005072" steps="4036"/></proof>
  </goal>
  <goal name="next&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="8"><result status="valid" time="0.048906" steps="11000"/></proof>
  </goal>
  <goal name="next&#39;vc.12" expl="index in array bounds" proved="true">
  <proof prover="8"><result status="valid" time="0.059221" steps="11416"/></proof>
  </goal>
  <goal name="next&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.020462" steps="50412"/></proof>
  </goal>
  <goal name="next&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="10"><result status="valid" time="0.044125" steps="7790"/></proof>
  </goal>
  <goal name="next&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="10"><result status="valid" time="0.044677" steps="7905"/></proof>
  </goal>
  <goal name="next&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.033198" steps="46"/></proof>
  </goal>
  <goal name="next&#39;vc.17" expl="assertion" proved="true">
  <proof prover="10"><result status="valid" time="0.040182" steps="7277"/></proof>
  </goal>
  <goal name="next&#39;vc.18" expl="assertion" proved="true">
  <proof prover="10"><result status="valid" time="0.072740" steps="10629"/></proof>
  </goal>
  <goal name="next&#39;vc.19" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.024110" steps="51601"/></proof>
  </goal>
  <goal name="next&#39;vc.20" expl="index in array bounds" proved="true">
  <proof prover="8"><result status="valid" time="0.046165" steps="11712"/></proof>
  </goal>
  <goal name="next&#39;vc.21" expl="index in array bounds" proved="true">
  <proof prover="10"><result status="valid" time="0.046827" steps="7819"/></proof>
  </goal>
  <goal name="next&#39;vc.22" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.027478" steps="68737"/></proof>
  </goal>
  <goal name="next&#39;vc.23" expl="assertion" proved="true">
  <proof prover="10"><result status="valid" time="0.086175" steps="14023"/></proof>
  </goal>
  <goal name="next&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.017416" steps="42"/></proof>
  </goal>
  <goal name="next&#39;vc.25" expl="loop invariant init" proved="true">
  <proof prover="10"><result status="valid" time="0.050790" steps="10487"/></proof>
  </goal>
  <goal name="next&#39;vc.26" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.048155" steps="228"/></proof>
  </goal>
  <goal name="next&#39;vc.27" expl="loop invariant init" proved="true">
  <proof prover="8"><result status="valid" time="0.084602" steps="18209"/></proof>
  </goal>
  <goal name="next&#39;vc.28" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.023502" steps="50"/></proof>
  </goal>
  <goal name="next&#39;vc.29" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.121784" steps="858"/></proof>
  </goal>
  <goal name="next&#39;vc.30" expl="loop invariant init" proved="true">
  <proof prover="8"><result status="valid" time="0.075190" steps="16653"/></proof>
  </goal>
  <goal name="next&#39;vc.31" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.003947" steps="6018"/></proof>
  </goal>
  <goal name="next&#39;vc.32" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.031943" steps="51"/></proof>
  </goal>
  <goal name="next&#39;vc.33" expl="loop invariant init" proved="true">
  <proof prover="10"><result status="valid" time="0.035879" steps="10485"/></proof>
  </goal>
  <goal name="next&#39;vc.34" expl="index in array bounds" proved="true">
  <proof prover="8"><result status="valid" time="0.070051" steps="16891"/></proof>
  </goal>
  <goal name="next&#39;vc.35" expl="index in array bounds" proved="true">
  <proof prover="8"><result status="valid" time="0.069925" steps="16912"/></proof>
  </goal>
  <goal name="next&#39;vc.36" expl="index in array bounds" proved="true">
  <proof prover="13"><result status="valid" time="0.032042" steps="61"/></proof>
  </goal>
  <goal name="next&#39;vc.37" expl="index in array bounds" proved="true">
  <proof prover="12"><result status="valid" time="0.025114" steps="74769"/></proof>
  </goal>
  <goal name="next&#39;vc.38" expl="assertion" proved="true">
  <proof prover="13"><result status="valid" time="0.096122" steps="568"/></proof>
  </goal>
  <goal name="next&#39;vc.39" expl="loop variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="0.074342" steps="17754"/></proof>
  </goal>
  <goal name="next&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="10"><result status="valid" time="0.049936" steps="12396"/></proof>
  </goal>
  <goal name="next&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.022275" steps="79556"/></proof>
  </goal>
  <goal name="next&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.034068" steps="88377"/></proof>
  </goal>
  <goal name="next&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="8"><result status="valid" time="0.130551" steps="27563"/></proof>
  </goal>
  <goal name="next&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.370839" steps="2111"/></proof>
  </goal>
  <goal name="next&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.070375" steps="160194"/></proof>
  </goal>
  <goal name="next&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.499896" steps="2958"/></proof>
  </goal>
  <goal name="next&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.223414" steps="1416"/></proof>
  </goal>
  <goal name="next&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.091573" steps="231506"/></proof>
  </goal>
  <goal name="next&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.176155" steps="924"/></proof>
  </goal>
  <goal name="next&#39;vc.50" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.155511" steps="29262"/></proof>
  </goal>
  <goal name="next&#39;vc.51" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="next&#39;vc.51.0" expl="assertion" proved="true">
   <proof prover="12"><result status="valid" time="0.043673" steps="95238"/></proof>
   </goal>
   <goal name="next&#39;vc.51.1" expl="assertion" proved="true">
   <proof prover="10"><result status="valid" time="1.294863" steps="146886"/></proof>
   </goal>
   <goal name="next&#39;vc.51.2" expl="assertion" proved="true">
   <proof prover="12"><result status="valid" time="0.149127" steps="294991"/></proof>
   </goal>
   <goal name="next&#39;vc.51.3" expl="assertion" proved="true">
   <proof prover="12"><result status="valid" time="0.044554" steps="102252"/></proof>
   </goal>
   <goal name="next&#39;vc.51.4" expl="assertion" proved="true">
   <proof prover="12"><result status="valid" time="0.030154" steps="78440"/></proof>
   </goal>
   <goal name="next&#39;vc.51.5" expl="VC for next" proved="true">
   <proof prover="12"><result status="valid" time="0.035537" steps="79588"/></proof>
   </goal>
   <goal name="next&#39;vc.51.6" expl="VC for next" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="next&#39;vc.51.6.0" expl="VC for next" proved="true">
    <proof prover="12"><result status="valid" time="1.895752" steps="4539843"/></proof>
    </goal>
    <goal name="next&#39;vc.51.6.1" expl="VC for next" proved="true">
    <proof prover="10"><result status="valid" time="0.042181" steps="11165"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="next&#39;vc.51.7" expl="VC for next" proved="true">
   <proof prover="10"><result status="valid" time="1.727440" steps="163174"/></proof>
   </goal>
   <goal name="next&#39;vc.51.8" expl="VC for next" proved="true">
   <proof prover="10"><result status="valid" time="0.452036" steps="62418"/></proof>
   </goal>
   <goal name="next&#39;vc.51.9" expl="VC for next" proved="true">
   <proof prover="8"><result status="valid" time="0.316275" steps="58642"/></proof>
   </goal>
   <goal name="next&#39;vc.51.10" expl="VC for next" proved="true">
   <proof prover="12"><result status="valid" time="0.028283" steps="90329"/></proof>
   </goal>
   <goal name="next&#39;vc.51.11" expl="VC for next" proved="true">
   <proof prover="12"><result status="valid" time="0.067680" steps="143074"/></proof>
   </goal>
   <goal name="next&#39;vc.51.12" expl="VC for next" proved="true">
   <proof prover="12"><result status="valid" time="0.094059" steps="193809"/></proof>
   </goal>
   <goal name="next&#39;vc.51.13" expl="VC for next" proved="true">
   <proof prover="12"><result status="valid" time="0.043837" steps="99022"/></proof>
   </goal>
   <goal name="next&#39;vc.51.14" expl="VC for next" proved="true">
   <proof prover="12"><result status="valid" time="0.059394" steps="116151"/></proof>
   </goal>
   <goal name="next&#39;vc.51.15" expl="VC for next" proved="true">
   <proof prover="12"><result status="valid" time="0.030361" steps="87315"/></proof>
   </goal>
   <goal name="next&#39;vc.51.16" expl="VC for next" proved="true">
   <proof prover="8"><result status="valid" time="0.065810" steps="18305"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="next&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.029401" steps="81839"/></proof>
  </goal>
  <goal name="next&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="12"><result status="valid" time="0.011430" steps="3212"/></proof>
  </goal>
  <goal name="next&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.173707" steps="39078"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="as_num&#39;vc" expl="VC for as_num" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="as_num&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="10"><result status="valid" time="0.040026" steps="8776"/></proof>
  </goal>
  <goal name="as_num&#39;vc.1" expl="precondition" proved="true">
  <proof prover="13"><result status="valid" time="0.031649" steps="12"/></proof>
  </goal>
  <goal name="as_num&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.019757" steps="55771"/></proof>
  </goal>
  <goal name="as_num&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="as_num&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="13"><result status="valid" time="0.024984" steps="18"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.1" expl="VC for as_num" proved="true">
   <proof prover="13"><result status="valid" time="0.036063" steps="32"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.2" expl="VC for as_num" proved="true">
   <proof prover="10"><result status="valid" time="0.038276" steps="8950"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.3" expl="VC for as_num" proved="true">
   <proof prover="13"><result status="valid" time="0.064376" steps="346"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.4" expl="VC for as_num" proved="true">
   <proof prover="10"><result status="valid" time="0.039975" steps="8991"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.5" expl="VC for as_num" proved="true">
   <proof prover="13"><result status="valid" time="0.059460" steps="301"/></proof>
   </goal>
   <goal name="as_num&#39;vc.3.6" expl="VC for as_num" proved="true">
   <proof prover="13"><result status="valid" time="0.039269" steps="157"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="as_num&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="8"><result status="valid" time="0.065039" steps="13701"/></proof>
  </goal>
  <goal name="as_num&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="13"><result status="valid" time="0.085603" steps="897"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="as_number&#39;vc" expl="VC for as_number" proved="true">
 <proof prover="12"><result status="valid" time="0.028773" steps="60270"/></proof>
 </goal>
 <goal name="as_number_ind&#39;vc" expl="VC for as_number_ind" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="as_number_ind&#39;vc.0" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.092397" steps="18692"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.007993" steps="22158"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.2" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.021666" steps="56677"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.3" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.007439" steps="4787"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.4" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.037507" steps="8840"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.5" expl="precondition" proved="true">
  <proof prover="12"><result status="valid" time="0.007151" steps="4797"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.047395" steps="13382"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.7" expl="assertion" proved="true">
  <proof prover="13"><result status="valid" time="0.256614" steps="3463"/></proof>
  </goal>
  <goal name="as_number_ind&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="13"><result status="valid" time="0.055637" steps="178"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="as_number_strict&#39;vc" expl="VC for as_number_strict" proved="true">
 <proof prover="8"><result status="valid" time="0.283114" steps="55935"/></proof>
 </goal>
 <goal name="seq_snoc_mem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_snoc_mem.0" proved="true">
  <proof prover="10"><result status="valid" time="0.096372" steps="15180"/></proof>
  </goal>
  <goal name="seq_snoc_mem.1" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="seq_snoc_mem.1.0" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="seq_snoc_mem.1.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="seq_snoc_mem.1.0.0.0" proved="true">
     <proof prover="10"><result status="valid" time="0.788052" steps="134291"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut&#39;vc" expl="VC for permut" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut&#39;vc.0" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.117643" steps="25200"/></proof>
  </goal>
  <goal name="permut&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.123754" steps="27294"/></proof>
  </goal>
  <goal name="permut&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.085758" steps="16849"/></proof>
  </goal>
  <goal name="permut&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="8"><result status="valid" time="0.155864" steps="30389"/></proof>
   </goal>
   <goal name="permut&#39;vc.3.1" expl="VC for permut" proved="true">
   <proof prover="12"><result status="valid" time="0.036801" steps="106145"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.012542" steps="7884"/></proof>
  </goal>
  <goal name="permut&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="10"><result status="valid" time="0.363234" steps="47255"/></proof>
  </goal>
  <goal name="permut&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="10"><result status="valid" time="0.042101" steps="13388"/></proof>
  </goal>
  <goal name="permut&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="12"><result status="valid" time="0.033548" steps="100579"/></proof>
  </goal>
  <goal name="permut&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="10"><result status="valid" time="0.030912" steps="6"/></proof>
  </goal>
  <goal name="permut&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.033080" steps="49"/></proof>
  </goal>
  <goal name="permut&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="13"><result status="valid" time="0.036261" steps="18"/></proof>
  </goal>
  <goal name="permut&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="8"><result status="valid" time="0.104938" steps="25098"/></proof>
  </goal>
  <goal name="permut&#39;vc.12" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.12.0" expl="assertion" proved="true">
   <proof prover="13"><result status="valid" time="0.039885" steps="51"/></proof>
   </goal>
   <goal name="permut&#39;vc.12.1" expl="VC for permut" proved="true">
   <proof prover="10"><result status="valid" time="0.280454" steps="41333"/></proof>
   </goal>
   <goal name="permut&#39;vc.12.2" expl="VC for permut" proved="true">
   <proof prover="8"><result status="valid" time="0.183680" steps="34920"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.13" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.191114" steps="34851"/></proof>
  </goal>
  <goal name="permut&#39;vc.14" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.448864" steps="50899"/></proof>
  </goal>
  <goal name="permut&#39;vc.15" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.15.0" expl="assertion" proved="true">
   <proof prover="13"><result status="valid" time="0.063363" steps="158"/></proof>
   </goal>
   <goal name="permut&#39;vc.15.1" expl="assertion" proved="true">
   <proof prover="12"><result status="valid" time="0.075619" steps="183549"/></proof>
   </goal>
   <goal name="permut&#39;vc.15.2" expl="VC for permut" proved="true">
   <proof prover="10"><result status="valid" time="0.170384" steps="27459"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.16" expl="loop variant decrease" proved="true">
  <proof prover="13"><result status="valid" time="0.121741" steps="1556"/></proof>
  </goal>
  <goal name="permut&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.050444" steps="123"/></proof>
  </goal>
  <goal name="permut&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.037522" steps="46"/></proof>
  </goal>
  <goal name="permut&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.016700" steps="14128"/></proof>
  </goal>
  <goal name="permut&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="8"><result status="valid" time="0.106091" steps="25937"/></proof>
  </goal>
  <goal name="permut&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.013279" steps="9656"/></proof>
  </goal>
  <goal name="permut&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="10"><result status="valid" time="0.076879" steps="17203"/></proof>
  </goal>
  <goal name="permut&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="10"><result status="valid" time="0.053136" steps="16691"/></proof>
  </goal>
  <goal name="permut&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.036130" steps="131109"/></proof>
  </goal>
  <goal name="permut&#39;vc.25" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.110838" steps="25634"/></proof>
  </goal>
  <goal name="permut&#39;vc.26" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permut&#39;vc.26.0" expl="assertion" proved="true">
   <proof prover="10"><result status="valid" time="0.103088" steps="19092"/></proof>
   </goal>
   <goal name="permut&#39;vc.26.1" expl="assertion" proved="true">
   <proof prover="12"><result status="valid" time="0.071036" steps="179375"/></proof>
   </goal>
   <goal name="permut&#39;vc.26.2" expl="VC for permut" proved="true">
   <proof prover="13"><result status="valid" time="0.088665" steps="871"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut&#39;vc.27" expl="loop variant decrease" proved="true">
  <proof prover="12"><result status="valid" time="0.012357" steps="18140"/></proof>
  </goal>
  <goal name="permut&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.017914" steps="35513"/></proof>
  </goal>
  <goal name="permut&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.013090" steps="9533"/></proof>
  </goal>
  <goal name="permut&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="8"><result status="valid" time="0.082317" steps="25413"/></proof>
  </goal>
  <goal name="permut&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="8"><result status="valid" time="0.089024" steps="25450"/></proof>
  </goal>
  <goal name="permut&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="10"><result status="valid" time="0.112177" steps="19106"/></proof>
  </goal>
  <goal name="permut&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="12"><result status="valid" time="0.014550" steps="9639"/></proof>
  </goal>
  <goal name="permut&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.038893" steps="62"/></proof>
  </goal>
  <goal name="permut&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="13"><result status="valid" time="0.037522" steps="70"/></proof>
  </goal>
  <goal name="permut&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="13"><result status="valid" time="0.037247" steps="38"/></proof>
  </goal>
  <goal name="permut&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.222625" steps="43591"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
