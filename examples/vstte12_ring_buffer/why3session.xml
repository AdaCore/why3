<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Yices" version="1.0.38" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../vstte12_ring_buffer.mlw" expanded="true">
<theory name="RingBuffer" sum="43e2ae3cfea47b465734c4bcbc933b34" expanded="true">
 <goal name="VC create" expl="VC for create">
 <proof prover="4"><result status="valid" time="0.00" steps="24"/></proof>
 </goal>
 <goal name="VC length" expl="VC for length">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC clear" expl="VC for clear">
 <proof prover="4"><result status="valid" time="0.01" steps="55"/></proof>
 </goal>
 <goal name="VC push" expl="VC for push">
 <proof prover="4"><result status="valid" time="0.21" steps="609"/></proof>
 </goal>
 <goal name="VC head" expl="VC for head">
 <transf name="split_goal_wp">
  <goal name="VC head.1" expl="1. index in array bounds">
  <proof prover="4"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="VC head.2" expl="2. postcondition">
  <proof prover="9"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC pop" expl="VC for pop" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC pop.1" expl="1. unreachable point">
  <proof prover="4"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC pop.2" expl="2. index in array bounds">
  <proof prover="4"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC pop.3" expl="3. type invariant" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="VC pop.3.1" expl="1. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="VC pop.3.2" expl="2. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
   <goal name="VC pop.3.3" expl="3. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="VC pop.3.4" expl="4. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
   <goal name="VC pop.3.5" expl="5. type invariant">
   <proof prover="4"><result status="valid" time="0.00" steps="28"/></proof>
   </goal>
   <goal name="VC pop.3.6" expl="6. type invariant" expanded="true">
   <proof prover="1"><result status="valid" time="0.04"/></proof>
   <metas
    expanded="true">
    <ts_pos name="real" arity="0" id="real" ip_theory="BuiltIn">
     <ip_library name="why3"/>
     <ip_library name="BuiltIn"/>
     <ip_qualid name="real"/>
    </ts_pos>
    <ts_pos name="bool" arity="0" id="bool" ip_theory="Bool">
     <ip_library name="why3"/>
     <ip_library name="Bool"/>
     <ip_qualid name="bool"/>
    </ts_pos>
    <ts_pos name="tuple0" arity="0" id="tuple0" ip_theory="Tuple0">
     <ip_library name="why3"/>
     <ip_library name="Tuple0"/>
     <ip_qualid name="tuple0"/>
    </ts_pos>
    <ts_pos name="unit" arity="0" id="unit" ip_theory="Unit">
     <ip_library name="why3"/>
     <ip_library name="Unit"/>
     <ip_qualid name="unit"/>
    </ts_pos>
    <ts_pos name="map" arity="2" id="map" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="map"/>
    </ts_pos>
    <ls_pos name="infix =" id="infix =" ip_theory="BuiltIn">
     <ip_library name="why3"/>
     <ip_library name="BuiltIn"/>
     <ip_qualid name="infix ="/>
    </ls_pos>
    <ls_pos name="infix @" id="infix @" ip_theory="HighOrd">
     <ip_library name="why3"/>
     <ip_library name="HighOrd"/>
     <ip_qualid name="infix @"/>
    </ls_pos>
    <ls_pos name="zero" id="zero" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="zero"/>
    </ls_pos>
    <ls_pos name="one" id="one" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="one"/>
    </ls_pos>
    <ls_pos name="prefix -" id="prefix -" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="prefix -"/>
    </ls_pos>
    <ls_pos name="infix +" id="infix +" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix +"/>
    </ls_pos>
    <ls_pos name="infix *" id="infix *" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix *"/>
    </ls_pos>
    <ls_pos name="infix &lt;" id="infix &lt;" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="infix &lt;"/>
    </ls_pos>
    <ls_pos name="is_none" id="is_none" ip_theory="Option">
     <ip_library name="option"/>
     <ip_qualid name="is_none"/>
    </ls_pos>
    <ls_pos name="is_nil" id="is_nil" ip_theory="List">
     <ip_library name="list"/>
     <ip_qualid name="is_nil"/>
    </ls_pos>
    <ls_pos name="mem" id="mem" ip_theory="Mem">
     <ip_library name="list"/>
     <ip_qualid name="mem"/>
    </ls_pos>
    <ls_pos name="get" id="get" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="get"/>
    </ls_pos>
    <ls_pos name="set" id="set" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="set"/>
    </ls_pos>
    <ls_pos name="mixfix []" id="mixfix []" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="mixfix []"/>
    </ls_pos>
    <ls_pos name="mixfix [&lt;-]" id="mixfix [&lt;-]" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="mixfix [&lt;-]"/>
    </ls_pos>
    <ls_pos name="infix ++" id="infix ++" ip_theory="Append">
     <ip_library name="list"/>
     <ip_qualid name="infix ++"/>
    </ls_pos>
    <ls_pos name="elts" id="elts" ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="elts"/>
    </ls_pos>
    <ls_pos name="length" id="length" ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="length"/>
    </ls_pos>
    <ls_pos name="mixfix [&lt;-]" id="mixfix [&lt;-]1" ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="mixfix [&lt;-]"/>
    </ls_pos>
    <ls_pos name="first" id="first" ip_theory="RingBuffer">
     <ip_qualid name="first"/>
    </ls_pos>
    <ls_pos name="len" id="len" ip_theory="RingBuffer">
     <ip_qualid name="len"/>
    </ls_pos>
    <ls_pos name="data" id="data" ip_theory="RingBuffer">
     <ip_qualid name="data"/>
    </ls_pos>
    <ls_pos name="sequence" id="sequence" ip_theory="RingBuffer">
     <ip_qualid name="sequence"/>
    </ls_pos>
    <ls_pos name="size" id="size" ip_theory="RingBuffer">
     <ip_qualid name="size"/>
    </ls_pos>
    <pr_pos name="Assoc" id="Assoc" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Assoc"/>
    </pr_pos>
    <pr_pos name="Unit_def_l" id="Unit_def_l" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Unit_def_l"/>
    </pr_pos>
    <pr_pos name="Unit_def_r" id="Unit_def_r" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Unit_def_r"/>
    </pr_pos>
    <pr_pos name="Inv_def_l" id="Inv_def_l" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Inv_def_l"/>
    </pr_pos>
    <pr_pos name="Inv_def_r" id="Inv_def_r" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Inv_def_r"/>
    </pr_pos>
    <pr_pos name="Comm" id="Comm" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Comm"/>
    </pr_pos>
    <pr_pos name="Assoc" id="Assoc1" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="MulAssoc"/>
     <ip_qualid name="Assoc"/>
    </pr_pos>
    <pr_pos name="Mul_distr_l" id="Mul_distr_l" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Mul_distr_l"/>
    </pr_pos>
    <pr_pos name="Mul_distr_r" id="Mul_distr_r" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Mul_distr_r"/>
    </pr_pos>
    <pr_pos name="Comm" id="Comm1" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="MulComm"/>
     <ip_qualid name="Comm"/>
    </pr_pos>
    <pr_pos name="Unitary" id="Unitary" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Unitary"/>
    </pr_pos>
    <pr_pos name="NonTrivialRing" id="NonTrivialRing" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="NonTrivialRing"/>
    </pr_pos>
    <pr_pos name="Refl" id="Refl" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Refl"/>
    </pr_pos>
    <pr_pos name="Trans" id="Trans" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Trans"/>
    </pr_pos>
    <pr_pos name="Antisymm" id="Antisymm" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Antisymm"/>
    </pr_pos>
    <pr_pos name="Total" id="Total" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="Total"/>
    </pr_pos>
    <pr_pos name="ZeroLessOne" id="ZeroLessOne" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="ZeroLessOne"/>
    </pr_pos>
    <pr_pos name="CompatOrderAdd" id="CompatOrderAdd" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="CompatOrderAdd"/>
    </pr_pos>
    <pr_pos name="CompatOrderMult" id="CompatOrderMult" ip_theory="Int">
     <ip_library name="int"/>
     <ip_qualid name="CompatOrderMult"/>
    </pr_pos>
    <pr_pos name="is_none_spec" id="is_none_spec" ip_theory="Option">
     <ip_library name="option"/>
     <ip_qualid name="is_none_spec"/>
    </pr_pos>
    <pr_pos name="is_nil_spec" id="is_nil_spec" ip_theory="List">
     <ip_library name="list"/>
     <ip_qualid name="is_nil_spec"/>
    </pr_pos>
    <pr_pos name="Length_nonnegative" id="Length_nonnegative"
     ip_theory="Length">
     <ip_library name="list"/>
     <ip_qualid name="Length_nonnegative"/>
    </pr_pos>
    <pr_pos name="Length_nil" id="Length_nil" ip_theory="Length">
     <ip_library name="list"/>
     <ip_qualid name="Length_nil"/>
    </pr_pos>
    <pr_pos name="set_def" id="set_def" ip_theory="Map">
     <ip_library name="map"/>
     <ip_qualid name="set_def"/>
    </pr_pos>
    <pr_pos name="nth_none_1" id="nth_none_1" ip_theory="NthLength">
     <ip_library name="list"/>
     <ip_qualid name="nth_none_1"/>
    </pr_pos>
    <pr_pos name="nth_none_2" id="nth_none_2" ip_theory="NthLength">
     <ip_library name="list"/>
     <ip_qualid name="nth_none_2"/>
    </pr_pos>
    <pr_pos name="Append_assoc" id="Append_assoc" ip_theory="Append">
     <ip_library name="list"/>
     <ip_qualid name="Append_assoc"/>
    </pr_pos>
    <pr_pos name="Append_l_nil" id="Append_l_nil" ip_theory="Append">
     <ip_library name="list"/>
     <ip_qualid name="Append_l_nil"/>
    </pr_pos>
    <pr_pos name="Append_length" id="Append_length" ip_theory="Append">
     <ip_library name="list"/>
     <ip_qualid name="Append_length"/>
    </pr_pos>
    <pr_pos name="mem_append" id="mem_append" ip_theory="Append">
     <ip_library name="list"/>
     <ip_qualid name="mem_append"/>
    </pr_pos>
    <pr_pos name="mem_decomp" id="mem_decomp" ip_theory="Append">
     <ip_library name="list"/>
     <ip_qualid name="mem_decomp"/>
    </pr_pos>
    <pr_pos name="nth_append_1" id="nth_append_1"
     ip_theory="NthLengthAppend">
     <ip_library name="list"/>
     <ip_qualid name="nth_append_1"/>
    </pr_pos>
    <pr_pos name="nth_append_2" id="nth_append_2"
     ip_theory="NthLengthAppend">
     <ip_library name="list"/>
     <ip_qualid name="nth_append_2"/>
    </pr_pos>
    <pr_pos name="array&apos;invariant" id="array&apos;invariant"
     ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="array&apos;invariant"/>
    </pr_pos>
    <pr_pos name="mixfix [&lt;-]_spec" id="mixfix [&lt;-]_spec"
     ip_theory="Array">
     <ip_library name="array"/>
     <ip_qualid name="mixfix [&lt;-]_spec"/>
    </pr_pos>
    <meta name="remove_logic">
     <meta_arg_ls id="infix ="/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix @"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="zero"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="one"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="prefix -"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix +"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix *"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix &lt;"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="is_none"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="is_nil"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mem"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="get"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="set"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mixfix []"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mixfix [&lt;-]"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="infix ++"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="elts"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="length"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="mixfix [&lt;-]1"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="first"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="len"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="data"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="sequence"/>
    </meta>
    <meta name="remove_logic">
     <meta_arg_ls id="size"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Assoc"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Unit_def_l"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Unit_def_r"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Inv_def_l"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Inv_def_r"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Comm"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Assoc1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mul_distr_l"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Mul_distr_r"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Comm1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Unitary"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="NonTrivialRing"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Refl"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Trans"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Antisymm"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Total"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="ZeroLessOne"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="CompatOrderAdd"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="CompatOrderMult"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="is_none_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="is_nil_spec"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Length_nonnegative"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Length_nil"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="set_def"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="nth_none_1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="nth_none_2"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Append_assoc"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Append_l_nil"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="Append_length"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="mem_append"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="mem_decomp"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="nth_append_1"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="nth_append_2"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="array&apos;invariant"/>
    </meta>
    <meta name="remove_prop">
     <meta_arg_pr id="mixfix [&lt;-]_spec"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="real"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="bool"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="tuple0"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="unit"/>
    </meta>
    <meta name="remove_type">
     <meta_arg_ts id="map"/>
    </meta>
    <goal name="VC pop.3.6" expl="6. type invariant" expanded="true">
    <transf name="eliminate_builtin" expanded="true">
     <goal name="VC pop.3.6.1" expl="1. type invariant" expanded="true">
     <proof prover="1"><result status="valid" time="0.04"/></proof>
     <proof prover="2"><result status="valid" time="0.01"/></proof>
     </goal>
    </transf>
    </goal>
   </metas>
   </goal>
   <goal name="VC pop.3.7" expl="7. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC pop.4" expl="4. postcondition">
  <proof prover="4"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC pop.5" expl="5. postcondition">
  <proof prover="9"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC pop.6" expl="6. type invariant" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="VC pop.6.1" expl="1. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
   <goal name="VC pop.6.2" expl="2. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC pop.6.3" expl="3. type invariant">
   <proof prover="4"><result status="valid" time="0.00" steps="20"/></proof>
   </goal>
   <goal name="VC pop.6.4" expl="4. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC pop.6.5" expl="5. type invariant">
   <proof prover="4"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="VC pop.6.6" expl="6. type invariant" expanded="true">
   <proof prover="1"><result status="valid" time="0.05"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="VC pop.6.7" expl="7. type invariant" expanded="true">
   <proof prover="1"><result status="valid" time="0.06"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC pop.7" expl="7. postcondition">
  <proof prover="4"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC pop.8" expl="8. postcondition">
  <proof prover="9"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Harness" sum="37cabf63fed1fd889b4b186f971177b9">
 <goal name="VC harness" expl="VC for harness">
 <proof prover="4"><result status="valid" time="0.12" steps="570"/></proof>
 </goal>
 <goal name="VC harness2" expl="VC for harness2">
 <proof prover="4"><result status="valid" time="0.29" steps="1335"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="4"><result status="valid" time="0.08" steps="499"/></proof>
 </goal>
</theory>
<theory name="RingBufferSeq" sum="464c5af9b6ef30bc9fb21b0b3be8de1c">
 <goal name="VC create" expl="VC for create">
 <proof prover="4"><result status="valid" time="0.01" steps="23"/></proof>
 </goal>
 <goal name="VC length" expl="VC for length">
 <proof prover="4"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC clear" expl="VC for clear">
 <proof prover="4"><result status="valid" time="0.01" steps="66"/></proof>
 </goal>
 <goal name="VC push" expl="VC for push">
 <proof prover="4"><result status="valid" time="0.12" steps="411"/></proof>
 </goal>
 <goal name="VC head" expl="VC for head">
 <proof prover="4"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
 <goal name="VC pop" expl="VC for pop">
 <proof prover="4"><result status="valid" time="0.04" steps="239"/></proof>
 </goal>
</theory>
<theory name="HarnessSeq" sum="f5ae8cb92580f1d76c4948f97b8d3868">
 <goal name="VC harness" expl="VC for harness">
 <proof prover="4"><result status="valid" time="3.51" steps="1372"/></proof>
 </goal>
 <goal name="VC harness2" expl="VC for harness2">
 <proof prover="6"><result status="valid" time="0.15"/></proof>
 </goal>
 <goal name="VC test" expl="VC for test">
 <proof prover="4"><result status="valid" time="2.37" steps="1509"/></proof>
 </goal>
</theory>
</file>
</why3session>
