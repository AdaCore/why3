<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.4.0" timelimit="15" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../maximum_subarray.mlw" proved="true">
<theory name="Spec" proved="true">
</theory>
<theory name="Algo1" proved="true">
 <goal name="VC maximum_subarray" expl="VC for maximum_subarray" proved="true">
 <proof prover="1"><result status="valid" time="0.45" steps="784"/></proof>
 </goal>
</theory>
<theory name="Algo2" proved="true">
 <goal name="VC maximum_subarray" expl="VC for maximum_subarray" proved="true">
 <proof prover="1"><result status="valid" time="0.25" steps="555"/></proof>
 </goal>
</theory>
<theory name="Algo3" proved="true">
 <goal name="VC maximum_subarray_rec" expl="VC for maximum_subarray_rec" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC maximum_subarray_rec.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.6" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.8" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.14" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.16" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.17" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.18" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.19" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.20" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.21" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.22" expl="loop invariant preservation" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC maximum_subarray_rec.22.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="5.70"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC maximum_subarray_rec.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="29"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.25" expl="loop invariant preservation" proved="true">
  <transf name="inline_all" proved="true" >
   <goal name="VC maximum_subarray_rec.25.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="4.94"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC maximum_subarray_rec.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.27" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.29" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="26"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.32" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="45"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.33" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.34" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.35" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.37" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.38" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="42"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.39" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.40" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.41" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
  <goal name="VC maximum_subarray_rec.42" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC maximum_subarray" expl="VC for maximum_subarray" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="13"/></proof>
 </goal>
</theory>
<theory name="Algo4" proved="true">
 <goal name="VC maximum_subarray" expl="VC for maximum_subarray" proved="true">
 <proof prover="1"><result status="valid" time="2.52" steps="2119"/></proof>
 </goal>
</theory>
<theory name="Algo5" proved="true">
 <goal name="VC maximum_subarray" expl="VC for maximum_subarray" proved="true">
 <proof prover="1"><result status="valid" time="0.98" steps="849"/></proof>
 </goal>
</theory>
<theory name="BoundedIntegers" proved="true">
 <goal name="VC maximum_subarray" expl="VC for maximum_subarray" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC maximum_subarray.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="46"/></proof>
  </goal>
  <goal name="VC maximum_subarray.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC maximum_subarray.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC maximum_subarray.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC maximum_subarray.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC maximum_subarray.5" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="25"/></proof>
  </goal>
  <goal name="VC maximum_subarray.6" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC maximum_subarray.7" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="134"/></proof>
  </goal>
  <goal name="VC maximum_subarray.8" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="60"><result status="valid" time="1.40" steps="1417"/></proof>
  <transf name="remove" proved="true" arg1="real,bool,tuple0,unit,map,ref,zero1,one1,get,set,([&lt;-]),(!),min_int63,in_bounds,min_int,Assoc,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm,Assoc1,Mul_distr_l,Mul_distr_r,Comm1,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Div_mod,Div_bound,Mod_bound,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,sum_left,sum_ext,sum_le,sum_zero,sum_nonneg,sum_decomp,shift_left,to_int_in_bounds,extensionality,one_def,min_int_def">
   <goal name="VC maximum_subarray.8.0" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="1"><result status="valid" time="0.03" steps="99"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   <proof prover="4"><result status="valid" time="0.16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC maximum_subarray.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="31"/></proof>
  </goal>
  <goal name="VC maximum_subarray.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="VC maximum_subarray.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray.12" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray.14" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="120"><result status="valid" time="21.32" steps="26974"/></proof>
  <transf name="remove" proved="true" arg1="real,bool,tuple0,unit,map,ref,zero1,one1,( * ),(&gt;=),abs,div,mod,get,set,([&lt;-]),(!),min_int63,in_bounds,one,min_int,Assoc,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm,Assoc1,Mul_distr_l,Mul_distr_r,Comm1,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,sum_left,sum_ext,sum_le,sum_zero,sum_nonneg,sum_decomp,shift_left,to_int_in_bounds,extensionality,one_def,min_int_def">
   <goal name="VC maximum_subarray.14.0" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="1"><result status="valid" time="0.03" steps="93"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   <proof prover="4"><result status="valid" time="0.22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC maximum_subarray.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="131"/></proof>
  </goal>
  <goal name="VC maximum_subarray.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="VC maximum_subarray.17" expl="assertion" proved="true">
  <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC maximum_subarray.18" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC maximum_subarray.19" expl="integer overflow" proved="true">
  <proof prover="1" timelimit="15"><result status="valid" time="0.32" steps="773"/></proof>
  </goal>
  <goal name="VC maximum_subarray.20" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="VC maximum_subarray.21" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC maximum_subarray.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="237"/></proof>
  </goal>
  <goal name="VC maximum_subarray.23" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="real,bool,tuple0,unit,map,ref,zero1,one1,( * ),(&gt;=),abs,div,mod,get,set,([&lt;-]),(!),min_int63,in_bounds,one,min_int,Assoc,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm,Assoc1,Mul_distr_l,Mul_distr_r,Comm1,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,sum_left,sum_ext,sum_le,sum_zero,sum_nonneg,sum_decomp,shift_left,to_int_in_bounds,extensionality,one_def,min_int_def">
   <goal name="VC maximum_subarray.23.0" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="1"><result status="valid" time="0.04" steps="95"/></proof>
   <proof prover="2"><result status="valid" time="0.02"/></proof>
   <proof prover="4"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC maximum_subarray.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="31"/></proof>
  </goal>
  <goal name="VC maximum_subarray.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="VC maximum_subarray.26" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray.27" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray.28" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="22"/></proof>
  </goal>
  <goal name="VC maximum_subarray.29" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="real,bool,tuple0,unit,map,ref,zero1,one1,( * ),(&gt;=),abs,div,mod,get,set,([&lt;-]),(!),min_int63,in_bounds,min_int,Assoc,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm,Assoc1,Mul_distr_l,Mul_distr_r,Comm1,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,sum_left,sum_ext,sum_le,sum_zero,sum_nonneg,shift_left,to_int_in_bounds,extensionality,min_int_def">
   <goal name="VC maximum_subarray.29.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="105"/></proof>
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC maximum_subarray.30" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="109"/></proof>
  </goal>
  <goal name="VC maximum_subarray.31" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC maximum_subarray.32" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC maximum_subarray.33" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
