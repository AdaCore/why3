<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="ccursor.mlw"/>
<theory name="PtrCursor" proved="true">
 <goal name="cursor&#39;vc" expl="VC for cursor" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="11607"/></proof>
 </goal>
 <goal name="create_cursor&#39;vc" expl="VC for create_cursor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="create_cursor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="8808"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="8860"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10239"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9371"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10565"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="298"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9692"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_cursor&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="10501"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.03" steps="9716"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.2" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="12239"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.3" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="9716"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.4" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.06" steps="10405"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.5" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="10469"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.6" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="41"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.7" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="11727"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_cursor&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9826"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9832"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="12029"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9942"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.13" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10963"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_cursor&#39;vc" expl="VC for free_cursor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="free_cursor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9887"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9896"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10015"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="10083"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9678"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8827"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="next&#39;vc" expl="VC for next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="next&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="8407"/></proof>
  </goal>
  <goal name="next&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10951"/></proof>
  </goal>
  <goal name="next&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="11069"/></proof>
  </goal>
  <goal name="next&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="10141"/></proof>
  </goal>
  <goal name="next&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="11316"/></proof>
  </goal>
  <goal name="next&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="11408"/></proof>
  </goal>
  <goal name="next&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11537"/></proof>
  </goal>
  <goal name="next&#39;vc.7" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10233"/></proof>
  </goal>
  <goal name="next&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10310"/></proof>
  </goal>
  <goal name="next&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="11955"/></proof>
  </goal>
  <goal name="next&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11541"/></proof>
  </goal>
  <goal name="next&#39;vc.11" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="next&#39;vc.11.0" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.07" steps="11472"/></proof>
   </goal>
   <goal name="next&#39;vc.11.1" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.09" steps="11638"/></proof>
   </goal>
   <goal name="next&#39;vc.11.2" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.09" steps="11766"/></proof>
   </goal>
   <goal name="next&#39;vc.11.3" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="11642"/></proof>
   </goal>
   <goal name="next&#39;vc.11.4" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="11622"/></proof>
   </goal>
   <goal name="next&#39;vc.11.5" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="11551"/></proof>
   </goal>
   <goal name="next&#39;vc.11.6" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
   </goal>
   <goal name="next&#39;vc.11.7" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="12569"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="next&#39;vc.12" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="11648"/></proof>
  </goal>
  <goal name="next&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="522"/></proof>
  </goal>
  <goal name="next&#39;vc.14" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11724"/></proof>
  </goal>
  <goal name="next&#39;vc.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="299"/></proof>
  </goal>
  <goal name="next&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="12445"/></proof>
  </goal>
  <goal name="next&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="12622"/></proof>
  </goal>
  <goal name="next&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="11014"/></proof>
  </goal>
  <goal name="next&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="196"/></proof>
  </goal>
  <goal name="next&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="77"/></proof>
  </goal>
  <goal name="next&#39;vc.21" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="13535"/></proof>
  </goal>
  <goal name="next&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="752"/></proof>
  </goal>
  <goal name="next&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="464"/></proof>
  </goal>
  <goal name="next&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="260"/></proof>
  </goal>
  <goal name="next&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11387"/></proof>
  </goal>
  <goal name="next&#39;vc.26" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="next&#39;vc.26.0" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="13294"/></proof>
   </goal>
   <goal name="next&#39;vc.26.1" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="13328"/></proof>
   </goal>
   <goal name="next&#39;vc.26.2" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="15109"/></proof>
   </goal>
   <goal name="next&#39;vc.26.3" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.07" steps="13333"/></proof>
   </goal>
   <goal name="next&#39;vc.26.4" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="13288"/></proof>
   </goal>
   <goal name="next&#39;vc.26.5" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="13258"/></proof>
   </goal>
   <goal name="next&#39;vc.26.6" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="78"/></proof>
   </goal>
   <goal name="next&#39;vc.26.7" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(i &gt;= r)">
    <goal name="next&#39;vc.26.7.0" expl="true case (type invariant)" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="297"/></proof>
    </goal>
    <goal name="next&#39;vc.26.7.1" expl="false case (type invariant)" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="398"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="next&#39;vc.27" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="11346"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="main&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="8283"/></proof>
  </goal>
  <goal name="main&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8289"/></proof>
  </goal>
  <goal name="main&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9075"/></proof>
  </goal>
  <goal name="main&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10657"/></proof>
  </goal>
  <goal name="main&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="10455"/></proof>
  </goal>
  <goal name="main&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="13174"/></proof>
  </goal>
  <goal name="main&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9892"/></proof>
  </goal>
  <goal name="main&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10811"/></proof>
  </goal>
  <goal name="main&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="10098"/></proof>
  </goal>
  <goal name="main&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="14126"/></proof>
  </goal>
  <goal name="main&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10424"/></proof>
  </goal>
  <goal name="main&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="12994"/></proof>
  </goal>
  <goal name="main&#39;vc.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9874"/></proof>
  </goal>
  <goal name="main&#39;vc.13" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9088"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
