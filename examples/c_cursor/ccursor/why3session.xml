<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="ccursor.mlw"/>
<theory name="PtrCursor" proved="true">
 <goal name="cursor&#39;vc" expl="VC for cursor" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="11289"/></proof>
 </goal>
 <goal name="create_cursor&#39;vc" expl="VC for create_cursor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="create_cursor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="8503"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="8541"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="9911"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9110"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10228"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="298"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9431"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_cursor&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="10164"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.03" steps="9455"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.2" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="11902"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.3" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="9455"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.4" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.06" steps="10082"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.5" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="10132"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.6" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="41"/></proof>
   </goal>
   <goal name="create_cursor&#39;vc.8.7" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="11390"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_cursor&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9565"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9571"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="11696"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9681"/></proof>
  </goal>
  <goal name="create_cursor&#39;vc.13" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10636"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_cursor&#39;vc" expl="VC for free_cursor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="free_cursor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9568"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9575"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9692"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9763"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9417"/></proof>
  </goal>
  <goal name="free_cursor&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8566"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="next&#39;vc" expl="VC for next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="next&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="8146"/></proof>
  </goal>
  <goal name="next&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10627"/></proof>
  </goal>
  <goal name="next&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="10746"/></proof>
  </goal>
  <goal name="next&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9814"/></proof>
  </goal>
  <goal name="next&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="10993"/></proof>
  </goal>
  <goal name="next&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="11083"/></proof>
  </goal>
  <goal name="next&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11229"/></proof>
  </goal>
  <goal name="next&#39;vc.7" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="9939"/></proof>
  </goal>
  <goal name="next&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="10002"/></proof>
  </goal>
  <goal name="next&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="11647"/></proof>
  </goal>
  <goal name="next&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11238"/></proof>
  </goal>
  <goal name="next&#39;vc.11" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="next&#39;vc.11.0" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.07" steps="11169"/></proof>
   </goal>
   <goal name="next&#39;vc.11.1" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.09" steps="11335"/></proof>
   </goal>
   <goal name="next&#39;vc.11.2" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.09" steps="11463"/></proof>
   </goal>
   <goal name="next&#39;vc.11.3" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="11339"/></proof>
   </goal>
   <goal name="next&#39;vc.11.4" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="11319"/></proof>
   </goal>
   <goal name="next&#39;vc.11.5" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="11248"/></proof>
   </goal>
   <goal name="next&#39;vc.11.6" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
   </goal>
   <goal name="next&#39;vc.11.7" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="12266"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="next&#39;vc.12" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11338"/></proof>
  </goal>
  <goal name="next&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="300"/></proof>
  </goal>
  <goal name="next&#39;vc.14" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="11412"/></proof>
  </goal>
  <goal name="next&#39;vc.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="318"/></proof>
  </goal>
  <goal name="next&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="12125"/></proof>
  </goal>
  <goal name="next&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="12302"/></proof>
  </goal>
  <goal name="next&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10707"/></proof>
  </goal>
  <goal name="next&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="206"/></proof>
  </goal>
  <goal name="next&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="next&#39;vc.21" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="13215"/></proof>
  </goal>
  <goal name="next&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="792"/></proof>
  </goal>
  <goal name="next&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="480"/></proof>
  </goal>
  <goal name="next&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="271"/></proof>
  </goal>
  <goal name="next&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11080"/></proof>
  </goal>
  <goal name="next&#39;vc.26" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="next&#39;vc.26.0" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="12974"/></proof>
   </goal>
   <goal name="next&#39;vc.26.1" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="13008"/></proof>
   </goal>
   <goal name="next&#39;vc.26.2" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="14727"/></proof>
   </goal>
   <goal name="next&#39;vc.26.3" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.07" steps="13013"/></proof>
   </goal>
   <goal name="next&#39;vc.26.4" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="12968"/></proof>
   </goal>
   <goal name="next&#39;vc.26.5" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.05" steps="12937"/></proof>
   </goal>
   <goal name="next&#39;vc.26.6" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="80"/></proof>
   </goal>
   <goal name="next&#39;vc.26.7" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(i &gt;= r)">
    <goal name="next&#39;vc.26.7.0" expl="true case (type invariant)" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="313"/></proof>
    </goal>
    <goal name="next&#39;vc.26.7.1" expl="false case (type invariant)" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="414"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="next&#39;vc.27" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="11039"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="main&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="8022"/></proof>
  </goal>
  <goal name="main&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8028"/></proof>
  </goal>
  <goal name="main&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8814"/></proof>
  </goal>
  <goal name="main&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10338"/></proof>
  </goal>
  <goal name="main&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="10146"/></proof>
  </goal>
  <goal name="main&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="12850"/></proof>
  </goal>
  <goal name="main&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9631"/></proof>
  </goal>
  <goal name="main&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10481"/></proof>
  </goal>
  <goal name="main&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9837"/></proof>
  </goal>
  <goal name="main&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="13791"/></proof>
  </goal>
  <goal name="main&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10115"/></proof>
  </goal>
  <goal name="main&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="12670"/></proof>
  </goal>
  <goal name="main&#39;vc.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9613"/></proof>
  </goal>
  <goal name="main&#39;vc.13" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8827"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
