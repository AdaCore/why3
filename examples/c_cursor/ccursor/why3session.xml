<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="ccursor.mlw"/>
<theory name="PtrCursor" proved="true">
 <goal name="VC cursor" expl="VC for cursor" proved="true">
 <proof prover="3"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="VC create_cursor" expl="VC for create_cursor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC create_cursor.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC create_cursor.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC create_cursor.2" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC create_cursor.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC create_cursor.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC create_cursor.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="355"/></proof>
  </goal>
  <goal name="VC create_cursor.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC create_cursor.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC create_cursor.7.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC create_cursor.7.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.03"/></proof>
   </goal>
   <goal name="VC create_cursor.7.2" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC create_cursor.7.3" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC create_cursor.7.4" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC create_cursor.7.5" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC create_cursor.7.6" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC create_cursor.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC create_cursor.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC create_cursor.10" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC create_cursor.11" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC create_cursor.12" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC free_cursor" expl="VC for free_cursor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC free_cursor.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC free_cursor.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC free_cursor.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC free_cursor.3" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC free_cursor.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC free_cursor.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC next" expl="VC for next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC next.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC next.1" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC next.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC next.4" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC next.5" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC next.6" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.7" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.8" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC next.10" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.11" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC next.11.0" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC next.11.1" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC next.11.2" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC next.11.3" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC next.11.4" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC next.11.5" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC next.11.6" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC next.12" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC next.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="1.03" steps="1780"/></proof>
  </goal>
  <goal name="VC next.14" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.80" steps="2463"/></proof>
  </goal>
  <goal name="VC next.16" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.17" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC next.18" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC next.19" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="201"/></proof>
  </goal>
  <goal name="VC next.20" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="72"/></proof>
  </goal>
  <goal name="VC next.21" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC next.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.32" steps="541"/></proof>
  </goal>
  <goal name="VC next.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="393"/></proof>
  </goal>
  <goal name="VC next.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="256"/></proof>
  </goal>
  <goal name="VC next.25" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC next.26" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC next.26.0" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC next.26.1" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC next.26.2" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC next.26.3" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC next.26.4" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC next.26.5" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC next.26.6" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(i &gt;= r)">
    <goal name="VC next.26.6.0" expl="true case (type invariant)" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="290"/></proof>
    </goal>
    <goal name="VC next.26.6.1" expl="false case (type invariant)" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="422"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC next.27" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC main" expl="VC for main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC main.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC main.5" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC main.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC main.8" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.10" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC main.11" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC main.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC main.13" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
