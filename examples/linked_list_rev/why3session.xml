<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="1" steplimit="1" memlimit="4000"/>
<prover id="1" name="Alt-Ergo" version="1.01" timelimit="1" steplimit="1" memlimit="1000"/>
<prover id="2" name="Z3" version="4.4.1" timelimit="1" steplimit="1" memlimit="1000"/>
<file name="../linked_list_rev.mlw" expanded="true">
<theory name="InPlaceRev" sum="b663693ace4e0eeb5b939648316792b9" expanded="true">
 <goal name="VC mem" expl="VC for mem">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC null" expl="VC for null">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC mem_decomp" expl="VC for mem_decomp">
 <transf name="split_goal_wp">
  <goal name="VC mem_decomp.1" expl="1. unreachable point">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC mem_decomp.2" expl="2. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC mem_decomp.3" expl="3. precondition">
  <proof prover="1"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="VC mem_decomp.4" expl="4. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC mem_decomp.5" expl="5. postcondition">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC list_seg_frame_ext" expl="VC for list_seg_frame_ext">
 <proof prover="1"><result status="valid" time="0.33" steps="1071"/></proof>
 </goal>
 <goal name="VC list_seg_functional" expl="VC for list_seg_functional">
 <proof prover="1"><result status="valid" time="0.03" steps="143"/></proof>
 </goal>
 <goal name="VC list_seg_sublistl" expl="VC for list_seg_sublistl">
 <proof prover="1"><result status="valid" time="0.02" steps="63"/></proof>
 </goal>
 <goal name="VC list_seg_no_repet" expl="VC for list_seg_no_repet">
 <proof prover="1"><result status="valid" time="0.03" steps="120"/></proof>
 </goal>
 <goal name="VC list_seg_append" expl="VC for list_seg_append">
 <proof prover="1"><result status="valid" time="0.04" steps="148"/></proof>
 </goal>
 <goal name="VC app" expl="VC for app">
 <transf name="split_goal_wp">
  <goal name="VC app.1" expl="1. postcondition">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="VC app.2" expl="2. loop invariant init">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC app.3" expl="3. loop invariant init">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC app.4" expl="4. loop invariant init">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC app.5" expl="5. loop invariant init">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC app.6" expl="6. loop invariant init">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC app.7" expl="7. precondition">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC app.8" expl="8. unreachable point">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC app.9" expl="9. precondition">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC app.10" expl="10. loop invariant preservation">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC app.11" expl="11. loop invariant preservation">
  <proof prover="2" steplimit="-1"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC app.12" expl="12. loop invariant preservation">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="58"/></proof>
  </goal>
  <goal name="VC app.13" expl="13. loop invariant preservation">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.02" steps="65"/></proof>
  </goal>
  <goal name="VC app.14" expl="14. loop invariant preservation">
  <proof prover="0" timelimit="5" steplimit="-1" memlimit="2000"><result status="timeout" time="6.00"/></proof>
  <proof prover="1" timelimit="5" steplimit="-1" memlimit="2000"><result status="timeout" time="5.01"/></proof>
  <proof prover="2" timelimit="5" steplimit="-1" memlimit="2000"><result status="timeout" time="4.99"/></proof>
  </goal>
  <goal name="VC app.15" expl="15. loop variant decrease">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="VC app.16" expl="16. precondition">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC app.17" expl="17. assertion">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="1.34" steps="1723"/></proof>
  </goal>
  <goal name="VC app.18" expl="18. assertion">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC app.19" expl="19. assertion">
  <transf name="introduce_premises">
   <goal name="VC app.19.1" expl="1. assertion">
   <proof prover="0" timelimit="30" steplimit="-1"><result status="valid" time="13.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC app.20" expl="20. postcondition">
  <proof prover="1" timelimit="5" steplimit="-1"><result status="valid" time="0.43" steps="430"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC in_place_reverse" expl="VC for in_place_reverse">
 <transf name="split_goal_wp">
  <goal name="VC in_place_reverse.1" expl="1. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="2"/></proof>
  </goal>
  <goal name="VC in_place_reverse.2" expl="2. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="VC in_place_reverse.3" expl="3. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC in_place_reverse.4" expl="4. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="VC in_place_reverse.5" expl="5. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC in_place_reverse.6" expl="6. assertion">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="VC in_place_reverse.7" expl="7. unreachable point">
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="VC in_place_reverse.8" expl="8. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.07" steps="109"/></proof>
  </goal>
  <goal name="VC in_place_reverse.9" expl="9. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.08" steps="72"/></proof>
  </goal>
  <goal name="VC in_place_reverse.10" expl="10. loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="VC in_place_reverse.10.1" expl="1. loop invariant preservation">
   <transf name="inline_goal">
    <goal name="VC in_place_reverse.10.1.1" expl="1. loop invariant preservation">
    <proof prover="0" timelimit="30" steplimit="-1"><result status="valid" time="0.30"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC in_place_reverse.11" expl="11. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC in_place_reverse.12" expl="12. loop variant decrease">
  <proof prover="1"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC in_place_reverse.13" expl="13. postcondition">
  <proof prover="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InPlaceRevSeq" sum="caa64042a0876ca6177e48f724417574" expanded="true">
 <goal name="VC null" expl="VC for null">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="non_empty_seq">
 <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
 </goal>
 <goal name="VC mem_decomp" expl="VC for mem_decomp">
 <proof prover="1"><result status="valid" time="0.10" steps="145"/></proof>
 </goal>
 <goal name="list_seg_frame_ext">
 <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
 </goal>
 <goal name="VC list_seg_functional" expl="VC for list_seg_functional">
 <transf name="split_goal_wp">
  <goal name="VC list_seg_functional.1" expl="1. assertion">
  <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC list_seg_functional.2" expl="2. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC list_seg_functional.3" expl="3. precondition">
  <proof prover="1"><result status="valid" time="0.05" steps="181"/></proof>
  </goal>
  <goal name="VC list_seg_functional.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.05" steps="185"/></proof>
  </goal>
  <goal name="VC list_seg_functional.5" expl="5. postcondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC list_seg_tail" expl="VC for list_seg_tail">
 <proof prover="1"><result status="valid" time="0.43" steps="1117"/></proof>
 </goal>
 <goal name="VC list_seg_append" expl="VC for list_seg_append">
 <transf name="split_goal_wp">
  <goal name="VC list_seg_append.1" expl="1. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC list_seg_append.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="VC list_seg_append.3" expl="3. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="VC list_seg_append.4" expl="4. postcondition">
  <proof prover="1"><result status="valid" time="0.52" steps="982"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="seq_tail_append">
 <proof prover="1"><result status="valid" time="0.04" steps="51"/></proof>
 </goal>
 <goal name="VC list_seg_prefix" expl="VC for list_seg_prefix">
 <transf name="split_goal_wp">
  <goal name="VC list_seg_prefix.1" expl="1. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="2"/></proof>
  </goal>
  <goal name="VC list_seg_prefix.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC list_seg_prefix.3" expl="3. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="VC list_seg_prefix.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="VC list_seg_prefix.5" expl="5. postcondition">
  <transf name="introduce_premises">
   <goal name="VC list_seg_prefix.5.1" expl="1. postcondition">
   <transf name="inline_goal">
    <goal name="VC list_seg_prefix.5.1.1" expl="1. postcondition">
    <transf name="split_goal_wp">
     <goal name="VC list_seg_prefix.5.1.1.1" expl="1. postcondition">
     <proof prover="2"><result status="valid" time="0.10"/></proof>
     </goal>
     <goal name="VC list_seg_prefix.5.1.1.2" expl="2. postcondition">
     <proof prover="2"><result status="valid" time="0.87"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC list_seg_sublistl" expl="VC for list_seg_sublistl">
 <proof prover="0" memlimit="1000"><result status="timeout" time="1.03"/></proof>
 <proof prover="1"><result status="timeout" time="0.99"/></proof>
 <proof prover="2"><result status="timeout" time="0.99"/></proof>
 <transf name="split_goal_wp">
  <goal name="VC list_seg_sublistl.1" expl="1. assertion">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC list_seg_sublistl.2" expl="2. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="VC list_seg_sublistl.3" expl="3. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="VC list_seg_sublistl.4" expl="4. variant decrease">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="VC list_seg_sublistl.5" expl="5. precondition">
  <proof prover="1" steplimit="-1"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
  <goal name="VC list_seg_sublistl.6" expl="6. postcondition">
  <proof prover="0" timelimit="5" steplimit="-1" memlimit="2000"><result status="timeout" time="5.99"/></proof>
  <proof prover="1" timelimit="5" steplimit="-1" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5" steplimit="-1" memlimit="2000"><result status="timeout" time="4.97"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_tail">
 <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="tail_suffix">
 <proof prover="1"><result status="valid" time="0.03" steps="43"/></proof>
 </goal>
 <goal name="VC list_seg_no_repet" expl="VC for list_seg_no_repet">
 <transf name="split_goal_wp">
  <goal name="VC list_seg_no_repet.1" expl="1. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.2" expl="2. precondition">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.3" expl="3. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.4" expl="4. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.5" expl="5. assertion">
  <proof prover="1"><result status="valid" time="0.12" steps="74"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.6" expl="6. assertion">
  <proof prover="1"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.7" expl="7. variant decrease">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.8" expl="8. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.9" expl="9. assertion">
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC list_seg_no_repet.10" expl="10. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC app" expl="VC for app">
 <transf name="split_goal_wp">
  <goal name="VC app.1" expl="1. postcondition">
  <proof prover="1"><result status="valid" time="0.02" steps="50"/></proof>
  </goal>
  <goal name="VC app.2" expl="2. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="VC app.3" expl="3. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC app.4" expl="4. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC app.5" expl="5. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC app.6" expl="6. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC app.7" expl="7. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC app.8" expl="8. precondition">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC app.9" expl="9. assertion">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC app.10" expl="10. assertion">
  <proof prover="1"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="VC app.11" expl="11. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC app.12" expl="12. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC app.13" expl="13. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.94" steps="1193"/></proof>
  </goal>
  <goal name="VC app.14" expl="14. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="VC app.15" expl="15. loop invariant preservation">
  <transf name="introduce_premises">
   <goal name="VC app.15.1" expl="1. loop invariant preservation">
   <transf name="inline_goal">
    <goal name="VC app.15.1.1" expl="1. loop invariant preservation">
    <transf name="split_goal_wp">
     <goal name="VC app.15.1.1.1" expl="1. VC for app">
     <proof prover="1"><result status="valid" time="0.06" steps="129"/></proof>
     </goal>
     <goal name="VC app.15.1.1.2" expl="2. VC for app">
     <proof prover="1"><result status="valid" time="0.43" steps="620"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC app.16" expl="16. loop invariant preservation">
  <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="2.84"/></proof>
  </goal>
  <goal name="VC app.17" expl="17. loop variant decrease">
  <proof prover="1"><result status="valid" time="0.05" steps="128"/></proof>
  </goal>
  <goal name="VC app.18" expl="18. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC app.19" expl="19. assertion">
  <proof prover="1"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC app.20" expl="20. assertion">
  <proof prover="1"><result status="valid" time="0.22" steps="174"/></proof>
  </goal>
  <goal name="VC app.21" expl="21. assertion">
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC app.22" expl="22. postcondition">
  <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="2.58"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC in_place_reverse" expl="VC for in_place_reverse">
 <proof prover="0" memlimit="1000"><result status="timeout" time="1.05"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="0.99"/></proof>
 <transf name="split_goal_wp">
  <goal name="VC in_place_reverse.1" expl="1. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC in_place_reverse.2" expl="2. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="VC in_place_reverse.3" expl="3. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC in_place_reverse.4" expl="4. loop invariant init">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC in_place_reverse.5" expl="5. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC in_place_reverse.6" expl="6. precondition">
  <proof prover="1"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="VC in_place_reverse.7" expl="7. assertion">
  <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="VC in_place_reverse.8" expl="8. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.15" steps="318"/></proof>
  </goal>
  <goal name="VC in_place_reverse.9" expl="9. loop invariant preservation">
  <proof prover="1"><result status="valid" time="0.63" steps="635"/></proof>
  </goal>
  <goal name="VC in_place_reverse.10" expl="10. loop invariant preservation">
  <proof prover="2"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC in_place_reverse.11" expl="11. loop invariant preservation">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="timeout" time="5.04"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="4.99"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC in_place_reverse.12" expl="12. loop variant decrease">
  <proof prover="1"><result status="valid" time="0.40" steps="323"/></proof>
  </goal>
  <goal name="VC in_place_reverse.13" expl="13. postcondition">
  <proof prover="1"><result status="valid" time="0.80" steps="1032"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
