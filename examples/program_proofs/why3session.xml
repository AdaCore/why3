<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.4" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC3" version="2.4.1" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Eprover" version="2.0" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.3.2" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="7" name="CVC4" version="1.6" timelimit="10" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="program_proofs.mlw"/>
<theory name="Mult" proved="true">
 <goal name="mult&#39;vc" expl="VC for mult" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
 <goal name="mult_commutative&#39;vc" expl="VC for mult_commutative" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
 </goal>
</theory>
<theory name="Mirror" proved="true">
 <goal name="mirror&#39;vc" expl="VC for mirror" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="41"/></proof>
 </goal>
 <goal name="mirror_involutive&#39;vc" expl="VC for mirror_involutive" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="54"/></proof>
 </goal>
 <goal name="mirror_size&#39;vc" expl="VC for mirror_size" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="135"/></proof>
 </goal>
</theory>
<theory name="AST">
 <goal name="MapApp.eq&#39;refn&#39;vc" expl="VC for eq&#39;refn" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="10"/></proof>
 </goal>
 <goal name="eval&#39;vc" expl="VC for eval" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="78"/></proof>
 </goal>
 <goal name="eval_list&#39;vc" expl="VC for eval_list" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="69"/></proof>
 </goal>
 <goal name="shorten&#39;vc" expl="VC for shorten" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shorten&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="shorten&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="shorten&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="optimize&#39;vc" expl="VC for optimize" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="148"/></proof>
 </goal>
 <goal name="optimize_and_filter&#39;vc" expl="VC for optimize_and_filter">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="1"><result status="timeout" time="5.00" steps="454138"/></proof>
 <proof prover="4" timelimit="5"><result status="timeout" time="5.00" steps="14730624"/></proof>
 <transf name="split_vc" >
  <goal name="optimize_and_filter&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="optimize_and_filter&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="optimize_and_filter&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="10"><result status="timeout" time="10.00"/></proof>
  <proof prover="1" timelimit="1"><result status="timeout" time="1.00" steps="98612"/></proof>
  <proof prover="2"><result status="timeout" time="10.00" steps="4802674"/></proof>
  <proof prover="3"><result status="timeout" time="10.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="2693691"/></proof>
  <proof prover="5"><result status="timeout" time="10.00"/></proof>
  <proof prover="6"><result status="timeout" time="10.00"/></proof>
  <proof prover="7"><result status="unknown" time="0.19" steps="37840"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="PeanoNumbers" proved="true">
 <goal name="to_int&#39;vc" expl="VC for to_int" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
 <goal name="of_int&#39;vc" expl="VC for of_int" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="to_int_of_int&#39;vc" expl="VC for to_int_of_int" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="29"/></proof>
 </goal>
 <goal name="of_int_to_int&#39;vc" expl="VC for of_int_to_int" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="69"/></proof>
 </goal>
 <goal name="less_transitive&#39;vc" expl="VC for less_transitive" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="313"/></proof>
 </goal>
 <goal name="add_correct&#39;vc" expl="VC for add_correct" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="128"/></proof>
 </goal>
 <goal name="sub&#39;vc" expl="VC for sub" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="165"/></proof>
 </goal>
 <goal name="sub_correct&#39;vc" expl="VC for sub_correct" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="413"/></proof>
 </goal>
 <goal name="mul_correct&#39;vc" expl="VC for mul_correct" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="279"/></proof>
 </goal>
 <goal name="div_mod&#39;vc" expl="VC for div_mod" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="11856"/></proof>
 </goal>
 <goal name="div_mod_correct&#39;vc" expl="VC for div_mod_correct" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="474"/></proof>
 </goal>
</theory>
</file>
</why3session>
