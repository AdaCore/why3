<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.10" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="verifythis_2024_challenge1.mlw"/>
<theory name="Top" proved="true">
 <goal name="all_subsegments&#39;vc" expl="VC for all_subsegments" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="all_subsegments&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="all_subsegments&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.023904" steps="29483"/></proof>
   </goal>
   <goal name="all_subsegments&#39;vc.0.1" expl="VC for all_subsegments" proved="true">
   <proof prover="1"><result status="valid" time="0.041397" steps="292196"/></proof>
   </goal>
   <goal name="all_subsegments&#39;vc.0.2" expl="VC for all_subsegments" proved="true">
   <proof prover="1"><result status="valid" time="0.041297" steps="227183"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_subsegments&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.033297" steps="30310"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="smart_array_copy_0&#39;vc" expl="VC for smart_array_copy_0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="smart_array_copy_0&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.034002" steps="28541"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.015394" steps="2048"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.024633" steps="2220"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.024441" steps="2275"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.034346" steps="34617"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.020165" steps="2336"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.032287" steps="36238"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="1.660032" steps="84219"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="1.534127" steps="78078"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="1.574901" steps="78114"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.031258" steps="40960"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.033441" steps="43050"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="5.701149" steps="262527"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.015180" steps="2426"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.041738" steps="94056"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.15" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.026366" steps="35302"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.019374" steps="3403"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.096307" steps="55059"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.027411" steps="35367"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022605" steps="36173"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.015263" steps="2401"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.031091" steps="37433"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.026555" steps="34752"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.23" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.015928" steps="2063"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.024714" steps="30945"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.25" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.024439" steps="32180"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.26" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.023306" steps="32217"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.030649" steps="33575"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.026287" steps="34469"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023325" steps="32098"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020013" steps="2067"/></proof>
  </goal>
  <goal name="smart_array_copy_0&#39;vc.31" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.020216" steps="2370"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="copy_chunk&#39;vc" expl="VC for copy_chunk" proved="true">
 <proof prover="1"><result status="valid" time="0.037344" steps="45706"/></proof>
 </goal>
 <goal name="smart_array_copy_0b&#39;vc" expl="VC for smart_array_copy_0b" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="1.443054" steps="131851"/></proof>
 </goal>
 <goal name="distinct_subsegments&#39;vc" expl="VC for distinct_subsegments" proved="true">
 <proof prover="1"><result status="valid" time="0.038244" steps="36389"/></proof>
 </goal>
 <goal name="frame_permutation_pair&#39;vc" expl="VC for frame_permutation_pair" proved="true">
 <proof prover="1"><result status="valid" time="0.081374" steps="90171"/></proof>
 </goal>
 <goal name="frame_subsegment&#39;vc" expl="VC for frame_subsegment" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="frame_subsegment&#39;vc.0" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="copy_subsegment">
   <goal name="frame_subsegment&#39;vc.0.0" expl="VC for frame_subsegment" proved="true">
   <transf name="unfold" proved="true" arg1="copy_subsegment" arg2="in" arg3="Requires3">
    <goal name="frame_subsegment&#39;vc.0.0.0" expl="VC for frame_subsegment" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="frame_subsegment&#39;vc.0.0.0.0" expl="VC for frame_subsegment" proved="true">
     <transf name="unfold" proved="true" arg1="copy_to">
      <goal name="frame_subsegment&#39;vc.0.0.0.0.0" expl="VC for frame_subsegment" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="frame_subsegment&#39;vc.0.0.0.0.0.0" expl="VC for frame_subsegment" proved="true">
       <proof prover="1"><result status="valid" time="0.029859" steps="55198"/></proof>
       </goal>
       <goal name="frame_subsegment&#39;vc.0.0.0.0.0.1" expl="VC for frame_subsegment" proved="true">
       <proof prover="1"><result status="valid" time="0.040133" steps="54155"/></proof>
       </goal>
       <goal name="frame_subsegment&#39;vc.0.0.0.0.0.2" expl="VC for frame_subsegment" proved="true">
       <proof prover="1"><result status="valid" time="0.044603" steps="56578"/></proof>
       </goal>
       <goal name="frame_subsegment&#39;vc.0.0.0.0.0.3" expl="VC for frame_subsegment" proved="true">
       <proof prover="2"><result status="valid" time="1.039424" steps="80535"/></proof>
       </goal>
       <goal name="frame_subsegment&#39;vc.0.0.0.0.0.4" expl="VC for frame_subsegment" proved="true">
       <proof prover="2" timelimit="5"><result status="valid" time="5.347727" steps="444949"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="frame_subsegment&#39;vc.0.0.0.1" expl="VC for frame_subsegment" proved="true">
     <transf name="unfold" proved="true" arg1="frame" arg2="in" arg3="Requires1">
      <goal name="frame_subsegment&#39;vc.0.0.0.1.0" expl="VC for frame_subsegment" proved="true">
      <transf name="case" proved="true" arg1="(tau[sigma[j1]] &lt; tau[sigma[j2]])">
       <goal name="frame_subsegment&#39;vc.0.0.0.1.0.0" expl="true case" proved="true">
       <transf name="destruct" proved="true" arg1="Requires1">
        <goal name="frame_subsegment&#39;vc.0.0.0.1.0.0.0" expl="true case" proved="true">
        <transf name="destruct" proved="true" arg1="Requires1">
         <goal name="frame_subsegment&#39;vc.0.0.0.1.0.0.0.0" expl="true case" proved="true">
         <transf name="rewrite" proved="true" arg1="Requires2">
          <goal name="frame_subsegment&#39;vc.0.0.0.1.0.0.0.0.0" expl="true case" proved="true">
          <proof prover="3"><result status="valid" time="0.137427" steps="696"/></proof>
          </goal>
          <goal name="frame_subsegment&#39;vc.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.190684" steps="110484"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="frame_subsegment&#39;vc.0.0.0.1.0.1" expl="false case" proved="true">
       <transf name="destruct" proved="true" arg1="Requires1">
        <goal name="frame_subsegment&#39;vc.0.0.0.1.0.1.0" expl="false case" proved="true">
        <transf name="destruct" proved="true" arg1="Requires1">
         <goal name="frame_subsegment&#39;vc.0.0.0.1.0.1.0.0" expl="false case" proved="true">
         <transf name="rewrite" proved="true" arg1="Requires1">
          <goal name="frame_subsegment&#39;vc.0.0.0.1.0.1.0.0.0" expl="false case" proved="true">
          <proof prover="3"><result status="valid" time="0.127578" steps="696"/></proof>
          </goal>
          <goal name="frame_subsegment&#39;vc.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.630936" steps="70547"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="frame_subsegment&#39;vc.0.0.0.2" expl="VC for frame_subsegment" proved="true">
     <transf name="unfold" proved="true" arg1="frame" arg2="in" arg3="Requires">
      <goal name="frame_subsegment&#39;vc.0.0.0.2.0" expl="VC for frame_subsegment" proved="true">
      <transf name="destruct" proved="true" arg1="Requires">
       <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0" expl="VC for frame_subsegment" proved="true">
       <transf name="destruct" proved="true" arg1="Requires">
        <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0.0" expl="VC for frame_subsegment" proved="true">
        <transf name="case" proved="true" arg1="(sigma[j1] &lt; sigma[j2])">
         <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0.0.0" expl="true case" proved="true">
         <transf name="rewrite" proved="true" arg1="Requires1">
          <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0.0.0.0" expl="true case" proved="true">
          <proof prover="3"><result status="valid" time="0.121355" steps="619"/></proof>
          </goal>
          <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.934580" steps="85732"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0.0.1" expl="false case" proved="true">
         <transf name="rewrite" proved="true" arg1="Requires">
          <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0.0.1.0" expl="false case" proved="true">
          <proof prover="3"><result status="valid" time="0.117532" steps="619"/></proof>
          </goal>
          <goal name="frame_subsegment&#39;vc.0.0.0.2.0.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.464309" steps="40962"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decompose_sigma&#39;vc" expl="VC for decompose_sigma" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decompose_sigma&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.014799" steps="4535"/></proof>
  </goal>
  <goal name="decompose_sigma&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023105" steps="4535"/></proof>
  </goal>
  <goal name="decompose_sigma&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.785948" steps="37489"/></proof>
  </goal>
  <goal name="decompose_sigma&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.443281" steps="849172"/></proof>
  </goal>
  <goal name="decompose_sigma&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.040626" steps="50531"/></proof>
  </goal>
  <goal name="decompose_sigma&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.082910" steps="214460"/></proof>
  </goal>
  <goal name="decompose_sigma&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017767" steps="4916"/></proof>
  </goal>
  <goal name="decompose_sigma&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022514" steps="3439"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decompose_tau_sigma&#39;vc" expl="VC for decompose_tau_sigma" proved="true">
 <proof prover="1"><result status="valid" time="0.115113" steps="70012"/></proof>
 </goal>
 <goal name="all_subsegments_perm&#39;vc" expl="VC for all_subsegments_perm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="all_subsegments_perm&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.024678" steps="4819"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.262579" steps="35293"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.021842" steps="7121"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022349" steps="4912"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.029172" steps="30647"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="all_subsegments_perm&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.024678" steps="4780"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.019924" steps="4780"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.020037" steps="4790"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.5.3" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.016115" steps="4790"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.5.4" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.019957" steps="4814"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023491" steps="6937"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022275" steps="4802"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.026378" steps="4807"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.028950" steps="29290"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="all_subsegments_perm&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.038595" steps="4846"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.023129" steps="4846"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.10.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.018341" steps="4856"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.10.3" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.044583" steps="4856"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.10.4" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.040642" steps="4882"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018637" steps="7020"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.12" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.039603" steps="79490"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.148335" steps="614"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="3.259940" steps="147526"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.027712" steps="7115"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.035143" steps="80341"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.17" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.207915" steps="602"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.18" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="all_subsegments_perm&#39;vc.18.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.055495" steps="96534"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.18.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.643670" steps="60284"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023725" steps="7257"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.20" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.043333" steps="82043"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.21" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.214071" steps="627"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023392" steps="7408"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.23" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.037684" steps="83690"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.24" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="5.247147" steps="3419"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.25" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.043837" steps="88900"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.26" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.053369" steps="88932"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.27" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.053922" steps="89116"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.28" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.045721" steps="89146"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022609" steps="5302"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.30" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.039200" steps="89058"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.31" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.046367" steps="89088"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.32" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.045473" steps="89246"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.33" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.048384" steps="89216"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020210" steps="5319"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.35" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.423230" steps="498054"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.36" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(o1 = j)">
   <goal name="all_subsegments_perm&#39;vc.36.0" expl="true case (postcondition)" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="2.008189" steps="1105"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.36.1" expl="false case (postcondition)" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="2.442759" steps="1082"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018431" steps="7388"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.38" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.047735" steps="83161"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.39" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.181946" steps="614"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.016865" steps="7539"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.41" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.043234" steps="84808"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.42" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="3.553792" steps="3287"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.43" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.044447" steps="90106"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.44" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.043316" steps="92266"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.45" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.043721" steps="90138"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.46" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.048079" steps="92266"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.47" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.053486" steps="90336"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.48" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.053652" steps="92480"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.49" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.042802" steps="90364"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.50" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.044954" steps="92480"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017857" steps="5399"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.52" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.044902" steps="90282"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.53" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.050608" steps="92440"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.54" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.042052" steps="90310"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.55" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.052857" steps="92440"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.56" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.045687" steps="90472"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.57" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.049725" steps="92586"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.58" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.051190" steps="90444"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.59" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.055025" steps="92586"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.60" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.014393" steps="5416"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.61" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.071924" steps="242692"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.62" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(o1 = j)">
   <goal name="all_subsegments_perm&#39;vc.62.0" expl="true case (postcondition)" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="3.211599" steps="1857"/></proof>
   </goal>
   <goal name="all_subsegments_perm&#39;vc.62.1" expl="false case (postcondition)" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="3.317517" steps="1833"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.63" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023323" steps="7472"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.64" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.041024" steps="83692"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.65" expl="postcondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.520569" steps="1244"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.66" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024342" steps="7551"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.67" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.039602" steps="84562"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.68" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023513" steps="7669"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.69" expl="postcondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.509952" steps="1264"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.70" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.053662" steps="119735"/></proof>
  </goal>
  <goal name="all_subsegments_perm&#39;vc.71" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.043792" steps="90652"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="smart_array_copy_1&#39;vc" expl="VC for smart_array_copy_1" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="smart_array_copy_1&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024778" steps="4868"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.016150" steps="5027"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.032012" steps="83251"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.032621" steps="79573"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.208285" steps="58072"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024011" steps="5169"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020598" steps="5193"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.015256" steps="5236"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.023881" steps="5241"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.019227" steps="5264"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.030152" steps="85526"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.345925" steps="65540"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.12" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.036955" steps="85803"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.032633" steps="93652"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.14" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.671584" steps="84322"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.035206" steps="89479"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.029745" steps="89422"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.024173" steps="89892"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.025000" steps="5356"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.027157" steps="5361"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.050557" steps="118827"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.21" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.023629" steps="5401"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.22" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.011852" steps="5474"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.23" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.041005" steps="91401"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.24" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.456142" steps="22549"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.25" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.442376" steps="22562"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.26" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.052343" steps="103564"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.27" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="smart_array_copy_1&#39;vc.27.0" expl="index in array bounds" proved="true">
   <proof prover="1"><result status="valid" time="0.044518" steps="99697"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.27.1" expl="index in array bounds" proved="true">
   <proof prover="1"><result status="valid" time="0.040138" steps="89489"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.068654" steps="109538"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.659796" steps="33367"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.616670" steps="34078"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="1.625368" steps="97119"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="4.151073" steps="1674375"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.33" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="copy_to">
   <goal name="smart_array_copy_1&#39;vc.33.0" expl="VC for smart_array_copy_1" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="smart_array_copy_1&#39;vc.33.0.0" expl="VC for smart_array_copy_1" proved="true">
    <proof prover="1" timelimit="5"><result status="valid" time="0.047920" steps="105497"/></proof>
    </goal>
    <goal name="smart_array_copy_1&#39;vc.33.0.1" expl="VC for smart_array_copy_1" proved="true">
    <proof prover="1" timelimit="5"><result status="valid" time="0.047564" steps="106360"/></proof>
    </goal>
    <goal name="smart_array_copy_1&#39;vc.33.0.2" expl="VC for smart_array_copy_1" proved="true">
    <proof prover="1" timelimit="5"><result status="valid" time="0.050673" steps="98019"/></proof>
    </goal>
    <goal name="smart_array_copy_1&#39;vc.33.0.3" expl="VC for smart_array_copy_1" proved="true">
    <proof prover="1" timelimit="5"><result status="valid" time="0.056282" steps="132414"/></proof>
    </goal>
    <goal name="smart_array_copy_1&#39;vc.33.0.4" expl="VC for smart_array_copy_1" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="0.445382" steps="31616"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.34" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(i&#39;=i)">
   <goal name="smart_array_copy_1&#39;vc.34.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.056205" steps="106955"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.34.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="assert" proved="true" arg1="(p[startdst + i&#39;] = p1[startdst + i&#39;] = startsrc + i&#39;)">
    <goal name="smart_array_copy_1&#39;vc.34.1.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="smart_array_copy_1&#39;vc.34.1.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.055621" steps="112484"/></proof>
     </goal>
     <goal name="smart_array_copy_1&#39;vc.34.1.0.1" proved="true">
     <transf name="apply" proved="true" arg1="LoopInvariant8">
      <goal name="smart_array_copy_1&#39;vc.34.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.051560" steps="90260"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="smart_array_copy_1&#39;vc.34.1.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="1"><result status="valid" time="0.054180" steps="111585"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.35" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(i&#39;=i)">
   <goal name="smart_array_copy_1&#39;vc.35.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="1" timelimit="5"><result status="valid" time="0.050814" steps="108021"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.35.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="assert" proved="true" arg1="(invp[startsrc + i&#39;] = invp1[startsrc + i&#39;] = startdst + i&#39;)">
    <goal name="smart_array_copy_1&#39;vc.35.1.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="smart_array_copy_1&#39;vc.35.1.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.056651" steps="113562"/></proof>
     </goal>
     <goal name="smart_array_copy_1&#39;vc.35.1.0.1" proved="true">
     <transf name="apply" proved="true" arg1="LoopInvariant8">
      <goal name="smart_array_copy_1&#39;vc.35.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.048055" steps="91325"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="smart_array_copy_1&#39;vc.35.1.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="1"><result status="valid" time="0.048307" steps="112609"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.36" expl="loop invariant preservation" proved="true">
  <transf name="apply" proved="true" arg1="frame_subsegment" arg2="with" arg3="dst2,j,p2,invp2">
   <goal name="smart_array_copy_1&#39;vc.36.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.024356" steps="8698"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.042777" steps="101292"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.2" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.050935" steps="104310"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.3" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.048297" steps="101043"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.4" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.053321" steps="101047"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.5" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.052266" steps="101018"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.6" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.023321" steps="5816"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.7" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.031160" steps="5816"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.36.8" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.025120" steps="5816"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.025611" steps="5627"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.022388" steps="5632"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.39" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(j&#39; = j)">
   <goal name="smart_array_copy_1&#39;vc.39.0" expl="true case (loop invariant preservation)" proved="true">
   <transf name="unfold" proved="true" arg1="copy_subsegment">
    <goal name="smart_array_copy_1&#39;vc.39.0.0" expl="VC for smart_array_copy_1" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="smart_array_copy_1&#39;vc.39.0.0.0" expl="VC for smart_array_copy_1" proved="true">
     <proof prover="1"><result status="valid" time="0.034021" steps="31321"/></proof>
     </goal>
     <goal name="smart_array_copy_1&#39;vc.39.0.0.1" expl="VC for smart_array_copy_1" proved="true">
     <proof prover="3"><result status="valid" time="0.151524" steps="536"/></proof>
     </goal>
     <goal name="smart_array_copy_1&#39;vc.39.0.0.2" expl="VC for smart_array_copy_1" proved="true">
     <proof prover="3"><result status="valid" time="0.153715" steps="536"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.39.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="1"><result status="valid" time="0.035120" steps="95627"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.40" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.037762" steps="86352"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.021740" steps="7742"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.42" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="smart_array_copy_1&#39;vc.42.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.047704" steps="88315"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.42.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.045021" steps="88328"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.42.2" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.040890" steps="88328"/></proof>
   </goal>
   <goal name="smart_array_copy_1&#39;vc.42.3" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.043457" steps="85419"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.031489" steps="5388"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030952" steps="5393"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024293" steps="5398"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.021820" steps="5403"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.037689" steps="89627"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.045000" steps="5354"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.019674" steps="5359"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.50" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.026588" steps="84981"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.51" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.021385" steps="5179"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.52" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.014620" steps="5188"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.53" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.033805" steps="89024"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.54" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.034222" steps="89129"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.55" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.033871" steps="88717"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.56" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.034034" steps="88717"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.57" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.100629" steps="197715"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.039774" steps="117463"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.59" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024877" steps="28482"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.60" expl="VC for smart_array_copy_1" proved="true">
  <proof prover="1"><result status="valid" time="0.017254" steps="5179"/></proof>
  </goal>
  <goal name="smart_array_copy_1&#39;vc.61" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.021629" steps="5533"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
