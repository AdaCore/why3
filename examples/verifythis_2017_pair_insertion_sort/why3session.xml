<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../verifythis_2017_pair_insertion_sort.mlw" expanded="true">
<theory name="Challenge1" sum="3a2fe30dbaa20316b038a7cfccece9d7" expanded="true">
 <goal name="VC pair_insertion_sort" expl="VC for pair_insertion_sort" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="VC pair_insertion_sort.1" expl="1. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="2"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.2" expl="2. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.3" expl="3. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.4" expl="4. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.5" expl="5. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.6" expl="6. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.7" expl="7. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.8" expl="8. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.9" expl="9. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.10" expl="10. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.11" expl="11. loop invariant init">
  <proof prover="0"><result status="valid" time="0.30" steps="274"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.12" expl="12. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.13" expl="13. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.14" expl="14. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.15" expl="15. assertion">
  <proof prover="0"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.16" expl="16. assertion">
  <proof prover="0"><result status="valid" time="0.05" steps="115"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.17" expl="17. assertion">
  <proof prover="0"><result status="valid" time="0.36" steps="490"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.18" expl="18. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.19" expl="19. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.20" expl="20. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.14" steps="175"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.21" expl="21. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.47" steps="314"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.22" expl="22. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.18" steps="268"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.23" expl="23. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="149"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.24" expl="24. loop invariant preservation" expanded="true">
  <proof prover="4"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.25" expl="25. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.26" expl="26. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.27" expl="27. loop invariant init">
  <proof prover="0"><result status="valid" time="0.03" steps="69"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.28" expl="28. loop invariant init">
  <proof prover="0"><result status="valid" time="0.04" steps="82"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.29" expl="29. loop invariant init">
  <proof prover="0"><result status="valid" time="0.08" steps="162"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.30" expl="30. loop invariant init" expanded="true">
  <proof prover="0"><result status="valid" time="0.01" steps="79"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.31" expl="31. loop invariant init">
  <proof prover="0"><result status="valid" time="0.38" steps="468"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.32" expl="32. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.33" expl="33. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.34" expl="34. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.35" expl="35. assertion">
  <proof prover="0"><result status="valid" time="0.02" steps="57"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.36" expl="36. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.37" expl="37. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.38" expl="38. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.04" steps="122"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.39" expl="39. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.26" steps="227"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.40" expl="40. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.16" steps="185"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.41" expl="41. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="108"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.42" expl="42. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.48" steps="389"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.43" expl="43. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.44" expl="44. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.45" expl="45. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.46" expl="46. loop invariant preservation" expanded="true">
  <proof prover="0"><result status="valid" time="0.14" steps="260"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.47" expl="47. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.48" expl="48. assertion" expanded="true">
  <proof prover="0"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.49" expl="49. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.50" expl="50. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.51" expl="51. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.52" expl="52. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.53" expl="53. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.54" expl="54. loop invariant init" expanded="true">
  <proof prover="0"><result status="valid" time="0.20" steps="199"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.55" expl="55. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.56" expl="56. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.57" expl="57. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.58" expl="58. assertion">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.59" expl="59. assertion">
  <proof prover="0"><result status="valid" time="0.04" steps="170"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.60" expl="60. assertion">
  <proof prover="0"><result status="valid" time="0.47" steps="531"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.61" expl="61. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.62" expl="62. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.00" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.63" expl="63. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.16" steps="217"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.64" expl="64. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.59" steps="400"/></proof>
  <proof prover="2"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.65" expl="65. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.26" steps="343"/></proof>
  <proof prover="2"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.66" expl="66. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.12" steps="185"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.67" expl="67. loop invariant preservation" expanded="true">
  <proof prover="4"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.68" expl="68. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.69" expl="69. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.70" expl="70. loop invariant init">
  <proof prover="0"><result status="valid" time="0.02" steps="94"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.71" expl="71. loop invariant init">
  <proof prover="0"><result status="valid" time="0.04" steps="156"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.72" expl="72. loop invariant init">
  <proof prover="0"><result status="valid" time="0.20" steps="299"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.73" expl="73. loop invariant init">
  <proof prover="0"><result status="valid" time="0.02" steps="174"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.74" expl="74. loop invariant init">
  <proof prover="0"><result status="valid" time="0.63" steps="746"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.75" expl="75. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.76" expl="76. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.77" expl="77. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.78" expl="78. assertion">
  <proof prover="0"><result status="valid" time="0.02" steps="74"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.79" expl="79. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.80" expl="80. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.81" expl="81. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.16" steps="164"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.82" expl="82. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.25" steps="309"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.83" expl="83. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.18" steps="260"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.84" expl="84. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.04" steps="144"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.85" expl="85. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.74" steps="453"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.86" expl="86. index in array bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.87" expl="87. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.88" expl="88. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.89" expl="89. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.24" steps="430"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.90" expl="90. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.91" expl="91. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.92" expl="92. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.93" expl="93. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.94" expl="94. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="9"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.95" expl="95. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.96" expl="96. loop invariant init">
  <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.97" expl="97. loop invariant init">
  <proof prover="0"><result status="valid" time="0.17" steps="234"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.98" expl="98. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.99" expl="99. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.100" expl="100. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.101" expl="101. assertion">
  <proof prover="0"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.102" expl="102. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.103" expl="103. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.104" expl="104. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="91"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.105" expl="105. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.17" steps="177"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.106" expl="106. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.03" steps="144"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.107" expl="107. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="77"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.108" expl="108. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.18" steps="253"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.109" expl="109. index in array bounds">
  <proof prover="0"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.110" expl="110. postcondition">
  <proof prover="0"><result status="valid" time="0.07" steps="149"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.111" expl="111. postcondition">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.112" expl="112. postcondition">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC pair_insertion_sort.113" expl="113. postcondition">
  <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
