<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.1.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="re.coma"/>
<theory name="Coma" proved="true">
 <goal name="vc_if" proved="true">
 <proof prover="2"><result status="valid" time="0.011500" steps="7"/></proof>
 </goal>
 <goal name="vc_unRe" proved="true">
 <proof prover="2"><result status="valid" time="0.018274" steps="7"/></proof>
 </goal>
 <goal name="vc_accept" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_accept.0" proved="true">
  <proof prover="2"><result status="valid" time="0.016445" steps="10"/></proof>
  </goal>
  <goal name="vc_accept.1" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.012621" steps="19"/></proof>
  </goal>
  <goal name="vc_accept.2" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_accept.2.0" proved="true">
   <proof prover="2"><result status="valid" time="0.028248" steps="342"/></proof>
   </goal>
   <goal name="vc_accept.2.1" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.563390" steps="8224"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_accept.3" proved="true">
  <proof prover="2"><result status="valid" time="0.037370" steps="187"/></proof>
  </goal>
  <goal name="vc_accept.4" proved="true">
  <proof prover="2"><result status="valid" time="0.014685" steps="30"/></proof>
  </goal>
  <goal name="vc_accept.5" proved="true">
  <proof prover="2"><result status="valid" time="0.014482" steps="16"/></proof>
  </goal>
  <goal name="vc_accept.6" proved="true">
  <proof prover="2"><result status="valid" time="0.047777" steps="314"/></proof>
  </goal>
  <goal name="vc_accept.7" proved="true">
  <proof prover="2"><result status="valid" time="0.023262" steps="148"/></proof>
  </goal>
  <goal name="vc_accept.8" proved="true">
  <proof prover="2"><result status="valid" time="0.029596" steps="395"/></proof>
  </goal>
  <goal name="vc_accept.9" proved="true">
  <proof prover="2"><result status="valid" time="0.012185" steps="18"/></proof>
  </goal>
  <goal name="vc_accept.10" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_accept.10.0" proved="true">
   <proof prover="3"><result status="valid" time="0.103698" steps="32125"/></proof>
   </goal>
   <goal name="vc_accept.10.1" proved="true">
   <proof prover="1"><result status="valid" time="0.037161" steps="92861"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_accept.11" proved="true">
  <proof prover="2"><result status="valid" time="0.034270" steps="310"/></proof>
  </goal>
  <goal name="vc_accept.12" proved="true">
  <proof prover="2"><result status="valid" time="0.030072" steps="260"/></proof>
  </goal>
  <goal name="vc_accept.13" proved="true">
  <proof prover="2"><result status="valid" time="0.017479" steps="12"/></proof>
  </goal>
  <goal name="vc_accept.14" proved="true">
  <proof prover="2"><result status="valid" time="0.020824" steps="20"/></proof>
  </goal>
  <goal name="vc_accept.15" proved="true">
  <proof prover="2"><result status="valid" time="0.017905" steps="20"/></proof>
  </goal>
  <goal name="vc_accept.16" proved="true">
  <proof prover="2"><result status="valid" time="0.014881" steps="18"/></proof>
  </goal>
  <goal name="vc_accept.17" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_accept.17.0" proved="true">
   <proof prover="2"><result status="valid" time="0.020259" steps="46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_accept.18" proved="true">
  <proof prover="2"><result status="valid" time="0.015764" steps="16"/></proof>
  </goal>
  <goal name="vc_accept.19" proved="true">
  <proof prover="2"><result status="valid" time="0.021201" steps="24"/></proof>
  </goal>
  <goal name="vc_accept.20" proved="true">
  <proof prover="2"><result status="valid" time="0.020520" steps="24"/></proof>
  </goal>
  <goal name="vc_accept.21" proved="true">
  <proof prover="2"><result status="valid" time="0.023461" steps="22"/></proof>
  </goal>
  <goal name="vc_accept.22" proved="true">
  <proof prover="2"><result status="valid" time="0.033653" steps="276"/></proof>
  </goal>
  <goal name="vc_accept.23" proved="true">
  <proof prover="2"><result status="valid" time="0.015833" steps="12"/></proof>
  </goal>
  <goal name="vc_accept.24" proved="true">
  <proof prover="2"><result status="valid" time="0.019894" steps="18"/></proof>
  </goal>
  <goal name="vc_accept.25" proved="true">
  <proof prover="2"><result status="valid" time="0.021204" steps="27"/></proof>
  </goal>
  <goal name="vc_accept.26" proved="true">
  <proof prover="2"><result status="valid" time="0.027245" steps="26"/></proof>
  </goal>
  <goal name="vc_accept.27" proved="true">
  <proof prover="1"><result status="valid" time="0.009699" steps="6102"/></proof>
  </goal>
  <goal name="vc_accept.28" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.023076" steps="149"/></proof>
  </goal>
  <goal name="vc_accept.29" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_accept.29.0" proved="true">
   <proof prover="0"><result status="valid" time="0.054307" steps="22559"/></proof>
   </goal>
   <goal name="vc_accept.29.1" proved="true">
   <proof prover="2"><result status="valid" time="0.473489" steps="10362"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_accept.30" proved="true">
  <proof prover="2"><result status="valid" time="0.024980" steps="38"/></proof>
  </goal>
  <goal name="vc_accept.31" proved="true">
  <proof prover="2"><result status="valid" time="0.022215" steps="16"/></proof>
  </goal>
  <goal name="vc_accept.32" proved="true">
  <proof prover="3"><result status="valid" time="0.038451" steps="12470"/></proof>
  </goal>
  <goal name="vc_accept.33" proved="true">
  <proof prover="2"><result status="valid" time="0.014431" steps="12"/></proof>
  </goal>
  <goal name="vc_accept.34" proved="true">
  <proof prover="2"><result status="valid" time="0.024430" steps="18"/></proof>
  </goal>
  <goal name="vc_accept.35" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.054914" steps="18275"/></proof>
  </goal>
  <goal name="vc_accept.36" proved="true">
  <proof prover="2"><result status="valid" time="0.017771" steps="26"/></proof>
  </goal>
  <goal name="vc_accept.37" proved="true">
  <proof prover="2"><result status="valid" time="0.020064" steps="24"/></proof>
  </goal>
  <goal name="vc_accept.38" proved="true">
  <proof prover="0"><result status="valid" time="0.049903" steps="18843"/></proof>
  </goal>
  <goal name="vc_accept.39" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_accept.39.0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.365572" steps="125163"/></proof>
   </goal>
   <goal name="vc_accept.39.1" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="1.439900" steps="18192"/></proof>
   <transf name="cut" proved="true" arg1="(exists j1:int. (i &lt;= j1 /\ j1 &lt;= length w) /\ mem w[i..j1] r1 /\ ((fun (j2:int) -&gt; exists j&#39;:int. (j2 &lt;= j&#39; /\ j&#39; &lt;= length w) /\ mem w[j2..j&#39;] r /\ (ck @ j&#39;) = True) @ j1) = True /\ j1 &gt; i)">
    <goal name="vc_accept.39.1.0" proved="true">
    <proof prover="2" timelimit="5"><result status="valid" time="0.032046" steps="117"/></proof>
    </goal>
    <goal name="vc_accept.39.1.1" expl="asserted formula" proved="true">
    <transf name="instantiate" proved="true" arg1="mem_star_nonempty" arg2="w[i..j], r1">
     <goal name="vc_accept.39.1.1.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(exists w11:seq char, w2:seq char. not w11 = (empty: seq char) /\ w[i..j] = (w11 ++ w2) /\ mem w11 r1 /\ mem w2 (Star r1))">
      <goal name="vc_accept.39.1.1.0.0" expl="asserted formula" proved="true">
      <proof prover="2" timelimit="5"><result status="valid" time="0.031169" steps="478"/></proof>
      </goal>
      <goal name="vc_accept.39.1.1.0.1" expl="asserted formula" proved="true">
      <transf name="introduce_exists" proved="true" >
       <goal name="vc_accept.39.1.1.0.1.0" expl="asserted formula" proved="true">
       <transf name="exists" proved="true" arg1="(i + length w11)">
        <goal name="vc_accept.39.1.1.0.1.0.0" proved="true">
        <proof prover="2"><result status="valid" time="0.136125" steps="1578"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
