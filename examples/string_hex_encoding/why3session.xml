<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="string_hex_encoding.mlw"/>
<theory name="Top" proved="true">
 <goal name="hex&#39;vc" expl="VC for hex" proved="true">
 <proof prover="2"><result status="valid" time="0.032105" steps="207"/></proof>
 </goal>
 <goal name="xeh&#39;vc" expl="VC for xeh" proved="true">
 <proof prover="2"><result status="valid" time="0.041858" steps="396"/></proof>
 </goal>
 <goal name="decode_unique" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="decode_unique.0" proved="true">
  <transf name="assert" proved="true" arg1="(eq_string s1 s3)">
   <goal name="decode_unique.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.065944" steps="462"/></proof>
   </goal>
   <goal name="decode_unique.0.1" proved="true">
   <proof prover="2"><result status="valid" time="0.015780" steps="21"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.012186" steps="16"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.022976" steps="18"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.025125" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.021387" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.016913" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.024992" steps="29"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.028239" steps="104"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.048913" steps="190"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.020390" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="integer overflow" proved="true">
  <transf name="unfold" proved="true" arg1="encoding">
   <goal name="encode&#39;vc.9.0" expl="integer overflow" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="encode&#39;vc.9.0.0" expl="integer overflow" proved="true">
    <proof prover="2"><result status="valid" time="0.040506" steps="167"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.060377" steps="324"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.038611" steps="113"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.025303" steps="40"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.032155" steps="39"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.036088" steps="110"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.791973" steps="17153"/></proof>
  </goal>
  <goal name="encode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.654644" steps="90602"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="encoding">
   <goal name="encode&#39;vc.17.0" expl="VC for encode" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="encode&#39;vc.17.0.0" expl="VC for encode" proved="true">
    <proof prover="2"><result status="valid" time="0.020338" steps="31"/></proof>
    </goal>
    <goal name="encode&#39;vc.17.0.1" expl="VC for encode" proved="true">
    <proof prover="1"><result status="valid" time="0.162526" steps="28253"/></proof>
    </goal>
    <goal name="encode&#39;vc.17.0.2" expl="VC for encode" proved="true">
    <proof prover="2"><result status="valid" time="0.038781" steps="203"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.021262" steps="16"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.029357" steps="60"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.021933" steps="39"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.018344" steps="22"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.024033" steps="49"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.022100" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.019724" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.043238" steps="163"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.029515" steps="89"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.028276" steps="90"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.045353" steps="227"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.048191" steps="211"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.060691" steps="400"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.101295" steps="796"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.050229" steps="152"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.023043" steps="51"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.069930" steps="390"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.042815" steps="153"/></proof>
  </goal>
  <goal name="decode&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.040153" steps="155"/></proof>
  </goal>
  <goal name="decode&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.247728" steps="2069"/></proof>
  </goal>
  <goal name="decode&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.044935" steps="274"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode_encode&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.017476" steps="18"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.024429" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
