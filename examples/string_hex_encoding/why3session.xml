<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="string_hex_encoding.mlw"/>
<theory name="Top" proved="true">
 <goal name="hex&#39;vc" expl="VC for hex" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="101"/></proof>
 </goal>
 <goal name="xeh&#39;vc" expl="VC for xeh" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="94"/></proof>
 </goal>
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.02" steps="28851"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="846"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="119"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="116"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="34"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="167"/></proof>
  </goal>
  <goal name="encode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="155"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="919"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="2276"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
  <goal name="encode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="encode&#39;vc.18" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.18.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="1.77" steps="2745"/></proof>
   </goal>
   <goal name="encode&#39;vc.18.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.55" steps="866"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="encode&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="1006"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.03" steps="67"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.04" steps="8202"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="138"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="310"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="233"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="260"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="197"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="48"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="48"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="50"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="55"/></proof>
  </goal>
  <goal name="decode&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.97" steps="1215"/></proof>
  </goal>
  <goal name="decode&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode_encode&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.1" expl="assertion" proved="true">
  <transf name="inst_rem" proved="true" arg1="Ensures" arg2="(div i 2)">
   <goal name="decode_encode&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="873"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_encode&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="139408"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="79"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="0.04" steps="9344"/></proof>
 </goal>
 <goal name="test2&#39;vc" expl="VC for test2" proved="true">
 <proof prover="1"><result status="valid" time="0.25" steps="124013"/></proof>
 </goal>
 <goal name="test3&#39;vc" expl="VC for test3" proved="true">
 <proof prover="1"><result status="valid" time="0.26" steps="124013"/></proof>
 </goal>
 <goal name="test4&#39;vc" expl="VC for test4" proved="true">
 <proof prover="1"><result status="valid" time="0.73" steps="377678"/></proof>
 </goal>
 <goal name="test5&#39;vc" expl="VC for test5" proved="true">
 <proof prover="1"><result status="valid" time="0.74" steps="377548"/></proof>
 </goal>
 <goal name="test6&#39;vc" expl="VC for test6" proved="true">
 <proof prover="1"><result status="valid" time="0.72" steps="377482"/></proof>
 </goal>
 <goal name="test7&#39;vc" expl="VC for test7" proved="true">
 <proof prover="1"><result status="valid" time="0.70" steps="377678"/></proof>
 </goal>
</theory>
</file>
</why3session>
