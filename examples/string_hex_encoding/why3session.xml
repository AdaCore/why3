<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="3" name="Alt-Ergo" version="2.3.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="string_hex_encoding.mlw"/>
<theory name="Top" proved="true">
 <goal name="hex&#39;vc" expl="VC for hex" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="101"/></proof>
 </goal>
 <goal name="xeh&#39;vc" expl="VC for xeh" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="182"/></proof>
 </goal>
 <goal name="decode_unique" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="decode_unique.0" proved="true">
  <transf name="assert" proved="true" arg1="(eq_string s1 s3)">
   <goal name="decode_unique.0.0" expl="asserted formula" proved="true">
   <proof prover="3"><result status="valid" time="0.09" steps="238"/></proof>
   </goal>
   <goal name="decode_unique.0.1" proved="true">
   <proof prover="3"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="precondition" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.00" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="108"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="103"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="integer overflow" proved="true">
  <transf name="unfold" proved="true" arg1="encoding">
   <goal name="encode&#39;vc.9.0" expl="integer overflow" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="encode&#39;vc.9.0.0" expl="integer overflow" proved="true">
    <proof prover="3"><result status="valid" time="0.04" steps="146"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="139"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="42"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="2.02" steps="4651"/></proof>
  </goal>
  <goal name="encode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="10"><result status="valid" time="2.34" steps="7634"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="encoding">
   <goal name="encode&#39;vc.17.0" expl="VC for encode" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="encode&#39;vc.17.0.0" expl="VC for encode" proved="true">
    <proof prover="3" timelimit="1"><result status="valid" time="0.01" steps="26"/></proof>
    </goal>
    <goal name="encode&#39;vc.17.0.1" expl="VC for encode" proved="true">
    <proof prover="4"><result status="valid" time="0.19" steps="39730"/></proof>
    </goal>
    <goal name="encode&#39;vc.17.0.2" expl="VC for encode" proved="true">
    <proof prover="3" timelimit="1"><result status="valid" time="0.04" steps="98"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="57"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="22"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="25"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="27"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="120"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.14" steps="148"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="165"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.20" steps="198"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.25" steps="409"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="48"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="decode&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="53"/></proof>
  </goal>
  <goal name="decode&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.38" steps="951"/></proof>
  </goal>
  <goal name="decode&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="185"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode_encode&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="decode_encode&#39;vc.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
