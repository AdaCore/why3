<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Coq" version="8.4pl4" timelimit="10" memlimit="0"/>
<prover id="1" name="Alt-Ergo" version="0.95.1" timelimit="5" memlimit="1000"/>
<prover id="2" name="Eprover" version="1.6" timelimit="5" memlimit="0"/>
<prover id="3" name="CVC3" version="2.4.1" timelimit="5" memlimit="4000"/>
<prover id="4" name="Z3" version="2.19" timelimit="5" memlimit="0"/>
<prover id="5" name="Z3" version="4.3.1" timelimit="6" memlimit="4000"/>
<prover id="6" name="Spass" version="3.7" timelimit="5" memlimit="0"/>
<prover id="7" name="Alt-Ergo" version="0.95.2" timelimit="6" memlimit="4000"/>
<prover id="8" name="CVC4" version="1.3" timelimit="5" memlimit="4000"/>
<prover id="9" name="Vampire" version="0.6" timelimit="3" memlimit="0"/>
<file name="../fibonacci.mlw" expanded="true">
<theory name="FibonacciTest" sum="2ffe7dc908799b332b5af1e8ea105dff">
 <goal name="isfib_2_1">
 <proof prover="3" memlimit="0"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="isfib_6_8">
 <proof prover="3" memlimit="0"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="not_isfib_2_2">
 <proof prover="1" memlimit="0"><result status="valid" time="0.01"/></proof>
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 <proof prover="3" memlimit="0"><result status="valid" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.02"/></proof>
 <proof prover="9" timelimit="5"><result status="valid" time="0.03"/></proof>
 </goal>
</theory>
<theory name="FibonacciLinear" sum="826b3d5aadd47b8402ef8566ed8e8190">
 <goal name="WP_parameter fib" expl="VC for fib">
 <proof prover="3" memlimit="0"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="FibRecGhost" sum="714d754d33dbd330874ec5e7403bae34">
 <goal name="WP_parameter fib_aux" expl="VC for fib_aux">
 <transf name="split_goal_wp">
  <goal name="WP_parameter fib_aux.1" expl="1. postcondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.2" expl="2. variant decrease">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.3" expl="3. precondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.4" expl="4. precondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.5" expl="5. postcondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter fib" expl="VC for fib">
 <transf name="split_goal_wp">
  <goal name="WP_parameter fib.1" expl="1. precondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib.2" expl="2. precondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib.3" expl="3. postcondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter test42" expl="VC for test42">
 <proof prover="3"><result status="valid" time="0.00"/></proof>
 <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
 <proof prover="7" timelimit="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="WP_parameter bench" expl="VC for bench">
 <proof prover="3"><result status="valid" time="0.00"/></proof>
 <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
 <proof prover="7" timelimit="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="FibRecNoGhost" sum="6f2d04d604591438ec662f61889432d0">
 <goal name="WP_parameter fib_aux" expl="VC for fib_aux">
 <transf name="split_goal_wp">
  <goal name="WP_parameter fib_aux.1" expl="1. postcondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.2" expl="2. variant decrease">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.3" expl="3. precondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.4" expl="4. precondition">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="8"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter fib_aux.5" expl="5. postcondition">
  <proof prover="3"><result status="valid" time="0.07"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter fib" expl="VC for fib">
 <transf name="split_goal_wp">
  <goal name="WP_parameter fib.1" expl="1. precondition">
  <proof prover="3"><result status="valid" time="0.00"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib.2" expl="2. precondition">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
  <proof prover="8"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter fib.3" expl="3. postcondition">
  <proof prover="3"><result status="valid" time="0.01"/></proof>
  <proof prover="5" timelimit="5"><result status="valid" time="0.00"/></proof>
  <proof prover="8"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SmallestFibAbove" sum="9691f204f25849c4e2b294f723e4768d">
 <goal name="WP_parameter smallest_fib_above" expl="VC for smallest_fib_above">
 <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="Zeckendorf" sum="6b700d4b04e8788810ef92e91f3a87fb" expanded="true">
 <goal name="WP_parameter fib_nonneg" expl="VC for fib_nonneg">
 <proof prover="7" memlimit="1000"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="WP_parameter fib_increasing" expl="VC for fib_increasing">
 <transf name="split_goal_wp">
  <goal name="WP_parameter fib_increasing.1" expl="1. variant decrease">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter fib_increasing.2" expl="2. precondition">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter fib_increasing.3" expl="3. postcondition">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter fib_increasing.4" expl="4. postcondition">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter greatest_fib" expl="VC for greatest_fib">
 <proof prover="5" memlimit="1000"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter zeckendorf" expl="VC for zeckendorf">
 <transf name="split_goal_wp">
  <goal name="WP_parameter zeckendorf.1" expl="1. loop invariant init">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.2" expl="2. loop invariant init">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.3" expl="3. loop invariant init">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.4" expl="4. precondition">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.5" expl="5. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.6" expl="6. loop invariant preservation">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.7" expl="7. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.03"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.8" expl="8. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.9" expl="9. loop variant decrease">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.10" expl="10. postcondition">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf.11" expl="11. postcondition">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter zeckendorf_fast" expl="VC for zeckendorf_fast">
 <transf name="split_goal_wp">
  <goal name="WP_parameter zeckendorf_fast.1" expl="1. postcondition">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.2" expl="2. postcondition">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.3" expl="3. loop invariant init">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="unknown" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.4" expl="4. loop invariant init">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.5" expl="5. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="7" memlimit="1000"><result status="unknown" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.6" expl="6. loop invariant preservation">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.7" expl="7. loop variant decrease">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.8" expl="8. assertion">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="unknown" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.9" expl="9. loop invariant init">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.10" expl="10. loop invariant init">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.11" expl="11. loop invariant init">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.12" expl="12. loop invariant init">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.13" expl="13. loop invariant init">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.14" expl="14. loop invariant init">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="unknown" time="0.05"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.15" expl="15. loop invariant preservation">
  <transf name="split_goal_wp">
   <goal name="WP_parameter zeckendorf_fast.15.1" expl="1.">
   <proof prover="5" memlimit="1000"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="WP_parameter zeckendorf_fast.15.2" expl="2.">
   <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
   </goal>
   <goal name="WP_parameter zeckendorf_fast.15.3" expl="3.">
   <proof prover="7" memlimit="1000"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="WP_parameter zeckendorf_fast.15.4" expl="4.">
   <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="WP_parameter zeckendorf_fast.15.5" expl="5.">
   <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.16" expl="16. loop invariant preservation">
  <proof prover="5" timelimit="3" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.17" expl="17. loop invariant preservation">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.18" expl="18. loop invariant preservation">
  <proof prover="8" timelimit="6" memlimit="1000"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.19" expl="19. loop invariant preservation">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.20" expl="20. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="unknown" time="0.37"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.21" expl="21. loop variant decrease">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.22" expl="22. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="7" memlimit="1000"><result status="timeout" time="5.99"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.23" expl="23. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="unknown" time="0.63"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.24" expl="24. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.25" expl="25. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.01"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.26" expl="26. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.27" expl="27. loop invariant preservation">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.02"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.28" expl="28. loop variant decrease">
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.29" expl="29. postcondition">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter zeckendorf_fast.30" expl="30. postcondition">
  <proof prover="5" memlimit="1000"><result status="valid" time="0.00"/></proof>
  <proof prover="7" memlimit="1000"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Mat22" sum="74a72323fd13b253c2a1e71677fd66a1" expanded="true">
</theory>
<theory name="FibonacciLogarithmic" sum="98b45ab695eea24c48e7007e7c054fff">
 <goal name="WP_parameter logfib" expl="VC for logfib">
 <transf name="split_goal">
  <goal name="WP_parameter logfib.1" expl="1. postcondition">
  <proof prover="1" memlimit="0"><result status="valid" time="0.01"/></proof>
  <proof prover="3" memlimit="0"><result status="valid" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  <proof prover="9"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter logfib.2" expl="2. variant decrease">
  <proof prover="1"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="WP_parameter logfib.3" expl="3. precondition">
  <proof prover="3" memlimit="0"><result status="valid" time="0.01"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter logfib.4" expl="4. postcondition">
  <proof prover="0" edited="fibonacci_WP_FibonacciLogarithmic_WP_parameter_logfib_1.v"><result status="valid" time="1.19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="fib_m">
 <proof prover="0" edited="fibonacci_WP_FibonacciLogarithmic_fib_m_1.v"><result status="valid" time="1.05"/></proof>
 </goal>
 <goal name="WP_parameter fibo" expl="VC for fibo">
 <proof prover="1" memlimit="0"><result status="valid" time="0.00"/></proof>
 <proof prover="3" memlimit="0"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="WP_parameter test0" expl="VC for test0">
 <proof prover="1"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="WP_parameter test1" expl="VC for test1">
 <proof prover="1"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="WP_parameter test7" expl="VC for test7">
 <proof prover="1"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="WP_parameter test42" expl="VC for test42">
 <proof prover="1"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="WP_parameter test2014" expl="VC for test2014">
 <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="WP_parameter bench" expl="VC for bench">
 <proof prover="7" timelimit="5"><result status="valid" time="0.01"/></proof>
 </goal>
</theory>
</file>
</why3session>
