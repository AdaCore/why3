
{ 
use import list.List
logic f(int, int) : int
logic c : int
}

parameter sub : x:int -> y:int -> {x>=y} int {result=x-y}

parameter imp_sub : 
  x:int ref -> y:int ref -> {!x >= !y} unit writes x {!x = old(!x) - !y}

parameter r : int ref

parameter write : v:int -> {} unit writes r { !r = v }

let ff () = 
  { true } 
  write 3
  { !r = 3 }



(*
Local Variables: 
compile-command: "unset LANG; make -C .. testl"
End: 
*)
