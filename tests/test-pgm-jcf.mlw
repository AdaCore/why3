
module A 

  { use import programs.Prelude }

  parameter x : int

  exception E

  exception F of int

  parameter f : int -> int

end

module P

  { use import programs.Prelude }

  use module import A as B

  { logic n : int }

  namespace N
    { use import list.List }    
    { logic c : list int }
    let h (x:int) = Cons x c
  end

  let g x = { x >= 0 } N.c { true }

end

(*
Local Variables: 
compile-command: "unset LANG; make -C .. testl-ide"
End: 
*)
