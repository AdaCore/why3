
module TestInt32

  use mach_int.Int32

  let mean_wrong (a:int32) (b:int32) : int32 =
    div (add a b) (of_int 2)

  let mean_ok (a:int32) (b:int32) : int32 
    requires { 0 <= to_int a <= to_int b }
  =
    add a (div (sub b a) (of_int 2))

end   

module TestUInt32

  use mach_int.UInt32

  let mean_wrong (a:uint32) (b:uint32) : uint32 =
    div (add a b) (of_int 2)

  let mean_ok (a:uint32) (b:uint32) : uint32 
    requires { to_int a <= to_int b }
  =
    add a (div (sub b a) (of_int 2))

end   