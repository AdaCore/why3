
theory T
  type t = int
end

module M
  use import int.Int
  use import T
  function f (x: t) : t = x+1
  goal G: forall x: t. x=x

end

module N
  use import int.Int
  use import M
  goal G1: f 41 = 42

  type tree 'a = Node 'a (forest 'a) | Leaf
  with forest 'a = Cons (tree 'a) (forest 'a) | Nil

  type ref 'b = {| ghost mutable contents : 'b |}

  function id (tree 'c) : (tree 'c)

  let h (x : tree 'd) = ((id x) : tree 'd)
end

(*
Local Variables:
compile-command: "unset LANG; ../bin/why3ide test-pgm-jcf.mlx"
End:
*)
