(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import ZArith.
Require Import Rbase.
Parameter pow2: Z -> Z.


Axiom Power_0 : ((pow2 0%Z) = 1%Z).

Axiom Power_s : forall (n:Z), (0%Z <= n)%Z ->
  ((pow2 (n + 1%Z)%Z) = (2%Z * (pow2 n))%Z).

Axiom Power_1 : ((pow2 1%Z) = 2%Z).

(* YOU MAY EDIT THE CONTEXT BELOW *)
Open Scope Z_scope.
(* DO NOT EDIT BELOW *)

Theorem Power_sum : forall (n:Z) (m:Z), ((0%Z <= n)%Z /\ (0%Z <= m)%Z) ->
  ((pow2 (n + m)%Z) = ((pow2 n) * (pow2 m))%Z).
(* YOU MAY EDIT THE PROOF BELOW *)
intros n m Hmn.
cut (0 <= m); auto with zarith.
apply Z_lt_induction with
  (P:= fun m => 
      0 <= m -> pow2 (n + m) = pow2 n * pow2 m);
  auto with zarith.
intros x Hind Hxpos.
assert (h:(x = 0 \/ x > 0)) by omega.
destruct h.
subst x.
rewrite Power_0.


(*
auto with zarith.
elim n.
replace (0+m) with m by omega.
replace (1* pow2 m) with (pow2 m) by omega.
auto.
intro.
elim p.
3:rewrite Power_1.
3:replace (1+m) with (m+1) by omega.
3:apply Power_s.
3:apply Hmn.
intros p0 Hp0.
rewrite Zpos_xI.
replace (2 * Zpos p0) with (Zpos p0 * 2) by omega.
rewrite<-Zplus_diag_eq_mult_2.
rewrite Power_s.

*)


Qed.
(* DO NOT EDIT BELOW *)


