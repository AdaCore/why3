[kernel] preprocessing with "gcc -C -E -I.  tests/basic/lemma.c"
[jessie3] found 7 logic decl(s)
[jessie3] made 1 theory(ies)
[jessie3] made 0 function(s)
[jessie3] running theory 1:
[jessie3] theory Global_logic_declarations
            (* use why3.BuiltIn *)
            
            (* use int.Int *)
            
            (* use real.Real *)
            
            (* use map.Map *)
            
            lemma test1 : (2 + 2) = 4
            
            lemma test2 : forall x:int. (x * x) >= 0
            
            lemma test2r : forall x:real. (x * x) >= 0.0
            
            lemma test3 : forall x:int, y:int. (x + y) = (y + x)
            
            lemma test3r : forall x:real, y:real. (x + y) = (y + x)
            
            lemma test4 : forall x:int, y:int. (x - y) = (- (y - x))
            
            lemma test4r : forall x:real, y:real. (x - y) = (- (y - x))
            end
[jessie3] Provers: Alt-Ergo 0.95.1, CVC3 2.4.1, Z3 3.2, Z3 4.3.1
[jessie3] Task 1 (test1): Valid, Valid, Valid, Valid
[jessie3] Task 2 (test2): Valid, Valid, Valid, Valid
[jessie3] Task 3 (test2r): Valid, Unknown, Valid, Valid
[jessie3] Task 4 (test3): Valid, Valid, Valid, Valid
[jessie3] Task 5 (test3r): Valid, Valid, Valid, Valid
[jessie3] Task 6 (test4): Valid, Valid, Valid, Valid
[jessie3] Task 7 (test4r): Valid, Valid, Valid, Valid
[jessie3] running theory 1:
[jessie3] theory C_Functions
            (* use why3.BuiltIn *)
            
            (* use why3.Bool *)
            
            (* use why3.Unit *)
            
            (* use why3.Prelude *)
            
            (* use int.Int *)
            
            (* use real.Real *)
            
            (* use map.Map *)
            
            (* use Global_logic_declarations *)
            
            (* use ref.Ref *)
            
            (* use mach_int.Int32 *)
            end
[jessie3] Provers: Alt-Ergo 0.95.1, CVC3 2.4.1, Z3 3.2, Z3 4.3.1
