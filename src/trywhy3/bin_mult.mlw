module BinaryMultiplication
  use import mach.int.Int
  use import ref.Ref

  let mult (a b: int)
    requires { b >= 0 }
    ensures  { result = a * b }
  = let x = ref a in
    let y = ref b in
    let z = ref 0 in
    while !y <> 0 do
      invariant { 0 <= !y }
      invariant { !z + !x * !y = a * b }
      variant   { !y }
      if !y % 2 <> 0 then z := !z + !x;
      x := 2 * !x;
      y := !y / 2
    done;
    !z

end

module Test1
  use BinaryMultiplication as B
  let main () = B.mult 6 7
end

module Test2
  use BinaryMultiplication as B
  let main () = B.mult 4546729 21993833369
end