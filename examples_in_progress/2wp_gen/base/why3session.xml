<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="1.30" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../base.mlw" proved="true">
<theory name="Fun" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FunExt" proved="true" sum="8d44c32e8c71e269a74dd41007e7609b">
 <goal name="VC extensional" expl="VC for extensional" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="3"/></proof>
 </goal>
</theory>
<theory name="FunCategory" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="FunProofs" proved="true" sum="f70392d9b203295af7b3b37cb931e41e">
 <goal name="ext" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="ext.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="ext.0.0" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="ext.0.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ext.1" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="assoc" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
 <goal name="neutral" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="44"/></proof>
 </goal>
 <goal name="FunExt.extensionality" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="3"/></proof>
 </goal>
 <goal name="FunCategory.assoc" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
 <goal name="FunCategory.neutral" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="13"/></proof>
 </goal>
</theory>
<theory name="Set" proved="true" sum="3414482dcfbe683bc2c77737916e8e68">
 <goal name="sext_is_ext" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="5"/></proof>
 </goal>
</theory>
<theory name="SetBigOps" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Rel" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="RelExt" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="RelCategory" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="RelProduct" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="RelSet" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="RelProofs" proved="true" sum="4388396c90982f679b596fef0441fced">
 <goal name="extensionality" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
 <transf name="split_goal_right" proved="true" >
  <goal name="extensionality.0" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="extensionality.1" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="extensionality.2" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="assoc" proved="true">
 <transf name="compute_specified" proved="true" >
  <goal name="assoc.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="assoc.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="13"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_antimorphism" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
 </goal>
 <goal name="reverse_antimorphism_id" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="reverse_involution" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="6"/></proof>
 </goal>
 <goal name="neutral" proved="true">
 <transf name="compute_specified" proved="true" >
  <goal name="neutral.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="neutral.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RelExt.extensionality" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
 <goal name="RelCategory.assoc" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="8"/></proof>
 </goal>
 <goal name="RelCategory.reverse_antimorphism" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="RelCategory.reverse_antimorphism_id" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
 </goal>
 <goal name="RelCategory.reverse_involution" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
 <goal name="RelCategory.neutral" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
</theory>
<theory name="SubsetOrder" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="SetProofs" proved="true" sum="c22368c2c3a04e7c41543119617de769">
 <goal name="anti_subset" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="SubsetOrder.subset_order" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="58"/></proof>
 </goal>
</theory>
<theory name="Image" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="PartialFun" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="PartialFunInstance" proved="true" sum="fd48f8137216614f8c8c13b6d89d7e4f">
 <goal name="VC dummy" expl="VC for dummy" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC of_fun" expl="VC for of_fun" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.02" steps="54"/></proof>
 </goal>
 <goal name="VC restrict" expl="VC for restrict" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="23"/></proof>
 </goal>
 <goal name="VC extends" expl="VC for extends" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.02" steps="92"/></proof>
 </goal>
 <goal name="VC psing" expl="VC for psing" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC padd" expl="VC for padd" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC premove" expl="VC for premove" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="extensional" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="extensional.0" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="extensional.1" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="extensional.2" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="extensional.3" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.07" steps="91"/></proof>
  </goal>
  <goal name="extensional.4" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="extensional.5" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PartialFun.VC of_fun" expl="VC for of_fun" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="PartialFun.VC restrict" expl="VC for restrict" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="PartialFun.VC extends" expl="VC for extends" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="126"/></proof>
 </goal>
 <goal name="PartialFun.VC join" expl="VC for join" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="179"/></proof>
 </goal>
 <goal name="PartialFun.VC psing" expl="VC for psing" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="179"/></proof>
 </goal>
 <goal name="PartialFun.VC padd" expl="VC for padd" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.24" steps="1269"/></proof>
 </goal>
 <goal name="PartialFun.VC premove" expl="VC for premove" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="47"/></proof>
 </goal>
 <goal name="PartialFun.extensional" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.00" steps="5"/></proof>
 </goal>
</theory>
<theory name="SubFunOrder" proved="true" sum="b5704a9dd6a083e2c68baaea448357f6">
 <goal name="subfun_order" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subfun_order.0" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="subfun_order.1" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="subfun_order.2" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.02" steps="137"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
