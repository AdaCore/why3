use int.Int
use list.List
use list.Append
use list.Reverse

let assign < 'a > (&r : 'a) (v: 'a) {..} (out [r] { r = v }) =
    any

let unList < 'a > (l: list 'a)
  (onCons (h: 'a) (t: list 'a) {l = Cons h t})
  (onNil {l = Nil})
= any

let rev_append (l0 r0: list int) {}
      (out (r: list int) { r = reverse l0 ++ r0 })
= loop
  [ loop [r l] { reverse l ++ r = reverse l0 ++ r0 }
    = unList <int> {l}
        (fun (h: int) (t: list int) ->
          [ &r <- Cons h r | &l <- t ] loop)
        (-> out {r}) ]
  [ &r: list int = r0
  | &l: list int = l0 ] --Cons True Nil ]
