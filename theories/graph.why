
(* graph theory *)

theory Path
  use import list.Mem

  type graph

  type vertex

  logic edge(graph, vertex, vertex)

  inductive simple_path(graph, vertex, vertex list, vertex) =
  | Path_empty : 
      forall g:graph, v:vertex. simple_path(g, v, Nil : vertex list, v)
  | Path_cons  : 
      forall g:graph, src, v, dst : vertex, l : vertex list.
      simple_path(g, v, l, dst) -> edge(g, src, v) -> not mem(v, l) ->
      simple_path(g, src, Cons(v, l), dst)

  logic simple_cycle(g : graph, v : vertex) =
    exists l : vertex list. l <> Nil and simple_path(g, v, l, v)

end

