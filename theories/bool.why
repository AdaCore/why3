
(** {1 Booleans} *)

(** {2 Basic theory of Booleans} *)

theory Bool

  let function andb (x y : bool) : bool =
    match x with
    | True -> y
    | False -> False
    end

  let function orb (x y : bool) : bool =
    match x with
    | False -> y
    | True -> True
    end

  let function xorb (x y : bool) : bool =
    match x, y with
    | True,  False -> True
    | False, True  -> True
    | _    , _     -> False
    end

  let function notb (x : bool) : bool =
    match x with
    | False -> True
    | True  -> False
    end

  let function implb (x y : bool) : bool =
    match x,y with
    | True, False -> False
    | _,_  -> True
    end

end

(** {2 Operator if-then-else} *)

theory Ite

  let function ite (b:bool) (x y : 'a) : 'a =
    match b with
    | True  -> x
    | False -> y
    end

end
